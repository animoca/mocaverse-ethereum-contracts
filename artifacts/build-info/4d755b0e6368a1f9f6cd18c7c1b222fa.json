{"id":"4d755b0e6368a1f9f6cd18c7c1b222fa","_format":"hh-sol-build-info-1","solcVersion":"0.8.21","solcLongVersion":"0.8.21+commit.d9974bed","input":{"language":"Solidity","sources":{"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {IAccessControl} from \"./../../access/interfaces/IAccessControl.sol\";\nimport {AccessControlStorage} from \"./../libraries/AccessControlStorage.sol\";\nimport {ContractOwnershipStorage} from \"./../libraries/ContractOwnershipStorage.sol\";\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/// @title Access control via roles management (proxiable version).\n/// @dev This contract is to be used via inheritance in a proxied implementation.\n/// @dev Note: This contract requires ERC173 (Contract Ownership standard).\nabstract contract AccessControlBase is IAccessControl, Context {\n    using AccessControlStorage for AccessControlStorage.Layout;\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\n\n    /// @notice Grants a role to an account.\n    /// @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\n    /// @param role The role to grant.\n    /// @param account The account to grant the role to.\n    function grantRole(bytes32 role, address account) external {\n        address operator = _msgSender();\n        ContractOwnershipStorage.layout().enforceIsContractOwner(operator);\n        AccessControlStorage.layout().grantRole(role, account, operator);\n    }\n\n    /// @notice Revokes a role from an account.\n    /// @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\n    /// @param role The role to revoke.\n    /// @param account The account to revoke the role from.\n    function revokeRole(bytes32 role, address account) external {\n        address operator = _msgSender();\n        ContractOwnershipStorage.layout().enforceIsContractOwner(operator);\n        AccessControlStorage.layout().revokeRole(role, account, operator);\n    }\n\n    /// @inheritdoc IAccessControl\n    function renounceRole(bytes32 role) external {\n        AccessControlStorage.layout().renounceRole(_msgSender(), role);\n    }\n\n    /// @inheritdoc IAccessControl\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_) {\n        return AccessControlStorage.layout().hasRole(role, account);\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {IERC173} from \"./../interfaces/IERC173.sol\";\nimport {ContractOwnershipStorage} from \"./../libraries/ContractOwnershipStorage.sol\";\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/// @title ERC173 Contract Ownership Standard (proxiable version).\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\n/// @dev This contract is to be used via inheritance in a proxied implementation.\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\nabstract contract ContractOwnershipBase is IERC173, Context {\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\n\n    /// @inheritdoc IERC173\n    function owner() public view virtual returns (address) {\n        return ContractOwnershipStorage.layout().owner();\n    }\n\n    /// @inheritdoc IERC173\n    function transferOwnership(address newOwner) public virtual {\n        ContractOwnershipStorage.layout().transferOwnership(_msgSender(), newOwner);\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @notice Thrown when an account does not have the required role.\n/// @param role The role the caller is missing.\n/// @param account The account that was checked.\nerror NotRoleHolder(bytes32 role, address account);\n\n/// @notice Thrown when an account does not have the required role on a target contract.\n/// @param targetContract The contract that was checked.\n/// @param role The role that was checked.\n/// @param account The account that was checked.\nerror NotTargetContractRoleHolder(address targetContract, bytes32 role, address account);\n"},"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @notice Thrown when an account is not the contract owner but is required to.\n/// @param account The account that was checked.\nerror NotContractOwner(address account);\n\n/// @notice Thrown when an account is not the target contract owner but is required to.\n/// @param targetContract The contract that was checked.\n/// @param account The account that was checked.\nerror NotTargetContractOwner(address targetContract, address account);\n"},"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title Access control via roles management (events)\ninterface IAccessControlEvents {\n    /// @notice Emitted when `role` is granted to `account`.\n    /// @param role The role that has been granted.\n    /// @param account The account that has been granted the role.\n    /// @param operator The account that granted the role.\n    event RoleGranted(bytes32 role, address account, address operator);\n\n    /// @notice Emitted when `role` is revoked from `account`.\n    /// @param role The role that has been revoked.\n    /// @param account The account that has been revoked the role.\n    /// @param operator The account that revoked the role.\n    event RoleRevoked(bytes32 role, address account, address operator);\n}\n"},"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title ERC-173 Contract Ownership Standard (events)\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\ninterface IERC173Events {\n    /// @notice Emitted when the contract ownership changes.\n    /// @param previousOwner the previous contract owner.\n    /// @param newOwner the new contract owner.\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n}\n"},"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {IAccessControlEvents} from \"./../events/IAccessControlEvents.sol\";\n\n/// @title Access control via roles management (functions)\ninterface IAccessControl is IAccessControlEvents {\n    /// @notice Renounces a role by the sender.\n    /// @dev Reverts if `sender` does not have `role`.\n    /// @dev Emits a {RoleRevoked} event.\n    /// @param role The role to renounce.\n    function renounceRole(bytes32 role) external;\n\n    /// @notice Retrieves whether an account has a role.\n    /// @param role The role.\n    /// @param account The account.\n    /// @return hasRole_ Whether `account` has `role`.\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_);\n}\n"},"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {IERC173Events} from \"./../events/IERC173Events.sol\";\n\n/// @title ERC-173 Contract Ownership Standard (functions)\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\ninterface IERC173 is IERC173Events {\n    /// @notice Sets the address of the new contract owner.\n    /// @dev Reverts if the sender is not the contract owner.\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\n    function transferOwnership(address newOwner) external;\n\n    /// @notice Gets the address of the contract owner.\n    /// @return contractOwner The address of the contract owner.\n    function owner() external view returns (address contractOwner);\n}\n"},"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {NotRoleHolder, NotTargetContractRoleHolder} from \"./../errors/AccessControlErrors.sol\";\nimport {IAccessControlEvents} from \"./../events/IAccessControlEvents.sol\";\nimport {IAccessControl} from \"./../interfaces/IAccessControl.sol\";\n\nlibrary AccessControlStorage {\n    using AccessControlStorage for AccessControlStorage.Layout;\n\n    struct Layout {\n        mapping(bytes32 => mapping(address => bool)) roles;\n    }\n\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\"animoca.core.access.AccessControl.storage\")) - 1);\n\n    /// @notice Grants a role to an account.\n    /// @dev Note: Call to this function should be properly access controlled.\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\n    /// @param role The role to grant.\n    /// @param account The account to grant the role to.\n    /// @param operator The account requesting the role change.\n    function grantRole(Layout storage s, bytes32 role, address account, address operator) internal {\n        if (!s.hasRole(role, account)) {\n            s.roles[role][account] = true;\n            emit IAccessControlEvents.RoleGranted(role, account, operator);\n        }\n    }\n\n    /// @notice Revokes a role from an account.\n    /// @dev Note: Call to this function should be properly access controlled.\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\n    /// @param role The role to revoke.\n    /// @param account The account to revoke the role from.\n    /// @param operator The account requesting the role change.\n    function revokeRole(Layout storage s, bytes32 role, address account, address operator) internal {\n        if (s.hasRole(role, account)) {\n            s.roles[role][account] = false;\n            emit IAccessControlEvents.RoleRevoked(role, account, operator);\n        }\n    }\n\n    /// @notice Renounces a role by the sender.\n    /// @dev Reverts with {NotRoleHolder} if `sender` does not have `role`.\n    /// @dev Emits a {RoleRevoked} event.\n    /// @param sender The message sender.\n    /// @param role The role to renounce.\n    function renounceRole(Layout storage s, address sender, bytes32 role) internal {\n        s.enforceHasRole(role, sender);\n        s.roles[role][sender] = false;\n        emit IAccessControlEvents.RoleRevoked(role, sender, sender);\n    }\n\n    /// @notice Retrieves whether an account has a role.\n    /// @param role The role.\n    /// @param account The account.\n    /// @return hasRole_ Whether `account` has `role`.\n    function hasRole(Layout storage s, bytes32 role, address account) internal view returns (bool hasRole_) {\n        return s.roles[role][account];\n    }\n\n    /// @notice Checks whether an account has a role in a target contract.\n    /// @param targetContract The contract to check.\n    /// @param role The role to check.\n    /// @param account The account to check.\n    /// @return hasTargetContractRole_ Whether `account` has `role` in `targetContract`.\n    function hasTargetContractRole(address targetContract, bytes32 role, address account) internal view returns (bool hasTargetContractRole_) {\n        return IAccessControl(targetContract).hasRole(role, account);\n    }\n\n    /// @notice Ensures that an account has a role.\n    /// @dev Reverts with {NotRoleHolder} if `account` does not have `role`.\n    /// @param role The role.\n    /// @param account The account.\n    function enforceHasRole(Layout storage s, bytes32 role, address account) internal view {\n        if (!s.hasRole(role, account)) revert NotRoleHolder(role, account);\n    }\n\n    /// @notice Enforces that an account has a role in a target contract.\n    /// @dev Reverts with {NotTargetContractRoleHolder} if the account does not have the role.\n    /// @param targetContract The contract to check.\n    /// @param role The role to check.\n    /// @param account The account to check.\n    function enforceHasTargetContractRole(address targetContract, bytes32 role, address account) internal view {\n        if (!hasTargetContractRole(targetContract, role, account)) {\n            revert NotTargetContractRoleHolder(targetContract, role, account);\n        }\n    }\n\n    function layout() internal pure returns (Layout storage s) {\n        bytes32 position = LAYOUT_STORAGE_SLOT;\n        assembly {\n            s.slot := position\n        }\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {NotContractOwner, NotTargetContractOwner} from \"./../errors/ContractOwnershipErrors.sol\";\nimport {IERC173Events} from \"./../events/IERC173Events.sol\";\nimport {IERC173} from \"./../interfaces/IERC173.sol\";\nimport {ProxyInitialization} from \"./../../proxy/libraries/ProxyInitialization.sol\";\nimport {InterfaceDetectionStorage} from \"./../../introspection/libraries/InterfaceDetectionStorage.sol\";\n\nlibrary ContractOwnershipStorage {\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\n\n    struct Layout {\n        address contractOwner;\n    }\n\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\"animoca.core.access.ContractOwnership.storage\")) - 1);\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\"animoca.core.access.ContractOwnership.phase\")) - 1);\n\n    /// @notice Initializes the storage with an initial contract owner (immutable version).\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\n    /// @param initialOwner The initial contract owner.\n    function constructorInit(Layout storage s, address initialOwner) internal {\n        if (initialOwner != address(0)) {\n            s.contractOwner = initialOwner;\n            emit IERC173Events.OwnershipTransferred(address(0), initialOwner);\n        }\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC173).interfaceId, true);\n    }\n\n    /// @notice Initializes the storage with an initial contract owner (proxied version).\n    /// @notice Sets the proxy initialization phase to `1`.\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\n    /// @param initialOwner The initial contract owner.\n    function proxyInit(Layout storage s, address initialOwner) internal {\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\n        s.constructorInit(initialOwner);\n    }\n\n    /// @notice Sets the address of the new contract owner.\n    /// @dev Reverts with {NotContractOwner} if `sender` is not the contract owner.\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\n    function transferOwnership(Layout storage s, address sender, address newOwner) internal {\n        address previousOwner = s.contractOwner;\n        if (sender != previousOwner) revert NotContractOwner(sender);\n        if (previousOwner != newOwner) {\n            s.contractOwner = newOwner;\n            emit IERC173Events.OwnershipTransferred(previousOwner, newOwner);\n        }\n    }\n\n    /// @notice Gets the address of the contract owner.\n    /// @return contractOwner The address of the contract owner.\n    function owner(Layout storage s) internal view returns (address contractOwner) {\n        return s.contractOwner;\n    }\n\n    /// @notice Checks whether an account is the owner of a target contract.\n    /// @param targetContract The contract to check.\n    /// @param account The account to check.\n    /// @return isTargetContractOwner_ Whether `account` is the owner of `targetContract`.\n    function isTargetContractOwner(address targetContract, address account) internal view returns (bool isTargetContractOwner_) {\n        return IERC173(targetContract).owner() == account;\n    }\n\n    /// @notice Ensures that an account is the contract owner.\n    /// @dev Reverts with {NotContractOwner} if `account` is not the contract owner.\n    /// @param account The account.\n    function enforceIsContractOwner(Layout storage s, address account) internal view {\n        if (account != s.contractOwner) revert NotContractOwner(account);\n    }\n\n    /// @notice Enforces that an account is the owner of a target contract.\n    /// @dev Reverts with {NotTheTargetContractOwner} if the account is not the owner.\n    /// @param targetContract The contract to check.\n    /// @param account The account to check.\n    function enforceIsTargetContractOwner(address targetContract, address account) internal view {\n        if (!isTargetContractOwner(targetContract, account)) {\n            revert NotTargetContractOwner(targetContract, account);\n        }\n    }\n\n    function layout() internal pure returns (Layout storage s) {\n        bytes32 position = LAYOUT_STORAGE_SLOT;\n        assembly {\n            s.slot := position\n        }\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\nerror IllegalInterfaceId();\n"},"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title ERC165 Interface Detection Standard.\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\ninterface IERC165 {\n    /// @notice Returns whether this contract implements a given interface.\n    /// @dev Note: This function call must use less than 30 000 gas.\n    /// @param interfaceId the interface identifier to test.\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\n}\n"},"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {IllegalInterfaceId} from \"./../errors/InterfaceDetectionErrors.sol\";\nimport {IERC165} from \"./../interfaces/IERC165.sol\";\n\nlibrary InterfaceDetectionStorage {\n    struct Layout {\n        mapping(bytes4 => bool) supportedInterfaces;\n    }\n\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\"animoca.core.introspection.InterfaceDetection.storage\")) - 1);\n\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\n\n    /// @notice Sets or unsets an ERC165 interface.\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\n    /// @param interfaceId the interface identifier.\n    /// @param supported True to set the interface, false to unset it.\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\n        s.supportedInterfaces[interfaceId] = supported;\n    }\n\n    /// @notice Returns whether this contract implements a given interface.\n    /// @dev Note: This function call must use less than 30 000 gas.\n    /// @param interfaceId The interface identifier to test.\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\n            return false;\n        }\n        if (interfaceId == type(IERC165).interfaceId) {\n            return true;\n        }\n        return s.supportedInterfaces[interfaceId];\n    }\n\n    function layout() internal pure returns (Layout storage s) {\n        bytes32 position = LAYOUT_STORAGE_SLOT;\n        assembly {\n            s.slot := position\n        }\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @notice Emitted when trying to set a phase value that has already been reached.\n/// @param currentPhase The current phase.\n/// @param newPhase The new phase trying to be set.\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\n"},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport {InitializationPhaseAlreadyReached} from \"./../errors/ProxyInitializationErrors.sol\";\nimport {StorageSlot} from \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\nlibrary ProxyInitialization {\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\n    /// @param storageSlot the storage slot where `phase` is stored.\n    /// @param phase the initialization phase.\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\n        uint256 currentPhase = currentVersion.value;\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\n        currentVersion.value = phase;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"contracts/MocaPoints/interface/IRealmId.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\n// import {RealmId} from \"../realmIdContract/RealmId.sol\";\n\ninterface IRealmId {\n    function burnCounts(uint256 realmId) external view returns (uint256);\n\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\n\n    function ownerOf(uint256 realmId) external view returns (address);\n}\n"},"contracts/MocaPoints/MocaPoints.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {IRealmId} from \"./interface/IRealmId.sol\";\nimport {AccessControlStorage} from \"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol\";\nimport {AccessControlBase} from \"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol\";\nimport {ContractOwnershipBase} from \"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol\";\nimport {ContractOwnershipStorage} from \"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract MocaPoints is Initializable, AccessControlBase, ContractOwnershipBase, UUPSUpgradeable {\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\n    using AccessControlStorage for AccessControlStorage.Layout;\n\n    // Roles\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\"DEPOSITOR_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    // Seasonal variables\n    bytes32 public currentSeason;\n    mapping(bytes32 => bool) public seasons;\n\n    // RealmId contract\n    IRealmId public realmIdContract;\n\n    // Balances mapping\n    mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256))) public balances; // season => realmId => realmIdVersion => balance\n\n    // Nonce management\n    mapping(uint256 => uint256) public nonces; // realmId => nonce\n\n    // Allowed consume reason codes mapping\n    mapping(bytes32 => bool) public allowedConsumeReasonCodes;\n\n    event SetCurrentSeason(bytes32 season);\n    event BatchAddedConsumeReasonCode(bytes32[] reasonCodes);\n    event BatchRemovedConsumeReasonCode(bytes32[] reasonCodes);\n    event Deposited(\n        address indexed sender,\n        bytes32 indexed season,\n        bytes32 indexed reasonCode,\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount\n    );\n\n    event Consumed(\n        uint256 indexed realmId,\n        bytes32 indexed season,\n        bytes32 indexed reasonCode,\n        address operator,\n        uint256 realmIdVersion,\n        uint256 amount,\n        address realmIdOwner\n    );\n\n    function initialize(address _realmIdContract, address _admin) public initializer {\n        __UUPSUpgradeable_init();\n        ContractOwnershipStorage.layout().proxyInit(_admin);\n\n        require(address(_realmIdContract) != address(0), \"Not a valid Contract Address\");\n        require(address(_admin) != address(0), \"Not a valid Admin Address\");\n        realmIdContract = IRealmId(_realmIdContract);\n    }\n\n    function _authorizeUpgrade(address) internal view override {\n        AccessControlStorage.layout().enforceHasRole(UPGRADER_ROLE, _msgSender());\n    }\n\n    function setCurrentSeason(bytes32 _season) external {\n        ContractOwnershipStorage.layout().enforceIsContractOwner(_msgSender());\n        require(!seasons[_season], \"Season already set\");\n        currentSeason = _season;\n        seasons[_season] = true;\n        emit SetCurrentSeason(_season);\n    }\n\n    function batchAddConsumeReasonCodes(bytes32[] memory _reasonCodes) public {\n        ContractOwnershipStorage.layout().enforceIsContractOwner(_msgSender());\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\n            require(!allowedConsumeReasonCodes[_reasonCodes[i]], \"Reason code already exists\");\n            allowedConsumeReasonCodes[_reasonCodes[i]] = true;\n        }\n\n        emit BatchAddedConsumeReasonCode(_reasonCodes);\n    }\n\n    function batchRemoveConsumeReasonCodes(bytes32[] memory _reasonCodes) public {\n        ContractOwnershipStorage.layout().enforceIsContractOwner(_msgSender());\n\n        // Check if each reason code exists and can be removed\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\n            require(allowedConsumeReasonCodes[_reasonCodes[i]], \"Reason code does not exist\");\n            delete allowedConsumeReasonCodes[_reasonCodes[i]];\n        }\n\n        emit BatchRemovedConsumeReasonCode(_reasonCodes);\n    }\n\n    function deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) public {\n        // Check if the sender has the Depositor role\n        AccessControlStorage.layout().enforceHasRole(DEPOSITOR_ROLE, _msgSender());\n\n        // increase balance\n        balances[season][realmId][realmIdVersion] += amount;\n\n        emit Deposited(msg.sender, season, depositReasonCode, realmId, realmIdVersion, amount);\n    }\n\n    function deposit(\n        bytes32 season,\n        bytes32 parentNode,\n        string memory name,\n        uint256 realmIdVersion,\n        uint256 amount,\n        bytes32 depositReasonCode\n    ) public {\n        uint256 realmId = realmIdContract.getTokenId(name, parentNode);\n        deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\n    }\n\n    function _consume(uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 consumeReasonCode, address owner_) internal {\n        // Check if the sender has enough balance\n        require(balances[currentSeason][realmId][realmIdVersion] >= amount, \"Insufficient balance\");\n        // Check if the consumeReasonCode exists and is true in the mapping\n        require(allowedConsumeReasonCodes[consumeReasonCode], \"Invalid consume reason code\");\n\n        balances[currentSeason][realmId][realmIdVersion] -= amount;\n\n        emit Consumed(realmId, currentSeason, consumeReasonCode, msg.sender, realmIdVersion, amount, owner_);\n        nonces[realmId]++;\n    }\n\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) public {\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\n        consume(realmId, amount, consumeReasonCode, v, r, s);\n    }\n\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) public {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        bytes32 _messageHash = _preparePayload(realmId, amount, nonces[realmId], consumeReasonCode);\n        bytes32 messageDigest = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash));\n        address signer = ecrecover(messageDigest, v, r, s);\n        address owner_ = realmIdContract.ownerOf(realmId);\n        require(signer == owner_, \"Signer is not the owner\");\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, owner_);\n    }\n\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode) public {\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\n        consume(realmId, amount, consumeReasonCode);\n    }\n\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) public {\n        address owner_ = realmIdContract.ownerOf(realmId);\n        require(msg.sender == owner_, \"Sender is not the owner\");\n\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, msg.sender);\n    }\n\n    function balanceOf(bytes32 season, uint256 realmId) external view returns (uint256) {\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        return balances[season][realmId][realmIdVersion];\n    }\n\n    function balanceOf(bytes32 season, bytes32 parentNode, string memory _name) external view returns (uint256) {\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        return balances[season][realmId][realmIdVersion];\n    }\n\n    function balanceOf(uint256 realmId) external view returns (uint256) {\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        return balances[currentSeason][realmId][realmIdVersion];\n    }\n\n    function balanceOf(bytes32 parentNode, string memory _name) external view returns (uint256) {\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        return balances[currentSeason][realmId][realmIdVersion];\n    }\n\n    function _preparePayload(uint256 realmId, uint256 amount, uint256 nonce, bytes32 reasonCode) internal view returns (bytes32) {\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\n        bytes32 payload = keccak256(abi.encodePacked(realmId, realmIdVersion, amount, currentSeason, reasonCode, nonce));\n        return payload;\n    }\n\n    function preparePayload(uint256 realmId, uint256 amount, bytes32 reasonCode) public view returns (bytes32) {\n        return (_preparePayload(realmId, amount, nonces[realmId], reasonCode));\n    }\n}\n"},"contracts/MocaPoints/mock/realmIdContract/MockRealmId.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract MockRealmId {\n    function burnCounts(uint256) public pure returns (uint256) {\n        return 0;\n    }\n\n    function getTokenId(string calldata, bytes32) public pure returns (uint256) {\n        return 10;\n    }\n\n    function ownerOf(uint256) public pure returns (address) {\n        return address(0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":99999},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol","exportedSymbols":{"AccessControlBase":[123],"AccessControlStorage":[533],"Context":[2086],"ContractOwnershipStorage":[780],"IAccessControl":[260]},"id":124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol","file":"./../../access/interfaces/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":124,"sourceUnit":261,"src":"58:76:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"66:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol","file":"./../libraries/AccessControlStorage.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":124,"sourceUnit":534,"src":"135:77:0","symbolAliases":[{"foreign":{"id":4,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"143:20:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol","file":"./../libraries/ContractOwnershipStorage.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":124,"sourceUnit":781,"src":"213:85:0","symbolAliases":[{"foreign":{"id":6,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"221:24:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":124,"sourceUnit":2087,"src":"299:66:0","symbolAliases":[{"foreign":{"id":8,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"307:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["632:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":260,"src":"632:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"632:14:0"},{"baseName":{"id":13,"name":"Context","nameLocations":["648:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"648:7:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"648:7:0"}],"canonicalName":"AccessControlBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"367:226:0","text":"@title Access control via roles management (proxiable version).\n @dev This contract is to be used via inheritance in a proxied implementation.\n @dev Note: This contract requires ERC173 (Contract Ownership standard)."},"fullyImplemented":true,"id":123,"linearizedBaseContracts":[123,2086,260,225],"name":"AccessControlBase","nameLocation":"611:17:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":18,"libraryName":{"id":15,"name":"AccessControlStorage","nameLocations":["668:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"668:20:0"},"nodeType":"UsingForDirective","src":"662:59:0","typeName":{"id":17,"nodeType":"UserDefinedTypeName","pathNode":{"id":16,"name":"AccessControlStorage.Layout","nameLocations":["693:20:0","714:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"693:27:0"},"referencedDeclaration":300,"src":"693:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}}},{"global":false,"id":22,"libraryName":{"id":19,"name":"ContractOwnershipStorage","nameLocations":["732:24:0"],"nodeType":"IdentifierPath","referencedDeclaration":780,"src":"732:24:0"},"nodeType":"UsingForDirective","src":"726:67:0","typeName":{"id":21,"nodeType":"UserDefinedTypeName","pathNode":{"id":20,"name":"ContractOwnershipStorage.Layout","nameLocations":["761:24:0","786:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"761:31:0"},"referencedDeclaration":557,"src":"761:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}}},{"body":{"id":53,"nodeType":"Block","src":"1175:198:0","statements":[{"assignments":[31],"declarations":[{"constant":false,"id":31,"mutability":"mutable","name":"operator","nameLocation":"1193:8:0","nodeType":"VariableDeclaration","scope":53,"src":"1185:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":34,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1204:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1185:31:0"},{"expression":{"arguments":[{"id":40,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1283:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":35,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1226:24:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1251:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"1226:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1226:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":39,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1260:22:0","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":746,"src":"1226:56:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address) view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1226:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1226:66:0"},{"expression":{"arguments":[{"id":48,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"1342:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":49,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1348:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":50,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1357:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":43,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1302:20:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlStorage_$533_$","typeString":"type(library AccessControlStorage)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1323:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":532,"src":"1302:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function () pure returns (struct AccessControlStorage.Layout storage pointer)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":47,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1332:9:0","memberName":"grantRole","nodeType":"MemberAccess","referencedDeclaration":353,"src":"1302:39:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address,address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1302:64:0"}]},"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"799:312:0","text":"@notice Grants a role to an account.\n @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\n @dev Emits a {RoleGranted} event if the account did not previously have the role.\n @param role The role to grant.\n @param account The account to grant the role to."},"functionSelector":"2f2ff15d","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"1125:9:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"role","nameLocation":"1143:4:0","nodeType":"VariableDeclaration","scope":54,"src":"1135:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":24,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1135:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"account","nameLocation":"1157:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1149:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1134:31:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1175:0:0"},"scope":123,"src":"1116:257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":85,"nodeType":"Block","src":"1754:199:0","statements":[{"assignments":[63],"declarations":[{"constant":false,"id":63,"mutability":"mutable","name":"operator","nameLocation":"1772:8:0","nodeType":"VariableDeclaration","scope":85,"src":"1764:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"1764:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":66,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1783:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1764:31:0"},{"expression":{"arguments":[{"id":72,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1862:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":67,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"1805:24:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1830:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"1805:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":71,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1839:22:0","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":746,"src":"1805:56:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address) view"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"1805:66:0"},{"expression":{"arguments":[{"id":80,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1922:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":81,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1928:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":82,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1937:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":75,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1881:20:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlStorage_$533_$","typeString":"type(library AccessControlStorage)"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1902:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":532,"src":"1881:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function () pure returns (struct AccessControlStorage.Layout storage pointer)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1911:10:0","memberName":"revokeRole","nodeType":"MemberAccess","referencedDeclaration":392,"src":"1881:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address,address)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84,"nodeType":"ExpressionStatement","src":"1881:65:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1379:310:0","text":"@notice Revokes a role from an account.\n @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\n @dev Emits a {RoleRevoked} event if the account previously had the role.\n @param role The role to revoke.\n @param account The account to revoke the role from."},"functionSelector":"d547741f","id":86,"implemented":true,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"1703:10:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"role","nameLocation":"1722:4:0","nodeType":"VariableDeclaration","scope":86,"src":"1714:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1714:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"account","nameLocation":"1736:7:0","nodeType":"VariableDeclaration","scope":86,"src":"1728:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1713:31:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1754:0:0"},"scope":123,"src":"1694:259:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[249],"body":{"id":102,"nodeType":"Block","src":"2039:79:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":97,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"2092:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":99,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2106:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":92,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2049:20:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlStorage_$533_$","typeString":"type(library AccessControlStorage)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2070:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":532,"src":"2049:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function () pure returns (struct AccessControlStorage.Layout storage pointer)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":96,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2079:12:0","memberName":"renounceRole","nodeType":"MemberAccess","referencedDeclaration":429,"src":"2049:42:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$300_storage_ptr_$_t_address_$_t_bytes32_$returns$__$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,address,bytes32)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"ExpressionStatement","src":"2049:62:0"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1959:30:0","text":"@inheritdoc IAccessControl"},"functionSelector":"8bb9c5bf","id":103,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2003:12:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"role","nameLocation":"2024:4:0","nodeType":"VariableDeclaration","scope":103,"src":"2016:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":88,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2016:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2015:14:0"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2039:0:0"},"scope":123,"src":"1994:124:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[259],"body":{"id":121,"nodeType":"Block","src":"2245:76:0","statements":[{"expression":{"arguments":[{"id":117,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"2300:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":118,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2306:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":113,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2262:20:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlStorage_$533_$","typeString":"type(library AccessControlStorage)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2283:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":532,"src":"2262:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function () pure returns (struct AccessControlStorage.Layout storage pointer)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2292:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":450,"src":"2262:37:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view returns (bool)"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":112,"id":120,"nodeType":"Return","src":"2255:59:0"}]},"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"2124:30:0","text":"@inheritdoc IAccessControl"},"functionSelector":"91d14854","id":122,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2168:7:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"role","nameLocation":"2184:4:0","nodeType":"VariableDeclaration","scope":122,"src":"2176:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2176:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"account","nameLocation":"2198:7:0","nodeType":"VariableDeclaration","scope":122,"src":"2190:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2190:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2175:31:0"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"hasRole_","nameLocation":"2235:8:0","nodeType":"VariableDeclaration","scope":122,"src":"2230:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":110,"name":"bool","nodeType":"ElementaryTypeName","src":"2230:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2229:15:0"},"scope":123,"src":"2159:162:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":124,"src":"593:1730:0","usedErrors":[180,196],"usedEvents":[215,224]}],"src":"32:2292:0"},"id":0},"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol","exportedSymbols":{"Context":[2086],"ContractOwnershipBase":[171],"ContractOwnershipStorage":[780],"IERC173":[280]},"id":172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":125,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:1"},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol","file":"./../interfaces/IERC173.sol","id":127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":172,"sourceUnit":281,"src":"58:52:1","symbolAliases":[{"foreign":{"id":126,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"66:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol","file":"./../libraries/ContractOwnershipStorage.sol","id":129,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":172,"sourceUnit":781,"src":"111:85:1","symbolAliases":[{"foreign":{"id":128,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"119:24:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":172,"sourceUnit":2087,"src":"197:66:1","symbolAliases":[{"foreign":{"id":130,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"205:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":133,"name":"IERC173","nameLocations":["586:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":280,"src":"586:7:1"},"id":134,"nodeType":"InheritanceSpecifier","src":"586:7:1"},{"baseName":{"id":135,"name":"Context","nameLocations":["595:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"595:7:1"},"id":136,"nodeType":"InheritanceSpecifier","src":"595:7:1"}],"canonicalName":"ContractOwnershipBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"265:278:1","text":"@title ERC173 Contract Ownership Standard (proxiable version).\n @dev See https://eips.ethereum.org/EIPS/eip-173\n @dev This contract is to be used via inheritance in a proxied implementation.\n @dev Note: This contract requires ERC165 (Interface Detection Standard)."},"fullyImplemented":true,"id":171,"linearizedBaseContracts":[171,2086,280,236],"name":"ContractOwnershipBase","nameLocation":"561:21:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":140,"libraryName":{"id":137,"name":"ContractOwnershipStorage","nameLocations":["615:24:1"],"nodeType":"IdentifierPath","referencedDeclaration":780,"src":"615:24:1"},"nodeType":"UsingForDirective","src":"609:67:1","typeName":{"id":139,"nodeType":"UserDefinedTypeName","pathNode":{"id":138,"name":"ContractOwnershipStorage.Layout","nameLocations":["644:24:1","669:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"644:31:1"},"referencedDeclaration":557,"src":"644:31:1","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}}},{"baseFunctions":[279],"body":{"id":152,"nodeType":"Block","src":"765:65:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":146,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"782:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"807:6:1","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"782:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"782:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"816:5:1","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":708,"src":"782:39:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$557_storage_ptr_$returns$_t_address_$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer) view returns (address)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"782:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":145,"id":151,"nodeType":"Return","src":"775:48:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"682:23:1","text":"@inheritdoc IERC173"},"functionSelector":"8da5cb5b","id":153,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"719:5:1","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"724:2:1"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"756:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"755:9:1"},"scope":171,"src":"710:120:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[273],"body":{"id":169,"nodeType":"Block","src":"924:92:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":164,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"986:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"986:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":166,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1000:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":159,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"934:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"959:6:1","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"934:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"968:17:1","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":695,"src":"934:51:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$557_storage_ptr_$_t_address_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address,address)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"934:75:1"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"836:23:1","text":"@inheritdoc IERC173"},"functionSelector":"f2fde38b","id":170,"implemented":true,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"873:17:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"newOwner","nameLocation":"899:8:1","nodeType":"VariableDeclaration","scope":170,"src":"891:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:18:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"924:0:1"},"scope":171,"src":"864:152:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":172,"src":"543:475:1","usedErrors":[196],"usedEvents":[235]}],"src":"32:987:1"},"id":1},"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol","exportedSymbols":{"NotRoleHolder":[180],"NotTargetContractRoleHolder":[189]},"id":190,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":173,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:2"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"58:165:2","text":"@notice Thrown when an account does not have the required role.\n @param role The role the caller is missing.\n @param account The account that was checked."},"errorSelector":"7aa72882","id":180,"name":"NotRoleHolder","nameLocation":"229:13:2","nodeType":"ErrorDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"role","nameLocation":"251:4:2","nodeType":"VariableDeclaration","scope":180,"src":"243:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"243:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"account","nameLocation":"265:7:2","nodeType":"VariableDeclaration","scope":180,"src":"257:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"242:31:2"},"src":"223:51:2"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"276:238:2","text":"@notice Thrown when an account does not have the required role on a target contract.\n @param targetContract The contract that was checked.\n @param role The role that was checked.\n @param account The account that was checked."},"errorSelector":"7a436c16","id":189,"name":"NotTargetContractRoleHolder","nameLocation":"520:27:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"targetContract","nameLocation":"556:14:2","nodeType":"VariableDeclaration","scope":189,"src":"548:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"548:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"role","nameLocation":"580:4:2","nodeType":"VariableDeclaration","scope":189,"src":"572:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"572:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"account","nameLocation":"594:7:2","nodeType":"VariableDeclaration","scope":189,"src":"586:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"547:55:2"},"src":"514:89:2"}],"src":"32:572:2"},"id":2},"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol","exportedSymbols":{"NotContractOwner":[196],"NotTargetContractOwner":[203]},"id":204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":191,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:3"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"58:130:3","text":"@notice Thrown when an account is not the contract owner but is required to.\n @param account The account that was checked."},"errorSelector":"2ef4875e","id":196,"name":"NotContractOwner","nameLocation":"194:16:3","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"account","nameLocation":"219:7:3","nodeType":"VariableDeclaration","scope":196,"src":"211:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"210:17:3"},"src":"188:40:3"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"230:194:3","text":"@notice Thrown when an account is not the target contract owner but is required to.\n @param targetContract The contract that was checked.\n @param account The account that was checked."},"errorSelector":"29b9b08b","id":203,"name":"NotTargetContractOwner","nameLocation":"430:22:3","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"targetContract","nameLocation":"461:14:3","nodeType":"VariableDeclaration","scope":203,"src":"453:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"account","nameLocation":"485:7:3","nodeType":"VariableDeclaration","scope":203,"src":"477:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:41:3"},"src":"424:70:3"}],"src":"32:463:3"},"id":3},"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol","exportedSymbols":{"IAccessControlEvents":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":205,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"58:56:4","text":"@title Access control via roles management (events)"},"fullyImplemented":true,"id":225,"linearizedBaseContracts":[225],"name":"IAccessControlEvents","nameLocation":"124:20:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"151:234:4","text":"@notice Emitted when `role` is granted to `account`.\n @param role The role that has been granted.\n @param account The account that has been granted the role.\n @param operator The account that granted the role."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":215,"name":"RoleGranted","nameLocation":"396:11:4","nodeType":"EventDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"416:4:4","nodeType":"VariableDeclaration","scope":215,"src":"408:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"408:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"430:7:4","nodeType":"VariableDeclaration","scope":215,"src":"422:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":213,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"447:8:4","nodeType":"VariableDeclaration","scope":215,"src":"439:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"407:49:4"},"src":"390:67:4"},{"anonymous":false,"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"463:236:4","text":"@notice Emitted when `role` is revoked from `account`.\n @param role The role that has been revoked.\n @param account The account that has been revoked the role.\n @param operator The account that revoked the role."},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":224,"name":"RoleRevoked","nameLocation":"710:11:4","nodeType":"EventDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"730:4:4","nodeType":"VariableDeclaration","scope":224,"src":"722:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"722:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"744:7:4","nodeType":"VariableDeclaration","scope":224,"src":"736:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"761:8:4","nodeType":"VariableDeclaration","scope":224,"src":"753:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"721:49:4"},"src":"704:67:4"}],"scope":226,"src":"114:659:4","usedErrors":[],"usedEvents":[215,224]}],"src":"32:742:4"},"id":4},"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol","exportedSymbols":{"IERC173Events":[236]},"id":237,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC173Events","contractDependencies":[],"contractKind":"interface","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"58:179:5","text":"@title ERC-173 Contract Ownership Standard (events)\n @dev See https://eips.ethereum.org/EIPS/eip-173\n @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0"},"fullyImplemented":true,"id":236,"linearizedBaseContracts":[236],"name":"IERC173Events","nameLocation":"247:13:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"267:162:5","text":"@notice Emitted when the contract ownership changes.\n @param previousOwner the previous contract owner.\n @param newOwner the new contract owner."},"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":235,"name":"OwnershipTransferred","nameLocation":"440:20:5","nodeType":"EventDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"477:13:5","nodeType":"VariableDeclaration","scope":235,"src":"461:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"508:8:5","nodeType":"VariableDeclaration","scope":235,"src":"492:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"492:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:57:5"},"src":"434:84:5"}],"scope":237,"src":"237:283:5","usedErrors":[],"usedEvents":[235]}],"src":"32:489:5"},"id":5},"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol","exportedSymbols":{"IAccessControl":[260],"IAccessControlEvents":[225]},"id":261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":238,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:6"},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol","file":"./../events/IAccessControlEvents.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":261,"sourceUnit":226,"src":"58:74:6","symbolAliases":[{"foreign":{"id":239,"name":"IAccessControlEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"66:20:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":242,"name":"IAccessControlEvents","nameLocations":["221:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"221:20:6"},"id":243,"nodeType":"InheritanceSpecifier","src":"221:20:6"}],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"134:59:6","text":"@title Access control via roles management (functions)"},"fullyImplemented":false,"id":260,"linearizedBaseContracts":[260,225],"name":"IAccessControl","nameLocation":"203:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"248:182:6","text":"@notice Renounces a role by the sender.\n @dev Reverts if `sender` does not have `role`.\n @dev Emits a {RoleRevoked} event.\n @param role The role to renounce."},"functionSelector":"8bb9c5bf","id":249,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"444:12:6","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"role","nameLocation":"465:4:6","nodeType":"VariableDeclaration","scope":249,"src":"457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"457:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"456:14:6"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"479:0:6"},"scope":260,"src":"435:45:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"486:173:6","text":"@notice Retrieves whether an account has a role.\n @param role The role.\n @param account The account.\n @return hasRole_ Whether `account` has `role`."},"functionSelector":"91d14854","id":259,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"673:7:6","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"role","nameLocation":"689:4:6","nodeType":"VariableDeclaration","scope":259,"src":"681:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"681:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"account","nameLocation":"703:7:6","nodeType":"VariableDeclaration","scope":259,"src":"695:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"695:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:31:6"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"hasRole_","nameLocation":"740:8:6","nodeType":"VariableDeclaration","scope":259,"src":"735:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":256,"name":"bool","nodeType":"ElementaryTypeName","src":"735:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"734:15:6"},"scope":260,"src":"664:86:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":261,"src":"193:559:6","usedErrors":[],"usedEvents":[215,224]}],"src":"32:721:6"},"id":6},"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol","exportedSymbols":{"IERC173":[280],"IERC173Events":[236]},"id":281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":262,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol","file":"./../events/IERC173Events.sol","id":264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":281,"sourceUnit":237,"src":"58:60:7","symbolAliases":[{"foreign":{"id":263,"name":"IERC173Events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"66:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":266,"name":"IERC173Events","nameLocations":["323:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":236,"src":"323:13:7"},"id":267,"nodeType":"InheritanceSpecifier","src":"323:13:7"}],"canonicalName":"IERC173","contractDependencies":[],"contractKind":"interface","documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"120:182:7","text":"@title ERC-173 Contract Ownership Standard (functions)\n @dev See https://eips.ethereum.org/EIPS/eip-173\n @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0"},"fullyImplemented":false,"id":280,"linearizedBaseContracts":[280,236],"name":"IERC173","nameLocation":"312:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"343:342:7","text":"@notice Sets the address of the new contract owner.\n @dev Reverts if the sender is not the contract owner.\n @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\n @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership."},"functionSelector":"f2fde38b","id":273,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"699:17:7","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"newOwner","nameLocation":"725:8:7","nodeType":"VariableDeclaration","scope":273,"src":"717:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"716:18:7"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[],"src":"743:0:7"},"scope":280,"src":"690:54:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"750:116:7","text":"@notice Gets the address of the contract owner.\n @return contractOwner The address of the contract owner."},"functionSelector":"8da5cb5b","id":279,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"880:5:7","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"885:2:7"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"contractOwner","nameLocation":"919:13:7","nodeType":"VariableDeclaration","scope":279,"src":"911:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"910:23:7"},"scope":280,"src":"871:63:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":281,"src":"302:634:7","usedErrors":[],"usedEvents":[235]}],"src":"32:905:7"},"id":7},"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol","exportedSymbols":{"AccessControlStorage":[533],"IAccessControl":[260],"IAccessControlEvents":[225],"NotRoleHolder":[180],"NotTargetContractRoleHolder":[189]},"id":534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":282,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:8"},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol","file":"./../errors/AccessControlErrors.sol","id":285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":534,"sourceUnit":190,"src":"58:95:8","symbolAliases":[{"foreign":{"id":283,"name":"NotRoleHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"66:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":284,"name":"NotTargetContractRoleHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"81:27:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol","file":"./../events/IAccessControlEvents.sol","id":287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":534,"sourceUnit":226,"src":"154:74:8","symbolAliases":[{"foreign":{"id":286,"name":"IAccessControlEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"162:20:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol","file":"./../interfaces/IAccessControl.sol","id":289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":534,"sourceUnit":261,"src":"229:66:8","symbolAliases":[{"foreign":{"id":288,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"237:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AccessControlStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":533,"linearizedBaseContracts":[533],"name":"AccessControlStorage","nameLocation":"305:20:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":293,"libraryName":{"id":290,"name":"AccessControlStorage","nameLocations":["338:20:8"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"338:20:8"},"nodeType":"UsingForDirective","src":"332:59:8","typeName":{"id":292,"nodeType":"UserDefinedTypeName","pathNode":{"id":291,"name":"AccessControlStorage.Layout","nameLocations":["363:20:8","384:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"363:27:8"},"referencedDeclaration":300,"src":"363:27:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}}},{"canonicalName":"AccessControlStorage.Layout","id":300,"members":[{"constant":false,"id":299,"mutability":"mutable","name":"roles","nameLocation":"466:5:8","nodeType":"VariableDeclaration","scope":300,"src":"421:50:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"},"typeName":{"id":298,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"429:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"421:44:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":297,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"440:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"459:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"Layout","nameLocation":"404:6:8","nodeType":"StructDefinition","scope":533,"src":"397:81:8","visibility":"public"},{"constant":true,"id":313,"mutability":"constant","name":"LAYOUT_STORAGE_SLOT","nameLocation":"510:19:8","nodeType":"VariableDeclaration","scope":533,"src":"484:124:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"484:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"616e696d6f63612e636f72652e6163636573732e416363657373436f6e74726f6c2e73746f72616765","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"558:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8827d3282af6f37b64c3e9e6f3ac9df286ab0bb0fccd6f8661bf19adb368b23","typeString":"literal_string \"animoca.core.access.AccessControl.storage\""},"value":"animoca.core.access.AccessControl.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c8827d3282af6f37b64c3e9e6f3ac9df286ab0bb0fccd6f8661bf19adb368b23","typeString":"literal_string \"animoca.core.access.AccessControl.storage\""}],"id":306,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"548:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"548:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"540:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"540:7:8","typeDescriptions":{}}},"id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"540:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"606:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"540:67:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"532:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"532:7:8","typeDescriptions":{}}},"id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"532:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"1084:177:8","statements":[{"condition":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1098:25:8","subExpression":{"arguments":[{"id":328,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1109:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":329,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"1115:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":326,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1099:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1101:7:8","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":450,"src":"1099:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view returns (bool)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1099:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":351,"nodeType":"IfStatement","src":"1094:161:8","trueBody":{"id":350,"nodeType":"Block","src":"1125:130:8","statements":[{"expression":{"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":332,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1139:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1141:5:8","memberName":"roles","nodeType":"MemberAccess","referencedDeclaration":299,"src":"1139:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"}},"id":337,"indexExpression":{"id":334,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1147:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1139:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":338,"indexExpression":{"id":335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"1153:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1139:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1164:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1139:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":341,"nodeType":"ExpressionStatement","src":"1139:29:8"},{"eventCall":{"arguments":[{"id":345,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1220:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":346,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"1226:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1235:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":342,"name":"IAccessControlEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1187:20:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEvents_$225_$","typeString":"type(contract IAccessControlEvents)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:11:8","memberName":"RoleGranted","nodeType":"MemberAccess","referencedDeclaration":215,"src":"1187:32:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1187:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"EmitStatement","src":"1182:62:8"}]}}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"615:369:8","text":"@notice Grants a role to an account.\n @dev Note: Call to this function should be properly access controlled.\n @dev Emits a {RoleGranted} event if the account did not previously have the role.\n @param role The role to grant.\n @param account The account to grant the role to.\n @param operator The account requesting the role change."},"id":353,"implemented":true,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"998:9:8","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"s","nameLocation":"1023:1:8","nodeType":"VariableDeclaration","scope":353,"src":"1008:16:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"},"typeName":{"id":316,"nodeType":"UserDefinedTypeName","pathNode":{"id":315,"name":"Layout","nameLocations":["1008:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"1008:6:8"},"referencedDeclaration":300,"src":"1008:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"role","nameLocation":"1034:4:8","nodeType":"VariableDeclaration","scope":353,"src":"1026:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1026:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"account","nameLocation":"1048:7:8","nodeType":"VariableDeclaration","scope":353,"src":"1040:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"operator","nameLocation":"1065:8:8","nodeType":"VariableDeclaration","scope":353,"src":"1057:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1007:67:8"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"1084:0:8"},"scope":533,"src":"989:272:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"1735:177:8","statements":[{"condition":{"arguments":[{"id":368,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1759:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1765:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":366,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1749:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1751:7:8","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":450,"src":"1749:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view returns (bool)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1749:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":390,"nodeType":"IfStatement","src":"1745:161:8","trueBody":{"id":389,"nodeType":"Block","src":"1775:131:8","statements":[{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":371,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1789:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1791:5:8","memberName":"roles","nodeType":"MemberAccess","referencedDeclaration":299,"src":"1789:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"}},"id":376,"indexExpression":{"id":373,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1797:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1789:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":377,"indexExpression":{"id":374,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1803:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1789:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1814:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1789:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"nodeType":"ExpressionStatement","src":"1789:30:8"},{"eventCall":{"arguments":[{"id":384,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"1871:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":385,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1877:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"1886:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":381,"name":"IAccessControlEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1838:20:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEvents_$225_$","typeString":"type(contract IAccessControlEvents)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1859:11:8","memberName":"RoleRevoked","nodeType":"MemberAccess","referencedDeclaration":224,"src":"1838:32:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"EmitStatement","src":"1833:62:8"}]}}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"1267:367:8","text":"@notice Revokes a role from an account.\n @dev Note: Call to this function should be properly access controlled.\n @dev Emits a {RoleRevoked} event if the account previously had the role.\n @param role The role to revoke.\n @param account The account to revoke the role from.\n @param operator The account requesting the role change."},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"1648:10:8","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"s","nameLocation":"1674:1:8","nodeType":"VariableDeclaration","scope":392,"src":"1659:16:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"},"typeName":{"id":356,"nodeType":"UserDefinedTypeName","pathNode":{"id":355,"name":"Layout","nameLocations":["1659:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"1659:6:8"},"referencedDeclaration":300,"src":"1659:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"role","nameLocation":"1685:4:8","nodeType":"VariableDeclaration","scope":392,"src":"1677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1677:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"account","nameLocation":"1699:7:8","nodeType":"VariableDeclaration","scope":392,"src":"1691:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"operator","nameLocation":"1716:8:8","nodeType":"VariableDeclaration","scope":392,"src":"1708:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:67:8"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"1735:0:8"},"scope":533,"src":"1639:273:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"2247:155:8","statements":[{"expression":{"arguments":[{"id":406,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2274:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":407,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2280:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":403,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2257:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2259:14:8","memberName":"enforceHasRole","nodeType":"MemberAccess","referencedDeclaration":495,"src":"2257:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2257:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"2257:30:8"},{"expression":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":410,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2297:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2299:5:8","memberName":"roles","nodeType":"MemberAccess","referencedDeclaration":299,"src":"2297:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"}},"id":415,"indexExpression":{"id":412,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2305:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":416,"indexExpression":{"id":413,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2311:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2297:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2321:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2297:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":419,"nodeType":"ExpressionStatement","src":"2297:29:8"},{"eventCall":{"arguments":[{"id":423,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2374:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":424,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2380:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2388:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":420,"name":"IAccessControlEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2341:20:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEvents_$225_$","typeString":"type(contract IAccessControlEvents)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2362:11:8","memberName":"RoleRevoked","nodeType":"MemberAccess","referencedDeclaration":224,"src":"2341:32:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"EmitStatement","src":"2336:59:8"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"1918:245:8","text":"@notice Renounces a role by the sender.\n @dev Reverts with {NotRoleHolder} if `sender` does not have `role`.\n @dev Emits a {RoleRevoked} event.\n @param sender The message sender.\n @param role The role to renounce."},"id":429,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2177:12:8","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"s","nameLocation":"2205:1:8","nodeType":"VariableDeclaration","scope":429,"src":"2190:16:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"},"typeName":{"id":395,"nodeType":"UserDefinedTypeName","pathNode":{"id":394,"name":"Layout","nameLocations":["2190:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"2190:6:8"},"referencedDeclaration":300,"src":"2190:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"sender","nameLocation":"2216:6:8","nodeType":"VariableDeclaration","scope":429,"src":"2208:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"role","nameLocation":"2232:4:8","nodeType":"VariableDeclaration","scope":429,"src":"2224:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2224:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2189:48:8"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"2247:0:8"},"scope":533,"src":"2168:234:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":449,"nodeType":"Block","src":"2690:46:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":442,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2707:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2709:5:8","memberName":"roles","nodeType":"MemberAccess","referencedDeclaration":299,"src":"2707:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(address => bool))"}},"id":445,"indexExpression":{"id":444,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2715:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2707:13:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":447,"indexExpression":{"id":446,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2721:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2707:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":441,"id":448,"nodeType":"Return","src":"2700:29:8"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"2408:173:8","text":"@notice Retrieves whether an account has a role.\n @param role The role.\n @param account The account.\n @return hasRole_ Whether `account` has `role`."},"id":450,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2595:7:8","nodeType":"FunctionDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"s","nameLocation":"2618:1:8","nodeType":"VariableDeclaration","scope":450,"src":"2603:16:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"},"typeName":{"id":432,"nodeType":"UserDefinedTypeName","pathNode":{"id":431,"name":"Layout","nameLocations":["2603:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"2603:6:8"},"referencedDeclaration":300,"src":"2603:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"role","nameLocation":"2629:4:8","nodeType":"VariableDeclaration","scope":450,"src":"2621:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2621:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"account","nameLocation":"2643:7:8","nodeType":"VariableDeclaration","scope":450,"src":"2635:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"2635:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2602:49:8"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"hasRole_","nameLocation":"2680:8:8","nodeType":"VariableDeclaration","scope":450,"src":"2675:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":439,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2674:15:8"},"scope":533,"src":"2586:150:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":470,"nodeType":"Block","src":"3181:77:8","statements":[{"expression":{"arguments":[{"id":466,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3237:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":467,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3243:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":463,"name":"targetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"3213:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":462,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3198:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$260_$","typeString":"type(contract IAccessControl)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3198:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccessControl_$260","typeString":"contract IAccessControl"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:7:8","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3198:38:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view external returns (bool)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3198:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":461,"id":469,"nodeType":"Return","src":"3191:60:8"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"2742:296:8","text":"@notice Checks whether an account has a role in a target contract.\n @param targetContract The contract to check.\n @param role The role to check.\n @param account The account to check.\n @return hasTargetContractRole_ Whether `account` has `role` in `targetContract`."},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"hasTargetContractRole","nameLocation":"3052:21:8","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"targetContract","nameLocation":"3082:14:8","nodeType":"VariableDeclaration","scope":471,"src":"3074:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"3074:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"role","nameLocation":"3106:4:8","nodeType":"VariableDeclaration","scope":471,"src":"3098:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"account","nameLocation":"3120:7:8","nodeType":"VariableDeclaration","scope":471,"src":"3112:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3073:55:8"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"hasTargetContractRole_","nameLocation":"3157:22:8","nodeType":"VariableDeclaration","scope":471,"src":"3152:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"3152:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3151:29:8"},"scope":533,"src":"3043:215:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":494,"nodeType":"Block","src":"3546:83:8","statements":[{"condition":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3560:25:8","subExpression":{"arguments":[{"id":484,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3571:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":485,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3577:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":482,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3561:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3563:7:8","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":450,"src":"3561:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view returns (bool)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"IfStatement","src":"3556:66:8","trueBody":{"errorCall":{"arguments":[{"id":489,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3608:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":490,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3614:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":488,"name":"NotRoleHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3594:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":492,"nodeType":"RevertStatement","src":"3587:35:8"}}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"3264:190:8","text":"@notice Ensures that an account has a role.\n @dev Reverts with {NotRoleHolder} if `account` does not have `role`.\n @param role The role.\n @param account The account."},"id":495,"implemented":true,"kind":"function","modifiers":[],"name":"enforceHasRole","nameLocation":"3468:14:8","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"s","nameLocation":"3498:1:8","nodeType":"VariableDeclaration","scope":495,"src":"3483:16:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"},"typeName":{"id":474,"nodeType":"UserDefinedTypeName","pathNode":{"id":473,"name":"Layout","nameLocations":["3483:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"3483:6:8"},"referencedDeclaration":300,"src":"3483:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"role","nameLocation":"3509:4:8","nodeType":"VariableDeclaration","scope":495,"src":"3501:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3501:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"account","nameLocation":"3523:7:8","nodeType":"VariableDeclaration","scope":495,"src":"3515:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"3515:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3482:49:8"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":533,"src":"3459:170:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"4048:165:8","statements":[{"condition":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4062:53:8","subExpression":{"arguments":[{"id":506,"name":"targetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4085:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4101:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":508,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"4107:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"hasTargetContractRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"4063:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (address,bytes32,address) view returns (bool)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":518,"nodeType":"IfStatement","src":"4058:149:8","trueBody":{"id":517,"nodeType":"Block","src":"4117:90:8","statements":[{"errorCall":{"arguments":[{"id":512,"name":"targetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"4166:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4182:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":514,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"4188:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":511,"name":"NotTargetContractRoleHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"4138:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"RevertStatement","src":"4131:65:8"}]}}]},"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"3635:301:8","text":"@notice Enforces that an account has a role in a target contract.\n @dev Reverts with {NotTargetContractRoleHolder} if the account does not have the role.\n @param targetContract The contract to check.\n @param role The role to check.\n @param account The account to check."},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"enforceHasTargetContractRole","nameLocation":"3950:28:8","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"targetContract","nameLocation":"3987:14:8","nodeType":"VariableDeclaration","scope":520,"src":"3979:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"3979:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"role","nameLocation":"4011:4:8","nodeType":"VariableDeclaration","scope":520,"src":"4003:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4003:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"account","nameLocation":"4025:7:8","nodeType":"VariableDeclaration","scope":520,"src":"4017:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"4017:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3978:55:8"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"4048:0:8"},"scope":533,"src":"3941:272:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":531,"nodeType":"Block","src":"4278:115:8","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"position","nameLocation":"4296:8:8","nodeType":"VariableDeclaration","scope":531,"src":"4288:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4288:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":529,"initialValue":{"id":528,"name":"LAYOUT_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4307:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4288:38:8"},{"AST":{"nativeSrc":"4345:42:8","nodeType":"YulBlock","src":"4345:42:8","statements":[{"nativeSrc":"4359:18:8","nodeType":"YulAssignment","src":"4359:18:8","value":{"name":"position","nativeSrc":"4369:8:8","nodeType":"YulIdentifier","src":"4369:8:8"},"variableNames":[{"name":"s.slot","nativeSrc":"4359:6:8","nodeType":"YulIdentifier","src":"4359:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":527,"isOffset":false,"isSlot":false,"src":"4369:8:8","valueSize":1},{"declaration":524,"isOffset":false,"isSlot":true,"src":"4359:6:8","suffix":"slot","valueSize":1}],"id":530,"nodeType":"InlineAssembly","src":"4336:51:8"}]},"id":532,"implemented":true,"kind":"function","modifiers":[],"name":"layout","nameLocation":"4228:6:8","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"4234:2:8"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"s","nameLocation":"4275:1:8","nodeType":"VariableDeclaration","scope":532,"src":"4260:16:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"Layout","nameLocations":["4260:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"4260:6:8"},"referencedDeclaration":300,"src":"4260:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}},"visibility":"internal"}],"src":"4259:18:8"},"scope":533,"src":"4219:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":534,"src":"297:4098:8","usedErrors":[],"usedEvents":[]}],"src":"32:4364:8"},"id":8},"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol","exportedSymbols":{"ContractOwnershipStorage":[780],"IERC173":[280],"IERC173Events":[236],"InterfaceDetectionStorage":[898],"NotContractOwner":[196],"NotTargetContractOwner":[203],"ProxyInitialization":[954]},"id":781,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":535,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol","file":"./../errors/ContractOwnershipErrors.sol","id":538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":204,"src":"58:97:9","symbolAliases":[{"foreign":{"id":536,"name":"NotContractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"66:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":537,"name":"NotTargetContractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"84:22:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol","file":"./../events/IERC173Events.sol","id":540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":237,"src":"156:60:9","symbolAliases":[{"foreign":{"id":539,"name":"IERC173Events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"164:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol","file":"./../interfaces/IERC173.sol","id":542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":281,"src":"217:52:9","symbolAliases":[{"foreign":{"id":541,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"225:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol","file":"./../../proxy/libraries/ProxyInitialization.sol","id":544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":955,"src":"270:84:9","symbolAliases":[{"foreign":{"id":543,"name":"ProxyInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"278:19:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol","file":"./../../introspection/libraries/InterfaceDetectionStorage.sol","id":546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":899,"src":"355:104:9","symbolAliases":[{"foreign":{"id":545,"name":"InterfaceDetectionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"363:25:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ContractOwnershipStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":780,"linearizedBaseContracts":[780],"name":"ContractOwnershipStorage","nameLocation":"469:24:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":550,"libraryName":{"id":547,"name":"ContractOwnershipStorage","nameLocations":["506:24:9"],"nodeType":"IdentifierPath","referencedDeclaration":780,"src":"506:24:9"},"nodeType":"UsingForDirective","src":"500:67:9","typeName":{"id":549,"nodeType":"UserDefinedTypeName","pathNode":{"id":548,"name":"ContractOwnershipStorage.Layout","nameLocations":["535:24:9","560:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"535:31:9"},"referencedDeclaration":557,"src":"535:31:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}}},{"global":false,"id":554,"libraryName":{"id":551,"name":"InterfaceDetectionStorage","nameLocations":["578:25:9"],"nodeType":"IdentifierPath","referencedDeclaration":898,"src":"578:25:9"},"nodeType":"UsingForDirective","src":"572:69:9","typeName":{"id":553,"nodeType":"UserDefinedTypeName","pathNode":{"id":552,"name":"InterfaceDetectionStorage.Layout","nameLocations":["608:25:9","634:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"608:32:9"},"referencedDeclaration":808,"src":"608:32:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}}},{"canonicalName":"ContractOwnershipStorage.Layout","id":557,"members":[{"constant":false,"id":556,"mutability":"mutable","name":"contractOwner","nameLocation":"679:13:9","nodeType":"VariableDeclaration","scope":557,"src":"671:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"671:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Layout","nameLocation":"654:6:9","nodeType":"StructDefinition","scope":780,"src":"647:52:9","visibility":"public"},{"constant":true,"id":570,"mutability":"constant","name":"LAYOUT_STORAGE_SLOT","nameLocation":"731:19:9","nodeType":"VariableDeclaration","scope":780,"src":"705:128:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"705:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"616e696d6f63612e636f72652e6163636573732e436f6e74726163744f776e6572736869702e73746f72616765","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"779:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9ed16f33ab3a66c84bfd83099ccb2a8845871e2e1c1928f63797152f0fd54cd","typeString":"literal_string \"animoca.core.access.ContractOwnership.storage\""},"value":"animoca.core.access.ContractOwnership.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c9ed16f33ab3a66c84bfd83099ccb2a8845871e2e1c1928f63797152f0fd54cd","typeString":"literal_string \"animoca.core.access.ContractOwnership.storage\""}],"id":563,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"769:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"769:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"761:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:9","typeDescriptions":{}}},"id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"831:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"761:71:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"753:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:9","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:80:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":583,"mutability":"constant","name":"PROXY_INIT_PHASE_SLOT","nameLocation":"865:21:9","nodeType":"VariableDeclaration","scope":780,"src":"839:128:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"839:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"616e696d6f63612e636f72652e6163636573732e436f6e74726163744f776e6572736869702e7068617365","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"915:45:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b388d90dc1312ba799f321972f13311234fa1163bcabec7cf66101c4876eb84","typeString":"literal_string \"animoca.core.access.ContractOwnership.phase\""},"value":"animoca.core.access.ContractOwnership.phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5b388d90dc1312ba799f321972f13311234fa1163bcabec7cf66101c4876eb84","typeString":"literal_string \"animoca.core.access.ContractOwnership.phase\""}],"id":576,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"905:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"905:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"897:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"897:69:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"889:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"889:7:9","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"889:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"1476:281:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":592,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1490:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1506:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:9","typeDescriptions":{}}},"id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1506:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1490:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"IfStatement","src":"1486:166:9","trueBody":{"id":614,"nodeType":"Block","src":"1518:134:9","statements":[{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":598,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"1532:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1534:13:9","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":556,"src":"1532:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":601,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1550:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1532:30:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":603,"nodeType":"ExpressionStatement","src":"1532:30:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1624:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:9","typeDescriptions":{}}},"id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1628:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":604,"name":"IERC173Events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1581:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC173Events_$236_$","typeString":"type(contract IERC173Events)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1595:20:9","memberName":"OwnershipTransferred","nodeType":"MemberAccess","referencedDeclaration":235,"src":"1581:34:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"EmitStatement","src":"1576:65:9"}]}},{"expression":{"arguments":[{"expression":{"arguments":[{"id":622,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1723:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC173_$280_$","typeString":"type(contract IERC173)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC173_$280_$","typeString":"type(contract IERC173)"}],"id":621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1718:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC173_$280","typeString":"type(contract IERC173)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1732:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1718:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"hexValue":"74727565","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1745:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":616,"name":"InterfaceDetectionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"1661:25:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InterfaceDetectionStorage_$898_$","typeString":"type(library InterfaceDetectionStorage)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1687:6:9","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":897,"src":"1661:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$808_storage_ptr_$","typeString":"function () pure returns (struct InterfaceDetectionStorage.Layout storage pointer)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1661:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1696:21:9","memberName":"setSupportedInterface","nodeType":"MemberAccess","referencedDeclaration":851,"src":"1661:56:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$808_storage_ptr_$_t_bytes4_$_t_bool_$returns$__$attached_to$_t_struct$_Layout_$808_storage_ptr_$","typeString":"function (struct InterfaceDetectionStorage.Layout storage pointer,bytes4,bool)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1661:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"ExpressionStatement","src":"1661:89:9"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"974:423:9","text":"@notice Initializes the storage with an initial contract owner (immutable version).\n @notice Marks the following ERC165 interface(s) as supported: ERC173.\n @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\n @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\n @param initialOwner The initial contract owner."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"constructorInit","nameLocation":"1411:15:9","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"s","nameLocation":"1442:1:9","nodeType":"VariableDeclaration","scope":629,"src":"1427:16:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"},"typeName":{"id":586,"nodeType":"UserDefinedTypeName","pathNode":{"id":585,"name":"Layout","nameLocations":["1427:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"1427:6:9"},"referencedDeclaration":557,"src":"1427:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"initialOwner","nameLocation":"1453:12:9","nodeType":"VariableDeclaration","scope":629,"src":"1445:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"1445:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1426:40:9"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"1476:0:9"},"scope":780,"src":"1402:355:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":651,"nodeType":"Block","src":"2422:112:9","statements":[{"expression":{"arguments":[{"id":641,"name":"PROXY_INIT_PHASE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"2461:21:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":638,"name":"ProxyInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2432:19:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyInitialization_$954_$","typeString":"type(library ProxyInitialization)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:8:9","memberName":"setPhase","nodeType":"MemberAccess","referencedDeclaration":953,"src":"2432:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2432:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"ExpressionStatement","src":"2432:54:9"},{"expression":{"arguments":[{"id":648,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"2514:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":645,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2496:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2498:15:9","memberName":"constructorInit","nodeType":"MemberAccess","referencedDeclaration":629,"src":"2496:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"ExpressionStatement","src":"2496:31:9"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"1763:586:9","text":"@notice Initializes the storage with an initial contract owner (proxied version).\n @notice Sets the proxy initialization phase to `1`.\n @notice Marks the following ERC165 interface(s) as supported: ERC173.\n @dev Note: This function should be called ONLY in the init function of a proxied contract.\n @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\n @param initialOwner The initial contract owner."},"id":652,"implemented":true,"kind":"function","modifiers":[],"name":"proxyInit","nameLocation":"2363:9:9","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"s","nameLocation":"2388:1:9","nodeType":"VariableDeclaration","scope":652,"src":"2373:16:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"},"typeName":{"id":632,"nodeType":"UserDefinedTypeName","pathNode":{"id":631,"name":"Layout","nameLocations":["2373:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"2373:6:9"},"referencedDeclaration":557,"src":"2373:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"initialOwner","nameLocation":"2399:12:9","nodeType":"VariableDeclaration","scope":652,"src":"2391:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2372:40:9"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"2422:0:9"},"scope":780,"src":"2354:180:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":694,"nodeType":"Block","src":"2997:295:9","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"previousOwner","nameLocation":"3015:13:9","nodeType":"VariableDeclaration","scope":694,"src":"3007:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"3007:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":667,"initialValue":{"expression":{"id":665,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3031:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3033:13:9","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":556,"src":"3031:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3007:39:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"3060:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":669,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3070:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3060:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"3056:60:9","trueBody":{"errorCall":{"arguments":[{"id":672,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"3109:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":671,"name":"NotContractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"3092:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3092:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"RevertStatement","src":"3085:31:9"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3130:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":677,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"3147:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3130:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"3126:160:9","trueBody":{"id":692,"nodeType":"Block","src":"3157:129:9","statements":[{"expression":{"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":679,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3171:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3173:13:9","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":556,"src":"3171:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":682,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"3189:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3171:26:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":684,"nodeType":"ExpressionStatement","src":"3171:26:9"},{"eventCall":{"arguments":[{"id":688,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3251:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"3266:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":685,"name":"IERC173Events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3216:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC173Events_$236_$","typeString":"type(contract IERC173Events)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:20:9","memberName":"OwnershipTransferred","nodeType":"MemberAccess","referencedDeclaration":235,"src":"3216:34:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"EmitStatement","src":"3211:64:9"}]}}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"2540:364:9","text":"@notice Sets the address of the new contract owner.\n @dev Reverts with {NotContractOwner} if `sender` is not the contract owner.\n @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\n @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership."},"id":695,"implemented":true,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"2918:17:9","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"s","nameLocation":"2951:1:9","nodeType":"VariableDeclaration","scope":695,"src":"2936:16:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"},"typeName":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"Layout","nameLocations":["2936:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"2936:6:9"},"referencedDeclaration":557,"src":"2936:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"sender","nameLocation":"2962:6:9","nodeType":"VariableDeclaration","scope":695,"src":"2954:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"2954:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"newOwner","nameLocation":"2978:8:9","nodeType":"VariableDeclaration","scope":695,"src":"2970:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"2970:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2935:52:9"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"2997:0:9"},"scope":780,"src":"2909:383:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":707,"nodeType":"Block","src":"3498:39:9","statements":[{"expression":{"expression":{"id":704,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3515:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3517:13:9","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":556,"src":"3515:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":703,"id":706,"nodeType":"Return","src":"3508:22:9"}]},"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"3298:116:9","text":"@notice Gets the address of the contract owner.\n @return contractOwner The address of the contract owner."},"id":708,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"3428:5:9","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"s","nameLocation":"3449:1:9","nodeType":"VariableDeclaration","scope":708,"src":"3434:16:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"},"typeName":{"id":698,"nodeType":"UserDefinedTypeName","pathNode":{"id":697,"name":"Layout","nameLocations":["3434:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"3434:6:9"},"referencedDeclaration":557,"src":"3434:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}},"visibility":"internal"}],"src":"3433:18:9"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"contractOwner","nameLocation":"3483:13:9","nodeType":"VariableDeclaration","scope":708,"src":"3475:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"3475:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3474:23:9"},"scope":780,"src":"3419:118:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"3933:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":719,"name":"targetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3958:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":718,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"3950:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC173_$280_$","typeString":"type(contract IERC173)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3950:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC173_$280","typeString":"contract IERC173"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3974:5:9","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":279,"src":"3950:29:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3950:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":723,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3985:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3950:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":717,"id":725,"nodeType":"Return","src":"3943:49:9"}]},"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"3543:261:9","text":"@notice Checks whether an account is the owner of a target contract.\n @param targetContract The contract to check.\n @param account The account to check.\n @return isTargetContractOwner_ Whether `account` is the owner of `targetContract`."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"isTargetContractOwner","nameLocation":"3818:21:9","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"targetContract","nameLocation":"3848:14:9","nodeType":"VariableDeclaration","scope":727,"src":"3840:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"3840:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"account","nameLocation":"3872:7:9","nodeType":"VariableDeclaration","scope":727,"src":"3864:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"3864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3839:41:9"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"isTargetContractOwner_","nameLocation":"3909:22:9","nodeType":"VariableDeclaration","scope":727,"src":"3904:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":715,"name":"bool","nodeType":"ElementaryTypeName","src":"3904:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3903:29:9"},"scope":780,"src":"3809:190:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"4270:81:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4284:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":737,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"4295:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4297:13:9","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":556,"src":"4295:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4284:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"4280:64:9","trueBody":{"errorCall":{"arguments":[{"id":741,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4336:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":740,"name":"NotContractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"4319:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"RevertStatement","src":"4312:32:9"}}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"4005:179:9","text":"@notice Ensures that an account is the contract owner.\n @dev Reverts with {NotContractOwner} if `account` is not the contract owner.\n @param account The account."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"enforceIsContractOwner","nameLocation":"4198:22:9","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"s","nameLocation":"4236:1:9","nodeType":"VariableDeclaration","scope":746,"src":"4221:16:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"},"typeName":{"id":730,"nodeType":"UserDefinedTypeName","pathNode":{"id":729,"name":"Layout","nameLocations":["4221:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"4221:6:9"},"referencedDeclaration":557,"src":"4221:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"account","nameLocation":"4247:7:9","nodeType":"VariableDeclaration","scope":746,"src":"4239:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"4239:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:35:9"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"4270:0:9"},"scope":780,"src":"4189:162:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":766,"nodeType":"Block","src":"4711:148:9","statements":[{"condition":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4725:47:9","subExpression":{"arguments":[{"id":755,"name":"targetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"4748:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4764:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"isTargetContractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4726:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4726:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":765,"nodeType":"IfStatement","src":"4721:132:9","trueBody":{"id":764,"nodeType":"Block","src":"4774:79:9","statements":[{"errorCall":{"arguments":[{"id":760,"name":"targetContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"4818:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"4834:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":759,"name":"NotTargetContractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"4795:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4795:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"RevertStatement","src":"4788:54:9"}]}}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"4357:256:9","text":"@notice Enforces that an account is the owner of a target contract.\n @dev Reverts with {NotTheTargetContractOwner} if the account is not the owner.\n @param targetContract The contract to check.\n @param account The account to check."},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"enforceIsTargetContractOwner","nameLocation":"4627:28:9","nodeType":"FunctionDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"targetContract","nameLocation":"4664:14:9","nodeType":"VariableDeclaration","scope":767,"src":"4656:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"4688:7:9","nodeType":"VariableDeclaration","scope":767,"src":"4680:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"4680:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4655:41:9"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"4711:0:9"},"scope":780,"src":"4618:241:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"4924:115:9","statements":[{"assignments":[774],"declarations":[{"constant":false,"id":774,"mutability":"mutable","name":"position","nameLocation":"4942:8:9","nodeType":"VariableDeclaration","scope":778,"src":"4934:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4934:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":776,"initialValue":{"id":775,"name":"LAYOUT_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4953:19:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4934:38:9"},{"AST":{"nativeSrc":"4991:42:9","nodeType":"YulBlock","src":"4991:42:9","statements":[{"nativeSrc":"5005:18:9","nodeType":"YulAssignment","src":"5005:18:9","value":{"name":"position","nativeSrc":"5015:8:9","nodeType":"YulIdentifier","src":"5015:8:9"},"variableNames":[{"name":"s.slot","nativeSrc":"5005:6:9","nodeType":"YulIdentifier","src":"5005:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":774,"isOffset":false,"isSlot":false,"src":"5015:8:9","valueSize":1},{"declaration":771,"isOffset":false,"isSlot":true,"src":"5005:6:9","suffix":"slot","valueSize":1}],"id":777,"nodeType":"InlineAssembly","src":"4982:51:9"}]},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"layout","nameLocation":"4874:6:9","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"4880:2:9"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"s","nameLocation":"4921:1:9","nodeType":"VariableDeclaration","scope":779,"src":"4906:16:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"},"typeName":{"id":770,"nodeType":"UserDefinedTypeName","pathNode":{"id":769,"name":"Layout","nameLocations":["4906:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"4906:6:9"},"referencedDeclaration":557,"src":"4906:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}},"visibility":"internal"}],"src":"4905:18:9"},"scope":780,"src":"4865:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":781,"src":"461:4580:9","usedErrors":[],"usedEvents":[]}],"src":"32:5010:9"},"id":9},"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol","exportedSymbols":{"IllegalInterfaceId":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":782,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:10"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"58:68:10","text":"@notice Thrown when setting the illegal interfaceId 0xffffffff."},"errorSelector":"72c683bb","id":785,"name":"IllegalInterfaceId","nameLocation":"132:18:10","nodeType":"ErrorDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"150:2:10"},"src":"126:27:10"}],"src":"32:122:10"},"id":10},"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[797]},"id":798,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"58:173:11","text":"@title ERC165 Interface Detection Standard.\n @dev See https://eips.ethereum.org/EIPS/eip-165.\n @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7."},"fullyImplemented":false,"id":797,"linearizedBaseContracts":[797],"name":"IERC165","nameLocation":"241:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"255:340:11","text":"@notice Returns whether this contract implements a given interface.\n @dev Note: This function call must use less than 30 000 gas.\n @param interfaceId the interface identifier to test.\n @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."},"functionSelector":"01ffc9a7","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"609:17:11","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"interfaceId","nameLocation":"634:11:11","nodeType":"VariableDeclaration","scope":796,"src":"627:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":790,"name":"bytes4","nodeType":"ElementaryTypeName","src":"627:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"626:20:11"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"supported","nameLocation":"675:9:11","nodeType":"VariableDeclaration","scope":796,"src":"670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":793,"name":"bool","nodeType":"ElementaryTypeName","src":"670:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"669:16:11"},"scope":797,"src":"600:86:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":798,"src":"231:457:11","usedErrors":[],"usedEvents":[]}],"src":"32:657:11"},"id":11},"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol","exportedSymbols":{"IERC165":[797],"IllegalInterfaceId":[785],"InterfaceDetectionStorage":[898]},"id":899,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":799,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol","file":"./../errors/InterfaceDetectionErrors.sol","id":801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":899,"sourceUnit":786,"src":"58:76:12","symbolAliases":[{"foreign":{"id":800,"name":"IllegalInterfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"66:18:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","file":"./../interfaces/IERC165.sol","id":803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":899,"sourceUnit":798,"src":"135:52:12","symbolAliases":[{"foreign":{"id":802,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"143:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"InterfaceDetectionStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":898,"linearizedBaseContracts":[898],"name":"InterfaceDetectionStorage","nameLocation":"197:25:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"InterfaceDetectionStorage.Layout","id":808,"members":[{"constant":false,"id":807,"mutability":"mutable","name":"supportedInterfaces","nameLocation":"277:19:12","nodeType":"VariableDeclaration","scope":808,"src":"253:43:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":806,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":804,"name":"bytes4","nodeType":"ElementaryTypeName","src":"261:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"253:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":805,"name":"bool","nodeType":"ElementaryTypeName","src":"271:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"Layout","nameLocation":"236:6:12","nodeType":"StructDefinition","scope":898,"src":"229:74:12","visibility":"public"},{"constant":true,"id":821,"mutability":"constant","name":"LAYOUT_STORAGE_SLOT","nameLocation":"335:19:12","nodeType":"VariableDeclaration","scope":898,"src":"309:136:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"309:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"616e696d6f63612e636f72652e696e74726f7370656374696f6e2e496e74657266616365446574656374696f6e2e73746f72616765","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:55:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e","typeString":"literal_string \"animoca.core.introspection.InterfaceDetection.storage\""},"value":"animoca.core.introspection.InterfaceDetection.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e","typeString":"literal_string \"animoca.core.introspection.InterfaceDetection.storage\""}],"id":814,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"373:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"373:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:12","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"443:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"365:79:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"357:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"357:7:12","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"357:88:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":824,"mutability":"constant","name":"ILLEGAL_INTERFACE_ID","nameLocation":"477:20:12","nodeType":"VariableDeclaration","scope":898,"src":"452:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":822,"name":"bytes4","nodeType":"ElementaryTypeName","src":"452:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"500:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"internal"},{"body":{"id":850,"nodeType":"Block","src":"867:141:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"881:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":836,"name":"ILLEGAL_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"896:20:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"881:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":841,"nodeType":"IfStatement","src":"877:68:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":838,"name":"IllegalInterfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"925:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"925:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"RevertStatement","src":"918:27:12"}},{"expression":{"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":842,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"955:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"957:19:12","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":807,"src":"955:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":846,"indexExpression":{"id":844,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"977:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"955:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":847,"name":"supported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"992:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"955:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":849,"nodeType":"ExpressionStatement","src":"955:46:12"}]},"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"517:251:12","text":"@notice Sets or unsets an ERC165 interface.\n @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\n @param interfaceId the interface identifier.\n @param supported True to set the interface, false to unset it."},"id":851,"implemented":true,"kind":"function","modifiers":[],"name":"setSupportedInterface","nameLocation":"782:21:12","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"s","nameLocation":"819:1:12","nodeType":"VariableDeclaration","scope":851,"src":"804:16:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"},"typeName":{"id":827,"nodeType":"UserDefinedTypeName","pathNode":{"id":826,"name":"Layout","nameLocations":["804:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"804:6:12"},"referencedDeclaration":808,"src":"804:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"interfaceId","nameLocation":"829:11:12","nodeType":"VariableDeclaration","scope":851,"src":"822:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":829,"name":"bytes4","nodeType":"ElementaryTypeName","src":"822:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"supported","nameLocation":"847:9:12","nodeType":"VariableDeclaration","scope":851,"src":"842:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":831,"name":"bool","nodeType":"ElementaryTypeName","src":"842:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"803:54:12"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"867:0:12"},"scope":898,"src":"773:235:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"1463:236:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"1477:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":863,"name":"ILLEGAL_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"1492:20:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1477:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":868,"nodeType":"IfStatement","src":"1473:78:12","trueBody":{"id":867,"nodeType":"Block","src":"1514:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1535:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":861,"id":866,"nodeType":"Return","src":"1528:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"1564:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":871,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"1584:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$797_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$797_$","typeString":"type(contract IERC165)"}],"id":870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1579:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$797","typeString":"type(contract IERC165)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1593:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"1579:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1564:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":878,"nodeType":"IfStatement","src":"1560:82:12","trueBody":{"id":877,"nodeType":"Block","src":"1606:36:12","statements":[{"expression":{"hexValue":"74727565","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1627:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":861,"id":876,"nodeType":"Return","src":"1620:11:12"}]}},{"expression":{"baseExpression":{"expression":{"id":879,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1658:1:12","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1660:19:12","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":807,"src":"1658:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":882,"indexExpression":{"id":881,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"1680:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1658:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":861,"id":883,"nodeType":"Return","src":"1651:41:12"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"1014:340:12","text":"@notice Returns whether this contract implements a given interface.\n @dev Note: This function call must use less than 30 000 gas.\n @param interfaceId The interface identifier to test.\n @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1368:17:12","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"s","nameLocation":"1401:1:12","nodeType":"VariableDeclaration","scope":885,"src":"1386:16:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"},"typeName":{"id":854,"nodeType":"UserDefinedTypeName","pathNode":{"id":853,"name":"Layout","nameLocations":["1386:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"1386:6:12"},"referencedDeclaration":808,"src":"1386:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"interfaceId","nameLocation":"1411:11:12","nodeType":"VariableDeclaration","scope":885,"src":"1404:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":856,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1404:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1385:38:12"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"supported","nameLocation":"1452:9:12","nodeType":"VariableDeclaration","scope":885,"src":"1447:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:16:12"},"scope":898,"src":"1359:340:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":896,"nodeType":"Block","src":"1764:115:12","statements":[{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"position","nameLocation":"1782:8:12","nodeType":"VariableDeclaration","scope":896,"src":"1774:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1774:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":894,"initialValue":{"id":893,"name":"LAYOUT_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"1793:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1774:38:12"},{"AST":{"nativeSrc":"1831:42:12","nodeType":"YulBlock","src":"1831:42:12","statements":[{"nativeSrc":"1845:18:12","nodeType":"YulAssignment","src":"1845:18:12","value":{"name":"position","nativeSrc":"1855:8:12","nodeType":"YulIdentifier","src":"1855:8:12"},"variableNames":[{"name":"s.slot","nativeSrc":"1845:6:12","nodeType":"YulIdentifier","src":"1845:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":892,"isOffset":false,"isSlot":false,"src":"1855:8:12","valueSize":1},{"declaration":889,"isOffset":false,"isSlot":true,"src":"1845:6:12","suffix":"slot","valueSize":1}],"id":895,"nodeType":"InlineAssembly","src":"1822:51:12"}]},"id":897,"implemented":true,"kind":"function","modifiers":[],"name":"layout","nameLocation":"1714:6:12","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"1720:2:12"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"s","nameLocation":"1761:1:12","nodeType":"VariableDeclaration","scope":897,"src":"1746:16:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"},"typeName":{"id":888,"nodeType":"UserDefinedTypeName","pathNode":{"id":887,"name":"Layout","nameLocations":["1746:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"1746:6:12"},"referencedDeclaration":808,"src":"1746:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$808_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}},"visibility":"internal"}],"src":"1745:18:12"},"scope":898,"src":"1705:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":899,"src":"189:1692:12","usedErrors":[],"usedEvents":[]}],"src":"32:1850:12"},"id":12},"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol","exportedSymbols":{"InitializationPhaseAlreadyReached":[907]},"id":908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":900,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:13"},{"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"58:179:13","text":"@notice Emitted when trying to set a phase value that has already been reached.\n @param currentPhase The current phase.\n @param newPhase The new phase trying to be set."},"errorSelector":"bf0c18ec","id":907,"name":"InitializationPhaseAlreadyReached","nameLocation":"243:33:13","nodeType":"ErrorDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"currentPhase","nameLocation":"285:12:13","nodeType":"VariableDeclaration","scope":907,"src":"277:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"newPhase","nameLocation":"307:8:13","nodeType":"VariableDeclaration","scope":907,"src":"299:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:40:13"},"src":"237:80:13"}],"src":"32:286:13"},"id":13},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol","exportedSymbols":{"InitializationPhaseAlreadyReached":[907],"ProxyInitialization":[954],"StorageSlot":[2146]},"id":955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":909,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol","file":"./../errors/ProxyInitializationErrors.sol","id":911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":955,"sourceUnit":908,"src":"58:92:14","symbolAliases":[{"foreign":{"id":910,"name":"InitializationPhaseAlreadyReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"66:33:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"@openzeppelin/contracts/utils/StorageSlot.sol","id":913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":955,"sourceUnit":2147,"src":"151:74:14","symbolAliases":[{"foreign":{"id":912,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"159:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ProxyInitialization","contractDependencies":[],"contractKind":"library","documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"227:92:14","text":"@notice Multiple calls protection for storage-modifying proxy initialization functions."},"fullyImplemented":true,"id":954,"linearizedBaseContracts":[954],"name":"ProxyInitialization","nameLocation":"327:19:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":952,"nodeType":"Block","src":"735:294:14","statements":[{"assignments":[926],"declarations":[{"constant":false,"id":926,"mutability":"mutable","name":"currentVersion","nameLocation":"777:14:14","nodeType":"VariableDeclaration","scope":952,"src":"745:46:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":925,"nodeType":"UserDefinedTypeName","pathNode":{"id":924,"name":"StorageSlot.Uint256Slot","nameLocations":["745:11:14","757:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2101,"src":"745:23:14"},"referencedDeclaration":2101,"src":"745:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"id":931,"initialValue":{"arguments":[{"id":929,"name":"storageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"821:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":927,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"794:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2146_$","typeString":"type(library StorageSlot)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"806:14:14","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":2145,"src":"794:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2101_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"794:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"745:88:14"},{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"currentPhase","nameLocation":"851:12:14","nodeType":"VariableDeclaration","scope":952,"src":"843:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":936,"initialValue":{"expression":{"id":934,"name":"currentVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"866:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"881:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"866:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"843:43:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"900:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":938,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"916:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"900:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"IfStatement","src":"896:88:14","trueBody":{"errorCall":{"arguments":[{"id":941,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"964:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":942,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":940,"name":"InitializationPhaseAlreadyReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"930:33:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"923:61:14"}},{"expression":{"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":946,"name":"currentVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"994:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1009:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"994:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":949,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"1017:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"994:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":951,"nodeType":"ExpressionStatement","src":"994:28:14"}]},"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"353:314:14","text":"@notice Sets the initialization phase during a storage-modifying proxy initialization function.\n @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\n @param storageSlot the storage slot where `phase` is stored.\n @param phase the initialization phase."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"setPhase","nameLocation":"681:8:14","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"storageSlot","nameLocation":"698:11:14","nodeType":"VariableDeclaration","scope":953,"src":"690:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"phase","nameLocation":"719:5:14","nodeType":"VariableDeclaration","scope":953,"src":"711:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"689:36:14"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"735:0:14"},"scope":954,"src":"672:357:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":955,"src":"319:712:14","usedErrors":[],"usedEvents":[]}],"src":"32:1000:14"},"id":14},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[975]},"id":976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"132:133:15","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":975,"linearizedBaseContracts":[975],"name":"IERC1967Upgradeable","nameLocation":"276:19:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"302:68:15","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":962,"name":"Upgraded","nameLocation":"381:8:15","nodeType":"EventDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:15","nodeType":"VariableDeclaration","scope":962,"src":"390:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:15"},"src":"375:47:15"},{"anonymous":false,"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"428:67:15","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":969,"name":"AdminChanged","nameLocation":"506:12:15","nodeType":"EventDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:15","nodeType":"VariableDeclaration","scope":969,"src":"519:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:15","nodeType":"VariableDeclaration","scope":969,"src":"542:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:15"},"src":"500:60:15"},{"anonymous":false,"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"566:59:15","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":974,"name":"BeaconUpgraded","nameLocation":"636:14:15","nodeType":"EventDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:15","nodeType":"VariableDeclaration","scope":974,"src":"651:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:15"},"src":"630:45:15"}],"scope":976,"src":"266:411:15","usedErrors":[],"usedEvents":[962,969,974]}],"src":"107:571:15"},"id":15},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[985]},"id":986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":977,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"138:203:16","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":985,"linearizedBaseContracts":[985],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"387:438:16","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":984,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:16","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"852:2:16"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"878:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:16"},"scope":985,"src":"830:57:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":986,"src":"342:547:16","usedErrors":[],"usedEvents":[]}],"src":"113:777:16"},"id":16},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1954],"ERC1967UpgradeUpgradeable":[1309],"IBeaconUpgradeable":[1319],"IERC1822ProxiableUpgradeable":[985],"IERC1967Upgradeable":[975],"Initializable":[1488],"StorageSlotUpgradeable":[2064]},"id":1310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":987,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":1320,"src":"141:42:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":976,"src":"184:50:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":986,"src":"235:56:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":1955,"src":"292:44:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":2065,"src":"337:48:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":1489,"src":"386:36:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":995,"name":"Initializable","nameLocations":["656:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":1488,"src":"656:13:17"},"id":996,"nodeType":"InheritanceSpecifier","src":"656:13:17"},{"baseName":{"id":997,"name":"IERC1967Upgradeable","nameLocations":["671:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":975,"src":"671:19:17"},"id":998,"nodeType":"InheritanceSpecifier","src":"671:19:17"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"424:184:17","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":1309,"linearizedBaseContracts":[1309,975,1488],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":1003,"nodeType":"Block","src":"756:7:17","statements":[]},"id":1004,"implemented":true,"kind":"function","modifiers":[{"id":1001,"kind":"modifierInvocation","modifierName":{"id":1000,"name":"onlyInitializing","nameLocations":["739:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"739:16:17"},"nodeType":"ModifierInvocation","src":"739:16:17"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:17","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"727:2:17"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"756:0:17"},"scope":1309,"src":"697:66:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"838:7:17","statements":[]},"id":1010,"implemented":true,"kind":"function","modifiers":[{"id":1007,"kind":"modifierInvocation","modifierName":{"id":1006,"name":"onlyInitializing","nameLocations":["821:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"821:16:17"},"nodeType":"ModifierInvocation","src":"821:16:17"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:17","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"809:2:17"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"838:0:17"},"scope":1309,"src":"769:76:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":1013,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:17","nodeType":"VariableDeclaration","scope":1309,"src":"929:108:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:17","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"1044:214:17","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":1017,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:17","nodeType":"VariableDeclaration","scope":1309,"src":"1263:115:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:17","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":1029,"nodeType":"Block","src":"1519:89:17","statements":[{"expression":{"expression":{"arguments":[{"id":1025,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1574:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1023,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1536:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"1536:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1960_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"1536:65:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1022,"id":1028,"nodeType":"Return","src":"1529:72:17"}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"1385:67:17","text":" @dev Returns the current implementation address."},"id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:17","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"1484:2:17"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1030,"src":"1510:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:17"},"scope":1309,"src":"1457:151:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"1762:218:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":1039,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1810:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1037,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"1780:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1954_$","typeString":"type(library AddressUpgradeable)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:17","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1642,"src":"1780:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":1036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"1772:106:17"},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1926:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1888:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"1888:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1960_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"1888:65:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1956:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"1888:85:17"}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1614:80:17","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:17","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:17","nodeType":"VariableDeclaration","scope":1054,"src":"1727:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:17"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"1762:0:17"},"scope":1309,"src":"1699:281:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1068,"nodeType":"Block","src":"2142:96:17","statements":[{"expression":{"arguments":[{"id":1061,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2171:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2152:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"2152:37:17"},{"eventCall":{"arguments":[{"id":1065,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2213:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1064,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2204:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"EmitStatement","src":"2199:32:17"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"1986:95:17","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:17","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:17","nodeType":"VariableDeclaration","scope":1069,"src":"2106:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:17"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[],"src":"2142:0:17"},"scope":1309,"src":"2086:152:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"2470:178:17","statements":[{"expression":{"arguments":[{"id":1080,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2491:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1079,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2480:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"2480:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1083,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2523:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:17","memberName":"length","nodeType":"MemberAccess","src":"2523:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1087,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2542:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"2519:123:17","trueBody":{"id":1096,"nodeType":"Block","src":"2553:89:17","statements":[{"expression":{"arguments":[{"id":1092,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2607:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1093,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2626:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1089,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"2567:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1954_$","typeString":"type(library AddressUpgradeable)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:17","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1841,"src":"2567:39:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1095,"nodeType":"ExpressionStatement","src":"2567:64:17"}]}}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"2244:123:17","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:17","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:17","nodeType":"VariableDeclaration","scope":1099,"src":"2399:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"data","nameLocation":"2439:4:17","nodeType":"VariableDeclaration","scope":1099,"src":"2426:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1073,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:17","nodeType":"VariableDeclaration","scope":1099,"src":"2445:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:17"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"2470:0:17"},"scope":1309,"src":"2372:276:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"2922:842:17","statements":[{"condition":{"expression":{"arguments":[{"id":1111,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"3274:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1109,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"3236:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:17","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1997,"src":"3236:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1963_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1963_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1962,"src":"3236:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1149,"nodeType":"Block","src":"3365:393:17","statements":[{"clauses":[{"block":{"id":1134,"nodeType":"Block","src":"3470:115:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3496:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1129,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"3504:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":1127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"3488:82:17"}]},"errorName":"","id":1135,"nodeType":"TryCatchClause","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"slot","nameLocation":"3464:4:17","nodeType":"VariableDeclaration","scope":1135,"src":"3456:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:17"},"src":"3447:138:17"},{"block":{"id":1140,"nodeType":"Block","src":"3592:89:17","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":1136,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"3610:56:17"}]},"errorName":"","id":1141,"nodeType":"TryCatchClause","src":"3586:95:17"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1120,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3412:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1119,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3383:28:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$985_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$985","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:17","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":984,"src":"3383:61:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:17","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1142,"nodeType":"TryStatement","src":"3379:302:17"},{"expression":{"arguments":[{"id":1144,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3712:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1145,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3731:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1146,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"3737:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1143,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"3694:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"ExpressionStatement","src":"3694:53:17"}]},"id":1150,"nodeType":"IfStatement","src":"3232:526:17","trueBody":{"id":1118,"nodeType":"Block","src":"3297:62:17","statements":[{"expression":{"arguments":[{"id":1115,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"3330:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1114,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"3311:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"3311:37:17"}]}}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"2654:161:17","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:17","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:17","nodeType":"VariableDeclaration","scope":1152,"src":"2851:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"data","nameLocation":"2891:4:17","nodeType":"VariableDeclaration","scope":1152,"src":"2878:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:17","nodeType":"VariableDeclaration","scope":1152,"src":"2897:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1105,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:17"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[],"src":"2922:0:17"},"scope":1309,"src":"2820:944:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"3770:189:17","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":1156,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:17","nodeType":"VariableDeclaration","scope":1309,"src":"3964:106:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:17","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1168,"nodeType":"Block","src":"4185:80:17","statements":[{"expression":{"expression":{"arguments":[{"id":1164,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"4240:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1162,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"4202:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"4202:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1960_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"4202:56:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1161,"id":1167,"nodeType":"Return","src":"4195:63:17"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"4077:50:17","text":" @dev Returns the current admin."},"id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:17","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"4150:2:17"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"4176:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:17"},"scope":1309,"src":"4132:133:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"4392:167:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1176,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"4410:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:17","typeDescriptions":{}}},"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":1175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1184,"nodeType":"ExpressionStatement","src":"4402:73:17"},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1188,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"4523:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1185,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"4485:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"4485:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1960_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"4485:56:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1191,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"4544:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1193,"nodeType":"ExpressionStatement","src":"4485:67:17"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"4271:71:17","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:17","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:17","nodeType":"VariableDeclaration","scope":1195,"src":"4366:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:17"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"4392:0:17"},"scope":1309,"src":"4347:212:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1211,"nodeType":"Block","src":"4719:86:17","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1202,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4747:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1204,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4760:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"4734:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"EmitStatement","src":"4729:40:17"},{"expression":{"arguments":[{"id":1208,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4789:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1207,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"4779:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"ExpressionStatement","src":"4779:19:17"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"4565:100:17","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:17","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:17","nodeType":"VariableDeclaration","scope":1212,"src":"4692:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:17"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"4719:0:17"},"scope":1309,"src":"4670:135:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"4811:232:17","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":1216,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:17","nodeType":"VariableDeclaration","scope":1309,"src":"5048:107:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:17","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"5272:81:17","statements":[{"expression":{"expression":{"arguments":[{"id":1224,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"5327:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1222,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5289:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"5289:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1960_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"5289:57:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1221,"id":1227,"nodeType":"Return","src":"5282:64:17"}]},"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"5162:51:17","text":" @dev Returns the current beacon."},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:17","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"5237:2:17"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"5263:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:17"},"scope":1309,"src":"5218:135:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"5482:368:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":1238,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5530:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1236,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"5500:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1954_$","typeString":"type(library AddressUpgradeable)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:17","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1642,"src":"5500:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":1235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"5492:90:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1247,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5662:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1246,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"5643:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$1319_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$1319","typeString":"contract IBeaconUpgradeable"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:17","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"5643:44:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1244,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"5613:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1954_$","typeString":"type(library AddressUpgradeable)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:17","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1642,"src":"5613:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":1243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"ExpressionStatement","src":"5592:172:17"},{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1258,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"5812:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1255,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5774:22:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2064_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:17","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"5774:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1960_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"5774:57:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1261,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5834:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1263,"nodeType":"ExpressionStatement","src":"5774:69:17"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"5359:71:17","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:17","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:17","nodeType":"VariableDeclaration","scope":1265,"src":"5455:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:17"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[],"src":"5482:0:17"},"scope":1309,"src":"5435:415:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1302,"nodeType":"Block","src":"6249:239:17","statements":[{"expression":{"arguments":[{"id":1276,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6270:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1275,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6259:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"6259:21:17"},{"eventCall":{"arguments":[{"id":1280,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6310:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1279,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6295:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"EmitStatement","src":"6290:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1283,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6334:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:17","memberName":"length","nodeType":"MemberAccess","src":"6334:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1287,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"6353:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1301,"nodeType":"IfStatement","src":"6330:152:17","trueBody":{"id":1300,"nodeType":"Block","src":"6364:118:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1293,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6437:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1292,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6418:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$1319_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$1319","typeString":"contract IBeaconUpgradeable"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:17","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"6418:44:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1297,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"6466:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1289,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6378:18:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1954_$","typeString":"type(library AddressUpgradeable)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:17","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1841,"src":"6378:39:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1299,"nodeType":"ExpressionStatement","src":"6378:93:17"}]}}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"5856:292:17","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:17","nodeType":"FunctionDefinition","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:17","nodeType":"VariableDeclaration","scope":1303,"src":"6186:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"data","nameLocation":"6218:4:17","nodeType":"VariableDeclaration","scope":1303,"src":"6205:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1269,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:17","nodeType":"VariableDeclaration","scope":1303,"src":"6224:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1271,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:17"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[],"src":"6249:0:17"},"scope":1309,"src":"6153:335:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"6494:254:17","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1308,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:17","nodeType":"VariableDeclaration","scope":1309,"src":"6753:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1307,"length":{"hexValue":"3530","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1310,"src":"609:6172:17","usedErrors":[],"usedEvents":[962,969,974,1334]}],"src":"116:6666:17"},"id":17},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[1319]},"id":1320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1311,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"118:79:18","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1319,"linearizedBaseContracts":[1319],"name":"IBeaconUpgradeable","nameLocation":"208:18:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"233:162:18","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1318,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:18","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"423:2:18"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"449:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:18"},"scope":1319,"src":"400:58:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1320,"src":"198:262:18","usedErrors":[],"usedEvents":[]}],"src":"93:368:18"},"id":18},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1954],"Initializable":[1488]},"id":1489,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1321,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1489,"sourceUnit":1955,"src":"138:44:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"184:2209:19","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1488,"linearizedBaseContracts":[1488],"name":"Initializable","nameLocation":"2412:13:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"2432:109:19","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":1326,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:19","nodeType":"VariableDeclaration","scope":1488,"src":"2546:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1325,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"2579:91:19","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1329,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:19","nodeType":"VariableDeclaration","scope":1488,"src":"2675:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1328,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"2708:90:19","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":1334,"name":"Initialized","nameLocation":"2809:11:19","nodeType":"EventDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:19","nodeType":"VariableDeclaration","scope":1334,"src":"2821:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1331,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:19"},"src":"2803:33:19"},{"body":{"id":1389,"nodeType":"Block","src":"3269:483:19","statements":[{"assignments":[1338],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:19","nodeType":"VariableDeclaration","scope":1389,"src":"3279:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1337,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1341,"initialValue":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:19","subExpression":{"id":1339,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"3302:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3347:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3365:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:19","subExpression":{"arguments":[{"arguments":[{"id":1353,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1488","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1488","typeString":"contract Initializable"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:19","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1349,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"3388:18:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1954_$","typeString":"type(library AddressUpgradeable)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:19","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1642,"src":"3388:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3436:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"3325:201:19"},{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1366,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3536:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1369,"nodeType":"ExpressionStatement","src":"3536:16:19"},{"condition":{"id":1370,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3566:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1376,"nodeType":"IfStatement","src":"3562:65:19","trueBody":{"id":1375,"nodeType":"Block","src":"3582:45:19","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"3596:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1374,"nodeType":"ExpressionStatement","src":"3596:20:19"}]}},{"id":1377,"nodeType":"PlaceholderStatement","src":"3636:1:19"},{"condition":{"id":1378,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3651:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"3647:99:19","trueBody":{"id":1387,"nodeType":"Block","src":"3667:79:19","statements":[{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"3681:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1382,"nodeType":"ExpressionStatement","src":"3681:21:19"},{"eventCall":{"arguments":[{"hexValue":"31","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1383,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3721:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"EmitStatement","src":"3716:19:19"}]}}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"2842:399:19","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":1390,"name":"initializer","nameLocation":"3255:11:19","nodeType":"ModifierDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"3266:2:19"},"src":"3246:506:19","virtual":false,"visibility":"internal"},{"body":{"id":1422,"nodeType":"Block","src":"4863:255:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:19","subExpression":{"id":1396,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"4882:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4899:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1399,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"4914:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"ExpressionStatement","src":"4873:99:19"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1405,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4982:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1406,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"4997:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1408,"nodeType":"ExpressionStatement","src":"4982:22:19"},{"expression":{"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1409,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5014:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1412,"nodeType":"ExpressionStatement","src":"5014:20:19"},{"id":1413,"nodeType":"PlaceholderStatement","src":"5044:1:19"},{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1414,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5055:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1417,"nodeType":"ExpressionStatement","src":"5055:21:19"},{"eventCall":{"arguments":[{"id":1419,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"5103:7:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1418,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5091:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"EmitStatement","src":"5086:25:19"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"3758:1062:19","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1423,"name":"reinitializer","nameLocation":"4834:13:19","nodeType":"ModifierDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"version","nameLocation":"4854:7:19","nodeType":"VariableDeclaration","scope":1423,"src":"4848:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1392,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:19"},"src":"4825:293:19","virtual":false,"visibility":"internal"},{"body":{"id":1432,"nodeType":"Block","src":"5356:97:19","statements":[{"expression":{"arguments":[{"id":1427,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5374:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"5366:69:19"},{"id":1431,"nodeType":"PlaceholderStatement","src":"5445:1:19"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"5124:199:19","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1433,"name":"onlyInitializing","nameLocation":"5337:16:19","nodeType":"ModifierDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"5353:2:19"},"src":"5328:125:19","virtual":false,"visibility":"internal"},{"body":{"id":1468,"nodeType":"Block","src":"5988:231:19","statements":[{"expression":{"arguments":[{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:19","subExpression":{"id":1438,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6007:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"5998:66:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6078:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1445,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1444,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:19","memberName":"max","nodeType":"MemberAccess","src":"6094:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"IfStatement","src":"6074:139:19","trueBody":{"id":1466,"nodeType":"Block","src":"6111:102:19","statements":[{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6125:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1452,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:19","memberName":"max","nodeType":"MemberAccess","src":"6140:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1457,"nodeType":"ExpressionStatement","src":"6125:30:19"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1460,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:19","memberName":"max","nodeType":"MemberAccess","src":"6186:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1458,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"6174:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"EmitStatement","src":"6169:33:19"}]}}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"5459:475:19","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:19","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[],"src":"5968:2:19"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"5988:0:19"},"scope":1488,"src":"5939:280:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"6393:36:19","statements":[{"expression":{"id":1475,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6410:12:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1474,"id":1476,"nodeType":"Return","src":"6403:19:19"}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"6225:99:19","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:19","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[],"src":"6360:2:19"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"6386:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1472,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:19"},"scope":1488,"src":"6329:100:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"6601:37:19","statements":[{"expression":{"id":1484,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6618:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1483,"id":1485,"nodeType":"Return","src":"6611:20:19"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"6435:105:19","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:19","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"6569:2:19"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"6595:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1481,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:19"},"scope":1488,"src":"6545:93:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1489,"src":"2394:4246:19","usedErrors":[],"usedEvents":[1334]}],"src":"113:6528:19"},"id":19},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1954],"ERC1967UpgradeUpgradeable":[1309],"IBeaconUpgradeable":[1319],"IERC1822ProxiableUpgradeable":[985],"IERC1967Upgradeable":[975],"Initializable":[1488],"StorageSlotUpgradeable":[2064],"UUPSUpgradeable":[1624]},"id":1625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1490,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":1491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1625,"sourceUnit":986,"src":"140:56:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":1492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1625,"sourceUnit":1310,"src":"197:50:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":1493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1625,"sourceUnit":1489,"src":"248:29:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1495,"name":"Initializable","nameLocations":["965:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1488,"src":"965:13:20"},"id":1496,"nodeType":"InheritanceSpecifier","src":"965:13:20"},{"baseName":{"id":1497,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:20"],"nodeType":"IdentifierPath","referencedDeclaration":985,"src":"980:28:20"},"id":1498,"nodeType":"InheritanceSpecifier","src":"980:28:20"},{"baseName":{"id":1499,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:20"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"1010:25:20"},"id":1500,"nodeType":"InheritanceSpecifier","src":"1010:25:20"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"279:648:20","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1624,"linearizedBaseContracts":[1624,1309,975,985,1488],"name":"UUPSUpgradeable","nameLocation":"946:15:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":1505,"nodeType":"Block","src":"1102:7:20","statements":[]},"id":1506,"implemented":true,"kind":"function","modifiers":[{"id":1503,"kind":"modifierInvocation","modifierName":{"id":1502,"name":"onlyInitializing","nameLocations":["1085:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"1085:16:20"},"nodeType":"ModifierInvocation","src":"1085:16:20"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:20","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"1073:2:20"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"1102:0:20"},"scope":1624,"src":"1042:67:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"1185:7:20","statements":[]},"id":1512,"implemented":true,"kind":"function","modifiers":[{"id":1509,"kind":"modifierInvocation","modifierName":{"id":1508,"name":"onlyInitializing","nameLocations":["1168:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1433,"src":"1168:16:20"},"nodeType":"ModifierInvocation","src":"1168:16:20"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:20","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"1156:2:20"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"1185:0:20"},"scope":1624,"src":"1115:77:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"1197:87:20","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":1519,"mutability":"immutable","name":"__self","nameLocation":"1315:6:20","nodeType":"VariableDeclaration","scope":1624,"src":"1289:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":1517,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1624","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1624","typeString":"contract UUPSUpgradeable"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:20","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1541,"nodeType":"Block","src":"1863:205:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1525,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1624","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1624","typeString":"contract UUPSUpgradeable"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:20","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1527,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1898:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":1522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"ExpressionStatement","src":"1873:80:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1533,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"1971:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1535,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1995:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":1532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"1963:87:20"},{"id":1540,"nodeType":"PlaceholderStatement","src":"2060:1:20"}]},"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"1344:493:20","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":1542,"name":"onlyProxy","nameLocation":"1851:9:20","nodeType":"ModifierDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"1860:2:20"},"src":"1842:226:20","virtual":false,"visibility":"internal"},{"body":{"id":1556,"nodeType":"Block","src":"2298:120:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1548,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1624","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1624","typeString":"contract UUPSUpgradeable"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:20","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1550,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"2333:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":1545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1554,"nodeType":"ExpressionStatement","src":"2308:92:20"},{"id":1555,"nodeType":"PlaceholderStatement","src":"2410:1:20"}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"2074:195:20","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1557,"name":"notDelegated","nameLocation":"2283:12:20","nodeType":"ModifierDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"2295:2:20"},"src":"2274:144:20","virtual":false,"visibility":"internal"},{"baseFunctions":[984],"body":{"id":1568,"nodeType":"Block","src":"3093:44:20","statements":[{"expression":{"id":1566,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"3110:20:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1565,"id":1567,"nodeType":"Return","src":"3103:27:20"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"2424:577:20","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1569,"implemented":true,"kind":"function","modifiers":[{"id":1562,"kind":"modifierInvocation","modifierName":{"id":1561,"name":"notDelegated","nameLocations":["3062:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1557,"src":"3062:12:20"},"nodeType":"ModifierInvocation","src":"3062:12:20"}],"name":"proxiableUUID","nameLocation":"3015:13:20","nodeType":"FunctionDefinition","overrides":{"id":1560,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:20"},"parameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"3028:2:20"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"3084:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:20"},"scope":1624,"src":"3006:131:20","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1590,"nodeType":"Block","src":"3458:124:20","statements":[{"expression":{"arguments":[{"id":1578,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3486:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1577,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"3468:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"ExpressionStatement","src":"3468:36:20"},{"expression":{"arguments":[{"id":1582,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"3536:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1581,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3514:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"ExpressionStatement","src":"3514:61:20"}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"3143:239:20","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":1591,"implemented":true,"kind":"function","modifiers":[{"id":1575,"kind":"modifierInvocation","modifierName":{"id":1574,"name":"onlyProxy","nameLocations":["3448:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"3448:9:20"},"nodeType":"ModifierInvocation","src":"3448:9:20"}],"name":"upgradeTo","nameLocation":"3396:9:20","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:20","nodeType":"VariableDeclaration","scope":1591,"src":"3406:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:20"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"3458:0:20"},"scope":1624,"src":"3387:195:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1611,"nodeType":"Block","src":"4006:115:20","statements":[{"expression":{"arguments":[{"id":1602,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"4034:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1601,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"4016:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"4016:36:20"},{"expression":{"arguments":[{"id":1606,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"4084:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1607,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"4103:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1605,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"4062:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1610,"nodeType":"ExpressionStatement","src":"4062:52:20"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"3588:308:20","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":1612,"implemented":true,"kind":"function","modifiers":[{"id":1599,"kind":"modifierInvocation","modifierName":{"id":1598,"name":"onlyProxy","nameLocations":["3996:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":1542,"src":"3996:9:20"},"nodeType":"ModifierInvocation","src":"3996:9:20"}],"name":"upgradeToAndCall","nameLocation":"3910:16:20","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:20","nodeType":"VariableDeclaration","scope":1612,"src":"3927:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"data","nameLocation":"3967:4:20","nodeType":"VariableDeclaration","scope":1612,"src":"3954:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1595,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:20"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[],"src":"4006:0:20"},"scope":1624,"src":"3901:220:20","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"4127:397:20","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1618,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:20","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:20","nodeType":"VariableDeclaration","scope":1618,"src":"4556:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:20"},"returnParameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"4599:0:20"},"scope":1624,"src":"4529:71:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"4606:254:20","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1623,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:20","nodeType":"VariableDeclaration","scope":1624,"src":"4865:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1622,"length":{"hexValue":"3530","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1625,"src":"928:3965:20","usedErrors":[],"usedEvents":[962,969,974,1334]}],"src":"115:4779:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1954]},"id":1955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1626,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"126:67:21","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1954,"linearizedBaseContracts":[1954],"name":"AddressUpgradeable","nameLocation":"202:18:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":1641,"nodeType":"Block","src":"1489:254:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1713:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:21","memberName":"code","nodeType":"MemberAccess","src":"1713:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:21","memberName":"length","nodeType":"MemberAccess","src":"1713:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1634,"id":1640,"nodeType":"Return","src":"1706:30:21"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"227:1191:21","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1642,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:21","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"account","nameLocation":"1451:7:21","nodeType":"VariableDeclaration","scope":1642,"src":"1443:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:21"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1642,"src":"1483:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1632,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:21"},"scope":1954,"src":"1423:320:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"2729:241:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1954","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1954","typeString":"library AddressUpgradeable"}],"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:21","typeDescriptions":{}}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:21","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2772:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"2739:73:21"},{"assignments":[1662,null],"declarations":[{"constant":false,"id":1662,"mutability":"mutable","name":"success","nameLocation":"2829:7:21","nodeType":"VariableDeclaration","scope":1675,"src":"2824:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1661,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1669,"initialValue":{"arguments":[{"hexValue":"","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1663,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"2842:9:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:21","memberName":"call","nodeType":"MemberAccess","src":"2842:14:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"2864:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:21"},{"expression":{"arguments":[{"id":1671,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"2893:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"ExpressionStatement","src":"2885:78:21"}]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"1749:904:21","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:21","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:21","nodeType":"VariableDeclaration","scope":1676,"src":"2677:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"amount","nameLocation":"2712:6:21","nodeType":"VariableDeclaration","scope":1676,"src":"2704:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:21"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[],"src":"2729:0:21"},"scope":1954,"src":"2658:312:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"3801:96:21","statements":[{"expression":{"arguments":[{"id":1687,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"3840:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"3848:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1686,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1734,1778],"referencedDeclaration":1778,"src":"3818:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1685,"id":1692,"nodeType":"Return","src":"3811:79:21"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"2976:731:21","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:21","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"target","nameLocation":"3742:6:21","nodeType":"VariableDeclaration","scope":1694,"src":"3734:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"data","nameLocation":"3763:4:21","nodeType":"VariableDeclaration","scope":1694,"src":"3750:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:21"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"3787:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:21"},"scope":1954,"src":"3712:185:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1713,"nodeType":"Block","src":"4266:76:21","statements":[{"expression":{"arguments":[{"id":1707,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"4305:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"4313:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1710,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"4322:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1706,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1734,1778],"referencedDeclaration":1778,"src":"4283:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1705,"id":1712,"nodeType":"Return","src":"4276:59:21"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"3903:211:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:21","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"target","nameLocation":"4158:6:21","nodeType":"VariableDeclaration","scope":1714,"src":"4150:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"data","nameLocation":"4187:4:21","nodeType":"VariableDeclaration","scope":1714,"src":"4174:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:21","nodeType":"VariableDeclaration","scope":1714,"src":"4201:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1700,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:21"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"4252:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:21"},"scope":1954,"src":"4119:223:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1733,"nodeType":"Block","src":"4817:111:21","statements":[{"expression":{"arguments":[{"id":1727,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"4856:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1728,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"4864:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1726,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1734,1778],"referencedDeclaration":1778,"src":"4834:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1725,"id":1732,"nodeType":"Return","src":"4827:94:21"}]},"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"4348:351:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:21","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"target","nameLocation":"4743:6:21","nodeType":"VariableDeclaration","scope":1734,"src":"4735:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"data","nameLocation":"4764:4:21","nodeType":"VariableDeclaration","scope":1734,"src":"4751:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1718,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"value","nameLocation":"4778:5:21","nodeType":"VariableDeclaration","scope":1734,"src":"4770:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:21"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"4803:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:21"},"scope":1954,"src":"4704:224:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"5355:267:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1751,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1954","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1954","typeString":"library AddressUpgradeable"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:21","typeDescriptions":{}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:21","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5398:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"5365:81:21"},{"assignments":[1760,1762],"declarations":[{"constant":false,"id":1760,"mutability":"mutable","name":"success","nameLocation":"5462:7:21","nodeType":"VariableDeclaration","scope":1777,"src":"5457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1759,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:21","nodeType":"VariableDeclaration","scope":1777,"src":"5471:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1761,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1769,"initialValue":{"arguments":[{"id":1767,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5524:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1763,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5498:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:21","memberName":"call","nodeType":"MemberAccess","src":"5498:11:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5517:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:21"},{"expression":{"arguments":[{"id":1771,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5573:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1772,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5581:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1773,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5590:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1774,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"5602:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1770,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5546:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1747,"id":1776,"nodeType":"Return","src":"5539:76:21"}]},"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"4934:237:21","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:21","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"target","nameLocation":"5224:6:21","nodeType":"VariableDeclaration","scope":1778,"src":"5216:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"data","nameLocation":"5253:4:21","nodeType":"VariableDeclaration","scope":1778,"src":"5240:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1738,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"value","nameLocation":"5275:5:21","nodeType":"VariableDeclaration","scope":1778,"src":"5267:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:21","nodeType":"VariableDeclaration","scope":1778,"src":"5290:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1742,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:21"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1778,"src":"5341:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1745,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:21"},"scope":1954,"src":"5176:446:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"5899:97:21","statements":[{"expression":{"arguments":[{"id":1789,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5935:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5943:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1788,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1795,1824],"referencedDeclaration":1824,"src":"5916:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1787,"id":1793,"nodeType":"Return","src":"5909:80:21"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"5628:166:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:21","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"target","nameLocation":"5835:6:21","nodeType":"VariableDeclaration","scope":1795,"src":"5827:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"data","nameLocation":"5856:4:21","nodeType":"VariableDeclaration","scope":1795,"src":"5843:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:21"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"5885:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1785,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:21"},"scope":1954,"src":"5799:197:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1823,"nodeType":"Block","src":"6338:168:21","statements":[{"assignments":[1808,1810],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"success","nameLocation":"6354:7:21","nodeType":"VariableDeclaration","scope":1823,"src":"6349:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1807,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:21","nodeType":"VariableDeclaration","scope":1823,"src":"6363:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1809,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1815,"initialValue":{"arguments":[{"id":1813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6408:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1811,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"6390:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:21","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:21","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:21"},{"expression":{"arguments":[{"id":1817,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"6457:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1818,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6465:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1819,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"6474:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1820,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6486:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1816,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"6430:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1806,"id":1822,"nodeType":"Return","src":"6423:76:21"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"6002:173:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:21","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"target","nameLocation":"6225:6:21","nodeType":"VariableDeclaration","scope":1824,"src":"6217:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"data","nameLocation":"6254:4:21","nodeType":"VariableDeclaration","scope":1824,"src":"6241:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:21","nodeType":"VariableDeclaration","scope":1824,"src":"6268:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1801,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:21"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"6324:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:21"},"scope":1954,"src":"6180:326:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1840,"nodeType":"Block","src":"6782:101:21","statements":[{"expression":{"arguments":[{"id":1835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6820:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"6828:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1834,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1841,1870],"referencedDeclaration":1870,"src":"6799:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1833,"id":1839,"nodeType":"Return","src":"6792:84:21"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"6512:168:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:21","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"target","nameLocation":"6723:6:21","nodeType":"VariableDeclaration","scope":1841,"src":"6715:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"data","nameLocation":"6744:4:21","nodeType":"VariableDeclaration","scope":1841,"src":"6731:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1828,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:21"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"6768:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1831,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:21"},"scope":1954,"src":"6685:198:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"7224:170:21","statements":[{"assignments":[1854,1856],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"success","nameLocation":"7240:7:21","nodeType":"VariableDeclaration","scope":1869,"src":"7235:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1853,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:21","nodeType":"VariableDeclaration","scope":1869,"src":"7249:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1855,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1861,"initialValue":{"arguments":[{"id":1859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7296:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1857,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"7276:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:21","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:21","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:21"},{"expression":{"arguments":[{"id":1863,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"7345:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7353:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1865,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7362:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1866,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"7374:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1862,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7318:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1852,"id":1868,"nodeType":"Return","src":"7311:76:21"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"6889:175:21","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:21","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"target","nameLocation":"7116:6:21","nodeType":"VariableDeclaration","scope":1870,"src":"7108:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"data","nameLocation":"7145:4:21","nodeType":"VariableDeclaration","scope":1870,"src":"7132:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1845,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:21","nodeType":"VariableDeclaration","scope":1870,"src":"7159:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1847,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:21"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1870,"src":"7210:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1850,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:21"},"scope":1954,"src":"7069:325:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1908,"nodeType":"Block","src":"7876:434:21","statements":[{"condition":{"id":1884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7890:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1906,"nodeType":"Block","src":"8246:58:21","statements":[{"expression":{"arguments":[{"id":1902,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8268:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1903,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"8280:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1901,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"8260:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1905,"nodeType":"ExpressionStatement","src":"8260:33:21"}]},"id":1907,"nodeType":"IfStatement","src":"7886:418:21","trueBody":{"id":1900,"nodeType":"Block","src":"7899:341:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1885,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7917:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:21","memberName":"length","nodeType":"MemberAccess","src":"7917:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1897,"nodeType":"IfStatement","src":"7913:286:21","trueBody":{"id":1896,"nodeType":"Block","src":"7941:258:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":1891,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"8143:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1890,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"8132:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"ExpressionStatement","src":"8124:60:21"}]}},{"expression":{"id":1898,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8219:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1883,"id":1899,"nodeType":"Return","src":"8212:17:21"}]}}]},"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"7400:277:21","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:21","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"target","nameLocation":"7735:6:21","nodeType":"VariableDeclaration","scope":1909,"src":"7727:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"success","nameLocation":"7756:7:21","nodeType":"VariableDeclaration","scope":1909,"src":"7751:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1874,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:21","nodeType":"VariableDeclaration","scope":1909,"src":"7773:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:21","nodeType":"VariableDeclaration","scope":1909,"src":"7806:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:21"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"7862:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:21"},"scope":1954,"src":"7682:628:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"8691:135:21","statements":[{"condition":{"id":1921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"8705:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1930,"nodeType":"Block","src":"8762:58:21","statements":[{"expression":{"arguments":[{"id":1926,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"8784:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1927,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"8796:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1925,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"8776:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1929,"nodeType":"ExpressionStatement","src":"8776:33:21"}]},"id":1931,"nodeType":"IfStatement","src":"8701:119:21","trueBody":{"id":1924,"nodeType":"Block","src":"8714:42:21","statements":[{"expression":{"id":1922,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"8735:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1920,"id":1923,"nodeType":"Return","src":"8728:17:21"}]}}]},"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"8316:210:21","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:21","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"8571:7:21","nodeType":"VariableDeclaration","scope":1933,"src":"8566:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:21","nodeType":"VariableDeclaration","scope":1933,"src":"8588:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:21","nodeType":"VariableDeclaration","scope":1933,"src":"8621:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:21"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"8677:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1918,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:21"},"scope":1954,"src":"8531:295:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1952,"nodeType":"Block","src":"8915:457:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1940,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"8991:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:21","memberName":"length","nodeType":"MemberAccess","src":"8991:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1950,"nodeType":"Block","src":"9321:45:21","statements":[{"expression":{"arguments":[{"id":1947,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"9342:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1946,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"9335:20:21"}]},"id":1951,"nodeType":"IfStatement","src":"8987:379:21","trueBody":{"id":1945,"nodeType":"Block","src":"9014:301:21","statements":[{"AST":{"nativeSrc":"9172:133:21","nodeType":"YulBlock","src":"9172:133:21","statements":[{"nativeSrc":"9190:40:21","nodeType":"YulVariableDeclaration","src":"9190:40:21","value":{"arguments":[{"name":"returndata","nativeSrc":"9219:10:21","nodeType":"YulIdentifier","src":"9219:10:21"}],"functionName":{"name":"mload","nativeSrc":"9213:5:21","nodeType":"YulIdentifier","src":"9213:5:21"},"nativeSrc":"9213:17:21","nodeType":"YulFunctionCall","src":"9213:17:21"},"variables":[{"name":"returndata_size","nativeSrc":"9194:15:21","nodeType":"YulTypedName","src":"9194:15:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9258:2:21","nodeType":"YulLiteral","src":"9258:2:21","type":"","value":"32"},{"name":"returndata","nativeSrc":"9262:10:21","nodeType":"YulIdentifier","src":"9262:10:21"}],"functionName":{"name":"add","nativeSrc":"9254:3:21","nodeType":"YulIdentifier","src":"9254:3:21"},"nativeSrc":"9254:19:21","nodeType":"YulFunctionCall","src":"9254:19:21"},{"name":"returndata_size","nativeSrc":"9275:15:21","nodeType":"YulIdentifier","src":"9275:15:21"}],"functionName":{"name":"revert","nativeSrc":"9247:6:21","nodeType":"YulIdentifier","src":"9247:6:21"},"nativeSrc":"9247:44:21","nodeType":"YulFunctionCall","src":"9247:44:21"},"nativeSrc":"9247:44:21","nodeType":"YulExpressionStatement","src":"9247:44:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1935,"isOffset":false,"isSlot":false,"src":"9219:10:21","valueSize":1},{"declaration":1935,"isOffset":false,"isSlot":false,"src":"9262:10:21","valueSize":1}],"id":1944,"nodeType":"InlineAssembly","src":"9163:142:21"}]}}]},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:21","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:21","nodeType":"VariableDeclaration","scope":1953,"src":"8849:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1934,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:21","nodeType":"VariableDeclaration","scope":1953,"src":"8874:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1936,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:21"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"8915:0:21"},"scope":1954,"src":"8832:540:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1955,"src":"194:9180:21","usedErrors":[],"usedEvents":[]}],"src":"101:9274:21"},"id":21},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[2064]},"id":2065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"218:1201:22","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2064,"linearizedBaseContracts":[2064],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1960,"members":[{"constant":false,"id":1959,"mutability":"mutable","name":"value","nameLocation":"1494:5:22","nodeType":"VariableDeclaration","scope":1960,"src":"1486:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:22","nodeType":"StructDefinition","scope":2064,"src":"1457:49:22","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1963,"members":[{"constant":false,"id":1962,"mutability":"mutable","name":"value","nameLocation":"1546:5:22","nodeType":"VariableDeclaration","scope":1963,"src":"1541:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1961,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:22","nodeType":"StructDefinition","scope":2064,"src":"1512:46:22","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1966,"members":[{"constant":false,"id":1965,"mutability":"mutable","name":"value","nameLocation":"1601:5:22","nodeType":"VariableDeclaration","scope":1966,"src":"1593:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:22","nodeType":"StructDefinition","scope":2064,"src":"1564:49:22","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1969,"members":[{"constant":false,"id":1968,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":1969,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:22","nodeType":"StructDefinition","scope":2064,"src":"1619:49:22","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1972,"members":[{"constant":false,"id":1971,"mutability":"mutable","name":"value","nameLocation":"1709:5:22","nodeType":"VariableDeclaration","scope":1972,"src":"1702:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:22","nodeType":"StructDefinition","scope":2064,"src":"1674:47:22","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1975,"members":[{"constant":false,"id":1974,"mutability":"mutable","name":"value","nameLocation":"1760:5:22","nodeType":"VariableDeclaration","scope":1975,"src":"1754:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1973,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:22","nodeType":"StructDefinition","scope":2064,"src":"1727:45:22","visibility":"public"},{"body":{"id":1985,"nodeType":"Block","src":"1954:106:22","statements":[{"AST":{"nativeSrc":"2016:38:22","nodeType":"YulBlock","src":"2016:38:22","statements":[{"nativeSrc":"2030:14:22","nodeType":"YulAssignment","src":"2030:14:22","value":{"name":"slot","nativeSrc":"2040:4:22","nodeType":"YulIdentifier","src":"2040:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2030:6:22","nodeType":"YulIdentifier","src":"2030:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1982,"isOffset":false,"isSlot":true,"src":"2030:6:22","suffix":"slot","valueSize":1},{"declaration":1978,"isOffset":false,"isSlot":false,"src":"2040:4:22","valueSize":1}],"id":1984,"nodeType":"InlineAssembly","src":"2007:47:22"}]},"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"1778:87:22","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:22","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"slot","nameLocation":"1902:4:22","nodeType":"VariableDeclaration","scope":1986,"src":"1894:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:22"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"r","nameLocation":"1951:1:22","nodeType":"VariableDeclaration","scope":1986,"src":"1931:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"AddressSlot","nameLocations":["1931:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1960,"src":"1931:11:22"},"referencedDeclaration":1960,"src":"1931:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1960_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:22"},"scope":2064,"src":"1870:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"2242:106:22","statements":[{"AST":{"nativeSrc":"2304:38:22","nodeType":"YulBlock","src":"2304:38:22","statements":[{"nativeSrc":"2318:14:22","nodeType":"YulAssignment","src":"2318:14:22","value":{"name":"slot","nativeSrc":"2328:4:22","nodeType":"YulIdentifier","src":"2328:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2318:6:22","nodeType":"YulIdentifier","src":"2318:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1993,"isOffset":false,"isSlot":true,"src":"2318:6:22","suffix":"slot","valueSize":1},{"declaration":1989,"isOffset":false,"isSlot":false,"src":"2328:4:22","valueSize":1}],"id":1995,"nodeType":"InlineAssembly","src":"2295:47:22"}]},"documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"2066:87:22","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:22","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"slot","nameLocation":"2190:4:22","nodeType":"VariableDeclaration","scope":1997,"src":"2182:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:22"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"r","nameLocation":"2239:1:22","nodeType":"VariableDeclaration","scope":1997,"src":"2219:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1963_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1992,"nodeType":"UserDefinedTypeName","pathNode":{"id":1991,"name":"BooleanSlot","nameLocations":["2219:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"2219:11:22"},"referencedDeclaration":1963,"src":"2219:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1963_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:22"},"scope":2064,"src":"2158:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"2530:106:22","statements":[{"AST":{"nativeSrc":"2592:38:22","nodeType":"YulBlock","src":"2592:38:22","statements":[{"nativeSrc":"2606:14:22","nodeType":"YulAssignment","src":"2606:14:22","value":{"name":"slot","nativeSrc":"2616:4:22","nodeType":"YulIdentifier","src":"2616:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2606:6:22","nodeType":"YulIdentifier","src":"2606:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2004,"isOffset":false,"isSlot":true,"src":"2606:6:22","suffix":"slot","valueSize":1},{"declaration":2000,"isOffset":false,"isSlot":false,"src":"2616:4:22","valueSize":1}],"id":2006,"nodeType":"InlineAssembly","src":"2583:47:22"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"2354:87:22","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:22","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"slot","nameLocation":"2478:4:22","nodeType":"VariableDeclaration","scope":2008,"src":"2470:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:22"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"r","nameLocation":"2527:1:22","nodeType":"VariableDeclaration","scope":2008,"src":"2507:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1966_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2003,"nodeType":"UserDefinedTypeName","pathNode":{"id":2002,"name":"Bytes32Slot","nameLocations":["2507:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1966,"src":"2507:11:22"},"referencedDeclaration":1966,"src":"2507:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1966_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:22"},"scope":2064,"src":"2446:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2018,"nodeType":"Block","src":"2818:106:22","statements":[{"AST":{"nativeSrc":"2880:38:22","nodeType":"YulBlock","src":"2880:38:22","statements":[{"nativeSrc":"2894:14:22","nodeType":"YulAssignment","src":"2894:14:22","value":{"name":"slot","nativeSrc":"2904:4:22","nodeType":"YulIdentifier","src":"2904:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2894:6:22","nodeType":"YulIdentifier","src":"2894:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2015,"isOffset":false,"isSlot":true,"src":"2894:6:22","suffix":"slot","valueSize":1},{"declaration":2011,"isOffset":false,"isSlot":false,"src":"2904:4:22","valueSize":1}],"id":2017,"nodeType":"InlineAssembly","src":"2871:47:22"}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"2642:87:22","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:22","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"slot","nameLocation":"2766:4:22","nodeType":"VariableDeclaration","scope":2019,"src":"2758:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:22"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"r","nameLocation":"2815:1:22","nodeType":"VariableDeclaration","scope":2019,"src":"2795:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1969_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2014,"nodeType":"UserDefinedTypeName","pathNode":{"id":2013,"name":"Uint256Slot","nameLocations":["2795:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":1969,"src":"2795:11:22"},"referencedDeclaration":1969,"src":"2795:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1969_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:22"},"scope":2064,"src":"2734:190:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2029,"nodeType":"Block","src":"3103:106:22","statements":[{"AST":{"nativeSrc":"3165:38:22","nodeType":"YulBlock","src":"3165:38:22","statements":[{"nativeSrc":"3179:14:22","nodeType":"YulAssignment","src":"3179:14:22","value":{"name":"slot","nativeSrc":"3189:4:22","nodeType":"YulIdentifier","src":"3189:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3179:6:22","nodeType":"YulIdentifier","src":"3179:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2026,"isOffset":false,"isSlot":true,"src":"3179:6:22","suffix":"slot","valueSize":1},{"declaration":2022,"isOffset":false,"isSlot":false,"src":"3189:4:22","valueSize":1}],"id":2028,"nodeType":"InlineAssembly","src":"3156:47:22"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"2930:86:22","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:22","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"slot","nameLocation":"3052:4:22","nodeType":"VariableDeclaration","scope":2030,"src":"3044:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:22"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"r","nameLocation":"3100:1:22","nodeType":"VariableDeclaration","scope":2030,"src":"3081:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1972_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2025,"nodeType":"UserDefinedTypeName","pathNode":{"id":2024,"name":"StringSlot","nameLocations":["3081:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"3081:10:22"},"referencedDeclaration":1972,"src":"3081:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1972_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:22"},"scope":2064,"src":"3021:188:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"3411:112:22","statements":[{"AST":{"nativeSrc":"3473:44:22","nodeType":"YulBlock","src":"3473:44:22","statements":[{"nativeSrc":"3487:20:22","nodeType":"YulAssignment","src":"3487:20:22","value":{"name":"store.slot","nativeSrc":"3497:10:22","nodeType":"YulIdentifier","src":"3497:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3487:6:22","nodeType":"YulIdentifier","src":"3487:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2037,"isOffset":false,"isSlot":true,"src":"3487:6:22","suffix":"slot","valueSize":1},{"declaration":2033,"isOffset":false,"isSlot":true,"src":"3497:10:22","suffix":"slot","valueSize":1}],"id":2039,"nodeType":"InlineAssembly","src":"3464:53:22"}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"3215:101:22","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:22","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"store","nameLocation":"3359:5:22","nodeType":"VariableDeclaration","scope":2041,"src":"3344:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2032,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:22"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"r","nameLocation":"3408:1:22","nodeType":"VariableDeclaration","scope":2041,"src":"3389:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1972_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2036,"nodeType":"UserDefinedTypeName","pathNode":{"id":2035,"name":"StringSlot","nameLocations":["3389:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1972,"src":"3389:10:22"},"referencedDeclaration":1972,"src":"3389:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1972_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:22"},"scope":2064,"src":"3321:202:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2051,"nodeType":"Block","src":"3699:106:22","statements":[{"AST":{"nativeSrc":"3761:38:22","nodeType":"YulBlock","src":"3761:38:22","statements":[{"nativeSrc":"3775:14:22","nodeType":"YulAssignment","src":"3775:14:22","value":{"name":"slot","nativeSrc":"3785:4:22","nodeType":"YulIdentifier","src":"3785:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3775:6:22","nodeType":"YulIdentifier","src":"3775:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2048,"isOffset":false,"isSlot":true,"src":"3775:6:22","suffix":"slot","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"3785:4:22","valueSize":1}],"id":2050,"nodeType":"InlineAssembly","src":"3752:47:22"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"3529:85:22","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:22","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"slot","nameLocation":"3649:4:22","nodeType":"VariableDeclaration","scope":2052,"src":"3641:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:22"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"r","nameLocation":"3696:1:22","nodeType":"VariableDeclaration","scope":2052,"src":"3678:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1975_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2047,"nodeType":"UserDefinedTypeName","pathNode":{"id":2046,"name":"BytesSlot","nameLocations":["3678:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"3678:9:22"},"referencedDeclaration":1975,"src":"3678:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1975_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:22"},"scope":2064,"src":"3619:186:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2062,"nodeType":"Block","src":"4002:112:22","statements":[{"AST":{"nativeSrc":"4064:44:22","nodeType":"YulBlock","src":"4064:44:22","statements":[{"nativeSrc":"4078:20:22","nodeType":"YulAssignment","src":"4078:20:22","value":{"name":"store.slot","nativeSrc":"4088:10:22","nodeType":"YulIdentifier","src":"4088:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"4078:6:22","nodeType":"YulIdentifier","src":"4078:6:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2059,"isOffset":false,"isSlot":true,"src":"4078:6:22","suffix":"slot","valueSize":1},{"declaration":2055,"isOffset":false,"isSlot":true,"src":"4088:10:22","suffix":"slot","valueSize":1}],"id":2061,"nodeType":"InlineAssembly","src":"4055:53:22"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"3811:99:22","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:22","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"store","nameLocation":"3951:5:22","nodeType":"VariableDeclaration","scope":2063,"src":"3937:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2054,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:22"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"r","nameLocation":"3999:1:22","nodeType":"VariableDeclaration","scope":2063,"src":"3981:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1975_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"BytesSlot","nameLocations":["3981:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":1975,"src":"3981:9:22"},"referencedDeclaration":1975,"src":"3981:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1975_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:22"},"scope":2064,"src":"3915:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2065,"src":"1420:2696:22","usedErrors":[],"usedEvents":[]}],"src":"193:3924:22"},"id":22},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2086]},"id":2087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2066,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:23"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"111:496:23","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2086,"linearizedBaseContracts":[2086],"name":"Context","nameLocation":"626:7:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":2075,"nodeType":"Block","src":"702:34:23","statements":[{"expression":{"expression":{"id":2072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:23","memberName":"sender","nodeType":"MemberAccess","src":"719:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2071,"id":2074,"nodeType":"Return","src":"712:17:23"}]},"id":2076,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:23","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[],"src":"659:2:23"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2076,"src":"693:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:23"},"scope":2086,"src":"640:96:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"809:32:23","statements":[{"expression":{"expression":{"id":2081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:23","memberName":"data","nodeType":"MemberAccess","src":"826:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2080,"id":2083,"nodeType":"Return","src":"819:15:23"}]},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:23","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[],"src":"759:2:23"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"793:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2078,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:23"},"scope":2086,"src":"742:99:23","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2087,"src":"608:235:23","usedErrors":[],"usedEvents":[]}],"src":"86:758:23"},"id":23},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2146]},"id":2147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"130:1148:24","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":2146,"linearizedBaseContracts":[2146],"name":"StorageSlot","nameLocation":"1287:11:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2092,"members":[{"constant":false,"id":2091,"mutability":"mutable","name":"value","nameLocation":"1342:5:24","nodeType":"VariableDeclaration","scope":2092,"src":"1334:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"1334:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1312:11:24","nodeType":"StructDefinition","scope":2146,"src":"1305:49:24","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2095,"members":[{"constant":false,"id":2094,"mutability":"mutable","name":"value","nameLocation":"1394:5:24","nodeType":"VariableDeclaration","scope":2095,"src":"1389:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2093,"name":"bool","nodeType":"ElementaryTypeName","src":"1389:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1367:11:24","nodeType":"StructDefinition","scope":2146,"src":"1360:46:24","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2098,"members":[{"constant":false,"id":2097,"mutability":"mutable","name":"value","nameLocation":"1449:5:24","nodeType":"VariableDeclaration","scope":2098,"src":"1441:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1419:11:24","nodeType":"StructDefinition","scope":2146,"src":"1412:49:24","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2101,"members":[{"constant":false,"id":2100,"mutability":"mutable","name":"value","nameLocation":"1504:5:24","nodeType":"VariableDeclaration","scope":2101,"src":"1496:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1474:11:24","nodeType":"StructDefinition","scope":2146,"src":"1467:49:24","visibility":"public"},{"body":{"id":2111,"nodeType":"Block","src":"1698:106:24","statements":[{"AST":{"nativeSrc":"1760:38:24","nodeType":"YulBlock","src":"1760:38:24","statements":[{"nativeSrc":"1774:14:24","nodeType":"YulAssignment","src":"1774:14:24","value":{"name":"slot","nativeSrc":"1784:4:24","nodeType":"YulIdentifier","src":"1784:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"1774:6:24","nodeType":"YulIdentifier","src":"1774:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2108,"isOffset":false,"isSlot":true,"src":"1774:6:24","suffix":"slot","valueSize":1},{"declaration":2104,"isOffset":false,"isSlot":false,"src":"1784:4:24","valueSize":1}],"id":2110,"nodeType":"InlineAssembly","src":"1751:47:24"}]},"documentation":{"id":2102,"nodeType":"StructuredDocumentation","src":"1522:87:24","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2112,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1623:14:24","nodeType":"FunctionDefinition","parameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"slot","nameLocation":"1646:4:24","nodeType":"VariableDeclaration","scope":2112,"src":"1638:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1637:14:24"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"r","nameLocation":"1695:1:24","nodeType":"VariableDeclaration","scope":2112,"src":"1675:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2092_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2107,"nodeType":"UserDefinedTypeName","pathNode":{"id":2106,"name":"AddressSlot","nameLocations":["1675:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2092,"src":"1675:11:24"},"referencedDeclaration":2092,"src":"1675:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2092_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1674:23:24"},"scope":2146,"src":"1614:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2122,"nodeType":"Block","src":"1986:106:24","statements":[{"AST":{"nativeSrc":"2048:38:24","nodeType":"YulBlock","src":"2048:38:24","statements":[{"nativeSrc":"2062:14:24","nodeType":"YulAssignment","src":"2062:14:24","value":{"name":"slot","nativeSrc":"2072:4:24","nodeType":"YulIdentifier","src":"2072:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2062:6:24","nodeType":"YulIdentifier","src":"2062:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2119,"isOffset":false,"isSlot":true,"src":"2062:6:24","suffix":"slot","valueSize":1},{"declaration":2115,"isOffset":false,"isSlot":false,"src":"2072:4:24","valueSize":1}],"id":2121,"nodeType":"InlineAssembly","src":"2039:47:24"}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"1810:87:24","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2123,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1911:14:24","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"slot","nameLocation":"1934:4:24","nodeType":"VariableDeclaration","scope":2123,"src":"1926:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1926:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1925:14:24"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"r","nameLocation":"1983:1:24","nodeType":"VariableDeclaration","scope":2123,"src":"1963:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2095_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2118,"nodeType":"UserDefinedTypeName","pathNode":{"id":2117,"name":"BooleanSlot","nameLocations":["1963:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"1963:11:24"},"referencedDeclaration":2095,"src":"1963:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2095_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"1962:23:24"},"scope":2146,"src":"1902:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"2274:106:24","statements":[{"AST":{"nativeSrc":"2336:38:24","nodeType":"YulBlock","src":"2336:38:24","statements":[{"nativeSrc":"2350:14:24","nodeType":"YulAssignment","src":"2350:14:24","value":{"name":"slot","nativeSrc":"2360:4:24","nodeType":"YulIdentifier","src":"2360:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2350:6:24","nodeType":"YulIdentifier","src":"2350:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2130,"isOffset":false,"isSlot":true,"src":"2350:6:24","suffix":"slot","valueSize":1},{"declaration":2126,"isOffset":false,"isSlot":false,"src":"2360:4:24","valueSize":1}],"id":2132,"nodeType":"InlineAssembly","src":"2327:47:24"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"2098:87:24","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2199:14:24","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"slot","nameLocation":"2222:4:24","nodeType":"VariableDeclaration","scope":2134,"src":"2214:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:14:24"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"r","nameLocation":"2271:1:24","nodeType":"VariableDeclaration","scope":2134,"src":"2251:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2098_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2129,"nodeType":"UserDefinedTypeName","pathNode":{"id":2128,"name":"Bytes32Slot","nameLocations":["2251:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2098,"src":"2251:11:24"},"referencedDeclaration":2098,"src":"2251:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2098_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2250:23:24"},"scope":2146,"src":"2190:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2144,"nodeType":"Block","src":"2562:106:24","statements":[{"AST":{"nativeSrc":"2624:38:24","nodeType":"YulBlock","src":"2624:38:24","statements":[{"nativeSrc":"2638:14:24","nodeType":"YulAssignment","src":"2638:14:24","value":{"name":"slot","nativeSrc":"2648:4:24","nodeType":"YulIdentifier","src":"2648:4:24"},"variableNames":[{"name":"r.slot","nativeSrc":"2638:6:24","nodeType":"YulIdentifier","src":"2638:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2141,"isOffset":false,"isSlot":true,"src":"2638:6:24","suffix":"slot","valueSize":1},{"declaration":2137,"isOffset":false,"isSlot":false,"src":"2648:4:24","valueSize":1}],"id":2143,"nodeType":"InlineAssembly","src":"2615:47:24"}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"2386:87:24","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2145,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2487:14:24","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"slot","nameLocation":"2510:4:24","nodeType":"VariableDeclaration","scope":2145,"src":"2502:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2501:14:24"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"r","nameLocation":"2559:1:24","nodeType":"VariableDeclaration","scope":2145,"src":"2539:21:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2140,"nodeType":"UserDefinedTypeName","pathNode":{"id":2139,"name":"Uint256Slot","nameLocations":["2539:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":2101,"src":"2539:11:24"},"referencedDeclaration":2101,"src":"2539:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2101_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2538:23:24"},"scope":2146,"src":"2478:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2147,"src":"1279:1391:24","usedErrors":[],"usedEvents":[]}],"src":"105:2566:24"},"id":24},"contracts/MocaPoints/MocaPoints.sol":{"ast":{"absolutePath":"contracts/MocaPoints/MocaPoints.sol","exportedSymbols":{"AccessControlBase":[123],"AccessControlStorage":[533],"ContractOwnershipBase":[171],"ContractOwnershipStorage":[780],"IRealmId":[2979],"Initializable":[1488],"MocaPoints":[2953],"UUPSUpgradeable":[1624]},"id":2954,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2148,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"contracts/MocaPoints/interface/IRealmId.sol","file":"./interface/IRealmId.sol","id":2150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":2980,"src":"57:50:25","symbolAliases":[{"foreign":{"id":2149,"name":"IRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"65:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol","file":"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol","id":2152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":534,"src":"108:117:25","symbolAliases":[{"foreign":{"id":2151,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"116:20:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol","file":"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol","id":2154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":124,"src":"226:106:25","symbolAliases":[{"foreign":{"id":2153,"name":"AccessControlBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"234:17:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol","file":"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol","id":2156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":172,"src":"333:114:25","symbolAliases":[{"foreign":{"id":2155,"name":"ContractOwnershipBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"341:21:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol","file":"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol","id":2158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":781,"src":"448:125:25","symbolAliases":[{"foreign":{"id":2157,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"456:24:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":1489,"src":"574:96:25","symbolAliases":[{"foreign":{"id":2159,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"582:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2954,"sourceUnit":1625,"src":"671:100:25","symbolAliases":[{"foreign":{"id":2161,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"679:15:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2163,"name":"Initializable","nameLocations":["796:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":1488,"src":"796:13:25"},"id":2164,"nodeType":"InheritanceSpecifier","src":"796:13:25"},{"baseName":{"id":2165,"name":"AccessControlBase","nameLocations":["811:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":123,"src":"811:17:25"},"id":2166,"nodeType":"InheritanceSpecifier","src":"811:17:25"},{"baseName":{"id":2167,"name":"ContractOwnershipBase","nameLocations":["830:21:25"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"830:21:25"},"id":2168,"nodeType":"InheritanceSpecifier","src":"830:21:25"},{"baseName":{"id":2169,"name":"UUPSUpgradeable","nameLocations":["853:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":1624,"src":"853:15:25"},"id":2170,"nodeType":"InheritanceSpecifier","src":"853:15:25"}],"canonicalName":"MocaPoints","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2953,"linearizedBaseContracts":[2953,1624,1309,975,985,171,123,1488,2086,280,236,260,225],"name":"MocaPoints","nameLocation":"782:10:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2174,"libraryName":{"id":2171,"name":"ContractOwnershipStorage","nameLocations":["881:24:25"],"nodeType":"IdentifierPath","referencedDeclaration":780,"src":"881:24:25"},"nodeType":"UsingForDirective","src":"875:67:25","typeName":{"id":2173,"nodeType":"UserDefinedTypeName","pathNode":{"id":2172,"name":"ContractOwnershipStorage.Layout","nameLocations":["910:24:25","935:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"910:31:25"},"referencedDeclaration":557,"src":"910:31:25","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout"}}},{"global":false,"id":2178,"libraryName":{"id":2175,"name":"AccessControlStorage","nameLocations":["953:20:25"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"953:20:25"},"nodeType":"UsingForDirective","src":"947:59:25","typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"AccessControlStorage.Layout","nameLocations":["978:20:25","999:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":300,"src":"978:27:25"},"referencedDeclaration":300,"src":"978:27:25","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout"}}},{"constant":true,"functionSelector":"a3b0b5a3","id":2183,"mutability":"constant","name":"DEPOSITOR_ROLE","nameLocation":"1049:14:25","nodeType":"VariableDeclaration","scope":2953,"src":"1025:68:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1025:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4445504f5349544f525f524f4c45","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1076:16:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""},"value":"DEPOSITOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""}],"id":2180,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1066:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1066:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f72c0d8b","id":2188,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"1123:13:25","nodeType":"VariableDeclaration","scope":2953,"src":"1099:66:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1099:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1149:15:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":2185,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1139:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"bcb39621","id":2190,"mutability":"mutable","name":"currentSeason","nameLocation":"1213:13:25","nodeType":"VariableDeclaration","scope":2953,"src":"1198:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1198:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"4529cc1b","id":2194,"mutability":"mutable","name":"seasons","nameLocation":"1264:7:25","nodeType":"VariableDeclaration","scope":2953,"src":"1232:39:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":2193,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1240:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1232:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"1251:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"2b48dc72","id":2197,"mutability":"mutable","name":"realmIdContract","nameLocation":"1318:15:25","nodeType":"VariableDeclaration","scope":2953,"src":"1302:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"},"typeName":{"id":2196,"nodeType":"UserDefinedTypeName","pathNode":{"id":2195,"name":"IRealmId","nameLocations":["1302:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2979,"src":"1302:8:25"},"referencedDeclaration":2979,"src":"1302:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"visibility":"public"},{"constant":false,"functionSelector":"51955dfc","id":2205,"mutability":"mutable","name":"balances","nameLocation":"1439:8:25","nodeType":"VariableDeclaration","scope":2953,"src":"1364:83:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"},"typeName":{"id":2204,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1372:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1364:67:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2203,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1383:47:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2202,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1410:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1402:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"141a468c","id":2209,"mutability":"mutable","name":"nonces","nameLocation":"1563:6:25","nodeType":"VariableDeclaration","scope":2953,"src":"1528:41:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2208,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1536:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1528:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f9515962","id":2213,"mutability":"mutable","name":"allowedConsumeReasonCodes","nameLocation":"1672:25:25","nodeType":"VariableDeclaration","scope":2953,"src":"1640:57:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":2212,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1640:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2211,"name":"bool","nodeType":"ElementaryTypeName","src":"1659:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef31","id":2217,"name":"SetCurrentSeason","nameLocation":"1710:16:25","nodeType":"EventDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"indexed":false,"mutability":"mutable","name":"season","nameLocation":"1735:6:25","nodeType":"VariableDeclaration","scope":2217,"src":"1727:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1727:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1726:16:25"},"src":"1704:39:25"},{"anonymous":false,"eventSelector":"0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e","id":2222,"name":"BatchAddedConsumeReasonCode","nameLocation":"1754:27:25","nodeType":"EventDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"indexed":false,"mutability":"mutable","name":"reasonCodes","nameLocation":"1792:11:25","nodeType":"VariableDeclaration","scope":2222,"src":"1782:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1782:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2219,"nodeType":"ArrayTypeName","src":"1782:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1781:23:25"},"src":"1748:57:25"},{"anonymous":false,"eventSelector":"5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff9","id":2227,"name":"BatchRemovedConsumeReasonCode","nameLocation":"1816:29:25","nodeType":"EventDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"indexed":false,"mutability":"mutable","name":"reasonCodes","nameLocation":"1856:11:25","nodeType":"VariableDeclaration","scope":2227,"src":"1846:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1846:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2224,"nodeType":"ArrayTypeName","src":"1846:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1845:23:25"},"src":"1810:59:25"},{"anonymous":false,"eventSelector":"9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad82","id":2241,"name":"Deposited","nameLocation":"1880:9:25","nodeType":"EventDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1915:6:25","nodeType":"VariableDeclaration","scope":2241,"src":"1899:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"1899:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2231,"indexed":true,"mutability":"mutable","name":"season","nameLocation":"1947:6:25","nodeType":"VariableDeclaration","scope":2241,"src":"1931:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1931:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2233,"indexed":true,"mutability":"mutable","name":"reasonCode","nameLocation":"1979:10:25","nodeType":"VariableDeclaration","scope":2241,"src":"1963:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1963:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2235,"indexed":false,"mutability":"mutable","name":"realmId","nameLocation":"2007:7:25","nodeType":"VariableDeclaration","scope":2241,"src":"1999:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"indexed":false,"mutability":"mutable","name":"realmIdVersion","nameLocation":"2032:14:25","nodeType":"VariableDeclaration","scope":2241,"src":"2024:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2239,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2064:6:25","nodeType":"VariableDeclaration","scope":2241,"src":"2056:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1889:187:25"},"src":"1874:203:25"},{"anonymous":false,"eventSelector":"e514533875fbd3f8f396088d636e746599d8b5c3ba77e9ccfa9fc01ff7064601","id":2257,"name":"Consumed","nameLocation":"2089:8:25","nodeType":"EventDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"indexed":true,"mutability":"mutable","name":"realmId","nameLocation":"2123:7:25","nodeType":"VariableDeclaration","scope":2257,"src":"2107:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2245,"indexed":true,"mutability":"mutable","name":"season","nameLocation":"2156:6:25","nodeType":"VariableDeclaration","scope":2257,"src":"2140:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2247,"indexed":true,"mutability":"mutable","name":"reasonCode","nameLocation":"2188:10:25","nodeType":"VariableDeclaration","scope":2257,"src":"2172:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2172:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2249,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"2216:8:25","nodeType":"VariableDeclaration","scope":2257,"src":"2208:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2251,"indexed":false,"mutability":"mutable","name":"realmIdVersion","nameLocation":"2242:14:25","nodeType":"VariableDeclaration","scope":2257,"src":"2234:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2253,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2274:6:25","nodeType":"VariableDeclaration","scope":2257,"src":"2266:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2266:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"indexed":false,"mutability":"mutable","name":"realmIdOwner","nameLocation":"2298:12:25","nodeType":"VariableDeclaration","scope":2257,"src":"2290:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2097:219:25"},"src":"2083:234:25"},{"body":{"id":2309,"nodeType":"Block","src":"2404:324:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2266,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2414:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2268,"nodeType":"ExpressionStatement","src":"2414:24:25"},{"expression":{"arguments":[{"id":2274,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2492:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2269,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"2448:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2473:6:25","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"2448:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2448:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2482:9:25","memberName":"proxyInit","nodeType":"MemberAccess","referencedDeclaration":652,"src":"2448:43:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2448:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"ExpressionStatement","src":"2448:51:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2280,"name":"_realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2526:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2518:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"2518:7:25","typeDescriptions":{}}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2555:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2547:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"2547:7:25","typeDescriptions":{}}},"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2518:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c696420436f6e74726163742041646472657373","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2559:30:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f","typeString":"literal_string \"Not a valid Contract Address\""},"value":"Not a valid Contract Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f","typeString":"literal_string \"Not a valid Contract Address\""}],"id":2277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2510:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:80:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"ExpressionStatement","src":"2510:80:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2293,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2616:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2608:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:25","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2635:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2627:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:25","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2608:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c69642041646d696e2041646472657373","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2639:27:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f","typeString":"literal_string \"Not a valid Admin Address\""},"value":"Not a valid Admin Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f","typeString":"literal_string \"Not a valid Admin Address\""}],"id":2290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2600:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2302,"nodeType":"ExpressionStatement","src":"2600:67:25"},{"expression":{"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2303,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"2677:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2305,"name":"_realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2704:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2304,"name":"IRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"2695:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRealmId_$2979_$","typeString":"type(contract IRealmId)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"src":"2677:44:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2308,"nodeType":"ExpressionStatement","src":"2677:44:25"}]},"functionSelector":"485cc955","id":2310,"implemented":true,"kind":"function","modifiers":[{"id":2264,"kind":"modifierInvocation","modifierName":{"id":2263,"name":"initializer","nameLocations":["2392:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"2392:11:25"},"nodeType":"ModifierInvocation","src":"2392:11:25"}],"name":"initialize","nameLocation":"2332:10:25","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"_realmIdContract","nameLocation":"2351:16:25","nodeType":"VariableDeclaration","scope":2310,"src":"2343:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"_admin","nameLocation":"2377:6:25","nodeType":"VariableDeclaration","scope":2310,"src":"2369:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"2369:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2342:42:25"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"2404:0:25"},"scope":2953,"src":"2323:405:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1618],"body":{"id":2326,"nodeType":"Block","src":"2793:90:25","statements":[{"expression":{"arguments":[{"id":2321,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2848:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2322,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"2863:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2863:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2316,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2803:20:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlStorage_$533_$","typeString":"type(library AccessControlStorage)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2824:6:25","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":532,"src":"2803:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function () pure returns (struct AccessControlStorage.Layout storage pointer)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":2320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2833:14:25","memberName":"enforceHasRole","nodeType":"MemberAccess","referencedDeclaration":495,"src":"2803:44:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"2803:73:25"}]},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"2743:17:25","nodeType":"FunctionDefinition","overrides":{"id":2314,"nodeType":"OverrideSpecifier","overrides":[],"src":"2784:8:25"},"parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"2761:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2311,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2760:9:25"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[],"src":"2793:0:25"},"scope":2953,"src":"2734:149:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2363,"nodeType":"Block","src":"2941:251:25","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2337,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3008:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2332,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"2951:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2976:6:25","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"2951:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2985:22:25","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":746,"src":"2951:56:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address) view"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"2951:70:25"},{"expression":{"arguments":[{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3039:17:25","subExpression":{"baseExpression":{"id":2342,"name":"seasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"3040:7:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2344,"indexExpression":{"id":2343,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3048:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3040:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536561736f6e20616c726561647920736574","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3058:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892","typeString":"literal_string \"Season already set\""},"value":"Season already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892","typeString":"literal_string \"Season already set\""}],"id":2341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3031:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2348,"nodeType":"ExpressionStatement","src":"3031:48:25"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3089:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2350,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3105:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3089:23:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2352,"nodeType":"ExpressionStatement","src":"3089:23:25"},{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2353,"name":"seasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"3122:7:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2355,"indexExpression":{"id":2354,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3130:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3122:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3141:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3122:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"ExpressionStatement","src":"3122:23:25"},{"eventCall":{"arguments":[{"id":2360,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3177:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2359,"name":"SetCurrentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3160:16:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3160:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"EmitStatement","src":"3155:30:25"}]},"functionSelector":"86a8e98a","id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"setCurrentSeason","nameLocation":"2898:16:25","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"_season","nameLocation":"2923:7:25","nodeType":"VariableDeclaration","scope":2364,"src":"2915:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2915:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2914:17:25"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[],"src":"2941:0:25"},"scope":2953,"src":"2889:303:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2414,"nodeType":"Block","src":"3272:373:25","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2375,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3339:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3339:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2370,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"3282:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3307:6:25","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"3282:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":2374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3316:22:25","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":746,"src":"3282:56:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address) view"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"3282:70:25"},{"body":{"id":2408,"nodeType":"Block","src":"3412:170:25","statements":[{"expression":{"arguments":[{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3434:43:25","subExpression":{"baseExpression":{"id":2391,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3435:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2395,"indexExpression":{"baseExpression":{"id":2392,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3461:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2394,"indexExpression":{"id":2393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3474:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3461:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3435:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526561736f6e20636f646520616c726561647920657869737473","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3479:28:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a","typeString":"literal_string \"Reason code already exists\""},"value":"Reason code already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a","typeString":"literal_string \"Reason code already exists\""}],"id":2390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3426:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3426:82:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2399,"nodeType":"ExpressionStatement","src":"3426:82:25"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2400,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3522:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2404,"indexExpression":{"baseExpression":{"id":2401,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3548:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2403,"indexExpression":{"id":2402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3561:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3548:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3522:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3567:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3522:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2407,"nodeType":"ExpressionStatement","src":"3522:49:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3382:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2384,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3386:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3399:6:25","memberName":"length","nodeType":"MemberAccess","src":"3386:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3382:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"initializationExpression":{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"i","nameLocation":"3375:1:25","nodeType":"VariableDeclaration","scope":2409,"src":"3367:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3367:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2382,"initialValue":{"hexValue":"30","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3379:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3367:13:25"},"loopExpression":{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3407:3:25","subExpression":{"id":2387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3407:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"3407:3:25"},"nodeType":"ForStatement","src":"3362:220:25"},{"eventCall":{"arguments":[{"id":2411,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3625:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2410,"name":"BatchAddedConsumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"3597:27:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2413,"nodeType":"EmitStatement","src":"3592:46:25"}]},"functionSelector":"3f30b00f","id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"batchAddConsumeReasonCodes","nameLocation":"3207:26:25","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"_reasonCodes","nameLocation":"3251:12:25","nodeType":"VariableDeclaration","scope":2415,"src":"3234:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3234:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2366,"nodeType":"ArrayTypeName","src":"3234:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3233:31:25"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[],"src":"3272:0:25"},"scope":2953,"src":"3198:447:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2463,"nodeType":"Block","src":"3728:438:25","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2426,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3795:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3795:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2421,"name":"ContractOwnershipStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"3738:24:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ContractOwnershipStorage_$780_$","typeString":"type(library ContractOwnershipStorage)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3763:6:25","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":779,"src":"3738:31:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function () pure returns (struct ContractOwnershipStorage.Layout storage pointer)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3738:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$557_storage_ptr","typeString":"struct ContractOwnershipStorage.Layout storage pointer"}},"id":2425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3772:22:25","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":746,"src":"3738:56:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$557_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$557_storage_ptr_$","typeString":"function (struct ContractOwnershipStorage.Layout storage pointer,address) view"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3738:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2429,"nodeType":"ExpressionStatement","src":"3738:70:25"},{"body":{"id":2457,"nodeType":"Block","src":"3932:169:25","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2442,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3954:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2446,"indexExpression":{"baseExpression":{"id":2443,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3980:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2445,"indexExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3993:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3980:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3954:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526561736f6e20636f646520646f6573206e6f74206578697374","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3998:28:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad26fe53f2fca31247987ef6a4af0496ee097218b3387432e3c6fed944f205a4","typeString":"literal_string \"Reason code does not exist\""},"value":"Reason code does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad26fe53f2fca31247987ef6a4af0496ee097218b3387432e3c6fed944f205a4","typeString":"literal_string \"Reason code does not exist\""}],"id":2441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3946:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:81:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"3946:81:25"},{"expression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4041:49:25","subExpression":{"baseExpression":{"id":2450,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"4048:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2454,"indexExpression":{"baseExpression":{"id":2451,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4074:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2453,"indexExpression":{"id":2452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4087:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4074:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4048:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2456,"nodeType":"ExpressionStatement","src":"4041:49:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3902:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2435,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3906:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3919:6:25","memberName":"length","nodeType":"MemberAccess","src":"3906:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3902:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2458,"initializationExpression":{"assignments":[2431],"declarations":[{"constant":false,"id":2431,"mutability":"mutable","name":"i","nameLocation":"3895:1:25","nodeType":"VariableDeclaration","scope":2458,"src":"3887:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3887:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2433,"initialValue":{"hexValue":"30","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3899:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3887:13:25"},"loopExpression":{"expression":{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3927:3:25","subExpression":{"id":2438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3927:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2440,"nodeType":"ExpressionStatement","src":"3927:3:25"},"nodeType":"ForStatement","src":"3882:219:25"},{"eventCall":{"arguments":[{"id":2460,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4146:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2459,"name":"BatchRemovedConsumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4116:29:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4116:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2462,"nodeType":"EmitStatement","src":"4111:48:25"}]},"functionSelector":"906405a3","id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"batchRemoveConsumeReasonCodes","nameLocation":"3660:29:25","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"_reasonCodes","nameLocation":"3707:12:25","nodeType":"VariableDeclaration","scope":2464,"src":"3690:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3690:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2417,"nodeType":"ArrayTypeName","src":"3690:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3689:31:25"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[],"src":"3728:0:25"},"scope":2953,"src":"3651:515:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2507,"nodeType":"Block","src":"4296:332:25","statements":[{"expression":{"arguments":[{"id":2482,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"4405:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"4421:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2477,"name":"AccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4360:20:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AccessControlStorage_$533_$","typeString":"type(library AccessControlStorage)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4381:6:25","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":532,"src":"4360:27:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function () pure returns (struct AccessControlStorage.Layout storage pointer)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4360:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$300_storage_ptr","typeString":"struct AccessControlStorage.Layout storage pointer"}},"id":2481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4390:14:25","memberName":"enforceHasRole","nodeType":"MemberAccess","referencedDeclaration":495,"src":"4360:44:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$300_storage_ptr_$_t_bytes32_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$300_storage_ptr_$","typeString":"function (struct AccessControlStorage.Layout storage pointer,bytes32,address) view"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4360:74:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"ExpressionStatement","src":"4360:74:25"},{"expression":{"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2487,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"4473:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2491,"indexExpression":{"id":2488,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"4482:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4473:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2492,"indexExpression":{"id":2489,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4490:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4473:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2493,"indexExpression":{"id":2490,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"4499:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4473:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4518:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4473:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2496,"nodeType":"ExpressionStatement","src":"4473:51:25"},{"eventCall":{"arguments":[{"expression":{"id":2498,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4550:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4554:6:25","memberName":"sender","nodeType":"MemberAccess","src":"4550:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2500,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"4562:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2501,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"4570:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2502,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"4589:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2503,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"4598:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4614:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2497,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4540:9:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,uint256,uint256,uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:81:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"EmitStatement","src":"4535:86:25"}]},"functionSelector":"18ee89f0","id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"4181:7:25","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"season","nameLocation":"4197:6:25","nodeType":"VariableDeclaration","scope":2508,"src":"4189:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4189:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"realmId","nameLocation":"4213:7:25","nodeType":"VariableDeclaration","scope":2508,"src":"4205:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4205:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"realmIdVersion","nameLocation":"4230:14:25","nodeType":"VariableDeclaration","scope":2508,"src":"4222:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4222:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"amount","nameLocation":"4254:6:25","nodeType":"VariableDeclaration","scope":2508,"src":"4246:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"4246:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"depositReasonCode","nameLocation":"4270:17:25","nodeType":"VariableDeclaration","scope":2508,"src":"4262:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4262:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4188:100:25"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[],"src":"4296:0:25"},"scope":2953,"src":"4172:456:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2539,"nodeType":"Block","src":"4835:156:25","statements":[{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"realmId","nameLocation":"4853:7:25","nodeType":"VariableDeclaration","scope":2539,"src":"4845:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4845:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[{"id":2527,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"4890:4:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2528,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4896:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2525,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"4863:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:10:25","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"4863:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4863:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4845:62:25"},{"expression":{"arguments":[{"id":2532,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"4925:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2533,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"4933:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2534,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4942:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2535,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"4958:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2536,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"4966:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2531,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[2508,2540],"referencedDeclaration":2508,"src":"4917:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,bytes32)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2538,"nodeType":"ExpressionStatement","src":"4917:67:25"}]},"functionSelector":"9d70b005","id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"4643:7:25","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"season","nameLocation":"4668:6:25","nodeType":"VariableDeclaration","scope":2540,"src":"4660:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4660:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"parentNode","nameLocation":"4692:10:25","nodeType":"VariableDeclaration","scope":2540,"src":"4684:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4684:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"name","nameLocation":"4726:4:25","nodeType":"VariableDeclaration","scope":2540,"src":"4712:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2513,"name":"string","nodeType":"ElementaryTypeName","src":"4712:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"realmIdVersion","nameLocation":"4748:14:25","nodeType":"VariableDeclaration","scope":2540,"src":"4740:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"amount","nameLocation":"4780:6:25","nodeType":"VariableDeclaration","scope":2540,"src":"4772:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4772:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"depositReasonCode","nameLocation":"4804:17:25","nodeType":"VariableDeclaration","scope":2540,"src":"4796:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4650:177:25"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[],"src":"4835:0:25"},"scope":2953,"src":"4634:357:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2599,"nodeType":"Block","src":"5124:535:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2554,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"5192:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2556,"indexExpression":{"id":2555,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5201:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5192:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2558,"indexExpression":{"id":2557,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5216:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5192:32:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2560,"indexExpression":{"id":2559,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5225:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5192:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5244:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5192:58:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5252:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":2553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5184:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5184:91:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2565,"nodeType":"ExpressionStatement","src":"5184:91:25"},{"expression":{"arguments":[{"baseExpression":{"id":2567,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5369:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2569,"indexExpression":{"id":2568,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5395:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5369:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e73756d6520726561736f6e20636f6465","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5415:29:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b","typeString":"literal_string \"Invalid consume reason code\""},"value":"Invalid consume reason code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b","typeString":"literal_string \"Invalid consume reason code\""}],"id":2566,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5361:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2572,"nodeType":"ExpressionStatement","src":"5361:84:25"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2573,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"5456:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2577,"indexExpression":{"id":2574,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5465:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5456:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2578,"indexExpression":{"id":2575,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5480:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5456:32:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2579,"indexExpression":{"id":2576,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5489:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5456:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2580,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5508:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5456:58:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ExpressionStatement","src":"5456:58:25"},{"eventCall":{"arguments":[{"id":2584,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5539:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2585,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5548:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2586,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5563:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5582:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5586:6:25","memberName":"sender","nodeType":"MemberAccess","src":"5582:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2589,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5594:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5610:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2591,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5618:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2583,"name":"Consumed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"5530:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,bytes32,address,uint256,uint256,address)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5530:95:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2593,"nodeType":"EmitStatement","src":"5525:100:25"},{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5635:17:25","subExpression":{"baseExpression":{"id":2594,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"5635:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2596,"indexExpression":{"id":2595,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5642:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5635:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2598,"nodeType":"ExpressionStatement","src":"5635:17:25"}]},"id":2600,"implemented":true,"kind":"function","modifiers":[],"name":"_consume","nameLocation":"5006:8:25","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"realmId","nameLocation":"5023:7:25","nodeType":"VariableDeclaration","scope":2600,"src":"5015:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"realmIdVersion","nameLocation":"5040:14:25","nodeType":"VariableDeclaration","scope":2600,"src":"5032:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5032:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"amount","nameLocation":"5064:6:25","nodeType":"VariableDeclaration","scope":2600,"src":"5056:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"5080:17:25","nodeType":"VariableDeclaration","scope":2600,"src":"5072:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5072:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"owner_","nameLocation":"5107:6:25","nodeType":"VariableDeclaration","scope":2600,"src":"5099:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"5099:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5014:100:25"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[],"src":"5124:0:25"},"scope":2953,"src":"4997:662:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"5804:142:25","statements":[{"assignments":[2618],"declarations":[{"constant":false,"id":2618,"mutability":"mutable","name":"realmId","nameLocation":"5822:7:25","nodeType":"VariableDeclaration","scope":2634,"src":"5814:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"5814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2624,"initialValue":{"arguments":[{"id":2621,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"5859:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2622,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5866:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2619,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"5832:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5848:10:25","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"5832:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5832:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5814:63:25"},{"expression":{"arguments":[{"id":2626,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"5895:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2627,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"5904:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2628,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"5912:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2629,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"5931:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2630,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"5934:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2631,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"5937:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2625,"name":"consume","nodeType":"Identifier","overloadedDeclarations":[2635,2710,2736,2777],"referencedDeclaration":2710,"src":"5887:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32,uint8,bytes32,bytes32)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5887:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2633,"nodeType":"ExpressionStatement","src":"5887:52:25"}]},"functionSelector":"99d342ac","id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"5674:7:25","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"parentNode","nameLocation":"5690:10:25","nodeType":"VariableDeclaration","scope":2635,"src":"5682:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5682:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"_name","nameLocation":"5716:5:25","nodeType":"VariableDeclaration","scope":2635,"src":"5702:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2603,"name":"string","nodeType":"ElementaryTypeName","src":"5702:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"amount","nameLocation":"5731:6:25","nodeType":"VariableDeclaration","scope":2635,"src":"5723:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5723:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"5747:17:25","nodeType":"VariableDeclaration","scope":2635,"src":"5739:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5739:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"v","nameLocation":"5772:1:25","nodeType":"VariableDeclaration","scope":2635,"src":"5766:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2609,"name":"uint8","nodeType":"ElementaryTypeName","src":"5766:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"r","nameLocation":"5783:1:25","nodeType":"VariableDeclaration","scope":2635,"src":"5775:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5775:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"s","nameLocation":"5794:1:25","nodeType":"VariableDeclaration","scope":2635,"src":"5786:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5786:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5681:115:25"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"5804:0:25"},"scope":2953,"src":"5665:281:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2709,"nodeType":"Block","src":"6067:604:25","statements":[{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"realmIdVersion","nameLocation":"6141:14:25","nodeType":"VariableDeclaration","scope":2709,"src":"6133:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6133:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2656,"initialValue":{"arguments":[{"id":2654,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"6185:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2652,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"6158:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6174:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"6158:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6158:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6133:60:25"},{"assignments":[2658],"declarations":[{"constant":false,"id":2658,"mutability":"mutable","name":"_messageHash","nameLocation":"6211:12:25","nodeType":"VariableDeclaration","scope":2709,"src":"6203:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6203:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2667,"initialValue":{"arguments":[{"id":2660,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"6242:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"6251:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2662,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6259:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2664,"indexExpression":{"id":2663,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"6266:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6259:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2665,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6276:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2659,"name":"_preparePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"6226:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256,bytes32) view returns (bytes32)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6203:91:25"},{"assignments":[2669],"declarations":[{"constant":false,"id":2669,"mutability":"mutable","name":"messageDigest","nameLocation":"6312:13:25","nodeType":"VariableDeclaration","scope":2709,"src":"6304:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6304:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2677,"initialValue":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6355:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":2674,"name":"_messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"6391:12:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2671,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6338:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6342:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"6338:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6328:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6328:77:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6304:101:25"},{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"signer","nameLocation":"6423:6:25","nodeType":"VariableDeclaration","scope":2709,"src":"6415:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"6415:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2686,"initialValue":{"arguments":[{"id":2681,"name":"messageDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"6442:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2682,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6457:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2683,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"6460:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2684,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"6463:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2680,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6432:9:25","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6415:50:25"},{"assignments":[2688],"declarations":[{"constant":false,"id":2688,"mutability":"mutable","name":"owner_","nameLocation":"6483:6:25","nodeType":"VariableDeclaration","scope":2709,"src":"6475:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"6475:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2693,"initialValue":{"arguments":[{"id":2691,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"6516:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2689,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"6492:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6508:7:25","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"6492:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6492:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6475:49:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"6542:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2696,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"6552:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6542:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6572206973206e6f7420746865206f776e6572","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6560:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b755ce87409e8192f91119a3d1231484c648c9b5603f8975131c450383d3f8aa","typeString":"literal_string \"Signer is not the owner\""},"value":"Signer is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b755ce87409e8192f91119a3d1231484c648c9b5603f8975131c450383d3f8aa","typeString":"literal_string \"Signer is not the owner\""}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6534:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:52:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"ExpressionStatement","src":"6534:52:25"},{"expression":{"arguments":[{"id":2702,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"6605:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2703,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"6614:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"6630:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2705,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6638:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2706,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"6657:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2701,"name":"_consume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6596:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,bytes32,address)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6596:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2708,"nodeType":"ExpressionStatement","src":"6596:68:25"}]},"functionSelector":"dc893ce4","id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"5961:7:25","nodeType":"FunctionDefinition","parameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"realmId","nameLocation":"5977:7:25","nodeType":"VariableDeclaration","scope":2710,"src":"5969:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"5969:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"amount","nameLocation":"5994:6:25","nodeType":"VariableDeclaration","scope":2710,"src":"5986:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"5986:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"6010:17:25","nodeType":"VariableDeclaration","scope":2710,"src":"6002:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6002:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"v","nameLocation":"6035:1:25","nodeType":"VariableDeclaration","scope":2710,"src":"6029:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2642,"name":"uint8","nodeType":"ElementaryTypeName","src":"6029:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"r","nameLocation":"6046:1:25","nodeType":"VariableDeclaration","scope":2710,"src":"6038:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6038:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"s","nameLocation":"6057:1:25","nodeType":"VariableDeclaration","scope":2710,"src":"6049:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6049:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5968:91:25"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[],"src":"6067:0:25"},"scope":2953,"src":"5952:719:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2735,"nodeType":"Block","src":"6785:133:25","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"realmId","nameLocation":"6803:7:25","nodeType":"VariableDeclaration","scope":2735,"src":"6795:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6795:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2728,"initialValue":{"arguments":[{"id":2725,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6840:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2726,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"6847:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2723,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"6813:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6829:10:25","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"6813:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6813:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6795:63:25"},{"expression":{"arguments":[{"id":2730,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"6876:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6885:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2732,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"6893:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2729,"name":"consume","nodeType":"Identifier","overloadedDeclarations":[2635,2710,2736,2777],"referencedDeclaration":2777,"src":"6868:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6868:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2734,"nodeType":"ExpressionStatement","src":"6868:43:25"}]},"functionSelector":"e564a0e2","id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"6686:7:25","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"parentNode","nameLocation":"6702:10:25","nodeType":"VariableDeclaration","scope":2736,"src":"6694:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6694:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"_name","nameLocation":"6728:5:25","nodeType":"VariableDeclaration","scope":2736,"src":"6714:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2713,"name":"string","nodeType":"ElementaryTypeName","src":"6714:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"amount","nameLocation":"6743:6:25","nodeType":"VariableDeclaration","scope":2736,"src":"6735:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"6735:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"6759:17:25","nodeType":"VariableDeclaration","scope":2736,"src":"6751:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6693:84:25"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"6785:0:25"},"scope":2953,"src":"6677:241:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2776,"nodeType":"Block","src":"7008:285:25","statements":[{"assignments":[2746],"declarations":[{"constant":false,"id":2746,"mutability":"mutable","name":"owner_","nameLocation":"7026:6:25","nodeType":"VariableDeclaration","scope":2776,"src":"7018:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"7018:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2751,"initialValue":{"arguments":[{"id":2749,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"7059:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2747,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7035:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7051:7:25","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2978,"src":"7035:23:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7035:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7018:49:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7085:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7089:6:25","memberName":"sender","nodeType":"MemberAccess","src":"7085:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2755,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7099:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7085:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206973206e6f7420746865206f776e6572","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7107:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279","typeString":"literal_string \"Sender is not the owner\""},"value":"Sender is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279","typeString":"literal_string \"Sender is not the owner\""}],"id":2752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7077:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7077:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2759,"nodeType":"ExpressionStatement","src":"7077:56:25"},{"assignments":[2761],"declarations":[{"constant":false,"id":2761,"mutability":"mutable","name":"realmIdVersion","nameLocation":"7152:14:25","nodeType":"VariableDeclaration","scope":2776,"src":"7144:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"7144:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2766,"initialValue":{"arguments":[{"id":2764,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"7196:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2762,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7169:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7185:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"7169:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7169:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7144:60:25"},{"expression":{"arguments":[{"id":2768,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"7223:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2769,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"7232:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2770,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"7248:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2771,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"7256:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7275:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7279:6:25","memberName":"sender","nodeType":"MemberAccess","src":"7275:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2767,"name":"_consume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"7214:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,bytes32,address)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7214:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"7214:72:25"}]},"functionSelector":"d14a5c71","id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"6933:7:25","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"realmId","nameLocation":"6949:7:25","nodeType":"VariableDeclaration","scope":2777,"src":"6941:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6941:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"amount","nameLocation":"6966:6:25","nodeType":"VariableDeclaration","scope":2777,"src":"6958:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"6958:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"6982:17:25","nodeType":"VariableDeclaration","scope":2777,"src":"6974:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6974:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6940:60:25"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[],"src":"7008:0:25"},"scope":2953,"src":"6924:369:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2801,"nodeType":"Block","src":"7383:135:25","statements":[{"assignments":[2787],"declarations":[{"constant":false,"id":2787,"mutability":"mutable","name":"realmIdVersion","nameLocation":"7401:14:25","nodeType":"VariableDeclaration","scope":2801,"src":"7393:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"7393:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2792,"initialValue":{"arguments":[{"id":2790,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"7445:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2788,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7418:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7434:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"7418:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7418:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7393:60:25"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2793,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"7470:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2795,"indexExpression":{"id":2794,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7479:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7470:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2797,"indexExpression":{"id":2796,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"7487:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7470:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2799,"indexExpression":{"id":2798,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"7496:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7470:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2785,"id":2800,"nodeType":"Return","src":"7463:48:25"}]},"functionSelector":"ad3b1d48","id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"7308:9:25","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"season","nameLocation":"7326:6:25","nodeType":"VariableDeclaration","scope":2802,"src":"7318:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7318:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"realmId","nameLocation":"7342:7:25","nodeType":"VariableDeclaration","scope":2802,"src":"7334:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7334:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7317:33:25"},"returnParameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"7374:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"7374:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7373:9:25"},"scope":2953,"src":"7299:219:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2836,"nodeType":"Block","src":"7632:208:25","statements":[{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"realmId","nameLocation":"7650:7:25","nodeType":"VariableDeclaration","scope":2836,"src":"7642:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"7642:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2820,"initialValue":{"arguments":[{"id":2817,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7687:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2818,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"7694:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2815,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7660:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7676:10:25","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"7660:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7642:63:25"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"realmIdVersion","nameLocation":"7723:14:25","nodeType":"VariableDeclaration","scope":2836,"src":"7715:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"7715:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2827,"initialValue":{"arguments":[{"id":2825,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"7767:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2823,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7740:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7756:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"7740:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7740:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7715:60:25"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2828,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"7792:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2830,"indexExpression":{"id":2829,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"7801:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7792:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2832,"indexExpression":{"id":2831,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"7809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7792:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2834,"indexExpression":{"id":2833,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"7818:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7792:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2812,"id":2835,"nodeType":"Return","src":"7785:48:25"}]},"functionSelector":"098b6419","id":2837,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"7533:9:25","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"season","nameLocation":"7551:6:25","nodeType":"VariableDeclaration","scope":2837,"src":"7543:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7543:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2806,"mutability":"mutable","name":"parentNode","nameLocation":"7567:10:25","nodeType":"VariableDeclaration","scope":2837,"src":"7559:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7559:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"_name","nameLocation":"7593:5:25","nodeType":"VariableDeclaration","scope":2837,"src":"7579:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2807,"name":"string","nodeType":"ElementaryTypeName","src":"7579:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7542:57:25"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2837,"src":"7623:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"7623:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7622:9:25"},"scope":2953,"src":"7524:316:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2859,"nodeType":"Block","src":"7914:142:25","statements":[{"assignments":[2845],"declarations":[{"constant":false,"id":2845,"mutability":"mutable","name":"realmIdVersion","nameLocation":"7932:14:25","nodeType":"VariableDeclaration","scope":2859,"src":"7924:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7924:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"arguments":[{"id":2848,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"7976:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2846,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7949:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7965:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"7949:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7949:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7924:60:25"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2851,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8001:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2853,"indexExpression":{"id":2852,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"8010:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8001:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2855,"indexExpression":{"id":2854,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"8025:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8001:32:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2857,"indexExpression":{"id":2856,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"8034:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8001:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2843,"id":2858,"nodeType":"Return","src":"7994:55:25"}]},"functionSelector":"9cc7f708","id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"7855:9:25","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"realmId","nameLocation":"7873:7:25","nodeType":"VariableDeclaration","scope":2860,"src":"7865:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"7865:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7864:17:25"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"7905:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"7905:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7904:9:25"},"scope":2953,"src":"7846:210:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2892,"nodeType":"Block","src":"8154:215:25","statements":[{"assignments":[2870],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"realmId","nameLocation":"8172:7:25","nodeType":"VariableDeclaration","scope":2892,"src":"8164:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"8164:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"id":2873,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"8209:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2874,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8216:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2871,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"8182:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8198:10:25","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"8182:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8182:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8164:63:25"},{"assignments":[2878],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"realmIdVersion","nameLocation":"8245:14:25","nodeType":"VariableDeclaration","scope":2892,"src":"8237:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"8237:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2883,"initialValue":{"arguments":[{"id":2881,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"8289:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2879,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"8262:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8278:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"8262:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8262:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8237:60:25"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2884,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8314:8:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2886,"indexExpression":{"id":2885,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"8323:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8314:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2888,"indexExpression":{"id":2887,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"8338:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8314:32:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2890,"indexExpression":{"id":2889,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8347:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8314:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2868,"id":2891,"nodeType":"Return","src":"8307:55:25"}]},"functionSelector":"794459be","id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8071:9:25","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"parentNode","nameLocation":"8089:10:25","nodeType":"VariableDeclaration","scope":2893,"src":"8081:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8081:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"_name","nameLocation":"8115:5:25","nodeType":"VariableDeclaration","scope":2893,"src":"8101:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2863,"name":"string","nodeType":"ElementaryTypeName","src":"8101:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8080:41:25"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"8145:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8144:9:25"},"scope":2953,"src":"8062:307:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2929,"nodeType":"Block","src":"8500:223:25","statements":[{"assignments":[2907],"declarations":[{"constant":false,"id":2907,"mutability":"mutable","name":"realmIdVersion","nameLocation":"8518:14:25","nodeType":"VariableDeclaration","scope":2929,"src":"8510:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"8510:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2912,"initialValue":{"arguments":[{"id":2910,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8562:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2908,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"8535:15:25","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2979","typeString":"contract IRealmId"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8551:10:25","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"8535:26:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8510:60:25"},{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"payload","nameLocation":"8588:7:25","nodeType":"VariableDeclaration","scope":2929,"src":"8580:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8580:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2926,"initialValue":{"arguments":[{"arguments":[{"id":2918,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"8625:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2919,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"8634:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"8650:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2921,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"8658:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2922,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"8673:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2923,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"8685:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8608:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8612:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"8608:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8608:83:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2915,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8598:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:94:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8580:112:25"},{"expression":{"id":2927,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"8709:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2905,"id":2928,"nodeType":"Return","src":"8702:14:25"}]},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"_preparePayload","nameLocation":"8384:15:25","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"realmId","nameLocation":"8408:7:25","nodeType":"VariableDeclaration","scope":2930,"src":"8400:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"8400:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"amount","nameLocation":"8425:6:25","nodeType":"VariableDeclaration","scope":2930,"src":"8417:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"8417:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"nonce","nameLocation":"8441:5:25","nodeType":"VariableDeclaration","scope":2930,"src":"8433:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"8433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"reasonCode","nameLocation":"8456:10:25","nodeType":"VariableDeclaration","scope":2930,"src":"8448:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8448:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8399:68:25"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"8491:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8491:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8490:9:25"},"scope":2953,"src":"8375:348:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2951,"nodeType":"Block","src":"8836:87:25","statements":[{"expression":{"components":[{"arguments":[{"id":2942,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"8870:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2943,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"8879:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2944,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8887:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2946,"indexExpression":{"id":2945,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"8894:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8887:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2947,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"8904:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2941,"name":"_preparePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8854:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256,bytes32) view returns (bytes32)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8854:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8853:63:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2940,"id":2950,"nodeType":"Return","src":"8846:70:25"}]},"functionSelector":"df00bb24","id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"preparePayload","nameLocation":"8738:14:25","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"realmId","nameLocation":"8761:7:25","nodeType":"VariableDeclaration","scope":2952,"src":"8753:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"8753:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"amount","nameLocation":"8778:6:25","nodeType":"VariableDeclaration","scope":2952,"src":"8770:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"8770:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"reasonCode","nameLocation":"8794:10:25","nodeType":"VariableDeclaration","scope":2952,"src":"8786:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8786:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8752:53:25"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"8827:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8827:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8826:9:25"},"scope":2953,"src":"8729:194:25","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2954,"src":"773:8152:25","usedErrors":[180,196,785,907],"usedEvents":[215,224,235,962,969,974,1334,2217,2222,2227,2241,2257]}],"src":"32:8894:25"},"id":25},"contracts/MocaPoints/interface/IRealmId.sol":{"ast":{"absolutePath":"contracts/MocaPoints/interface/IRealmId.sol","exportedSymbols":{"IRealmId":[2979]},"id":2980,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2955,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"45:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IRealmId","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2979,"linearizedBaseContracts":[2979],"name":"IRealmId","nameLocation":"140:8:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a9735f94","id":2962,"implemented":false,"kind":"function","modifiers":[],"name":"burnCounts","nameLocation":"164:10:26","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"realmId","nameLocation":"183:7:26","nodeType":"VariableDeclaration","scope":2962,"src":"175:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"174:17:26"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"215:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"215:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214:9:26"},"scope":2979,"src":"155:69:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cad6b901","id":2971,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"239:10:26","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"name","nameLocation":"266:4:26","nodeType":"VariableDeclaration","scope":2971,"src":"250:20:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2963,"name":"string","nodeType":"ElementaryTypeName","src":"250:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"parentNode","nameLocation":"280:10:26","nodeType":"VariableDeclaration","scope":2971,"src":"272:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"272:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"249:42:26"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"315:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"314:9:26"},"scope":2979,"src":"230:94:26","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"6352211e","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"339:7:26","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"realmId","nameLocation":"355:7:26","nodeType":"VariableDeclaration","scope":2978,"src":"347:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"346:17:26"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"387:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"386:9:26"},"scope":2979,"src":"330:66:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2980,"src":"130:268:26","usedErrors":[],"usedEvents":[]}],"src":"45:354:26"},"id":26},"contracts/MocaPoints/mock/realmIdContract/MockRealmId.sol":{"ast":{"absolutePath":"contracts/MocaPoints/mock/realmIdContract/MockRealmId.sol","exportedSymbols":{"MockRealmId":[3017]},"id":3018,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2981,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"MockRealmId","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3017,"linearizedBaseContracts":[3017],"name":"MockRealmId","nameLocation":"66:11:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":2990,"nodeType":"Block","src":"143:25:27","statements":[{"expression":{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2987,"id":2989,"nodeType":"Return","src":"153:8:27"}]},"functionSelector":"a9735f94","id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"burnCounts","nameLocation":"93:10:27","nodeType":"FunctionDefinition","parameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"104:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"104:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103:9:27"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"134:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"134:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"133:9:27"},"scope":3017,"src":"84:84:27","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3002,"nodeType":"Block","src":"250:26:27","statements":[{"expression":{"hexValue":"3130","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"267:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"functionReturnParameters":2999,"id":3001,"nodeType":"Return","src":"260:9:27"}]},"functionSelector":"cad6b901","id":3003,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"183:10:27","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3003,"src":"194:15:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2992,"name":"string","nodeType":"ElementaryTypeName","src":"194:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3003,"src":"211:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"211:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"193:26:27"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3003,"src":"241:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:9:27"},"scope":3017,"src":"174:102:27","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3015,"nodeType":"Block","src":"338:75:27","statements":[{"expression":{"arguments":[{"hexValue":"307833433434436444644236613930306661326235383564643239396530336431324641343239334243","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"363:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"355:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:27","typeDescriptions":{}}},"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"355:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3009,"id":3014,"nodeType":"Return","src":"348:58:27"}]},"functionSelector":"6352211e","id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"291:7:27","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3016,"src":"299:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"298:9:27"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3016,"src":"329:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"329:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"328:9:27"},"scope":3017,"src":"282:131:27","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":3018,"src":"57:358:27","usedErrors":[],"usedEvents":[]}],"src":"32:384:27"},"id":27}},"contracts":{"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol":{"AccessControlBase":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"NotContractOwner","type":"error"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"NotRoleHolder","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"hasRole_","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract is to be used via inheritance in a proxied implementation.Note: This contract requires ERC173 (Contract Ownership standard).","errors":{"NotContractOwner(address)":[{"params":{"account":"The account that was checked."}}],"NotRoleHolder(bytes32,address)":[{"params":{"account":"The account that was checked.","role":"The role the caller is missing."}}]},"events":{"RoleGranted(bytes32,address,address)":{"params":{"account":"The account that has been granted the role.","operator":"The account that granted the role.","role":"The role that has been granted."}},"RoleRevoked(bytes32,address,address)":{"params":{"account":"The account that has been revoked the role.","operator":"The account that revoked the role.","role":"The role that has been revoked."}}},"kind":"dev","methods":{"grantRole(bytes32,address)":{"details":"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleGranted} event if the account did not previously have the role.","params":{"account":"The account to grant the role to.","role":"The role to grant."}},"hasRole(bytes32,address)":{"params":{"account":"The account.","role":"The role."},"returns":{"hasRole_":"Whether `account` has `role`."}},"renounceRole(bytes32)":{"details":"Reverts if `sender` does not have `role`.Emits a {RoleRevoked} event.","params":{"role":"The role to renounce."}},"revokeRole(bytes32,address)":{"details":"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleRevoked} event if the account previously had the role.","params":{"account":"The account to revoke the role from.","role":"The role to revoke."}}},"title":"Access control via roles management (proxiable version).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32)":"8bb9c5bf","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotContractOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotRoleHolder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasRole_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is to be used via inheritance in a proxied implementation.Note: This contract requires ERC173 (Contract Ownership standard).\",\"errors\":{\"NotContractOwner(address)\":[{\"params\":{\"account\":\"The account that was checked.\"}}],\"NotRoleHolder(bytes32,address)\":[{\"params\":{\"account\":\"The account that was checked.\",\"role\":\"The role the caller is missing.\"}}]},\"events\":{\"RoleGranted(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been granted the role.\",\"operator\":\"The account that granted the role.\",\"role\":\"The role that has been granted.\"}},\"RoleRevoked(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been revoked the role.\",\"operator\":\"The account that revoked the role.\",\"role\":\"The role that has been revoked.\"}}},\"kind\":\"dev\",\"methods\":{\"grantRole(bytes32,address)\":{\"details\":\"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleGranted} event if the account did not previously have the role.\",\"params\":{\"account\":\"The account to grant the role to.\",\"role\":\"The role to grant.\"}},\"hasRole(bytes32,address)\":{\"params\":{\"account\":\"The account.\",\"role\":\"The role.\"},\"returns\":{\"hasRole_\":\"Whether `account` has `role`.\"}},\"renounceRole(bytes32)\":{\"details\":\"Reverts if `sender` does not have `role`.Emits a {RoleRevoked} event.\",\"params\":{\"role\":\"The role to renounce.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleRevoked} event if the account previously had the role.\",\"params\":{\"account\":\"The account to revoke the role from.\",\"role\":\"The role to revoke.\"}}},\"title\":\"Access control via roles management (proxiable version).\",\"version\":1},\"userdoc\":{\"errors\":{\"NotContractOwner(address)\":[{\"notice\":\"Thrown when an account is not the contract owner but is required to.\"}],\"NotRoleHolder(bytes32,address)\":[{\"notice\":\"Thrown when an account does not have the required role.\"}]},\"events\":{\"RoleGranted(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is granted to `account`.\"},\"RoleRevoked(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is revoked from `account`.\"}},\"kind\":\"user\",\"methods\":{\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Retrieves whether an account has a role.\"},\"renounceRole(bytes32)\":{\"notice\":\"Renounces a role by the sender.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes a role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol\":\"AccessControlBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IAccessControl} from \\\"./../../access/interfaces/IAccessControl.sol\\\";\\nimport {AccessControlStorage} from \\\"./../libraries/AccessControlStorage.sol\\\";\\nimport {ContractOwnershipStorage} from \\\"./../libraries/ContractOwnershipStorage.sol\\\";\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/// @title Access control via roles management (proxiable version).\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC173 (Contract Ownership standard).\\nabstract contract AccessControlBase is IAccessControl, Context {\\n    using AccessControlStorage for AccessControlStorage.Layout;\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n\\n    /// @notice Grants a role to an account.\\n    /// @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\\n    /// @param role The role to grant.\\n    /// @param account The account to grant the role to.\\n    function grantRole(bytes32 role, address account) external {\\n        address operator = _msgSender();\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(operator);\\n        AccessControlStorage.layout().grantRole(role, account, operator);\\n    }\\n\\n    /// @notice Revokes a role from an account.\\n    /// @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\\n    /// @param role The role to revoke.\\n    /// @param account The account to revoke the role from.\\n    function revokeRole(bytes32 role, address account) external {\\n        address operator = _msgSender();\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(operator);\\n        AccessControlStorage.layout().revokeRole(role, account, operator);\\n    }\\n\\n    /// @inheritdoc IAccessControl\\n    function renounceRole(bytes32 role) external {\\n        AccessControlStorage.layout().renounceRole(_msgSender(), role);\\n    }\\n\\n    /// @inheritdoc IAccessControl\\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_) {\\n        return AccessControlStorage.layout().hasRole(role, account);\\n    }\\n}\\n\",\"keccak256\":\"0x922cf4abb506400feb78edab23e1cacddbd50541d345f460004e73a5eef182dc\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account does not have the required role.\\n/// @param role The role the caller is missing.\\n/// @param account The account that was checked.\\nerror NotRoleHolder(bytes32 role, address account);\\n\\n/// @notice Thrown when an account does not have the required role on a target contract.\\n/// @param targetContract The contract that was checked.\\n/// @param role The role that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractRoleHolder(address targetContract, bytes32 role, address account);\\n\",\"keccak256\":\"0x01f13fa7f5c5473314dabbd6b556d8e2036dc6e850e03ead0ea605ed4c4e16eb\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account is not the contract owner but is required to.\\n/// @param account The account that was checked.\\nerror NotContractOwner(address account);\\n\\n/// @notice Thrown when an account is not the target contract owner but is required to.\\n/// @param targetContract The contract that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractOwner(address targetContract, address account);\\n\",\"keccak256\":\"0x00d2942a00eeb8103ff9e5ea3f91e31458087aeebc615f26b9f8188cfcba698e\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title Access control via roles management (events)\\ninterface IAccessControlEvents {\\n    /// @notice Emitted when `role` is granted to `account`.\\n    /// @param role The role that has been granted.\\n    /// @param account The account that has been granted the role.\\n    /// @param operator The account that granted the role.\\n    event RoleGranted(bytes32 role, address account, address operator);\\n\\n    /// @notice Emitted when `role` is revoked from `account`.\\n    /// @param role The role that has been revoked.\\n    /// @param account The account that has been revoked the role.\\n    /// @param operator The account that revoked the role.\\n    event RoleRevoked(bytes32 role, address account, address operator);\\n}\\n\",\"keccak256\":\"0xc33eb3e7869dc886ff1bd5526494a67e2bea02185d8b54cacb2ad2d166faddcd\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC-173 Contract Ownership Standard (events)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173Events {\\n    /// @notice Emitted when the contract ownership changes.\\n    /// @param previousOwner the previous contract owner.\\n    /// @param newOwner the new contract owner.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xc2e60c72fac96170696024e07fc5650e270c6cf1a701af4aa0a945bd4b113877\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\n\\n/// @title Access control via roles management (functions)\\ninterface IAccessControl is IAccessControlEvents {\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param role The role to renounce.\\n    function renounceRole(bytes32 role) external;\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_);\\n}\\n\",\"keccak256\":\"0xf5548f89b99d4f4bdfe6ee694db7fb002457fe1a50ce381a5cb6b84019e032af\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\n\\n/// @title ERC-173 Contract Ownership Standard (functions)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 is IERC173Events {\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts if the sender is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner() external view returns (address contractOwner);\\n}\\n\",\"keccak256\":\"0xbb6b2221718a4abaa95b449cb42111c8b1840ea7e439d801d0fffe8a93bd9a18\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotRoleHolder, NotTargetContractRoleHolder} from \\\"./../errors/AccessControlErrors.sol\\\";\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\nimport {IAccessControl} from \\\"./../interfaces/IAccessControl.sol\\\";\\n\\nlibrary AccessControlStorage {\\n    using AccessControlStorage for AccessControlStorage.Layout;\\n\\n    struct Layout {\\n        mapping(bytes32 => mapping(address => bool)) roles;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.AccessControl.storage\\\")) - 1);\\n\\n    /// @notice Grants a role to an account.\\n    /// @dev Note: Call to this function should be properly access controlled.\\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\\n    /// @param role The role to grant.\\n    /// @param account The account to grant the role to.\\n    /// @param operator The account requesting the role change.\\n    function grantRole(Layout storage s, bytes32 role, address account, address operator) internal {\\n        if (!s.hasRole(role, account)) {\\n            s.roles[role][account] = true;\\n            emit IAccessControlEvents.RoleGranted(role, account, operator);\\n        }\\n    }\\n\\n    /// @notice Revokes a role from an account.\\n    /// @dev Note: Call to this function should be properly access controlled.\\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\\n    /// @param role The role to revoke.\\n    /// @param account The account to revoke the role from.\\n    /// @param operator The account requesting the role change.\\n    function revokeRole(Layout storage s, bytes32 role, address account, address operator) internal {\\n        if (s.hasRole(role, account)) {\\n            s.roles[role][account] = false;\\n            emit IAccessControlEvents.RoleRevoked(role, account, operator);\\n        }\\n    }\\n\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts with {NotRoleHolder} if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param sender The message sender.\\n    /// @param role The role to renounce.\\n    function renounceRole(Layout storage s, address sender, bytes32 role) internal {\\n        s.enforceHasRole(role, sender);\\n        s.roles[role][sender] = false;\\n        emit IAccessControlEvents.RoleRevoked(role, sender, sender);\\n    }\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(Layout storage s, bytes32 role, address account) internal view returns (bool hasRole_) {\\n        return s.roles[role][account];\\n    }\\n\\n    /// @notice Checks whether an account has a role in a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param role The role to check.\\n    /// @param account The account to check.\\n    /// @return hasTargetContractRole_ Whether `account` has `role` in `targetContract`.\\n    function hasTargetContractRole(address targetContract, bytes32 role, address account) internal view returns (bool hasTargetContractRole_) {\\n        return IAccessControl(targetContract).hasRole(role, account);\\n    }\\n\\n    /// @notice Ensures that an account has a role.\\n    /// @dev Reverts with {NotRoleHolder} if `account` does not have `role`.\\n    /// @param role The role.\\n    /// @param account The account.\\n    function enforceHasRole(Layout storage s, bytes32 role, address account) internal view {\\n        if (!s.hasRole(role, account)) revert NotRoleHolder(role, account);\\n    }\\n\\n    /// @notice Enforces that an account has a role in a target contract.\\n    /// @dev Reverts with {NotTargetContractRoleHolder} if the account does not have the role.\\n    /// @param targetContract The contract to check.\\n    /// @param role The role to check.\\n    /// @param account The account to check.\\n    function enforceHasTargetContractRole(address targetContract, bytes32 role, address account) internal view {\\n        if (!hasTargetContractRole(targetContract, role, account)) {\\n            revert NotTargetContractRoleHolder(targetContract, role, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x42e330c26f28436ae28d7f418331748fd0b3a64fc0f130b84a14b2eb013b3668\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotContractOwner, NotTargetContractOwner} from \\\"./../errors/ContractOwnershipErrors.sol\\\";\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\nimport {IERC173} from \\\"./../interfaces/IERC173.sol\\\";\\nimport {ProxyInitialization} from \\\"./../../proxy/libraries/ProxyInitialization.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"./../../introspection/libraries/InterfaceDetectionStorage.sol\\\";\\n\\nlibrary ContractOwnershipStorage {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        address contractOwner;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with an initial contract owner (immutable version).\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function constructorInit(Layout storage s, address initialOwner) internal {\\n        if (initialOwner != address(0)) {\\n            s.contractOwner = initialOwner;\\n            emit IERC173Events.OwnershipTransferred(address(0), initialOwner);\\n        }\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC173).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with an initial contract owner (proxied version).\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function proxyInit(Layout storage s, address initialOwner) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(initialOwner);\\n    }\\n\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `sender` is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(Layout storage s, address sender, address newOwner) internal {\\n        address previousOwner = s.contractOwner;\\n        if (sender != previousOwner) revert NotContractOwner(sender);\\n        if (previousOwner != newOwner) {\\n            s.contractOwner = newOwner;\\n            emit IERC173Events.OwnershipTransferred(previousOwner, newOwner);\\n        }\\n    }\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner(Layout storage s) internal view returns (address contractOwner) {\\n        return s.contractOwner;\\n    }\\n\\n    /// @notice Checks whether an account is the owner of a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    /// @return isTargetContractOwner_ Whether `account` is the owner of `targetContract`.\\n    function isTargetContractOwner(address targetContract, address account) internal view returns (bool isTargetContractOwner_) {\\n        return IERC173(targetContract).owner() == account;\\n    }\\n\\n    /// @notice Ensures that an account is the contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `account` is not the contract owner.\\n    /// @param account The account.\\n    function enforceIsContractOwner(Layout storage s, address account) internal view {\\n        if (account != s.contractOwner) revert NotContractOwner(account);\\n    }\\n\\n    /// @notice Enforces that an account is the owner of a target contract.\\n    /// @dev Reverts with {NotTheTargetContractOwner} if the account is not the owner.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    function enforceIsTargetContractOwner(address targetContract, address account) internal view {\\n        if (!isTargetContractOwner(targetContract, account)) {\\n            revert NotTargetContractOwner(targetContract, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd1d10d7304df028a482fe9d2c8e6280ed69abee1c5a392aae2c1da9291d81e1\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0x14e798b909b7215752bc10da92caf9ba8edcd8ff70ec2300e0a6f9c7972ec31c\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x22ffd665621114141366ce3d054fe7e4934979e827db9eb26fa9297bf0270662\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba3584cfcf74c44441e971745559a0d475a8145548bfd67407f6acb2c9dd2eec\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x65cba678628c092823ff6d4075d952b1e9de71f59c15309f459b71301a135993\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0xf7b57ddf1642ee542e64a4966dca8e32d0bada2591d2eb713bba2e5a3ef54a3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"errors":{"NotContractOwner(address)":[{"notice":"Thrown when an account is not the contract owner but is required to."}],"NotRoleHolder(bytes32,address)":[{"notice":"Thrown when an account does not have the required role."}]},"events":{"RoleGranted(bytes32,address,address)":{"notice":"Emitted when `role` is granted to `account`."},"RoleRevoked(bytes32,address,address)":{"notice":"Emitted when `role` is revoked from `account`."}},"kind":"user","methods":{"grantRole(bytes32,address)":{"notice":"Grants a role to an account."},"hasRole(bytes32,address)":{"notice":"Retrieves whether an account has a role."},"renounceRole(bytes32)":{"notice":"Renounces a role by the sender."},"revokeRole(bytes32,address)":{"notice":"Revokes a role from an account."}},"version":1}}},"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol":{"ContractOwnershipBase":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"NotContractOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-173This contract is to be used via inheritance in a proxied implementation.Note: This contract requires ERC165 (Interface Detection Standard).","errors":{"NotContractOwner(address)":[{"params":{"account":"The account that was checked."}}]},"events":{"OwnershipTransferred(address,address)":{"params":{"newOwner":"the new contract owner.","previousOwner":"the previous contract owner."}}},"kind":"dev","methods":{"owner()":{"returns":{"_0":"The address of the contract owner."}},"transferOwnership(address)":{"details":"Reverts if the sender is not the contract owner.Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.","params":{"newOwner":"The address of the new contract owner. Using the zero address means renouncing ownership."}}},"title":"ERC173 Contract Ownership Standard (proxiable version).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotContractOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-173This contract is to be used via inheritance in a proxied implementation.Note: This contract requires ERC165 (Interface Detection Standard).\",\"errors\":{\"NotContractOwner(address)\":[{\"params\":{\"account\":\"The account that was checked.\"}}]},\"events\":{\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"the new contract owner.\",\"previousOwner\":\"the previous contract owner.\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"The address of the contract owner.\"}},\"transferOwnership(address)\":{\"details\":\"Reverts if the sender is not the contract owner.Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\",\"params\":{\"newOwner\":\"The address of the new contract owner. Using the zero address means renouncing ownership.\"}}},\"title\":\"ERC173 Contract Ownership Standard (proxiable version).\",\"version\":1},\"userdoc\":{\"errors\":{\"NotContractOwner(address)\":[{\"notice\":\"Thrown when an account is not the contract owner but is required to.\"}]},\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Emitted when the contract ownership changes.\"}},\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Gets the address of the contract owner.\"},\"transferOwnership(address)\":{\"notice\":\"Sets the address of the new contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol\":\"ContractOwnershipBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173} from \\\"./../interfaces/IERC173.sol\\\";\\nimport {ContractOwnershipStorage} from \\\"./../libraries/ContractOwnershipStorage.sol\\\";\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/// @title ERC173 Contract Ownership Standard (proxiable version).\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\\nabstract contract ContractOwnershipBase is IERC173, Context {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n\\n    /// @inheritdoc IERC173\\n    function owner() public view virtual returns (address) {\\n        return ContractOwnershipStorage.layout().owner();\\n    }\\n\\n    /// @inheritdoc IERC173\\n    function transferOwnership(address newOwner) public virtual {\\n        ContractOwnershipStorage.layout().transferOwnership(_msgSender(), newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xe13f43f5bdef2f333ddc9dc27bd7153d2c00911d6b6516dd5755d9f3ad5dc12a\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account is not the contract owner but is required to.\\n/// @param account The account that was checked.\\nerror NotContractOwner(address account);\\n\\n/// @notice Thrown when an account is not the target contract owner but is required to.\\n/// @param targetContract The contract that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractOwner(address targetContract, address account);\\n\",\"keccak256\":\"0x00d2942a00eeb8103ff9e5ea3f91e31458087aeebc615f26b9f8188cfcba698e\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC-173 Contract Ownership Standard (events)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173Events {\\n    /// @notice Emitted when the contract ownership changes.\\n    /// @param previousOwner the previous contract owner.\\n    /// @param newOwner the new contract owner.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xc2e60c72fac96170696024e07fc5650e270c6cf1a701af4aa0a945bd4b113877\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\n\\n/// @title ERC-173 Contract Ownership Standard (functions)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 is IERC173Events {\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts if the sender is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner() external view returns (address contractOwner);\\n}\\n\",\"keccak256\":\"0xbb6b2221718a4abaa95b449cb42111c8b1840ea7e439d801d0fffe8a93bd9a18\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotContractOwner, NotTargetContractOwner} from \\\"./../errors/ContractOwnershipErrors.sol\\\";\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\nimport {IERC173} from \\\"./../interfaces/IERC173.sol\\\";\\nimport {ProxyInitialization} from \\\"./../../proxy/libraries/ProxyInitialization.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"./../../introspection/libraries/InterfaceDetectionStorage.sol\\\";\\n\\nlibrary ContractOwnershipStorage {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        address contractOwner;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with an initial contract owner (immutable version).\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function constructorInit(Layout storage s, address initialOwner) internal {\\n        if (initialOwner != address(0)) {\\n            s.contractOwner = initialOwner;\\n            emit IERC173Events.OwnershipTransferred(address(0), initialOwner);\\n        }\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC173).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with an initial contract owner (proxied version).\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function proxyInit(Layout storage s, address initialOwner) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(initialOwner);\\n    }\\n\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `sender` is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(Layout storage s, address sender, address newOwner) internal {\\n        address previousOwner = s.contractOwner;\\n        if (sender != previousOwner) revert NotContractOwner(sender);\\n        if (previousOwner != newOwner) {\\n            s.contractOwner = newOwner;\\n            emit IERC173Events.OwnershipTransferred(previousOwner, newOwner);\\n        }\\n    }\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner(Layout storage s) internal view returns (address contractOwner) {\\n        return s.contractOwner;\\n    }\\n\\n    /// @notice Checks whether an account is the owner of a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    /// @return isTargetContractOwner_ Whether `account` is the owner of `targetContract`.\\n    function isTargetContractOwner(address targetContract, address account) internal view returns (bool isTargetContractOwner_) {\\n        return IERC173(targetContract).owner() == account;\\n    }\\n\\n    /// @notice Ensures that an account is the contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `account` is not the contract owner.\\n    /// @param account The account.\\n    function enforceIsContractOwner(Layout storage s, address account) internal view {\\n        if (account != s.contractOwner) revert NotContractOwner(account);\\n    }\\n\\n    /// @notice Enforces that an account is the owner of a target contract.\\n    /// @dev Reverts with {NotTheTargetContractOwner} if the account is not the owner.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    function enforceIsTargetContractOwner(address targetContract, address account) internal view {\\n        if (!isTargetContractOwner(targetContract, account)) {\\n            revert NotTargetContractOwner(targetContract, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd1d10d7304df028a482fe9d2c8e6280ed69abee1c5a392aae2c1da9291d81e1\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0x14e798b909b7215752bc10da92caf9ba8edcd8ff70ec2300e0a6f9c7972ec31c\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x22ffd665621114141366ce3d054fe7e4934979e827db9eb26fa9297bf0270662\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba3584cfcf74c44441e971745559a0d475a8145548bfd67407f6acb2c9dd2eec\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x65cba678628c092823ff6d4075d952b1e9de71f59c15309f459b71301a135993\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0xf7b57ddf1642ee542e64a4966dca8e32d0bada2591d2eb713bba2e5a3ef54a3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"errors":{"NotContractOwner(address)":[{"notice":"Thrown when an account is not the contract owner but is required to."}]},"events":{"OwnershipTransferred(address,address)":{"notice":"Emitted when the contract ownership changes."}},"kind":"user","methods":{"owner()":{"notice":"Gets the address of the contract owner."},"transferOwnership(address)":{"notice":"Sets the address of the new contract owner."}},"version":1}}},"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol":{"IAccessControlEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleRevoked","type":"event"}],"devdoc":{"events":{"RoleGranted(bytes32,address,address)":{"params":{"account":"The account that has been granted the role.","operator":"The account that granted the role.","role":"The role that has been granted."}},"RoleRevoked(bytes32,address,address)":{"params":{"account":"The account that has been revoked the role.","operator":"The account that revoked the role.","role":"The role that has been revoked."}}},"kind":"dev","methods":{},"title":"Access control via roles management (events)","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"RoleGranted(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been granted the role.\",\"operator\":\"The account that granted the role.\",\"role\":\"The role that has been granted.\"}},\"RoleRevoked(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been revoked the role.\",\"operator\":\"The account that revoked the role.\",\"role\":\"The role that has been revoked.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Access control via roles management (events)\",\"version\":1},\"userdoc\":{\"events\":{\"RoleGranted(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is granted to `account`.\"},\"RoleRevoked(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is revoked from `account`.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol\":\"IAccessControlEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title Access control via roles management (events)\\ninterface IAccessControlEvents {\\n    /// @notice Emitted when `role` is granted to `account`.\\n    /// @param role The role that has been granted.\\n    /// @param account The account that has been granted the role.\\n    /// @param operator The account that granted the role.\\n    event RoleGranted(bytes32 role, address account, address operator);\\n\\n    /// @notice Emitted when `role` is revoked from `account`.\\n    /// @param role The role that has been revoked.\\n    /// @param account The account that has been revoked the role.\\n    /// @param operator The account that revoked the role.\\n    event RoleRevoked(bytes32 role, address account, address operator);\\n}\\n\",\"keccak256\":\"0xc33eb3e7869dc886ff1bd5526494a67e2bea02185d8b54cacb2ad2d166faddcd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"RoleGranted(bytes32,address,address)":{"notice":"Emitted when `role` is granted to `account`."},"RoleRevoked(bytes32,address,address)":{"notice":"Emitted when `role` is revoked from `account`."}},"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol":{"IERC173Events":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-173Note: the ERC-165 identifier for this interface is 0x7f5828d0","events":{"OwnershipTransferred(address,address)":{"params":{"newOwner":"the new contract owner.","previousOwner":"the previous contract owner."}}},"kind":"dev","methods":{},"title":"ERC-173 Contract Ownership Standard (events)","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-173Note: the ERC-165 identifier for this interface is 0x7f5828d0\",\"events\":{\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"the new contract owner.\",\"previousOwner\":\"the previous contract owner.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC-173 Contract Ownership Standard (events)\",\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Emitted when the contract ownership changes.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":\"IERC173Events\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC-173 Contract Ownership Standard (events)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173Events {\\n    /// @notice Emitted when the contract ownership changes.\\n    /// @param previousOwner the previous contract owner.\\n    /// @param newOwner the new contract owner.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xc2e60c72fac96170696024e07fc5650e270c6cf1a701af4aa0a945bd4b113877\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"OwnershipTransferred(address,address)":{"notice":"Emitted when the contract ownership changes."}},"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"hasRole_","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"RoleGranted(bytes32,address,address)":{"params":{"account":"The account that has been granted the role.","operator":"The account that granted the role.","role":"The role that has been granted."}},"RoleRevoked(bytes32,address,address)":{"params":{"account":"The account that has been revoked the role.","operator":"The account that revoked the role.","role":"The role that has been revoked."}}},"kind":"dev","methods":{"hasRole(bytes32,address)":{"params":{"account":"The account.","role":"The role."},"returns":{"hasRole_":"Whether `account` has `role`."}},"renounceRole(bytes32)":{"details":"Reverts if `sender` does not have `role`.Emits a {RoleRevoked} event.","params":{"role":"The role to renounce."}}},"title":"Access control via roles management (functions)","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"hasRole(bytes32,address)":"91d14854","renounceRole(bytes32)":"8bb9c5bf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasRole_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleGranted(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been granted the role.\",\"operator\":\"The account that granted the role.\",\"role\":\"The role that has been granted.\"}},\"RoleRevoked(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been revoked the role.\",\"operator\":\"The account that revoked the role.\",\"role\":\"The role that has been revoked.\"}}},\"kind\":\"dev\",\"methods\":{\"hasRole(bytes32,address)\":{\"params\":{\"account\":\"The account.\",\"role\":\"The role.\"},\"returns\":{\"hasRole_\":\"Whether `account` has `role`.\"}},\"renounceRole(bytes32)\":{\"details\":\"Reverts if `sender` does not have `role`.Emits a {RoleRevoked} event.\",\"params\":{\"role\":\"The role to renounce.\"}}},\"title\":\"Access control via roles management (functions)\",\"version\":1},\"userdoc\":{\"events\":{\"RoleGranted(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is granted to `account`.\"},\"RoleRevoked(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is revoked from `account`.\"}},\"kind\":\"user\",\"methods\":{\"hasRole(bytes32,address)\":{\"notice\":\"Retrieves whether an account has a role.\"},\"renounceRole(bytes32)\":{\"notice\":\"Renounces a role by the sender.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title Access control via roles management (events)\\ninterface IAccessControlEvents {\\n    /// @notice Emitted when `role` is granted to `account`.\\n    /// @param role The role that has been granted.\\n    /// @param account The account that has been granted the role.\\n    /// @param operator The account that granted the role.\\n    event RoleGranted(bytes32 role, address account, address operator);\\n\\n    /// @notice Emitted when `role` is revoked from `account`.\\n    /// @param role The role that has been revoked.\\n    /// @param account The account that has been revoked the role.\\n    /// @param operator The account that revoked the role.\\n    event RoleRevoked(bytes32 role, address account, address operator);\\n}\\n\",\"keccak256\":\"0xc33eb3e7869dc886ff1bd5526494a67e2bea02185d8b54cacb2ad2d166faddcd\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\n\\n/// @title Access control via roles management (functions)\\ninterface IAccessControl is IAccessControlEvents {\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param role The role to renounce.\\n    function renounceRole(bytes32 role) external;\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_);\\n}\\n\",\"keccak256\":\"0xf5548f89b99d4f4bdfe6ee694db7fb002457fe1a50ce381a5cb6b84019e032af\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"RoleGranted(bytes32,address,address)":{"notice":"Emitted when `role` is granted to `account`."},"RoleRevoked(bytes32,address,address)":{"notice":"Emitted when `role` is revoked from `account`."}},"kind":"user","methods":{"hasRole(bytes32,address)":{"notice":"Retrieves whether an account has a role."},"renounceRole(bytes32)":{"notice":"Renounces a role by the sender."}},"version":1}}},"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol":{"IERC173":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"contractOwner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-173Note: the ERC-165 identifier for this interface is 0x7f5828d0","events":{"OwnershipTransferred(address,address)":{"params":{"newOwner":"the new contract owner.","previousOwner":"the previous contract owner."}}},"kind":"dev","methods":{"owner()":{"returns":{"contractOwner":"The address of the contract owner."}},"transferOwnership(address)":{"details":"Reverts if the sender is not the contract owner.Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.","params":{"newOwner":"The address of the new contract owner. Using the zero address means renouncing ownership."}}},"title":"ERC-173 Contract Ownership Standard (functions)","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-173Note: the ERC-165 identifier for this interface is 0x7f5828d0\",\"events\":{\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"the new contract owner.\",\"previousOwner\":\"the previous contract owner.\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"contractOwner\":\"The address of the contract owner.\"}},\"transferOwnership(address)\":{\"details\":\"Reverts if the sender is not the contract owner.Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\",\"params\":{\"newOwner\":\"The address of the new contract owner. Using the zero address means renouncing ownership.\"}}},\"title\":\"ERC-173 Contract Ownership Standard (functions)\",\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Emitted when the contract ownership changes.\"}},\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Gets the address of the contract owner.\"},\"transferOwnership(address)\":{\"notice\":\"Sets the address of the new contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol\":\"IERC173\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC-173 Contract Ownership Standard (events)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173Events {\\n    /// @notice Emitted when the contract ownership changes.\\n    /// @param previousOwner the previous contract owner.\\n    /// @param newOwner the new contract owner.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xc2e60c72fac96170696024e07fc5650e270c6cf1a701af4aa0a945bd4b113877\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\n\\n/// @title ERC-173 Contract Ownership Standard (functions)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 is IERC173Events {\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts if the sender is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner() external view returns (address contractOwner);\\n}\\n\",\"keccak256\":\"0xbb6b2221718a4abaa95b449cb42111c8b1840ea7e439d801d0fffe8a93bd9a18\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"OwnershipTransferred(address,address)":{"notice":"Emitted when the contract ownership changes."}},"kind":"user","methods":{"owner()":{"notice":"Gets the address of the contract owner."},"transferOwnership(address)":{"notice":"Sets the address of the new contract owner."}},"version":1}}},"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol":{"AccessControlStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203584e9d93c5ce342d68bb62626cb08c14aaaf047276e2d0c6cdf3b77d46f93e064736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP5 0xE9 0xD9 EXTCODECOPY 0x5C 0xE3 TIMESTAMP 0xD6 DUP12 0xB6 0x26 0x26 0xCB ADDMOD 0xC1 0x4A 0xAA CREATE SELFBALANCE 0x27 PUSH15 0x2D0C6CDF3B77D46F93E064736F6C63 NUMBER STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"297:4098:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:4098:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203584e9d93c5ce342d68bb62626cb08c14aaaf047276e2d0c6cdf3b77d46f93e064736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP5 0xE9 0xD9 EXTCODECOPY 0x5C 0xE3 TIMESTAMP 0xD6 DUP12 0xB6 0x26 0x26 0xCB ADDMOD 0xC1 0x4A 0xAA CREATE SELFBALANCE 0x27 PUSH15 0x2D0C6CDF3B77D46F93E064736F6C63 NUMBER STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"297:4098:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"enforceHasRole(struct AccessControlStorage.Layout storage pointer,bytes32,address)":"infinite","enforceHasTargetContractRole(address,bytes32,address)":"infinite","grantRole(struct AccessControlStorage.Layout storage pointer,bytes32,address,address)":"infinite","hasRole(struct AccessControlStorage.Layout storage pointer,bytes32,address)":"infinite","hasTargetContractRole(address,bytes32,address)":"infinite","layout()":"infinite","renounceRole(struct AccessControlStorage.Layout storage pointer,address,bytes32)":"infinite","revokeRole(struct AccessControlStorage.Layout storage pointer,bytes32,address,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol\":\"AccessControlStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account does not have the required role.\\n/// @param role The role the caller is missing.\\n/// @param account The account that was checked.\\nerror NotRoleHolder(bytes32 role, address account);\\n\\n/// @notice Thrown when an account does not have the required role on a target contract.\\n/// @param targetContract The contract that was checked.\\n/// @param role The role that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractRoleHolder(address targetContract, bytes32 role, address account);\\n\",\"keccak256\":\"0x01f13fa7f5c5473314dabbd6b556d8e2036dc6e850e03ead0ea605ed4c4e16eb\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title Access control via roles management (events)\\ninterface IAccessControlEvents {\\n    /// @notice Emitted when `role` is granted to `account`.\\n    /// @param role The role that has been granted.\\n    /// @param account The account that has been granted the role.\\n    /// @param operator The account that granted the role.\\n    event RoleGranted(bytes32 role, address account, address operator);\\n\\n    /// @notice Emitted when `role` is revoked from `account`.\\n    /// @param role The role that has been revoked.\\n    /// @param account The account that has been revoked the role.\\n    /// @param operator The account that revoked the role.\\n    event RoleRevoked(bytes32 role, address account, address operator);\\n}\\n\",\"keccak256\":\"0xc33eb3e7869dc886ff1bd5526494a67e2bea02185d8b54cacb2ad2d166faddcd\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\n\\n/// @title Access control via roles management (functions)\\ninterface IAccessControl is IAccessControlEvents {\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param role The role to renounce.\\n    function renounceRole(bytes32 role) external;\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_);\\n}\\n\",\"keccak256\":\"0xf5548f89b99d4f4bdfe6ee694db7fb002457fe1a50ce381a5cb6b84019e032af\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotRoleHolder, NotTargetContractRoleHolder} from \\\"./../errors/AccessControlErrors.sol\\\";\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\nimport {IAccessControl} from \\\"./../interfaces/IAccessControl.sol\\\";\\n\\nlibrary AccessControlStorage {\\n    using AccessControlStorage for AccessControlStorage.Layout;\\n\\n    struct Layout {\\n        mapping(bytes32 => mapping(address => bool)) roles;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.AccessControl.storage\\\")) - 1);\\n\\n    /// @notice Grants a role to an account.\\n    /// @dev Note: Call to this function should be properly access controlled.\\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\\n    /// @param role The role to grant.\\n    /// @param account The account to grant the role to.\\n    /// @param operator The account requesting the role change.\\n    function grantRole(Layout storage s, bytes32 role, address account, address operator) internal {\\n        if (!s.hasRole(role, account)) {\\n            s.roles[role][account] = true;\\n            emit IAccessControlEvents.RoleGranted(role, account, operator);\\n        }\\n    }\\n\\n    /// @notice Revokes a role from an account.\\n    /// @dev Note: Call to this function should be properly access controlled.\\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\\n    /// @param role The role to revoke.\\n    /// @param account The account to revoke the role from.\\n    /// @param operator The account requesting the role change.\\n    function revokeRole(Layout storage s, bytes32 role, address account, address operator) internal {\\n        if (s.hasRole(role, account)) {\\n            s.roles[role][account] = false;\\n            emit IAccessControlEvents.RoleRevoked(role, account, operator);\\n        }\\n    }\\n\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts with {NotRoleHolder} if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param sender The message sender.\\n    /// @param role The role to renounce.\\n    function renounceRole(Layout storage s, address sender, bytes32 role) internal {\\n        s.enforceHasRole(role, sender);\\n        s.roles[role][sender] = false;\\n        emit IAccessControlEvents.RoleRevoked(role, sender, sender);\\n    }\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(Layout storage s, bytes32 role, address account) internal view returns (bool hasRole_) {\\n        return s.roles[role][account];\\n    }\\n\\n    /// @notice Checks whether an account has a role in a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param role The role to check.\\n    /// @param account The account to check.\\n    /// @return hasTargetContractRole_ Whether `account` has `role` in `targetContract`.\\n    function hasTargetContractRole(address targetContract, bytes32 role, address account) internal view returns (bool hasTargetContractRole_) {\\n        return IAccessControl(targetContract).hasRole(role, account);\\n    }\\n\\n    /// @notice Ensures that an account has a role.\\n    /// @dev Reverts with {NotRoleHolder} if `account` does not have `role`.\\n    /// @param role The role.\\n    /// @param account The account.\\n    function enforceHasRole(Layout storage s, bytes32 role, address account) internal view {\\n        if (!s.hasRole(role, account)) revert NotRoleHolder(role, account);\\n    }\\n\\n    /// @notice Enforces that an account has a role in a target contract.\\n    /// @dev Reverts with {NotTargetContractRoleHolder} if the account does not have the role.\\n    /// @param targetContract The contract to check.\\n    /// @param role The role to check.\\n    /// @param account The account to check.\\n    function enforceHasTargetContractRole(address targetContract, bytes32 role, address account) internal view {\\n        if (!hasTargetContractRole(targetContract, role, account)) {\\n            revert NotTargetContractRoleHolder(targetContract, role, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x42e330c26f28436ae28d7f418331748fd0b3a64fc0f130b84a14b2eb013b3668\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol":{"ContractOwnershipStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034dcb428e725345ca9b542f2a3d6fefb6cf92e4bfba4d3f2bba95b8c031d6ee264736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xDC 0xB4 0x28 0xE7 0x25 CALLVALUE 0x5C 0xA9 0xB5 TIMESTAMP CALLCODE LOG3 0xD6 INVALID 0xFB PUSH13 0xF92E4BFBA4D3F2BBA95B8C031D PUSH15 0xE264736F6C63430008150033000000 ","sourceMap":"461:4580:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;461:4580:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034dcb428e725345ca9b542f2a3d6fefb6cf92e4bfba4d3f2bba95b8c031d6ee264736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xDC 0xB4 0x28 0xE7 0x25 CALLVALUE 0x5C 0xA9 0xB5 TIMESTAMP CALLCODE LOG3 0xD6 INVALID 0xFB PUSH13 0xF92E4BFBA4D3F2BBA95B8C031D PUSH15 0xE264736F6C63430008150033000000 ","sourceMap":"461:4580:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"constructorInit(struct ContractOwnershipStorage.Layout storage pointer,address)":"infinite","enforceIsContractOwner(struct ContractOwnershipStorage.Layout storage pointer,address)":"infinite","enforceIsTargetContractOwner(address,address)":"infinite","isTargetContractOwner(address,address)":"infinite","layout()":"infinite","owner(struct ContractOwnershipStorage.Layout storage pointer)":"infinite","proxyInit(struct ContractOwnershipStorage.Layout storage pointer,address)":"infinite","transferOwnership(struct ContractOwnershipStorage.Layout storage pointer,address,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\":\"ContractOwnershipStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account is not the contract owner but is required to.\\n/// @param account The account that was checked.\\nerror NotContractOwner(address account);\\n\\n/// @notice Thrown when an account is not the target contract owner but is required to.\\n/// @param targetContract The contract that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractOwner(address targetContract, address account);\\n\",\"keccak256\":\"0x00d2942a00eeb8103ff9e5ea3f91e31458087aeebc615f26b9f8188cfcba698e\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC-173 Contract Ownership Standard (events)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173Events {\\n    /// @notice Emitted when the contract ownership changes.\\n    /// @param previousOwner the previous contract owner.\\n    /// @param newOwner the new contract owner.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xc2e60c72fac96170696024e07fc5650e270c6cf1a701af4aa0a945bd4b113877\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\n\\n/// @title ERC-173 Contract Ownership Standard (functions)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 is IERC173Events {\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts if the sender is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner() external view returns (address contractOwner);\\n}\\n\",\"keccak256\":\"0xbb6b2221718a4abaa95b449cb42111c8b1840ea7e439d801d0fffe8a93bd9a18\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotContractOwner, NotTargetContractOwner} from \\\"./../errors/ContractOwnershipErrors.sol\\\";\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\nimport {IERC173} from \\\"./../interfaces/IERC173.sol\\\";\\nimport {ProxyInitialization} from \\\"./../../proxy/libraries/ProxyInitialization.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"./../../introspection/libraries/InterfaceDetectionStorage.sol\\\";\\n\\nlibrary ContractOwnershipStorage {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        address contractOwner;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with an initial contract owner (immutable version).\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function constructorInit(Layout storage s, address initialOwner) internal {\\n        if (initialOwner != address(0)) {\\n            s.contractOwner = initialOwner;\\n            emit IERC173Events.OwnershipTransferred(address(0), initialOwner);\\n        }\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC173).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with an initial contract owner (proxied version).\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function proxyInit(Layout storage s, address initialOwner) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(initialOwner);\\n    }\\n\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `sender` is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(Layout storage s, address sender, address newOwner) internal {\\n        address previousOwner = s.contractOwner;\\n        if (sender != previousOwner) revert NotContractOwner(sender);\\n        if (previousOwner != newOwner) {\\n            s.contractOwner = newOwner;\\n            emit IERC173Events.OwnershipTransferred(previousOwner, newOwner);\\n        }\\n    }\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner(Layout storage s) internal view returns (address contractOwner) {\\n        return s.contractOwner;\\n    }\\n\\n    /// @notice Checks whether an account is the owner of a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    /// @return isTargetContractOwner_ Whether `account` is the owner of `targetContract`.\\n    function isTargetContractOwner(address targetContract, address account) internal view returns (bool isTargetContractOwner_) {\\n        return IERC173(targetContract).owner() == account;\\n    }\\n\\n    /// @notice Ensures that an account is the contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `account` is not the contract owner.\\n    /// @param account The account.\\n    function enforceIsContractOwner(Layout storage s, address account) internal view {\\n        if (account != s.contractOwner) revert NotContractOwner(account);\\n    }\\n\\n    /// @notice Enforces that an account is the owner of a target contract.\\n    /// @dev Reverts with {NotTheTargetContractOwner} if the account is not the owner.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    function enforceIsTargetContractOwner(address targetContract, address account) internal view {\\n        if (!isTargetContractOwner(targetContract, account)) {\\n            revert NotTargetContractOwner(targetContract, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd1d10d7304df028a482fe9d2c8e6280ed69abee1c5a392aae2c1da9291d81e1\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0x14e798b909b7215752bc10da92caf9ba8edcd8ff70ec2300e0a6f9c7972ec31c\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x22ffd665621114141366ce3d054fe7e4934979e827db9eb26fa9297bf0270662\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba3584cfcf74c44441e971745559a0d475a8145548bfd67407f6acb2c9dd2eec\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x65cba678628c092823ff6d4075d952b1e9de71f59c15309f459b71301a135993\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0xf7b57ddf1642ee542e64a4966dca8e32d0bada2591d2eb713bba2e5a3ef54a3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"supported","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-165.Note: The ERC-165 identifier for this interface is 0x01ffc9a7.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Note: This function call must use less than 30 000 gas.","params":{"interfaceId":"the interface identifier to test."},"returns":{"supported":"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."}}},"title":"ERC165 Interface Detection Standard.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-165.Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Note: This function call must use less than 30 000 gas.\",\"params\":{\"interfaceId\":\"the interface identifier to test.\"},\"returns\":{\"supported\":\"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\"}}},\"title\":\"ERC165 Interface Detection Standard.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract implements a given interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x22ffd665621114141366ce3d054fe7e4934979e827db9eb26fa9297bf0270662\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Returns whether this contract implements a given interface."}},"version":1}}},"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol":{"InterfaceDetectionStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abd2a005c4507c98ccd917ab1fbd496bab7c55873eb067513adf485da2b2866e64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xD2 LOG0 SDIV 0xC4 POP PUSH29 0x98CCD917AB1FBD496BAB7C55873EB067513ADF485DA2B2866E64736F6C PUSH4 0x43000815 STOP CALLER ","sourceMap":"189:1692:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;189:1692:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abd2a005c4507c98ccd917ab1fbd496bab7c55873eb067513adf485da2b2866e64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xD2 LOG0 SDIV 0xC4 POP PUSH29 0x98CCD917AB1FBD496BAB7C55873EB067513ADF485DA2B2866E64736F6C PUSH4 0x43000815 STOP CALLER ","sourceMap":"189:1692:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"layout()":"infinite","setSupportedInterface(struct InterfaceDetectionStorage.Layout storage pointer,bytes4,bool)":"infinite","supportsInterface(struct InterfaceDetectionStorage.Layout storage pointer,bytes4)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":\"InterfaceDetectionStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0x14e798b909b7215752bc10da92caf9ba8edcd8ff70ec2300e0a6f9c7972ec31c\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x22ffd665621114141366ce3d054fe7e4934979e827db9eb26fa9297bf0270662\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba3584cfcf74c44441e971745559a0d475a8145548bfd67407f6acb2c9dd2eec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol":{"ProxyInitialization":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207163aad0d24dfbf938674c77a52d35ddf2388f2140eef8a65b17a332babca60c64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x63AAD0D24DFBF938674C77A52D35DDF2388F 0x21 BLOCKHASH 0xEE 0xF8 0xA6 JUMPDEST OR LOG3 ORIGIN 0xBA 0xBC 0xA6 0xC PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"319:712:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;319:712:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207163aad0d24dfbf938674c77a52d35ddf2388f2140eef8a65b17a332babca60c64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x63AAD0D24DFBF938674C77A52D35DDF2388F 0x21 BLOCKHASH 0xEE 0xF8 0xA6 JUMPDEST OR LOG3 ORIGIN 0xBA 0xBC 0xA6 0xC PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"319:712:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"setPhase(bytes32,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Multiple calls protection for storage-modifying proxy initialization functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":\"ProxyInitialization\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x65cba678628c092823ff6d4075d952b1e9de71f59c15309f459b71301a135993\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0xf7b57ddf1642ee542e64a4966dca8e32d0bada2591d2eb713bba2e5a3ef54a3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Multiple calls protection for storage-modifying proxy initialization functions.","version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1329,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1308,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1329,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1329,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1308,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1623,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087cb31f628dc53824618bcdd91cfac0e52ee53f1c35546a3d7a7fb8c665163e164736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xCB BALANCE 0xF6 0x28 0xDC MSTORE8 DUP3 CHAINID XOR 0xBC 0xDD SWAP2 0xCF 0xAC 0xE MSTORE 0xEE MSTORE8 CALL 0xC3 SSTORE CHAINID LOG3 0xD7 0xA7 0xFB DUP13 PUSH7 0x5163E164736F6C PUSH4 0x43000815 STOP CALLER ","sourceMap":"194:9180:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087cb31f628dc53824618bcdd91cfac0e52ee53f1c35546a3d7a7fb8c665163e164736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xCB BALANCE 0xF6 0x28 0xDC MSTORE8 DUP3 CHAINID XOR 0xBC 0xDD SWAP2 0xCF 0xAC 0xE MSTORE 0xEE MSTORE8 CALL 0xC3 SSTORE CHAINID LOG3 0xD7 0xA7 0xFB DUP13 PUSH7 0x5163E164736F6C PUSH4 0x43000815 STOP CALLER ","sourceMap":"194:9180:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0ecf4356b24fee3bd2e88da538377bfd2055e56b4a363f13686d739505a08ce64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xEC DELEGATECALL CALLDATALOAD PUSH12 0x24FEE3BD2E88DA538377BFD2 SDIV 0x5E JUMP 0xB4 LOG3 PUSH4 0xF13686D7 CODECOPY POP GAS ADDMOD 0xCE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"1420:2696:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0ecf4356b24fee3bd2e88da538377bfd2055e56b4a363f13686d739505a08ce64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xEC DELEGATECALL CALLDATALOAD PUSH12 0x24FEE3BD2E88DA538377BFD2 SDIV 0x5E JUMP 0xB4 LOG3 PUSH4 0xF13686D7 CODECOPY POP GAS ADDMOD 0xCE PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"1420:2696:22:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e2e1478ff6765d2946223f1e2b16165eaba9ab3b7c3b88700d949de47f2e9364736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE2 0xE1 SELFBALANCE DUP16 0xF6 PUSH23 0x5D2946223F1E2B16165EABA9AB3B7C3B88700D949DE47F 0x2E SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"1279:1391:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1391:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e2e1478ff6765d2946223f1e2b16165eaba9ab3b7c3b88700d949de47f2e9364736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE2 0xE1 SELFBALANCE DUP16 0xF6 PUSH23 0x5D2946223F1E2B16165EABA9AB3B7C3B88700D949DE47F 0x2E SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"1279:1391:24:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/MocaPoints.sol":{"MocaPoints":{"abi":[{"inputs":[],"name":"IllegalInterfaceId","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentPhase","type":"uint256"},{"internalType":"uint256","name":"newPhase","type":"uint256"}],"name":"InitializationPhaseAlreadyReached","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"NotContractOwner","type":"error"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"NotRoleHolder","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"reasonCodes","type":"bytes32[]"}],"name":"BatchAddedConsumeReasonCode","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"reasonCodes","type":"bytes32[]"}],"name":"BatchRemovedConsumeReasonCode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"realmId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"season","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"reasonCode","type":"bytes32"},{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"realmIdOwner","type":"address"}],"name":"Consumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"season","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"reasonCode","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"realmId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":false,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"operator","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"season","type":"bytes32"}],"name":"SetCurrentSeason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEPOSITOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"allowedConsumeReasonCodes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_reasonCodes","type":"bytes32[]"}],"name":"batchAddConsumeReasonCodes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_reasonCodes","type":"bytes32[]"}],"name":"batchRemoveConsumeReasonCodes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentSeason","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"depositReasonCode","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"depositReasonCode","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"hasRole_","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_realmIdContract","type":"address"},{"internalType":"address","name":"_admin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"reasonCode","type":"bytes32"}],"name":"preparePayload","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realmIdContract","outputs":[{"internalType":"contract IRealmId","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"seasons","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_season","type":"bytes32"}],"name":"setCurrentSeason","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"InitializationPhaseAlreadyReached(uint256,uint256)":[{"params":{"currentPhase":"The current phase.","newPhase":"The new phase trying to be set."}}],"NotContractOwner(address)":[{"params":{"account":"The account that was checked."}}],"NotRoleHolder(bytes32,address)":[{"params":{"account":"The account that was checked.","role":"The role the caller is missing."}}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"OwnershipTransferred(address,address)":{"params":{"newOwner":"the new contract owner.","previousOwner":"the previous contract owner."}},"RoleGranted(bytes32,address,address)":{"params":{"account":"The account that has been granted the role.","operator":"The account that granted the role.","role":"The role that has been granted."}},"RoleRevoked(bytes32,address,address)":{"params":{"account":"The account that has been revoked the role.","operator":"The account that revoked the role.","role":"The role that has been revoked."}},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"grantRole(bytes32,address)":{"details":"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleGranted} event if the account did not previously have the role.","params":{"account":"The account to grant the role to.","role":"The role to grant."}},"hasRole(bytes32,address)":{"params":{"account":"The account.","role":"The role."},"returns":{"hasRole_":"Whether `account` has `role`."}},"owner()":{"returns":{"_0":"The address of the contract owner."}},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceRole(bytes32)":{"details":"Reverts if `sender` does not have `role`.Emits a {RoleRevoked} event.","params":{"role":"The role to renounce."}},"revokeRole(bytes32,address)":{"details":"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleRevoked} event if the account previously had the role.","params":{"account":"The account to revoke the role from.","role":"The role to revoke."}},"transferOwnership(address)":{"details":"Reverts if the sender is not the contract owner.Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.","params":{"newOwner":"The address of the new contract owner. Using the zero address means renouncing ownership."}},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b506080516135ed61004c600039600081816108e40152818161099901528181610f1501528181610fc5015261110e01526135ed6000f3fe6080604052600436106101e35760003560e01c8063906405a311610102578063d14a5c7111610095578063e564a0e211610064578063e564a0e2146105e1578063f2fde38b14610601578063f72c0d8b14610621578063f95159621461065557600080fd5b8063d14a5c7114610561578063d547741f14610581578063dc893ce4146105a1578063df00bb24146105c157600080fd5b80639d70b005116100d15780639d70b005146104d7578063a3b0b5a3146104f7578063ad3b1d481461052b578063bcb396211461054b57600080fd5b8063906405a31461045757806391d148541461047757806399d342ac146104975780639cc7f708146104b757600080fd5b8063485cc9551161017a578063794459be11610149578063794459be146103e257806386a8e98a146104025780638bb9c5bf146104225780638da5cb5b1461044257600080fd5b8063485cc9551461035c5780634f1ef2861461037c57806351955dfc1461038f57806352d1902d146103cd57600080fd5b80632f2ff15d116101b65780632f2ff15d146102bc5780633659cfe6146102dc5780633f30b00f146102fc5780634529cc1b1461031c57600080fd5b8063098b6419146101e8578063141a468c1461021b57806318ee89f0146102485780632b48dc721461026a575b600080fd5b3480156101f457600080fd5b50610208610203366004612f1d565b610685565b6040519081526020015b60405180910390f35b34801561022757600080fd5b50610208610236366004612f6d565b60696020526000908152604090205481565b34801561025457600080fd5b50610268610263366004612f86565b6107e6565b005b34801561027657600080fd5b506067546102979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610212565b3480156102c857600080fd5b506102686102d7366004612fe3565b61089f565b3480156102e857600080fd5b506102686102f7366004613013565b6108cd565b34801561030857600080fd5b50610268610317366004613030565b610ad7565b34801561032857600080fd5b5061034c610337366004612f6d565b60666020526000908152604090205460ff1681565b6040519015158152602001610212565b34801561036857600080fd5b506102686103773660046130d6565b610c1e565b61026861038a366004613104565b610efe565b34801561039b57600080fd5b506102086103aa366004613168565b606860209081526000938452604080852082529284528284209052825290205481565b3480156103d957600080fd5b506102086110f4565b3480156103ee57600080fd5b506102086103fd366004613194565b6111e0565b34801561040e57600080fd5b5061026861041d366004612f6d565b61134a565b34801561042e57600080fd5b5061026861043d366004612f6d565b61143a565b34801561044e57600080fd5b5061029761144e565b34801561046357600080fd5b50610268610472366004613030565b61147a565b34801561048357600080fd5b5061034c610492366004612fe3565b6115c1565b3480156104a357600080fd5b506102686104b23660046131e7565b61160c565b3480156104c357600080fd5b506102086104d2366004612f6d565b6116c0565b3480156104e357600080fd5b506102686104f2366004613265565b611787565b34801561050357600080fd5b506102087f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a981565b34801561053757600080fd5b506102086105463660046132d1565b611839565b34801561055757600080fd5b5061020860655481565b34801561056d57600080fd5b5061026861057c366004613168565b6118f7565b34801561058d57600080fd5b5061026861059c366004612fe3565b611ab6565b3480156105ad57600080fd5b506102686105bc3660046132f3565b611ad9565b3480156105cd57600080fd5b506102086105dc366004613168565b611dc1565b3480156105ed57600080fd5b506102686105fc366004613344565b611de6565b34801561060d57600080fd5b5061026861061c366004613013565b611e8d565b34801561062d57600080fd5b506102087f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b34801561066157600080fd5b5061034c610670366004612f6d565b606a6020526000908152604090205460ff1681565b6067546040517fcad6b901000000000000000000000000000000000000000000000000000000008152600091829173ffffffffffffffffffffffffffffffffffffffff9091169063cad6b901906106e29086908890600401613409565b602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610723919061342b565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810183905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc919061342b565b60009687526068602090815260408089209489529381528388209188525250909320549392505050565b61081b7f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9335b610814611ea1565b9190611ecf565b600085815260686020908152604080832087845282528083208684529091528120805484929061084c908490613473565b909155505060408051858152602081018590529081018390528190869033907f9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad829060600160405180910390a45050505050565b336108b2816108ac611f55565b90611f83565b6108c88383836108c0611ea1565b929190611fee565b505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610a0c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610aaf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161098e565b610ab8816120c5565b60408051600080825260208201909252610ad4918391906120ef565b50565b610ae4335b6108ac611f55565b60005b8151811015610be357606a6000838381518110610b0657610b06613486565b60209081029190910181015182528101919091526040016000205460ff1615610b8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520616c726561647920657869737473000000000000604482015260640161098e565b6001606a6000848481518110610ba357610ba3613486565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610bdb906134b5565b915050610ae7565b507f0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e81604051610c1391906134ed565b60405180910390a150565b600054610100900460ff1615808015610c3e5750600054600160ff909116105b80610c585750303b158015610c58575060005460ff166001145b610ce4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161098e565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610d4257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610d4a6122ee565b610d5c82610d56611f55565b90612387565b73ffffffffffffffffffffffffffffffffffffffff8316610dd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f7420612076616c696420436f6e7472616374204164647265737300000000604482015260640161098e565b73ffffffffffffffffffffffffffffffffffffffff8216610e56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420612076616c69642041646d696e204164647265737300000000000000604482015260640161098e565b606780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905580156108c857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610fc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161098e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110387f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146110db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161098e565b6110e4826120c5565b6110f0828260016120ef565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146111bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161098e565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6067546040517fcad6b901000000000000000000000000000000000000000000000000000000008152600091829173ffffffffffffffffffffffffffffffffffffffff9091169063cad6b9019061123d9086908890600401613409565b602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e919061342b565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810183905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa1580156112f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611317919061342b565b60655460009081526068602090815260408083209583529481528482209282529190915291909120549150505b92915050565b61135333610adc565b60008181526066602052604090205460ff16156113cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f536561736f6e20616c7265616479207365740000000000000000000000000000604482015260640161098e565b60658190556000818152606660205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef3190610c139083815260200190565b610ad43382611447611ea1565b91906123c6565b600061147561145b611f55565b5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b61148333610adc565b60005b815181101561159157606a60008383815181106114a5576114a5613486565b60209081029190910181015182528101919091526040016000205460ff16611529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520646f6573206e6f74206578697374000000000000604482015260640161098e565b606a600083838151811061153f5761153f613486565b602090810291909101810151825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580611589816134b5565b915050611486565b507f5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff981604051610c1391906134ed565b600061160583836115d0611ea1565b60009283526020908152604080842073ffffffffffffffffffffffffffffffffffffffff909316845291905290205460ff1690565b9392505050565b6067546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b90190611665908a908c90600401613409565b602060405180830381865afa158015611682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a6919061342b565b90506116b6818787878787611ad9565b5050505050505050565b6067546040517fa9735f9400000000000000000000000000000000000000000000000000000000815260048101839052600091829173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa158015611734573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611758919061342b565b606554600090815260686020908152604080832096835295815285822092825291909152929092205492915050565b6067546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b901906117e09088908a90600401613409565b602060405180830381865afa1580156117fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611821919061342b565b905061183087828686866107e6565b50505050505050565b6067546040517fa9735f9400000000000000000000000000000000000000000000000000000000815260048101839052600091829173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa1580156118ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d1919061342b565b600094855260686020908152604080872095875294815284862091865252505090205490565b6067546040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905260009173ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198b9190613531565b90503373ffffffffffffffffffffffffffffffffffffffff821614611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015260640161098e565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810186905260009173ffffffffffffffffffffffffffffffffffffffff169063a9735f9490602401602060405180830381865afa158015611a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa0919061342b565b9050611aaf8582868633612462565b5050505050565b33611ac3816108ac611f55565b6108c8838383611ad1611ea1565b92919061262c565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810188905260009173ffffffffffffffffffffffffffffffffffffffff169063a9735f9490602401602060405180830381865afa158015611b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6d919061342b565b90506000611b908888606960008c815260200190815260200160002054896126f6565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052909150600090605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611c52573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101516067547f6352211e000000000000000000000000000000000000000000000000000000008352600483018e90529093506000925073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa158015611cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d109190613531565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611da7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5369676e6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161098e565b611db48b868c8c85612462565b5050505050505050505050565b600083815260696020526040812054611dde9085908590856126f6565b949350505050565b6067546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b90190611e3f9087908990600401613409565b602060405180830381865afa158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e80919061342b565b9050611aaf8184846118f7565b610ad43382611e9a611f55565b91906127dd565b60008061134460017fc8827d3282af6f37b64c3e9e6f3ac9df286ab0bb0fccd6f8661bf19adb368b2361354e565b60008281526020848152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166108c8576040517f7aa728820000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161098e565b60008061134460017fc9ed16f33ab3a66c84bfd83099ccb2a8845871e2e1c1928f63797152f0fd54cd61354e565b815473ffffffffffffffffffffffffffffffffffffffff8281169116146110f0576040517f2ef4875e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161098e565b60008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff166120bf5760008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8681168086529184529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055815187815292830152918316918101919091527f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d906060015b60405180910390a15b50505050565b610ad47f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e33361080c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612122576108c8836128f1565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156121a7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526121a49181019061342b565b60015b612233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161098e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146122e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161098e565b506108c88383836129fb565b600054610100900460ff16612385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161098e565b565b6123bc6123b560017f5b388d90dc1312ba799f321972f13311234fa1163bcabec7cf66101c4876eb8461354e565b6001612a20565b6110f08282612a6c565b6123d1838284611ecf565b60008181526020848152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580518481529182018390528101919091527ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90606001610ef1565b606554600090815260686020908152604080832088845282528083208784529091529020548311156124f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161098e565b6000828152606a602052604090205460ff16612568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420636f6e73756d6520726561736f6e20636f64650000000000604482015260640161098e565b606554600090815260686020908152604080832088845282528083208784529091528120805485929061259c90849061354e565b9091555050606554604080513381526020810187905290810185905273ffffffffffffffffffffffffffffffffffffffff8316606082015283919087907fe514533875fbd3f8f396088d636e746599d8b5c3ba77e9ccfa9fc01ff70646019060800160405180910390a46000858152606960205260408120805491612620836134b5565b91905055505050505050565b60008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16156120bf5760008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8681168086529184529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055815187815292830152918316918101919091527ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b906060016120b6565b6067546040517fa9735f9400000000000000000000000000000000000000000000000000000000815260048101869052600091829173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa15801561276a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278e919061342b565b6065546040805160208082019a909a52808201939093526060830197909752608082015260a0810193909352505060c0808201929092528251808203909201825260e001909152805191012090565b825473ffffffffffffffffffffffffffffffffffffffff908116908316811461284a576040517f2ef4875e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161098e565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146120bf5783547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8381169182178655604051908316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350505050565b73ffffffffffffffffffffffffffffffffffffffff81163b612995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161098e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612a0483612b29565b600082511180612a115750805b156108c8576120bf8383612b76565b81548290828110612a67576040517fbf0c18ec000000000000000000000000000000000000000000000000000000008152600481018290526024810184905260440161098e565b505550565b73ffffffffffffffffffffffffffffffffffffffff811615612af45781547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff821690811783556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35b6110f07f7f5828d0000000000000000000000000000000000000000000000000000000006001612b22612b9b565b9190612bc9565b612b32816128f1565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611605838360405180606001604052806027815260200161359160279139612ca5565b60008061134460017fca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e61354e565b7c01000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612c41576040517f72c683bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000919091166000908152602092909252604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051612ccf9190613561565b600060405180830381855af49150503d8060008114612d0a576040519150601f19603f3d011682016040523d82523d6000602084013e612d0f565b606091505b5091509150612d2086838387612d2a565b9695505050505050565b60608315612dc0578251600003612db95773ffffffffffffffffffffffffffffffffffffffff85163b612db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161098e565b5081611dde565b611dde8383815115612dd55781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e919061357d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e7f57612e7f612e09565b604052919050565b600067ffffffffffffffff831115612ea157612ea1612e09565b612ed260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612e38565b9050828152838383011115612ee657600080fd5b828260208301376000602084830101529392505050565b600082601f830112612f0e57600080fd5b61160583833560208501612e87565b600080600060608486031215612f3257600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612f5757600080fd5b612f6386828701612efd565b9150509250925092565b600060208284031215612f7f57600080fd5b5035919050565b600080600080600060a08688031215612f9e57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b73ffffffffffffffffffffffffffffffffffffffff81168114610ad457600080fd5b60008060408385031215612ff657600080fd5b82359150602083013561300881612fc1565b809150509250929050565b60006020828403121561302557600080fd5b813561160581612fc1565b6000602080838503121561304357600080fd5b823567ffffffffffffffff8082111561305b57600080fd5b818501915085601f83011261306f57600080fd5b81358181111561308157613081612e09565b8060051b9150613092848301612e38565b81815291830184019184810190888411156130ac57600080fd5b938501935b838510156130ca578435825293850193908501906130b1565b98975050505050505050565b600080604083850312156130e957600080fd5b82356130f481612fc1565b9150602083013561300881612fc1565b6000806040838503121561311757600080fd5b823561312281612fc1565b9150602083013567ffffffffffffffff81111561313e57600080fd5b8301601f8101851361314f57600080fd5b61315e85823560208401612e87565b9150509250929050565b60008060006060848603121561317d57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156131a757600080fd5b82359150602083013567ffffffffffffffff8111156131c557600080fd5b61315e85828601612efd565b803560ff811681146131e257600080fd5b919050565b600080600080600080600060e0888a03121561320257600080fd5b87359650602088013567ffffffffffffffff81111561322057600080fd5b61322c8a828b01612efd565b9650506040880135945060608801359350613249608089016131d1565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060c0878903121561327e57600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156132a357600080fd5b6132af89828a01612efd565b945050606087013592506080870135915060a087013590509295509295509295565b600080604083850312156132e457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561330c57600080fd5b86359550602087013594506040870135935061332a606088016131d1565b92506080870135915060a087013590509295509295509295565b6000806000806080858703121561335a57600080fd5b84359350602085013567ffffffffffffffff81111561337857600080fd5b61338487828801612efd565b949794965050505060408301359260600135919050565b60005b838110156133b657818101518382015260200161339e565b50506000910152565b600081518084526133d781602086016020860161339b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061341c60408301856133bf565b90508260208301529392505050565b60006020828403121561343d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561134457611344613444565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036134e6576134e6613444565b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561352557835183529284019291840191600101613509565b50909695505050505050565b60006020828403121561354357600080fd5b815161160581612fc1565b8181038181111561134457611344613444565b6000825161357381846020870161339b565b9190910192915050565b60208152600061160560208301846133bf56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e61c3ce3f5cda44350cf395b1eafc277f6c2e2431e606ed6743e6e31829b4f164736f6c63430008150033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x35ED PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x8E4 ADD MSTORE DUP2 DUP2 PUSH2 0x999 ADD MSTORE DUP2 DUP2 PUSH2 0xF15 ADD MSTORE DUP2 DUP2 PUSH2 0xFC5 ADD MSTORE PUSH2 0x110E ADD MSTORE PUSH2 0x35ED PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x906405A3 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD14A5C71 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE564A0E2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE564A0E2 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xF9515962 EQ PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD14A5C71 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xDC893CE4 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xDF00BB24 EQ PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D70B005 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x9D70B005 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xAD3B1D48 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xBCB39621 EQ PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x906405A3 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x99D342AC EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x9CC7F708 EQ PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x794459BE GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x794459BE EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x86A8E98A EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8BB9C5BF EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x51955DFC EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3F30B00F EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x4529CC1B EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98B6419 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x141A468C EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x18EE89F0 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x2B48DC72 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F1D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F86 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x67 SLOAD PUSH2 0x297 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0xAD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x30D6 JUMP JUMPDEST PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x268 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x10F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x144E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0x15C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E7 JUMP JUMPDEST PUSH2 0x160C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x1787 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0x1839 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x3168 JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0x1AB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x32F3 JUMP JUMPDEST PUSH2 0x1AD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x3168 JUMP JUMPDEST PUSH2 0x1DC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x3344 JUMP JUMPDEST PUSH2 0x1DE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x1E8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x6E2 SWAP1 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP10 KECCAK256 SWAP5 DUP10 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP9 KECCAK256 SWAP2 DUP9 MSTORE MSTORE POP SWAP1 SWAP4 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x81B PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 CALLER JUMPDEST PUSH2 0x814 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x84C SWAP1 DUP5 SWAP1 PUSH2 0x3473 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x9092BF6BD1CF7DB4FCF41AEDC7C0333B51C57F5B80B429BC3D9CAA5587C6AD82 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x8B2 DUP2 PUSH2 0x8AC PUSH2 0x1F55 JUMP JUMPDEST SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x8C8 DUP4 DUP4 DUP4 PUSH2 0x8C0 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA0C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH2 0xAB8 DUP2 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAD4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x20EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE4 CALLER JUMPDEST PUSH2 0x8AC PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x6A PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB06 JUMPI PUSH2 0xB06 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6A PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xBDB SWAP1 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE7 JUMP JUMPDEST POP PUSH32 0xD8C56A8918EC09C2FE3C4D9FCC00ECE66DF217A1AB3AD768DD0A71620DA5B4E DUP2 PUSH1 0x40 MLOAD PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC3E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC58 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC58 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD4A PUSH2 0x22EE JUMP JUMPDEST PUSH2 0xD5C DUP3 PUSH2 0xD56 PUSH2 0x1F55 JUMP JUMPDEST SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C696420436F6E7472616374204164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xE56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C69642041646D696E204164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1038 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH2 0x10E4 DUP3 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x10F0 DUP3 DUP3 PUSH1 0x1 PUSH2 0x20EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x123D SWAP1 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1353 CALLER PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536561736F6E20616C7265616479207365740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x65 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x61228C895F8BA06548597D3E34A23BC0ECB6D1E62A1EB3FA30BE04883A17EF31 SWAP1 PUSH2 0xC13 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xAD4 CALLER DUP3 PUSH2 0x1447 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1475 PUSH2 0x145B PUSH2 0x1F55 JUMP JUMPDEST SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1483 CALLER PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x6A PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14A5 JUMPI PUSH2 0x14A5 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x6A PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x153F JUMPI PUSH2 0x153F PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 PUSH2 0x1589 DUP2 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1486 JUMP JUMPDEST POP PUSH32 0x5B2C9FCBB27D48BDBFC59F0564B5BA81539309EBF09A940FAD64D171BCFB9FF9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1605 DUP4 DUP4 PUSH2 0x15D0 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x1665 SWAP1 DUP11 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1682 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x16B6 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1AD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1734 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1758 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x17E0 SWAP1 DUP9 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x1830 DUP8 DUP3 DUP7 DUP7 DUP7 PUSH2 0x7E6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE POP POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198B SWAP2 SWAP1 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA0 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x1AAF DUP6 DUP3 DUP7 DUP7 CALLER PUSH2 0x2462 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x1AC3 DUP2 PUSH2 0x8AC PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x8C8 DUP4 DUP4 DUP4 PUSH2 0x1AD1 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x262C JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B90 DUP9 DUP9 PUSH1 0x69 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD MLOAD PUSH1 0x67 SLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP15 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x0 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH2 0x1DB4 DUP12 DUP7 DUP13 DUP13 DUP6 PUSH2 0x2462 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1DDE SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 PUSH2 0x26F6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x1E3F SWAP1 DUP8 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E80 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x1AAF DUP2 DUP5 DUP5 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0xAD4 CALLER DUP3 PUSH2 0x1E9A PUSH2 0x1F55 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 PUSH1 0x1 PUSH32 0xC8827D3282AF6F37B64C3E9E6F3AC9DF286AB0BB0FCCD6F8661BF19ADB368B23 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7AA7288200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 PUSH1 0x1 PUSH32 0xC9ED16F33AB3A66C84BFD83099CCB2A8845871E2E1C1928F63797152F0FD54CD PUSH2 0x354E JUMP JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2EF4875E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x20BF JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAD4 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 CALLER PUSH2 0x80C JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2122 JUMPI PUSH2 0x8C8 DUP4 PUSH2 0x28F1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21A7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x21A4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x22E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST POP PUSH2 0x8C8 DUP4 DUP4 DUP4 PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2385 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x23BC PUSH2 0x23B5 PUSH1 0x1 PUSH32 0x5B388D90DC1312BA799F321972F13311234FA1163BCABEC7CF66101C4876EB84 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x10F0 DUP3 DUP3 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x23D1 DUP4 DUP3 DUP5 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x60 ADD PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E73756D6520726561736F6E20636F64650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x259C SWAP1 DUP5 SWAP1 PUSH2 0x354E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE DUP4 SWAP2 SWAP1 DUP8 SWAP1 PUSH32 0xE514533875FBD3F8F396088D636E746599D8B5C3BA77E9CCFA9FC01FF7064601 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2620 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20BF JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x60 ADD PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x276A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x278E SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0xC0 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xE0 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 EQ PUSH2 0x284A JUMPI PUSH1 0x40 MLOAD PUSH32 0x2EF4875E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x98E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20BF JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 DUP3 OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x2995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A04 DUP4 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2A11 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x20BF DUP4 DUP4 PUSH2 0x2B76 JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 DUP3 DUP2 LT PUSH2 0x2A67 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF0C18EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x98E JUMP JUMPDEST POP SSTORE POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x2AF4 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 JUMPDEST PUSH2 0x10F0 PUSH32 0x7F5828D000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH2 0x2B22 PUSH2 0x2B9B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x2B32 DUP2 PUSH2 0x28F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1605 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3591 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 PUSH1 0x1 PUSH32 0xCA9D3E17F264B0F3984E2634E94ADB37FA3E6A8103F06AEAE6FA59E21C769F5E PUSH2 0x354E JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2C41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x72C683BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2CCF SWAP2 SWAP1 PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2D20 DUP7 DUP4 DUP4 DUP8 PUSH2 0x2D2A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2DC0 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2DB9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x2DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST POP DUP2 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1DDE DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2DD5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x357D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2E7F JUMPI PUSH2 0x2E7F PUSH2 0x2E09 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2EA1 JUMPI PUSH2 0x2EA1 PUSH2 0x2E09 JUMP JUMPDEST PUSH2 0x2ED2 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD PUSH2 0x2E38 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1605 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F63 DUP7 DUP3 DUP8 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2F9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3008 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1605 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x305B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x306F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3081 JUMPI PUSH2 0x3081 PUSH2 0x2E09 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x3092 DUP5 DUP4 ADD PUSH2 0x2E38 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x30AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x30CA JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x30B1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x30F4 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3008 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3122 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x314F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x315E DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2E87 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x317D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x315E DUP6 DUP3 DUP7 ADD PUSH2 0x2EFD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x31E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x322C DUP11 DUP3 DUP12 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3249 PUSH1 0x80 DUP10 ADD PUSH2 0x31D1 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x327E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32AF DUP10 DUP3 DUP11 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x330C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x332A PUSH1 0x60 DUP9 ADD PUSH2 0x31D1 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x335A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3384 DUP8 DUP3 DUP9 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x339E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x33D7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x339B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x341C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33BF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x343D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x3444 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x34E6 JUMPI PUSH2 0x34E6 PUSH2 0x3444 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3525 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3509 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1605 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x3444 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3573 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x339B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33BF JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212201E61C3 0xCE EXTCODEHASH 0x5C 0xDA PREVRANDAO CALLDATALOAD 0xC RETURN SWAP6 0xB1 0xEA 0xFC 0x27 PUSH32 0x6C2E2431E606ED6743E6E31829B4F164736F6C63430008150033000000000000 ","sourceMap":"773:8152:25:-:0;;;1332:4:20;1289:48;;773:8152:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEPOSITOR_ROLE_2183":{"entryPoint":null,"id":2183,"parameterSlots":0,"returnSlots":0},"@UPGRADER_ROLE_2188":{"entryPoint":null,"id":2188,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_1506":{"entryPoint":8942,"id":1506,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_2327":{"entryPoint":8389,"id":2327,"parameterSlots":1,"returnSlots":0},"@_consume_2600":{"entryPoint":9314,"id":2600,"parameterSlots":5,"returnSlots":0},"@_getImplementation_1030":{"entryPoint":null,"id":1030,"parameterSlots":0,"returnSlots":1},"@_msgSender_2076":{"entryPoint":null,"id":2076,"parameterSlots":0,"returnSlots":1},"@_preparePayload_2930":{"entryPoint":9974,"id":2930,"parameterSlots":4,"returnSlots":1},"@_revert_1953":{"entryPoint":null,"id":1953,"parameterSlots":2,"returnSlots":0},"@_setImplementation_1054":{"entryPoint":10481,"id":1054,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_1152":{"entryPoint":8431,"id":1152,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_1099":{"entryPoint":10747,"id":1099,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_1069":{"entryPoint":11049,"id":1069,"parameterSlots":1,"returnSlots":0},"@allowedConsumeReasonCodes_2213":{"entryPoint":null,"id":2213,"parameterSlots":0,"returnSlots":0},"@balanceOf_2802":{"entryPoint":6201,"id":2802,"parameterSlots":2,"returnSlots":1},"@balanceOf_2837":{"entryPoint":1669,"id":2837,"parameterSlots":3,"returnSlots":1},"@balanceOf_2860":{"entryPoint":5824,"id":2860,"parameterSlots":1,"returnSlots":1},"@balanceOf_2893":{"entryPoint":4576,"id":2893,"parameterSlots":2,"returnSlots":1},"@balances_2205":{"entryPoint":null,"id":2205,"parameterSlots":0,"returnSlots":0},"@batchAddConsumeReasonCodes_2415":{"entryPoint":2775,"id":2415,"parameterSlots":1,"returnSlots":0},"@batchRemoveConsumeReasonCodes_2464":{"entryPoint":5242,"id":2464,"parameterSlots":1,"returnSlots":0},"@constructorInit_629":{"entryPoint":10860,"id":629,"parameterSlots":2,"returnSlots":0},"@consume_2635":{"entryPoint":5644,"id":2635,"parameterSlots":7,"returnSlots":0},"@consume_2710":{"entryPoint":6873,"id":2710,"parameterSlots":6,"returnSlots":0},"@consume_2736":{"entryPoint":7654,"id":2736,"parameterSlots":4,"returnSlots":0},"@consume_2777":{"entryPoint":6391,"id":2777,"parameterSlots":3,"returnSlots":0},"@currentSeason_2190":{"entryPoint":null,"id":2190,"parameterSlots":0,"returnSlots":0},"@deposit_2508":{"entryPoint":2022,"id":2508,"parameterSlots":5,"returnSlots":0},"@deposit_2540":{"entryPoint":6023,"id":2540,"parameterSlots":6,"returnSlots":0},"@enforceHasRole_495":{"entryPoint":7887,"id":495,"parameterSlots":3,"returnSlots":0},"@enforceIsContractOwner_746":{"entryPoint":8067,"id":746,"parameterSlots":2,"returnSlots":0},"@functionDelegateCall_1841":{"entryPoint":11126,"id":1841,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1870":{"entryPoint":11429,"id":1870,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1986":{"entryPoint":null,"id":1986,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_1997":{"entryPoint":null,"id":1997,"parameterSlots":1,"returnSlots":1},"@getUint256Slot_2145":{"entryPoint":null,"id":2145,"parameterSlots":1,"returnSlots":1},"@grantRole_353":{"entryPoint":8174,"id":353,"parameterSlots":4,"returnSlots":0},"@grantRole_54":{"entryPoint":2207,"id":54,"parameterSlots":2,"returnSlots":0},"@hasRole_122":{"entryPoint":5569,"id":122,"parameterSlots":2,"returnSlots":1},"@hasRole_450":{"entryPoint":null,"id":450,"parameterSlots":3,"returnSlots":1},"@initialize_2310":{"entryPoint":3102,"id":2310,"parameterSlots":2,"returnSlots":0},"@isContract_1642":{"entryPoint":null,"id":1642,"parameterSlots":1,"returnSlots":1},"@layout_532":{"entryPoint":7841,"id":532,"parameterSlots":0,"returnSlots":1},"@layout_779":{"entryPoint":8021,"id":779,"parameterSlots":0,"returnSlots":1},"@layout_897":{"entryPoint":11163,"id":897,"parameterSlots":0,"returnSlots":1},"@nonces_2209":{"entryPoint":null,"id":2209,"parameterSlots":0,"returnSlots":0},"@owner_153":{"entryPoint":5198,"id":153,"parameterSlots":0,"returnSlots":1},"@owner_708":{"entryPoint":null,"id":708,"parameterSlots":1,"returnSlots":1},"@preparePayload_2952":{"entryPoint":7617,"id":2952,"parameterSlots":3,"returnSlots":1},"@proxiableUUID_1569":{"entryPoint":4340,"id":1569,"parameterSlots":0,"returnSlots":1},"@proxyInit_652":{"entryPoint":9095,"id":652,"parameterSlots":2,"returnSlots":0},"@realmIdContract_2197":{"entryPoint":null,"id":2197,"parameterSlots":0,"returnSlots":0},"@renounceRole_103":{"entryPoint":5178,"id":103,"parameterSlots":1,"returnSlots":0},"@renounceRole_429":{"entryPoint":9158,"id":429,"parameterSlots":3,"returnSlots":0},"@revokeRole_392":{"entryPoint":9772,"id":392,"parameterSlots":4,"returnSlots":0},"@revokeRole_86":{"entryPoint":6838,"id":86,"parameterSlots":2,"returnSlots":0},"@seasons_2194":{"entryPoint":null,"id":2194,"parameterSlots":0,"returnSlots":0},"@setCurrentSeason_2364":{"entryPoint":4938,"id":2364,"parameterSlots":1,"returnSlots":0},"@setPhase_953":{"entryPoint":10784,"id":953,"parameterSlots":2,"returnSlots":0},"@setSupportedInterface_851":{"entryPoint":11209,"id":851,"parameterSlots":3,"returnSlots":0},"@transferOwnership_170":{"entryPoint":7821,"id":170,"parameterSlots":1,"returnSlots":0},"@transferOwnership_695":{"entryPoint":10205,"id":695,"parameterSlots":3,"returnSlots":0},"@upgradeToAndCall_1612":{"entryPoint":3838,"id":1612,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1591":{"entryPoint":2253,"id":1591,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1909":{"entryPoint":11562,"id":1909,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":11911,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":12029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":13617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12502,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":12548,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12336,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12259,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr":{"entryPoint":12061,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32":{"entryPoint":12901,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32t_string_memory_ptr":{"entryPoint":12692,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32":{"entryPoint":13124,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32":{"entryPoint":12775,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":13009,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_uint256":{"entryPoint":12648,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":12166,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":12141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13355,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32":{"entryPoint":13043,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_uint8":{"entryPoint":12753,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":13247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IRealmId_$2979__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":13321,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad26fe53f2fca31247987ef6a4af0496ee097218b3387432e3c6fed944f205a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b755ce87409e8192f91119a3d1231484c648c9b5603f8975131c450383d3f8aa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":11832,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13427,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13646,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":13211,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":13493,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13380,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13446,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11785,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":12225,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:23779:28","nodeType":"YulBlock","src":"0:23779:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"46:152:28","nodeType":"YulBlock","src":"46:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:28","nodeType":"YulLiteral","src":"63:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"66:77:28","nodeType":"YulLiteral","src":"66:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"56:6:28","nodeType":"YulIdentifier","src":"56:6:28"},"nativeSrc":"56:88:28","nodeType":"YulFunctionCall","src":"56:88:28"},"nativeSrc":"56:88:28","nodeType":"YulExpressionStatement","src":"56:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"160:1:28","nodeType":"YulLiteral","src":"160:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"163:4:28","nodeType":"YulLiteral","src":"163:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"153:6:28","nodeType":"YulIdentifier","src":"153:6:28"},"nativeSrc":"153:15:28","nodeType":"YulFunctionCall","src":"153:15:28"},"nativeSrc":"153:15:28","nodeType":"YulExpressionStatement","src":"153:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"184:1:28","nodeType":"YulLiteral","src":"184:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"187:4:28","nodeType":"YulLiteral","src":"187:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"177:6:28","nodeType":"YulIdentifier","src":"177:6:28"},"nativeSrc":"177:15:28","nodeType":"YulFunctionCall","src":"177:15:28"},"nativeSrc":"177:15:28","nodeType":"YulExpressionStatement","src":"177:15:28"}]},"name":"panic_error_0x41","nativeSrc":"14:184:28","nodeType":"YulFunctionDefinition","src":"14:184:28"},{"body":{"nativeSrc":"248:289:28","nodeType":"YulBlock","src":"248:289:28","statements":[{"nativeSrc":"258:19:28","nodeType":"YulAssignment","src":"258:19:28","value":{"arguments":[{"kind":"number","nativeSrc":"274:2:28","nodeType":"YulLiteral","src":"274:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"268:5:28","nodeType":"YulIdentifier","src":"268:5:28"},"nativeSrc":"268:9:28","nodeType":"YulFunctionCall","src":"268:9:28"},"variableNames":[{"name":"memPtr","nativeSrc":"258:6:28","nodeType":"YulIdentifier","src":"258:6:28"}]},{"nativeSrc":"286:117:28","nodeType":"YulVariableDeclaration","src":"286:117:28","value":{"arguments":[{"name":"memPtr","nativeSrc":"308:6:28","nodeType":"YulIdentifier","src":"308:6:28"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"324:4:28","nodeType":"YulIdentifier","src":"324:4:28"},{"kind":"number","nativeSrc":"330:2:28","nodeType":"YulLiteral","src":"330:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"320:3:28","nodeType":"YulIdentifier","src":"320:3:28"},"nativeSrc":"320:13:28","nodeType":"YulFunctionCall","src":"320:13:28"},{"kind":"number","nativeSrc":"335:66:28","nodeType":"YulLiteral","src":"335:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"316:3:28","nodeType":"YulIdentifier","src":"316:3:28"},"nativeSrc":"316:86:28","nodeType":"YulFunctionCall","src":"316:86:28"}],"functionName":{"name":"add","nativeSrc":"304:3:28","nodeType":"YulIdentifier","src":"304:3:28"},"nativeSrc":"304:99:28","nodeType":"YulFunctionCall","src":"304:99:28"},"variables":[{"name":"newFreePtr","nativeSrc":"290:10:28","nodeType":"YulTypedName","src":"290:10:28","type":""}]},{"body":{"nativeSrc":"478:22:28","nodeType":"YulBlock","src":"478:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"480:16:28","nodeType":"YulIdentifier","src":"480:16:28"},"nativeSrc":"480:18:28","nodeType":"YulFunctionCall","src":"480:18:28"},"nativeSrc":"480:18:28","nodeType":"YulExpressionStatement","src":"480:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"421:10:28","nodeType":"YulIdentifier","src":"421:10:28"},{"kind":"number","nativeSrc":"433:18:28","nodeType":"YulLiteral","src":"433:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"418:2:28","nodeType":"YulIdentifier","src":"418:2:28"},"nativeSrc":"418:34:28","nodeType":"YulFunctionCall","src":"418:34:28"},{"arguments":[{"name":"newFreePtr","nativeSrc":"457:10:28","nodeType":"YulIdentifier","src":"457:10:28"},{"name":"memPtr","nativeSrc":"469:6:28","nodeType":"YulIdentifier","src":"469:6:28"}],"functionName":{"name":"lt","nativeSrc":"454:2:28","nodeType":"YulIdentifier","src":"454:2:28"},"nativeSrc":"454:22:28","nodeType":"YulFunctionCall","src":"454:22:28"}],"functionName":{"name":"or","nativeSrc":"415:2:28","nodeType":"YulIdentifier","src":"415:2:28"},"nativeSrc":"415:62:28","nodeType":"YulFunctionCall","src":"415:62:28"},"nativeSrc":"412:88:28","nodeType":"YulIf","src":"412:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"516:2:28","nodeType":"YulLiteral","src":"516:2:28","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"520:10:28","nodeType":"YulIdentifier","src":"520:10:28"}],"functionName":{"name":"mstore","nativeSrc":"509:6:28","nodeType":"YulIdentifier","src":"509:6:28"},"nativeSrc":"509:22:28","nodeType":"YulFunctionCall","src":"509:22:28"},"nativeSrc":"509:22:28","nodeType":"YulExpressionStatement","src":"509:22:28"}]},"name":"allocate_memory","nativeSrc":"203:334:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"228:4:28","nodeType":"YulTypedName","src":"228:4:28","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"237:6:28","nodeType":"YulTypedName","src":"237:6:28","type":""}],"src":"203:334:28"},{"body":{"nativeSrc":"617:391:28","nodeType":"YulBlock","src":"617:391:28","statements":[{"body":{"nativeSrc":"661:22:28","nodeType":"YulBlock","src":"661:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"663:16:28","nodeType":"YulIdentifier","src":"663:16:28"},"nativeSrc":"663:18:28","nodeType":"YulFunctionCall","src":"663:18:28"},"nativeSrc":"663:18:28","nodeType":"YulExpressionStatement","src":"663:18:28"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"633:6:28","nodeType":"YulIdentifier","src":"633:6:28"},{"kind":"number","nativeSrc":"641:18:28","nodeType":"YulLiteral","src":"641:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"630:2:28","nodeType":"YulIdentifier","src":"630:2:28"},"nativeSrc":"630:30:28","nodeType":"YulFunctionCall","src":"630:30:28"},"nativeSrc":"627:56:28","nodeType":"YulIf","src":"627:56:28"},{"nativeSrc":"692:125:28","nodeType":"YulAssignment","src":"692:125:28","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"729:6:28","nodeType":"YulIdentifier","src":"729:6:28"},{"kind":"number","nativeSrc":"737:2:28","nodeType":"YulLiteral","src":"737:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"725:3:28","nodeType":"YulIdentifier","src":"725:3:28"},"nativeSrc":"725:15:28","nodeType":"YulFunctionCall","src":"725:15:28"},{"kind":"number","nativeSrc":"742:66:28","nodeType":"YulLiteral","src":"742:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"721:3:28","nodeType":"YulIdentifier","src":"721:3:28"},"nativeSrc":"721:88:28","nodeType":"YulFunctionCall","src":"721:88:28"},{"kind":"number","nativeSrc":"811:4:28","nodeType":"YulLiteral","src":"811:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"717:3:28","nodeType":"YulIdentifier","src":"717:3:28"},"nativeSrc":"717:99:28","nodeType":"YulFunctionCall","src":"717:99:28"}],"functionName":{"name":"allocate_memory","nativeSrc":"701:15:28","nodeType":"YulIdentifier","src":"701:15:28"},"nativeSrc":"701:116:28","nodeType":"YulFunctionCall","src":"701:116:28"},"variableNames":[{"name":"array","nativeSrc":"692:5:28","nodeType":"YulIdentifier","src":"692:5:28"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"833:5:28","nodeType":"YulIdentifier","src":"833:5:28"},{"name":"length","nativeSrc":"840:6:28","nodeType":"YulIdentifier","src":"840:6:28"}],"functionName":{"name":"mstore","nativeSrc":"826:6:28","nodeType":"YulIdentifier","src":"826:6:28"},"nativeSrc":"826:21:28","nodeType":"YulFunctionCall","src":"826:21:28"},"nativeSrc":"826:21:28","nodeType":"YulExpressionStatement","src":"826:21:28"},{"body":{"nativeSrc":"885:16:28","nodeType":"YulBlock","src":"885:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"894:1:28","nodeType":"YulLiteral","src":"894:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"897:1:28","nodeType":"YulLiteral","src":"897:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"887:6:28","nodeType":"YulIdentifier","src":"887:6:28"},"nativeSrc":"887:12:28","nodeType":"YulFunctionCall","src":"887:12:28"},"nativeSrc":"887:12:28","nodeType":"YulExpressionStatement","src":"887:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"866:3:28","nodeType":"YulIdentifier","src":"866:3:28"},{"name":"length","nativeSrc":"871:6:28","nodeType":"YulIdentifier","src":"871:6:28"}],"functionName":{"name":"add","nativeSrc":"862:3:28","nodeType":"YulIdentifier","src":"862:3:28"},"nativeSrc":"862:16:28","nodeType":"YulFunctionCall","src":"862:16:28"},{"name":"end","nativeSrc":"880:3:28","nodeType":"YulIdentifier","src":"880:3:28"}],"functionName":{"name":"gt","nativeSrc":"859:2:28","nodeType":"YulIdentifier","src":"859:2:28"},"nativeSrc":"859:25:28","nodeType":"YulFunctionCall","src":"859:25:28"},"nativeSrc":"856:45:28","nodeType":"YulIf","src":"856:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"927:5:28","nodeType":"YulIdentifier","src":"927:5:28"},{"kind":"number","nativeSrc":"934:4:28","nodeType":"YulLiteral","src":"934:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"923:3:28","nodeType":"YulIdentifier","src":"923:3:28"},"nativeSrc":"923:16:28","nodeType":"YulFunctionCall","src":"923:16:28"},{"name":"src","nativeSrc":"941:3:28","nodeType":"YulIdentifier","src":"941:3:28"},{"name":"length","nativeSrc":"946:6:28","nodeType":"YulIdentifier","src":"946:6:28"}],"functionName":{"name":"calldatacopy","nativeSrc":"910:12:28","nodeType":"YulIdentifier","src":"910:12:28"},"nativeSrc":"910:43:28","nodeType":"YulFunctionCall","src":"910:43:28"},"nativeSrc":"910:43:28","nodeType":"YulExpressionStatement","src":"910:43:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"977:5:28","nodeType":"YulIdentifier","src":"977:5:28"},{"name":"length","nativeSrc":"984:6:28","nodeType":"YulIdentifier","src":"984:6:28"}],"functionName":{"name":"add","nativeSrc":"973:3:28","nodeType":"YulIdentifier","src":"973:3:28"},"nativeSrc":"973:18:28","nodeType":"YulFunctionCall","src":"973:18:28"},{"kind":"number","nativeSrc":"993:4:28","nodeType":"YulLiteral","src":"993:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"969:3:28","nodeType":"YulIdentifier","src":"969:3:28"},"nativeSrc":"969:29:28","nodeType":"YulFunctionCall","src":"969:29:28"},{"kind":"number","nativeSrc":"1000:1:28","nodeType":"YulLiteral","src":"1000:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"962:6:28","nodeType":"YulIdentifier","src":"962:6:28"},"nativeSrc":"962:40:28","nodeType":"YulFunctionCall","src":"962:40:28"},"nativeSrc":"962:40:28","nodeType":"YulExpressionStatement","src":"962:40:28"}]},"name":"abi_decode_available_length_string","nativeSrc":"542:466:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"586:3:28","nodeType":"YulTypedName","src":"586:3:28","type":""},{"name":"length","nativeSrc":"591:6:28","nodeType":"YulTypedName","src":"591:6:28","type":""},{"name":"end","nativeSrc":"599:3:28","nodeType":"YulTypedName","src":"599:3:28","type":""}],"returnVariables":[{"name":"array","nativeSrc":"607:5:28","nodeType":"YulTypedName","src":"607:5:28","type":""}],"src":"542:466:28"},{"body":{"nativeSrc":"1066:169:28","nodeType":"YulBlock","src":"1066:169:28","statements":[{"body":{"nativeSrc":"1115:16:28","nodeType":"YulBlock","src":"1115:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1124:1:28","nodeType":"YulLiteral","src":"1124:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1127:1:28","nodeType":"YulLiteral","src":"1127:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1117:6:28","nodeType":"YulIdentifier","src":"1117:6:28"},"nativeSrc":"1117:12:28","nodeType":"YulFunctionCall","src":"1117:12:28"},"nativeSrc":"1117:12:28","nodeType":"YulExpressionStatement","src":"1117:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1094:6:28","nodeType":"YulIdentifier","src":"1094:6:28"},{"kind":"number","nativeSrc":"1102:4:28","nodeType":"YulLiteral","src":"1102:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1090:3:28","nodeType":"YulIdentifier","src":"1090:3:28"},"nativeSrc":"1090:17:28","nodeType":"YulFunctionCall","src":"1090:17:28"},{"name":"end","nativeSrc":"1109:3:28","nodeType":"YulIdentifier","src":"1109:3:28"}],"functionName":{"name":"slt","nativeSrc":"1086:3:28","nodeType":"YulIdentifier","src":"1086:3:28"},"nativeSrc":"1086:27:28","nodeType":"YulFunctionCall","src":"1086:27:28"}],"functionName":{"name":"iszero","nativeSrc":"1079:6:28","nodeType":"YulIdentifier","src":"1079:6:28"},"nativeSrc":"1079:35:28","nodeType":"YulFunctionCall","src":"1079:35:28"},"nativeSrc":"1076:55:28","nodeType":"YulIf","src":"1076:55:28"},{"nativeSrc":"1140:89:28","nodeType":"YulAssignment","src":"1140:89:28","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1188:6:28","nodeType":"YulIdentifier","src":"1188:6:28"},{"kind":"number","nativeSrc":"1196:4:28","nodeType":"YulLiteral","src":"1196:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1184:3:28","nodeType":"YulIdentifier","src":"1184:3:28"},"nativeSrc":"1184:17:28","nodeType":"YulFunctionCall","src":"1184:17:28"},{"arguments":[{"name":"offset","nativeSrc":"1216:6:28","nodeType":"YulIdentifier","src":"1216:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"1203:12:28","nodeType":"YulIdentifier","src":"1203:12:28"},"nativeSrc":"1203:20:28","nodeType":"YulFunctionCall","src":"1203:20:28"},{"name":"end","nativeSrc":"1225:3:28","nodeType":"YulIdentifier","src":"1225:3:28"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"1149:34:28","nodeType":"YulIdentifier","src":"1149:34:28"},"nativeSrc":"1149:80:28","nodeType":"YulFunctionCall","src":"1149:80:28"},"variableNames":[{"name":"array","nativeSrc":"1140:5:28","nodeType":"YulIdentifier","src":"1140:5:28"}]}]},"name":"abi_decode_string","nativeSrc":"1013:222:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1040:6:28","nodeType":"YulTypedName","src":"1040:6:28","type":""},{"name":"end","nativeSrc":"1048:3:28","nodeType":"YulTypedName","src":"1048:3:28","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1056:5:28","nodeType":"YulTypedName","src":"1056:5:28","type":""}],"src":"1013:222:28"},{"body":{"nativeSrc":"1354:344:28","nodeType":"YulBlock","src":"1354:344:28","statements":[{"body":{"nativeSrc":"1400:16:28","nodeType":"YulBlock","src":"1400:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1409:1:28","nodeType":"YulLiteral","src":"1409:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1412:1:28","nodeType":"YulLiteral","src":"1412:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1402:6:28","nodeType":"YulIdentifier","src":"1402:6:28"},"nativeSrc":"1402:12:28","nodeType":"YulFunctionCall","src":"1402:12:28"},"nativeSrc":"1402:12:28","nodeType":"YulExpressionStatement","src":"1402:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1375:7:28","nodeType":"YulIdentifier","src":"1375:7:28"},{"name":"headStart","nativeSrc":"1384:9:28","nodeType":"YulIdentifier","src":"1384:9:28"}],"functionName":{"name":"sub","nativeSrc":"1371:3:28","nodeType":"YulIdentifier","src":"1371:3:28"},"nativeSrc":"1371:23:28","nodeType":"YulFunctionCall","src":"1371:23:28"},{"kind":"number","nativeSrc":"1396:2:28","nodeType":"YulLiteral","src":"1396:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1367:3:28","nodeType":"YulIdentifier","src":"1367:3:28"},"nativeSrc":"1367:32:28","nodeType":"YulFunctionCall","src":"1367:32:28"},"nativeSrc":"1364:52:28","nodeType":"YulIf","src":"1364:52:28"},{"nativeSrc":"1425:33:28","nodeType":"YulAssignment","src":"1425:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1448:9:28","nodeType":"YulIdentifier","src":"1448:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"1435:12:28","nodeType":"YulIdentifier","src":"1435:12:28"},"nativeSrc":"1435:23:28","nodeType":"YulFunctionCall","src":"1435:23:28"},"variableNames":[{"name":"value0","nativeSrc":"1425:6:28","nodeType":"YulIdentifier","src":"1425:6:28"}]},{"nativeSrc":"1467:42:28","nodeType":"YulAssignment","src":"1467:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1494:9:28","nodeType":"YulIdentifier","src":"1494:9:28"},{"kind":"number","nativeSrc":"1505:2:28","nodeType":"YulLiteral","src":"1505:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1490:3:28","nodeType":"YulIdentifier","src":"1490:3:28"},"nativeSrc":"1490:18:28","nodeType":"YulFunctionCall","src":"1490:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1477:12:28","nodeType":"YulIdentifier","src":"1477:12:28"},"nativeSrc":"1477:32:28","nodeType":"YulFunctionCall","src":"1477:32:28"},"variableNames":[{"name":"value1","nativeSrc":"1467:6:28","nodeType":"YulIdentifier","src":"1467:6:28"}]},{"nativeSrc":"1518:46:28","nodeType":"YulVariableDeclaration","src":"1518:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1549:9:28","nodeType":"YulIdentifier","src":"1549:9:28"},{"kind":"number","nativeSrc":"1560:2:28","nodeType":"YulLiteral","src":"1560:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1545:3:28","nodeType":"YulIdentifier","src":"1545:3:28"},"nativeSrc":"1545:18:28","nodeType":"YulFunctionCall","src":"1545:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"1532:12:28","nodeType":"YulIdentifier","src":"1532:12:28"},"nativeSrc":"1532:32:28","nodeType":"YulFunctionCall","src":"1532:32:28"},"variables":[{"name":"offset","nativeSrc":"1522:6:28","nodeType":"YulTypedName","src":"1522:6:28","type":""}]},{"body":{"nativeSrc":"1607:16:28","nodeType":"YulBlock","src":"1607:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1616:1:28","nodeType":"YulLiteral","src":"1616:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1619:1:28","nodeType":"YulLiteral","src":"1619:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1609:6:28","nodeType":"YulIdentifier","src":"1609:6:28"},"nativeSrc":"1609:12:28","nodeType":"YulFunctionCall","src":"1609:12:28"},"nativeSrc":"1609:12:28","nodeType":"YulExpressionStatement","src":"1609:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1579:6:28","nodeType":"YulIdentifier","src":"1579:6:28"},{"kind":"number","nativeSrc":"1587:18:28","nodeType":"YulLiteral","src":"1587:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1576:2:28","nodeType":"YulIdentifier","src":"1576:2:28"},"nativeSrc":"1576:30:28","nodeType":"YulFunctionCall","src":"1576:30:28"},"nativeSrc":"1573:50:28","nodeType":"YulIf","src":"1573:50:28"},{"nativeSrc":"1632:60:28","nodeType":"YulAssignment","src":"1632:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1664:9:28","nodeType":"YulIdentifier","src":"1664:9:28"},{"name":"offset","nativeSrc":"1675:6:28","nodeType":"YulIdentifier","src":"1675:6:28"}],"functionName":{"name":"add","nativeSrc":"1660:3:28","nodeType":"YulIdentifier","src":"1660:3:28"},"nativeSrc":"1660:22:28","nodeType":"YulFunctionCall","src":"1660:22:28"},{"name":"dataEnd","nativeSrc":"1684:7:28","nodeType":"YulIdentifier","src":"1684:7:28"}],"functionName":{"name":"abi_decode_string","nativeSrc":"1642:17:28","nodeType":"YulIdentifier","src":"1642:17:28"},"nativeSrc":"1642:50:28","nodeType":"YulFunctionCall","src":"1642:50:28"},"variableNames":[{"name":"value2","nativeSrc":"1632:6:28","nodeType":"YulIdentifier","src":"1632:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr","nativeSrc":"1240:458:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1304:9:28","nodeType":"YulTypedName","src":"1304:9:28","type":""},{"name":"dataEnd","nativeSrc":"1315:7:28","nodeType":"YulTypedName","src":"1315:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1327:6:28","nodeType":"YulTypedName","src":"1327:6:28","type":""},{"name":"value1","nativeSrc":"1335:6:28","nodeType":"YulTypedName","src":"1335:6:28","type":""},{"name":"value2","nativeSrc":"1343:6:28","nodeType":"YulTypedName","src":"1343:6:28","type":""}],"src":"1240:458:28"},{"body":{"nativeSrc":"1804:76:28","nodeType":"YulBlock","src":"1804:76:28","statements":[{"nativeSrc":"1814:26:28","nodeType":"YulAssignment","src":"1814:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"1826:9:28","nodeType":"YulIdentifier","src":"1826:9:28"},{"kind":"number","nativeSrc":"1837:2:28","nodeType":"YulLiteral","src":"1837:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1822:3:28","nodeType":"YulIdentifier","src":"1822:3:28"},"nativeSrc":"1822:18:28","nodeType":"YulFunctionCall","src":"1822:18:28"},"variableNames":[{"name":"tail","nativeSrc":"1814:4:28","nodeType":"YulIdentifier","src":"1814:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1856:9:28","nodeType":"YulIdentifier","src":"1856:9:28"},{"name":"value0","nativeSrc":"1867:6:28","nodeType":"YulIdentifier","src":"1867:6:28"}],"functionName":{"name":"mstore","nativeSrc":"1849:6:28","nodeType":"YulIdentifier","src":"1849:6:28"},"nativeSrc":"1849:25:28","nodeType":"YulFunctionCall","src":"1849:25:28"},"nativeSrc":"1849:25:28","nodeType":"YulExpressionStatement","src":"1849:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1703:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1773:9:28","nodeType":"YulTypedName","src":"1773:9:28","type":""},{"name":"value0","nativeSrc":"1784:6:28","nodeType":"YulTypedName","src":"1784:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1795:4:28","nodeType":"YulTypedName","src":"1795:4:28","type":""}],"src":"1703:177:28"},{"body":{"nativeSrc":"1955:110:28","nodeType":"YulBlock","src":"1955:110:28","statements":[{"body":{"nativeSrc":"2001:16:28","nodeType":"YulBlock","src":"2001:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2010:1:28","nodeType":"YulLiteral","src":"2010:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2013:1:28","nodeType":"YulLiteral","src":"2013:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2003:6:28","nodeType":"YulIdentifier","src":"2003:6:28"},"nativeSrc":"2003:12:28","nodeType":"YulFunctionCall","src":"2003:12:28"},"nativeSrc":"2003:12:28","nodeType":"YulExpressionStatement","src":"2003:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1976:7:28","nodeType":"YulIdentifier","src":"1976:7:28"},{"name":"headStart","nativeSrc":"1985:9:28","nodeType":"YulIdentifier","src":"1985:9:28"}],"functionName":{"name":"sub","nativeSrc":"1972:3:28","nodeType":"YulIdentifier","src":"1972:3:28"},"nativeSrc":"1972:23:28","nodeType":"YulFunctionCall","src":"1972:23:28"},{"kind":"number","nativeSrc":"1997:2:28","nodeType":"YulLiteral","src":"1997:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1968:3:28","nodeType":"YulIdentifier","src":"1968:3:28"},"nativeSrc":"1968:32:28","nodeType":"YulFunctionCall","src":"1968:32:28"},"nativeSrc":"1965:52:28","nodeType":"YulIf","src":"1965:52:28"},{"nativeSrc":"2026:33:28","nodeType":"YulAssignment","src":"2026:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2049:9:28","nodeType":"YulIdentifier","src":"2049:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"2036:12:28","nodeType":"YulIdentifier","src":"2036:12:28"},"nativeSrc":"2036:23:28","nodeType":"YulFunctionCall","src":"2036:23:28"},"variableNames":[{"name":"value0","nativeSrc":"2026:6:28","nodeType":"YulIdentifier","src":"2026:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1885:180:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1921:9:28","nodeType":"YulTypedName","src":"1921:9:28","type":""},{"name":"dataEnd","nativeSrc":"1932:7:28","nodeType":"YulTypedName","src":"1932:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1944:6:28","nodeType":"YulTypedName","src":"1944:6:28","type":""}],"src":"1885:180:28"},{"body":{"nativeSrc":"2208:316:28","nodeType":"YulBlock","src":"2208:316:28","statements":[{"body":{"nativeSrc":"2255:16:28","nodeType":"YulBlock","src":"2255:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2264:1:28","nodeType":"YulLiteral","src":"2264:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2267:1:28","nodeType":"YulLiteral","src":"2267:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2257:6:28","nodeType":"YulIdentifier","src":"2257:6:28"},"nativeSrc":"2257:12:28","nodeType":"YulFunctionCall","src":"2257:12:28"},"nativeSrc":"2257:12:28","nodeType":"YulExpressionStatement","src":"2257:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2229:7:28","nodeType":"YulIdentifier","src":"2229:7:28"},{"name":"headStart","nativeSrc":"2238:9:28","nodeType":"YulIdentifier","src":"2238:9:28"}],"functionName":{"name":"sub","nativeSrc":"2225:3:28","nodeType":"YulIdentifier","src":"2225:3:28"},"nativeSrc":"2225:23:28","nodeType":"YulFunctionCall","src":"2225:23:28"},{"kind":"number","nativeSrc":"2250:3:28","nodeType":"YulLiteral","src":"2250:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"2221:3:28","nodeType":"YulIdentifier","src":"2221:3:28"},"nativeSrc":"2221:33:28","nodeType":"YulFunctionCall","src":"2221:33:28"},"nativeSrc":"2218:53:28","nodeType":"YulIf","src":"2218:53:28"},{"nativeSrc":"2280:33:28","nodeType":"YulAssignment","src":"2280:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2303:9:28","nodeType":"YulIdentifier","src":"2303:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"2290:12:28","nodeType":"YulIdentifier","src":"2290:12:28"},"nativeSrc":"2290:23:28","nodeType":"YulFunctionCall","src":"2290:23:28"},"variableNames":[{"name":"value0","nativeSrc":"2280:6:28","nodeType":"YulIdentifier","src":"2280:6:28"}]},{"nativeSrc":"2322:42:28","nodeType":"YulAssignment","src":"2322:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2349:9:28","nodeType":"YulIdentifier","src":"2349:9:28"},{"kind":"number","nativeSrc":"2360:2:28","nodeType":"YulLiteral","src":"2360:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2345:3:28","nodeType":"YulIdentifier","src":"2345:3:28"},"nativeSrc":"2345:18:28","nodeType":"YulFunctionCall","src":"2345:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2332:12:28","nodeType":"YulIdentifier","src":"2332:12:28"},"nativeSrc":"2332:32:28","nodeType":"YulFunctionCall","src":"2332:32:28"},"variableNames":[{"name":"value1","nativeSrc":"2322:6:28","nodeType":"YulIdentifier","src":"2322:6:28"}]},{"nativeSrc":"2373:42:28","nodeType":"YulAssignment","src":"2373:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2400:9:28","nodeType":"YulIdentifier","src":"2400:9:28"},{"kind":"number","nativeSrc":"2411:2:28","nodeType":"YulLiteral","src":"2411:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2396:3:28","nodeType":"YulIdentifier","src":"2396:3:28"},"nativeSrc":"2396:18:28","nodeType":"YulFunctionCall","src":"2396:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2383:12:28","nodeType":"YulIdentifier","src":"2383:12:28"},"nativeSrc":"2383:32:28","nodeType":"YulFunctionCall","src":"2383:32:28"},"variableNames":[{"name":"value2","nativeSrc":"2373:6:28","nodeType":"YulIdentifier","src":"2373:6:28"}]},{"nativeSrc":"2424:42:28","nodeType":"YulAssignment","src":"2424:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2451:9:28","nodeType":"YulIdentifier","src":"2451:9:28"},{"kind":"number","nativeSrc":"2462:2:28","nodeType":"YulLiteral","src":"2462:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2447:3:28","nodeType":"YulIdentifier","src":"2447:3:28"},"nativeSrc":"2447:18:28","nodeType":"YulFunctionCall","src":"2447:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"2434:12:28","nodeType":"YulIdentifier","src":"2434:12:28"},"nativeSrc":"2434:32:28","nodeType":"YulFunctionCall","src":"2434:32:28"},"variableNames":[{"name":"value3","nativeSrc":"2424:6:28","nodeType":"YulIdentifier","src":"2424:6:28"}]},{"nativeSrc":"2475:43:28","nodeType":"YulAssignment","src":"2475:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2502:9:28","nodeType":"YulIdentifier","src":"2502:9:28"},{"kind":"number","nativeSrc":"2513:3:28","nodeType":"YulLiteral","src":"2513:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2498:3:28","nodeType":"YulIdentifier","src":"2498:3:28"},"nativeSrc":"2498:19:28","nodeType":"YulFunctionCall","src":"2498:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"2485:12:28","nodeType":"YulIdentifier","src":"2485:12:28"},"nativeSrc":"2485:33:28","nodeType":"YulFunctionCall","src":"2485:33:28"},"variableNames":[{"name":"value4","nativeSrc":"2475:6:28","nodeType":"YulIdentifier","src":"2475:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32","nativeSrc":"2070:454:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2142:9:28","nodeType":"YulTypedName","src":"2142:9:28","type":""},{"name":"dataEnd","nativeSrc":"2153:7:28","nodeType":"YulTypedName","src":"2153:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2165:6:28","nodeType":"YulTypedName","src":"2165:6:28","type":""},{"name":"value1","nativeSrc":"2173:6:28","nodeType":"YulTypedName","src":"2173:6:28","type":""},{"name":"value2","nativeSrc":"2181:6:28","nodeType":"YulTypedName","src":"2181:6:28","type":""},{"name":"value3","nativeSrc":"2189:6:28","nodeType":"YulTypedName","src":"2189:6:28","type":""},{"name":"value4","nativeSrc":"2197:6:28","nodeType":"YulTypedName","src":"2197:6:28","type":""}],"src":"2070:454:28"},{"body":{"nativeSrc":"2647:125:28","nodeType":"YulBlock","src":"2647:125:28","statements":[{"nativeSrc":"2657:26:28","nodeType":"YulAssignment","src":"2657:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"2669:9:28","nodeType":"YulIdentifier","src":"2669:9:28"},{"kind":"number","nativeSrc":"2680:2:28","nodeType":"YulLiteral","src":"2680:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2665:3:28","nodeType":"YulIdentifier","src":"2665:3:28"},"nativeSrc":"2665:18:28","nodeType":"YulFunctionCall","src":"2665:18:28"},"variableNames":[{"name":"tail","nativeSrc":"2657:4:28","nodeType":"YulIdentifier","src":"2657:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2699:9:28","nodeType":"YulIdentifier","src":"2699:9:28"},{"arguments":[{"name":"value0","nativeSrc":"2714:6:28","nodeType":"YulIdentifier","src":"2714:6:28"},{"kind":"number","nativeSrc":"2722:42:28","nodeType":"YulLiteral","src":"2722:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2710:3:28","nodeType":"YulIdentifier","src":"2710:3:28"},"nativeSrc":"2710:55:28","nodeType":"YulFunctionCall","src":"2710:55:28"}],"functionName":{"name":"mstore","nativeSrc":"2692:6:28","nodeType":"YulIdentifier","src":"2692:6:28"},"nativeSrc":"2692:74:28","nodeType":"YulFunctionCall","src":"2692:74:28"},"nativeSrc":"2692:74:28","nodeType":"YulExpressionStatement","src":"2692:74:28"}]},"name":"abi_encode_tuple_t_contract$_IRealmId_$2979__to_t_address__fromStack_reversed","nativeSrc":"2529:243:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2616:9:28","nodeType":"YulTypedName","src":"2616:9:28","type":""},{"name":"value0","nativeSrc":"2627:6:28","nodeType":"YulTypedName","src":"2627:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2638:4:28","nodeType":"YulTypedName","src":"2638:4:28","type":""}],"src":"2529:243:28"},{"body":{"nativeSrc":"2822:109:28","nodeType":"YulBlock","src":"2822:109:28","statements":[{"body":{"nativeSrc":"2909:16:28","nodeType":"YulBlock","src":"2909:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2918:1:28","nodeType":"YulLiteral","src":"2918:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"2921:1:28","nodeType":"YulLiteral","src":"2921:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2911:6:28","nodeType":"YulIdentifier","src":"2911:6:28"},"nativeSrc":"2911:12:28","nodeType":"YulFunctionCall","src":"2911:12:28"},"nativeSrc":"2911:12:28","nodeType":"YulExpressionStatement","src":"2911:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2845:5:28","nodeType":"YulIdentifier","src":"2845:5:28"},{"arguments":[{"name":"value","nativeSrc":"2856:5:28","nodeType":"YulIdentifier","src":"2856:5:28"},{"kind":"number","nativeSrc":"2863:42:28","nodeType":"YulLiteral","src":"2863:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2852:3:28","nodeType":"YulIdentifier","src":"2852:3:28"},"nativeSrc":"2852:54:28","nodeType":"YulFunctionCall","src":"2852:54:28"}],"functionName":{"name":"eq","nativeSrc":"2842:2:28","nodeType":"YulIdentifier","src":"2842:2:28"},"nativeSrc":"2842:65:28","nodeType":"YulFunctionCall","src":"2842:65:28"}],"functionName":{"name":"iszero","nativeSrc":"2835:6:28","nodeType":"YulIdentifier","src":"2835:6:28"},"nativeSrc":"2835:73:28","nodeType":"YulFunctionCall","src":"2835:73:28"},"nativeSrc":"2832:93:28","nodeType":"YulIf","src":"2832:93:28"}]},"name":"validator_revert_address","nativeSrc":"2777:154:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2811:5:28","nodeType":"YulTypedName","src":"2811:5:28","type":""}],"src":"2777:154:28"},{"body":{"nativeSrc":"3023:228:28","nodeType":"YulBlock","src":"3023:228:28","statements":[{"body":{"nativeSrc":"3069:16:28","nodeType":"YulBlock","src":"3069:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3078:1:28","nodeType":"YulLiteral","src":"3078:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3081:1:28","nodeType":"YulLiteral","src":"3081:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3071:6:28","nodeType":"YulIdentifier","src":"3071:6:28"},"nativeSrc":"3071:12:28","nodeType":"YulFunctionCall","src":"3071:12:28"},"nativeSrc":"3071:12:28","nodeType":"YulExpressionStatement","src":"3071:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3044:7:28","nodeType":"YulIdentifier","src":"3044:7:28"},{"name":"headStart","nativeSrc":"3053:9:28","nodeType":"YulIdentifier","src":"3053:9:28"}],"functionName":{"name":"sub","nativeSrc":"3040:3:28","nodeType":"YulIdentifier","src":"3040:3:28"},"nativeSrc":"3040:23:28","nodeType":"YulFunctionCall","src":"3040:23:28"},{"kind":"number","nativeSrc":"3065:2:28","nodeType":"YulLiteral","src":"3065:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3036:3:28","nodeType":"YulIdentifier","src":"3036:3:28"},"nativeSrc":"3036:32:28","nodeType":"YulFunctionCall","src":"3036:32:28"},"nativeSrc":"3033:52:28","nodeType":"YulIf","src":"3033:52:28"},{"nativeSrc":"3094:33:28","nodeType":"YulAssignment","src":"3094:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3117:9:28","nodeType":"YulIdentifier","src":"3117:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"3104:12:28","nodeType":"YulIdentifier","src":"3104:12:28"},"nativeSrc":"3104:23:28","nodeType":"YulFunctionCall","src":"3104:23:28"},"variableNames":[{"name":"value0","nativeSrc":"3094:6:28","nodeType":"YulIdentifier","src":"3094:6:28"}]},{"nativeSrc":"3136:45:28","nodeType":"YulVariableDeclaration","src":"3136:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3166:9:28","nodeType":"YulIdentifier","src":"3166:9:28"},{"kind":"number","nativeSrc":"3177:2:28","nodeType":"YulLiteral","src":"3177:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3162:3:28","nodeType":"YulIdentifier","src":"3162:3:28"},"nativeSrc":"3162:18:28","nodeType":"YulFunctionCall","src":"3162:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"3149:12:28","nodeType":"YulIdentifier","src":"3149:12:28"},"nativeSrc":"3149:32:28","nodeType":"YulFunctionCall","src":"3149:32:28"},"variables":[{"name":"value","nativeSrc":"3140:5:28","nodeType":"YulTypedName","src":"3140:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3215:5:28","nodeType":"YulIdentifier","src":"3215:5:28"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3190:24:28","nodeType":"YulIdentifier","src":"3190:24:28"},"nativeSrc":"3190:31:28","nodeType":"YulFunctionCall","src":"3190:31:28"},"nativeSrc":"3190:31:28","nodeType":"YulExpressionStatement","src":"3190:31:28"},{"nativeSrc":"3230:15:28","nodeType":"YulAssignment","src":"3230:15:28","value":{"name":"value","nativeSrc":"3240:5:28","nodeType":"YulIdentifier","src":"3240:5:28"},"variableNames":[{"name":"value1","nativeSrc":"3230:6:28","nodeType":"YulIdentifier","src":"3230:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2936:315:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2981:9:28","nodeType":"YulTypedName","src":"2981:9:28","type":""},{"name":"dataEnd","nativeSrc":"2992:7:28","nodeType":"YulTypedName","src":"2992:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3004:6:28","nodeType":"YulTypedName","src":"3004:6:28","type":""},{"name":"value1","nativeSrc":"3012:6:28","nodeType":"YulTypedName","src":"3012:6:28","type":""}],"src":"2936:315:28"},{"body":{"nativeSrc":"3326:177:28","nodeType":"YulBlock","src":"3326:177:28","statements":[{"body":{"nativeSrc":"3372:16:28","nodeType":"YulBlock","src":"3372:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3381:1:28","nodeType":"YulLiteral","src":"3381:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3384:1:28","nodeType":"YulLiteral","src":"3384:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3374:6:28","nodeType":"YulIdentifier","src":"3374:6:28"},"nativeSrc":"3374:12:28","nodeType":"YulFunctionCall","src":"3374:12:28"},"nativeSrc":"3374:12:28","nodeType":"YulExpressionStatement","src":"3374:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3347:7:28","nodeType":"YulIdentifier","src":"3347:7:28"},{"name":"headStart","nativeSrc":"3356:9:28","nodeType":"YulIdentifier","src":"3356:9:28"}],"functionName":{"name":"sub","nativeSrc":"3343:3:28","nodeType":"YulIdentifier","src":"3343:3:28"},"nativeSrc":"3343:23:28","nodeType":"YulFunctionCall","src":"3343:23:28"},{"kind":"number","nativeSrc":"3368:2:28","nodeType":"YulLiteral","src":"3368:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3339:3:28","nodeType":"YulIdentifier","src":"3339:3:28"},"nativeSrc":"3339:32:28","nodeType":"YulFunctionCall","src":"3339:32:28"},"nativeSrc":"3336:52:28","nodeType":"YulIf","src":"3336:52:28"},{"nativeSrc":"3397:36:28","nodeType":"YulVariableDeclaration","src":"3397:36:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3423:9:28","nodeType":"YulIdentifier","src":"3423:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"3410:12:28","nodeType":"YulIdentifier","src":"3410:12:28"},"nativeSrc":"3410:23:28","nodeType":"YulFunctionCall","src":"3410:23:28"},"variables":[{"name":"value","nativeSrc":"3401:5:28","nodeType":"YulTypedName","src":"3401:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3467:5:28","nodeType":"YulIdentifier","src":"3467:5:28"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3442:24:28","nodeType":"YulIdentifier","src":"3442:24:28"},"nativeSrc":"3442:31:28","nodeType":"YulFunctionCall","src":"3442:31:28"},"nativeSrc":"3442:31:28","nodeType":"YulExpressionStatement","src":"3442:31:28"},{"nativeSrc":"3482:15:28","nodeType":"YulAssignment","src":"3482:15:28","value":{"name":"value","nativeSrc":"3492:5:28","nodeType":"YulIdentifier","src":"3492:5:28"},"variableNames":[{"name":"value0","nativeSrc":"3482:6:28","nodeType":"YulIdentifier","src":"3482:6:28"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3256:247:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3292:9:28","nodeType":"YulTypedName","src":"3292:9:28","type":""},{"name":"dataEnd","nativeSrc":"3303:7:28","nodeType":"YulTypedName","src":"3303:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3315:6:28","nodeType":"YulTypedName","src":"3315:6:28","type":""}],"src":"3256:247:28"},{"body":{"nativeSrc":"3603:851:28","nodeType":"YulBlock","src":"3603:851:28","statements":[{"nativeSrc":"3613:12:28","nodeType":"YulVariableDeclaration","src":"3613:12:28","value":{"kind":"number","nativeSrc":"3623:2:28","nodeType":"YulLiteral","src":"3623:2:28","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"3617:2:28","nodeType":"YulTypedName","src":"3617:2:28","type":""}]},{"body":{"nativeSrc":"3670:16:28","nodeType":"YulBlock","src":"3670:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3679:1:28","nodeType":"YulLiteral","src":"3679:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3682:1:28","nodeType":"YulLiteral","src":"3682:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3672:6:28","nodeType":"YulIdentifier","src":"3672:6:28"},"nativeSrc":"3672:12:28","nodeType":"YulFunctionCall","src":"3672:12:28"},"nativeSrc":"3672:12:28","nodeType":"YulExpressionStatement","src":"3672:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3645:7:28","nodeType":"YulIdentifier","src":"3645:7:28"},{"name":"headStart","nativeSrc":"3654:9:28","nodeType":"YulIdentifier","src":"3654:9:28"}],"functionName":{"name":"sub","nativeSrc":"3641:3:28","nodeType":"YulIdentifier","src":"3641:3:28"},"nativeSrc":"3641:23:28","nodeType":"YulFunctionCall","src":"3641:23:28"},{"name":"_1","nativeSrc":"3666:2:28","nodeType":"YulIdentifier","src":"3666:2:28"}],"functionName":{"name":"slt","nativeSrc":"3637:3:28","nodeType":"YulIdentifier","src":"3637:3:28"},"nativeSrc":"3637:32:28","nodeType":"YulFunctionCall","src":"3637:32:28"},"nativeSrc":"3634:52:28","nodeType":"YulIf","src":"3634:52:28"},{"nativeSrc":"3695:37:28","nodeType":"YulVariableDeclaration","src":"3695:37:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3722:9:28","nodeType":"YulIdentifier","src":"3722:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"3709:12:28","nodeType":"YulIdentifier","src":"3709:12:28"},"nativeSrc":"3709:23:28","nodeType":"YulFunctionCall","src":"3709:23:28"},"variables":[{"name":"offset","nativeSrc":"3699:6:28","nodeType":"YulTypedName","src":"3699:6:28","type":""}]},{"nativeSrc":"3741:28:28","nodeType":"YulVariableDeclaration","src":"3741:28:28","value":{"kind":"number","nativeSrc":"3751:18:28","nodeType":"YulLiteral","src":"3751:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"3745:2:28","nodeType":"YulTypedName","src":"3745:2:28","type":""}]},{"body":{"nativeSrc":"3796:16:28","nodeType":"YulBlock","src":"3796:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3805:1:28","nodeType":"YulLiteral","src":"3805:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3808:1:28","nodeType":"YulLiteral","src":"3808:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3798:6:28","nodeType":"YulIdentifier","src":"3798:6:28"},"nativeSrc":"3798:12:28","nodeType":"YulFunctionCall","src":"3798:12:28"},"nativeSrc":"3798:12:28","nodeType":"YulExpressionStatement","src":"3798:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3784:6:28","nodeType":"YulIdentifier","src":"3784:6:28"},{"name":"_2","nativeSrc":"3792:2:28","nodeType":"YulIdentifier","src":"3792:2:28"}],"functionName":{"name":"gt","nativeSrc":"3781:2:28","nodeType":"YulIdentifier","src":"3781:2:28"},"nativeSrc":"3781:14:28","nodeType":"YulFunctionCall","src":"3781:14:28"},"nativeSrc":"3778:34:28","nodeType":"YulIf","src":"3778:34:28"},{"nativeSrc":"3821:32:28","nodeType":"YulVariableDeclaration","src":"3821:32:28","value":{"arguments":[{"name":"headStart","nativeSrc":"3835:9:28","nodeType":"YulIdentifier","src":"3835:9:28"},{"name":"offset","nativeSrc":"3846:6:28","nodeType":"YulIdentifier","src":"3846:6:28"}],"functionName":{"name":"add","nativeSrc":"3831:3:28","nodeType":"YulIdentifier","src":"3831:3:28"},"nativeSrc":"3831:22:28","nodeType":"YulFunctionCall","src":"3831:22:28"},"variables":[{"name":"_3","nativeSrc":"3825:2:28","nodeType":"YulTypedName","src":"3825:2:28","type":""}]},{"body":{"nativeSrc":"3901:16:28","nodeType":"YulBlock","src":"3901:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3910:1:28","nodeType":"YulLiteral","src":"3910:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"3913:1:28","nodeType":"YulLiteral","src":"3913:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3903:6:28","nodeType":"YulIdentifier","src":"3903:6:28"},"nativeSrc":"3903:12:28","nodeType":"YulFunctionCall","src":"3903:12:28"},"nativeSrc":"3903:12:28","nodeType":"YulExpressionStatement","src":"3903:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"3880:2:28","nodeType":"YulIdentifier","src":"3880:2:28"},{"kind":"number","nativeSrc":"3884:4:28","nodeType":"YulLiteral","src":"3884:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3876:3:28","nodeType":"YulIdentifier","src":"3876:3:28"},"nativeSrc":"3876:13:28","nodeType":"YulFunctionCall","src":"3876:13:28"},{"name":"dataEnd","nativeSrc":"3891:7:28","nodeType":"YulIdentifier","src":"3891:7:28"}],"functionName":{"name":"slt","nativeSrc":"3872:3:28","nodeType":"YulIdentifier","src":"3872:3:28"},"nativeSrc":"3872:27:28","nodeType":"YulFunctionCall","src":"3872:27:28"}],"functionName":{"name":"iszero","nativeSrc":"3865:6:28","nodeType":"YulIdentifier","src":"3865:6:28"},"nativeSrc":"3865:35:28","nodeType":"YulFunctionCall","src":"3865:35:28"},"nativeSrc":"3862:55:28","nodeType":"YulIf","src":"3862:55:28"},{"nativeSrc":"3926:26:28","nodeType":"YulVariableDeclaration","src":"3926:26:28","value":{"arguments":[{"name":"_3","nativeSrc":"3949:2:28","nodeType":"YulIdentifier","src":"3949:2:28"}],"functionName":{"name":"calldataload","nativeSrc":"3936:12:28","nodeType":"YulIdentifier","src":"3936:12:28"},"nativeSrc":"3936:16:28","nodeType":"YulFunctionCall","src":"3936:16:28"},"variables":[{"name":"_4","nativeSrc":"3930:2:28","nodeType":"YulTypedName","src":"3930:2:28","type":""}]},{"body":{"nativeSrc":"3975:22:28","nodeType":"YulBlock","src":"3975:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3977:16:28","nodeType":"YulIdentifier","src":"3977:16:28"},"nativeSrc":"3977:18:28","nodeType":"YulFunctionCall","src":"3977:18:28"},"nativeSrc":"3977:18:28","nodeType":"YulExpressionStatement","src":"3977:18:28"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"3967:2:28","nodeType":"YulIdentifier","src":"3967:2:28"},{"name":"_2","nativeSrc":"3971:2:28","nodeType":"YulIdentifier","src":"3971:2:28"}],"functionName":{"name":"gt","nativeSrc":"3964:2:28","nodeType":"YulIdentifier","src":"3964:2:28"},"nativeSrc":"3964:10:28","nodeType":"YulFunctionCall","src":"3964:10:28"},"nativeSrc":"3961:36:28","nodeType":"YulIf","src":"3961:36:28"},{"nativeSrc":"4006:20:28","nodeType":"YulVariableDeclaration","src":"4006:20:28","value":{"arguments":[{"kind":"number","nativeSrc":"4020:1:28","nodeType":"YulLiteral","src":"4020:1:28","type":"","value":"5"},{"name":"_4","nativeSrc":"4023:2:28","nodeType":"YulIdentifier","src":"4023:2:28"}],"functionName":{"name":"shl","nativeSrc":"4016:3:28","nodeType":"YulIdentifier","src":"4016:3:28"},"nativeSrc":"4016:10:28","nodeType":"YulFunctionCall","src":"4016:10:28"},"variables":[{"name":"_5","nativeSrc":"4010:2:28","nodeType":"YulTypedName","src":"4010:2:28","type":""}]},{"nativeSrc":"4035:39:28","nodeType":"YulVariableDeclaration","src":"4035:39:28","value":{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"4066:2:28","nodeType":"YulIdentifier","src":"4066:2:28"},{"name":"_1","nativeSrc":"4070:2:28","nodeType":"YulIdentifier","src":"4070:2:28"}],"functionName":{"name":"add","nativeSrc":"4062:3:28","nodeType":"YulIdentifier","src":"4062:3:28"},"nativeSrc":"4062:11:28","nodeType":"YulFunctionCall","src":"4062:11:28"}],"functionName":{"name":"allocate_memory","nativeSrc":"4046:15:28","nodeType":"YulIdentifier","src":"4046:15:28"},"nativeSrc":"4046:28:28","nodeType":"YulFunctionCall","src":"4046:28:28"},"variables":[{"name":"dst","nativeSrc":"4039:3:28","nodeType":"YulTypedName","src":"4039:3:28","type":""}]},{"nativeSrc":"4083:16:28","nodeType":"YulVariableDeclaration","src":"4083:16:28","value":{"name":"dst","nativeSrc":"4096:3:28","nodeType":"YulIdentifier","src":"4096:3:28"},"variables":[{"name":"dst_1","nativeSrc":"4087:5:28","nodeType":"YulTypedName","src":"4087:5:28","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"4115:3:28","nodeType":"YulIdentifier","src":"4115:3:28"},{"name":"_4","nativeSrc":"4120:2:28","nodeType":"YulIdentifier","src":"4120:2:28"}],"functionName":{"name":"mstore","nativeSrc":"4108:6:28","nodeType":"YulIdentifier","src":"4108:6:28"},"nativeSrc":"4108:15:28","nodeType":"YulFunctionCall","src":"4108:15:28"},"nativeSrc":"4108:15:28","nodeType":"YulExpressionStatement","src":"4108:15:28"},{"nativeSrc":"4132:19:28","nodeType":"YulAssignment","src":"4132:19:28","value":{"arguments":[{"name":"dst","nativeSrc":"4143:3:28","nodeType":"YulIdentifier","src":"4143:3:28"},{"name":"_1","nativeSrc":"4148:2:28","nodeType":"YulIdentifier","src":"4148:2:28"}],"functionName":{"name":"add","nativeSrc":"4139:3:28","nodeType":"YulIdentifier","src":"4139:3:28"},"nativeSrc":"4139:12:28","nodeType":"YulFunctionCall","src":"4139:12:28"},"variableNames":[{"name":"dst","nativeSrc":"4132:3:28","nodeType":"YulIdentifier","src":"4132:3:28"}]},{"nativeSrc":"4160:34:28","nodeType":"YulVariableDeclaration","src":"4160:34:28","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"4182:2:28","nodeType":"YulIdentifier","src":"4182:2:28"},{"name":"_5","nativeSrc":"4186:2:28","nodeType":"YulIdentifier","src":"4186:2:28"}],"functionName":{"name":"add","nativeSrc":"4178:3:28","nodeType":"YulIdentifier","src":"4178:3:28"},"nativeSrc":"4178:11:28","nodeType":"YulFunctionCall","src":"4178:11:28"},{"name":"_1","nativeSrc":"4191:2:28","nodeType":"YulIdentifier","src":"4191:2:28"}],"functionName":{"name":"add","nativeSrc":"4174:3:28","nodeType":"YulIdentifier","src":"4174:3:28"},"nativeSrc":"4174:20:28","nodeType":"YulFunctionCall","src":"4174:20:28"},"variables":[{"name":"srcEnd","nativeSrc":"4164:6:28","nodeType":"YulTypedName","src":"4164:6:28","type":""}]},{"body":{"nativeSrc":"4226:16:28","nodeType":"YulBlock","src":"4226:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4235:1:28","nodeType":"YulLiteral","src":"4235:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4238:1:28","nodeType":"YulLiteral","src":"4238:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4228:6:28","nodeType":"YulIdentifier","src":"4228:6:28"},"nativeSrc":"4228:12:28","nodeType":"YulFunctionCall","src":"4228:12:28"},"nativeSrc":"4228:12:28","nodeType":"YulExpressionStatement","src":"4228:12:28"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"4209:6:28","nodeType":"YulIdentifier","src":"4209:6:28"},{"name":"dataEnd","nativeSrc":"4217:7:28","nodeType":"YulIdentifier","src":"4217:7:28"}],"functionName":{"name":"gt","nativeSrc":"4206:2:28","nodeType":"YulIdentifier","src":"4206:2:28"},"nativeSrc":"4206:19:28","nodeType":"YulFunctionCall","src":"4206:19:28"},"nativeSrc":"4203:39:28","nodeType":"YulIf","src":"4203:39:28"},{"nativeSrc":"4251:22:28","nodeType":"YulVariableDeclaration","src":"4251:22:28","value":{"arguments":[{"name":"_3","nativeSrc":"4266:2:28","nodeType":"YulIdentifier","src":"4266:2:28"},{"name":"_1","nativeSrc":"4270:2:28","nodeType":"YulIdentifier","src":"4270:2:28"}],"functionName":{"name":"add","nativeSrc":"4262:3:28","nodeType":"YulIdentifier","src":"4262:3:28"},"nativeSrc":"4262:11:28","nodeType":"YulFunctionCall","src":"4262:11:28"},"variables":[{"name":"src","nativeSrc":"4255:3:28","nodeType":"YulTypedName","src":"4255:3:28","type":""}]},{"body":{"nativeSrc":"4338:86:28","nodeType":"YulBlock","src":"4338:86:28","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4359:3:28","nodeType":"YulIdentifier","src":"4359:3:28"},{"arguments":[{"name":"src","nativeSrc":"4377:3:28","nodeType":"YulIdentifier","src":"4377:3:28"}],"functionName":{"name":"calldataload","nativeSrc":"4364:12:28","nodeType":"YulIdentifier","src":"4364:12:28"},"nativeSrc":"4364:17:28","nodeType":"YulFunctionCall","src":"4364:17:28"}],"functionName":{"name":"mstore","nativeSrc":"4352:6:28","nodeType":"YulIdentifier","src":"4352:6:28"},"nativeSrc":"4352:30:28","nodeType":"YulFunctionCall","src":"4352:30:28"},"nativeSrc":"4352:30:28","nodeType":"YulExpressionStatement","src":"4352:30:28"},{"nativeSrc":"4395:19:28","nodeType":"YulAssignment","src":"4395:19:28","value":{"arguments":[{"name":"dst","nativeSrc":"4406:3:28","nodeType":"YulIdentifier","src":"4406:3:28"},{"name":"_1","nativeSrc":"4411:2:28","nodeType":"YulIdentifier","src":"4411:2:28"}],"functionName":{"name":"add","nativeSrc":"4402:3:28","nodeType":"YulIdentifier","src":"4402:3:28"},"nativeSrc":"4402:12:28","nodeType":"YulFunctionCall","src":"4402:12:28"},"variableNames":[{"name":"dst","nativeSrc":"4395:3:28","nodeType":"YulIdentifier","src":"4395:3:28"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"4293:3:28","nodeType":"YulIdentifier","src":"4293:3:28"},{"name":"srcEnd","nativeSrc":"4298:6:28","nodeType":"YulIdentifier","src":"4298:6:28"}],"functionName":{"name":"lt","nativeSrc":"4290:2:28","nodeType":"YulIdentifier","src":"4290:2:28"},"nativeSrc":"4290:15:28","nodeType":"YulFunctionCall","src":"4290:15:28"},"nativeSrc":"4282:142:28","nodeType":"YulForLoop","post":{"nativeSrc":"4306:23:28","nodeType":"YulBlock","src":"4306:23:28","statements":[{"nativeSrc":"4308:19:28","nodeType":"YulAssignment","src":"4308:19:28","value":{"arguments":[{"name":"src","nativeSrc":"4319:3:28","nodeType":"YulIdentifier","src":"4319:3:28"},{"name":"_1","nativeSrc":"4324:2:28","nodeType":"YulIdentifier","src":"4324:2:28"}],"functionName":{"name":"add","nativeSrc":"4315:3:28","nodeType":"YulIdentifier","src":"4315:3:28"},"nativeSrc":"4315:12:28","nodeType":"YulFunctionCall","src":"4315:12:28"},"variableNames":[{"name":"src","nativeSrc":"4308:3:28","nodeType":"YulIdentifier","src":"4308:3:28"}]}]},"pre":{"nativeSrc":"4286:3:28","nodeType":"YulBlock","src":"4286:3:28","statements":[]},"src":"4282:142:28"},{"nativeSrc":"4433:15:28","nodeType":"YulAssignment","src":"4433:15:28","value":{"name":"dst_1","nativeSrc":"4443:5:28","nodeType":"YulIdentifier","src":"4443:5:28"},"variableNames":[{"name":"value0","nativeSrc":"4433:6:28","nodeType":"YulIdentifier","src":"4433:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"3508:946:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3569:9:28","nodeType":"YulTypedName","src":"3569:9:28","type":""},{"name":"dataEnd","nativeSrc":"3580:7:28","nodeType":"YulTypedName","src":"3580:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3592:6:28","nodeType":"YulTypedName","src":"3592:6:28","type":""}],"src":"3508:946:28"},{"body":{"nativeSrc":"4529:110:28","nodeType":"YulBlock","src":"4529:110:28","statements":[{"body":{"nativeSrc":"4575:16:28","nodeType":"YulBlock","src":"4575:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4584:1:28","nodeType":"YulLiteral","src":"4584:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4587:1:28","nodeType":"YulLiteral","src":"4587:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4577:6:28","nodeType":"YulIdentifier","src":"4577:6:28"},"nativeSrc":"4577:12:28","nodeType":"YulFunctionCall","src":"4577:12:28"},"nativeSrc":"4577:12:28","nodeType":"YulExpressionStatement","src":"4577:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4550:7:28","nodeType":"YulIdentifier","src":"4550:7:28"},{"name":"headStart","nativeSrc":"4559:9:28","nodeType":"YulIdentifier","src":"4559:9:28"}],"functionName":{"name":"sub","nativeSrc":"4546:3:28","nodeType":"YulIdentifier","src":"4546:3:28"},"nativeSrc":"4546:23:28","nodeType":"YulFunctionCall","src":"4546:23:28"},{"kind":"number","nativeSrc":"4571:2:28","nodeType":"YulLiteral","src":"4571:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4542:3:28","nodeType":"YulIdentifier","src":"4542:3:28"},"nativeSrc":"4542:32:28","nodeType":"YulFunctionCall","src":"4542:32:28"},"nativeSrc":"4539:52:28","nodeType":"YulIf","src":"4539:52:28"},{"nativeSrc":"4600:33:28","nodeType":"YulAssignment","src":"4600:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4623:9:28","nodeType":"YulIdentifier","src":"4623:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"4610:12:28","nodeType":"YulIdentifier","src":"4610:12:28"},"nativeSrc":"4610:23:28","nodeType":"YulFunctionCall","src":"4610:23:28"},"variableNames":[{"name":"value0","nativeSrc":"4600:6:28","nodeType":"YulIdentifier","src":"4600:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"4459:180:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4495:9:28","nodeType":"YulTypedName","src":"4495:9:28","type":""},{"name":"dataEnd","nativeSrc":"4506:7:28","nodeType":"YulTypedName","src":"4506:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4518:6:28","nodeType":"YulTypedName","src":"4518:6:28","type":""}],"src":"4459:180:28"},{"body":{"nativeSrc":"4739:92:28","nodeType":"YulBlock","src":"4739:92:28","statements":[{"nativeSrc":"4749:26:28","nodeType":"YulAssignment","src":"4749:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"4761:9:28","nodeType":"YulIdentifier","src":"4761:9:28"},{"kind":"number","nativeSrc":"4772:2:28","nodeType":"YulLiteral","src":"4772:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4757:3:28","nodeType":"YulIdentifier","src":"4757:3:28"},"nativeSrc":"4757:18:28","nodeType":"YulFunctionCall","src":"4757:18:28"},"variableNames":[{"name":"tail","nativeSrc":"4749:4:28","nodeType":"YulIdentifier","src":"4749:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4791:9:28","nodeType":"YulIdentifier","src":"4791:9:28"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4816:6:28","nodeType":"YulIdentifier","src":"4816:6:28"}],"functionName":{"name":"iszero","nativeSrc":"4809:6:28","nodeType":"YulIdentifier","src":"4809:6:28"},"nativeSrc":"4809:14:28","nodeType":"YulFunctionCall","src":"4809:14:28"}],"functionName":{"name":"iszero","nativeSrc":"4802:6:28","nodeType":"YulIdentifier","src":"4802:6:28"},"nativeSrc":"4802:22:28","nodeType":"YulFunctionCall","src":"4802:22:28"}],"functionName":{"name":"mstore","nativeSrc":"4784:6:28","nodeType":"YulIdentifier","src":"4784:6:28"},"nativeSrc":"4784:41:28","nodeType":"YulFunctionCall","src":"4784:41:28"},"nativeSrc":"4784:41:28","nodeType":"YulExpressionStatement","src":"4784:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"4644:187:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4708:9:28","nodeType":"YulTypedName","src":"4708:9:28","type":""},{"name":"value0","nativeSrc":"4719:6:28","nodeType":"YulTypedName","src":"4719:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4730:4:28","nodeType":"YulTypedName","src":"4730:4:28","type":""}],"src":"4644:187:28"},{"body":{"nativeSrc":"4923:301:28","nodeType":"YulBlock","src":"4923:301:28","statements":[{"body":{"nativeSrc":"4969:16:28","nodeType":"YulBlock","src":"4969:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4978:1:28","nodeType":"YulLiteral","src":"4978:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"4981:1:28","nodeType":"YulLiteral","src":"4981:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4971:6:28","nodeType":"YulIdentifier","src":"4971:6:28"},"nativeSrc":"4971:12:28","nodeType":"YulFunctionCall","src":"4971:12:28"},"nativeSrc":"4971:12:28","nodeType":"YulExpressionStatement","src":"4971:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4944:7:28","nodeType":"YulIdentifier","src":"4944:7:28"},{"name":"headStart","nativeSrc":"4953:9:28","nodeType":"YulIdentifier","src":"4953:9:28"}],"functionName":{"name":"sub","nativeSrc":"4940:3:28","nodeType":"YulIdentifier","src":"4940:3:28"},"nativeSrc":"4940:23:28","nodeType":"YulFunctionCall","src":"4940:23:28"},{"kind":"number","nativeSrc":"4965:2:28","nodeType":"YulLiteral","src":"4965:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4936:3:28","nodeType":"YulIdentifier","src":"4936:3:28"},"nativeSrc":"4936:32:28","nodeType":"YulFunctionCall","src":"4936:32:28"},"nativeSrc":"4933:52:28","nodeType":"YulIf","src":"4933:52:28"},{"nativeSrc":"4994:36:28","nodeType":"YulVariableDeclaration","src":"4994:36:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5020:9:28","nodeType":"YulIdentifier","src":"5020:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"5007:12:28","nodeType":"YulIdentifier","src":"5007:12:28"},"nativeSrc":"5007:23:28","nodeType":"YulFunctionCall","src":"5007:23:28"},"variables":[{"name":"value","nativeSrc":"4998:5:28","nodeType":"YulTypedName","src":"4998:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5064:5:28","nodeType":"YulIdentifier","src":"5064:5:28"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5039:24:28","nodeType":"YulIdentifier","src":"5039:24:28"},"nativeSrc":"5039:31:28","nodeType":"YulFunctionCall","src":"5039:31:28"},"nativeSrc":"5039:31:28","nodeType":"YulExpressionStatement","src":"5039:31:28"},{"nativeSrc":"5079:15:28","nodeType":"YulAssignment","src":"5079:15:28","value":{"name":"value","nativeSrc":"5089:5:28","nodeType":"YulIdentifier","src":"5089:5:28"},"variableNames":[{"name":"value0","nativeSrc":"5079:6:28","nodeType":"YulIdentifier","src":"5079:6:28"}]},{"nativeSrc":"5103:47:28","nodeType":"YulVariableDeclaration","src":"5103:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5135:9:28","nodeType":"YulIdentifier","src":"5135:9:28"},{"kind":"number","nativeSrc":"5146:2:28","nodeType":"YulLiteral","src":"5146:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5131:3:28","nodeType":"YulIdentifier","src":"5131:3:28"},"nativeSrc":"5131:18:28","nodeType":"YulFunctionCall","src":"5131:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"5118:12:28","nodeType":"YulIdentifier","src":"5118:12:28"},"nativeSrc":"5118:32:28","nodeType":"YulFunctionCall","src":"5118:32:28"},"variables":[{"name":"value_1","nativeSrc":"5107:7:28","nodeType":"YulTypedName","src":"5107:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"5184:7:28","nodeType":"YulIdentifier","src":"5184:7:28"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5159:24:28","nodeType":"YulIdentifier","src":"5159:24:28"},"nativeSrc":"5159:33:28","nodeType":"YulFunctionCall","src":"5159:33:28"},"nativeSrc":"5159:33:28","nodeType":"YulExpressionStatement","src":"5159:33:28"},{"nativeSrc":"5201:17:28","nodeType":"YulAssignment","src":"5201:17:28","value":{"name":"value_1","nativeSrc":"5211:7:28","nodeType":"YulIdentifier","src":"5211:7:28"},"variableNames":[{"name":"value1","nativeSrc":"5201:6:28","nodeType":"YulIdentifier","src":"5201:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4836:388:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4881:9:28","nodeType":"YulTypedName","src":"4881:9:28","type":""},{"name":"dataEnd","nativeSrc":"4892:7:28","nodeType":"YulTypedName","src":"4892:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4904:6:28","nodeType":"YulTypedName","src":"4904:6:28","type":""},{"name":"value1","nativeSrc":"4912:6:28","nodeType":"YulTypedName","src":"4912:6:28","type":""}],"src":"4836:388:28"},{"body":{"nativeSrc":"5325:489:28","nodeType":"YulBlock","src":"5325:489:28","statements":[{"body":{"nativeSrc":"5371:16:28","nodeType":"YulBlock","src":"5371:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5380:1:28","nodeType":"YulLiteral","src":"5380:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5383:1:28","nodeType":"YulLiteral","src":"5383:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5373:6:28","nodeType":"YulIdentifier","src":"5373:6:28"},"nativeSrc":"5373:12:28","nodeType":"YulFunctionCall","src":"5373:12:28"},"nativeSrc":"5373:12:28","nodeType":"YulExpressionStatement","src":"5373:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5346:7:28","nodeType":"YulIdentifier","src":"5346:7:28"},{"name":"headStart","nativeSrc":"5355:9:28","nodeType":"YulIdentifier","src":"5355:9:28"}],"functionName":{"name":"sub","nativeSrc":"5342:3:28","nodeType":"YulIdentifier","src":"5342:3:28"},"nativeSrc":"5342:23:28","nodeType":"YulFunctionCall","src":"5342:23:28"},{"kind":"number","nativeSrc":"5367:2:28","nodeType":"YulLiteral","src":"5367:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5338:3:28","nodeType":"YulIdentifier","src":"5338:3:28"},"nativeSrc":"5338:32:28","nodeType":"YulFunctionCall","src":"5338:32:28"},"nativeSrc":"5335:52:28","nodeType":"YulIf","src":"5335:52:28"},{"nativeSrc":"5396:36:28","nodeType":"YulVariableDeclaration","src":"5396:36:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5422:9:28","nodeType":"YulIdentifier","src":"5422:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"5409:12:28","nodeType":"YulIdentifier","src":"5409:12:28"},"nativeSrc":"5409:23:28","nodeType":"YulFunctionCall","src":"5409:23:28"},"variables":[{"name":"value","nativeSrc":"5400:5:28","nodeType":"YulTypedName","src":"5400:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5466:5:28","nodeType":"YulIdentifier","src":"5466:5:28"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5441:24:28","nodeType":"YulIdentifier","src":"5441:24:28"},"nativeSrc":"5441:31:28","nodeType":"YulFunctionCall","src":"5441:31:28"},"nativeSrc":"5441:31:28","nodeType":"YulExpressionStatement","src":"5441:31:28"},{"nativeSrc":"5481:15:28","nodeType":"YulAssignment","src":"5481:15:28","value":{"name":"value","nativeSrc":"5491:5:28","nodeType":"YulIdentifier","src":"5491:5:28"},"variableNames":[{"name":"value0","nativeSrc":"5481:6:28","nodeType":"YulIdentifier","src":"5481:6:28"}]},{"nativeSrc":"5505:46:28","nodeType":"YulVariableDeclaration","src":"5505:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5536:9:28","nodeType":"YulIdentifier","src":"5536:9:28"},{"kind":"number","nativeSrc":"5547:2:28","nodeType":"YulLiteral","src":"5547:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5532:3:28","nodeType":"YulIdentifier","src":"5532:3:28"},"nativeSrc":"5532:18:28","nodeType":"YulFunctionCall","src":"5532:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"5519:12:28","nodeType":"YulIdentifier","src":"5519:12:28"},"nativeSrc":"5519:32:28","nodeType":"YulFunctionCall","src":"5519:32:28"},"variables":[{"name":"offset","nativeSrc":"5509:6:28","nodeType":"YulTypedName","src":"5509:6:28","type":""}]},{"body":{"nativeSrc":"5594:16:28","nodeType":"YulBlock","src":"5594:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5603:1:28","nodeType":"YulLiteral","src":"5603:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5606:1:28","nodeType":"YulLiteral","src":"5606:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5596:6:28","nodeType":"YulIdentifier","src":"5596:6:28"},"nativeSrc":"5596:12:28","nodeType":"YulFunctionCall","src":"5596:12:28"},"nativeSrc":"5596:12:28","nodeType":"YulExpressionStatement","src":"5596:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5566:6:28","nodeType":"YulIdentifier","src":"5566:6:28"},{"kind":"number","nativeSrc":"5574:18:28","nodeType":"YulLiteral","src":"5574:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5563:2:28","nodeType":"YulIdentifier","src":"5563:2:28"},"nativeSrc":"5563:30:28","nodeType":"YulFunctionCall","src":"5563:30:28"},"nativeSrc":"5560:50:28","nodeType":"YulIf","src":"5560:50:28"},{"nativeSrc":"5619:32:28","nodeType":"YulVariableDeclaration","src":"5619:32:28","value":{"arguments":[{"name":"headStart","nativeSrc":"5633:9:28","nodeType":"YulIdentifier","src":"5633:9:28"},{"name":"offset","nativeSrc":"5644:6:28","nodeType":"YulIdentifier","src":"5644:6:28"}],"functionName":{"name":"add","nativeSrc":"5629:3:28","nodeType":"YulIdentifier","src":"5629:3:28"},"nativeSrc":"5629:22:28","nodeType":"YulFunctionCall","src":"5629:22:28"},"variables":[{"name":"_1","nativeSrc":"5623:2:28","nodeType":"YulTypedName","src":"5623:2:28","type":""}]},{"body":{"nativeSrc":"5699:16:28","nodeType":"YulBlock","src":"5699:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5708:1:28","nodeType":"YulLiteral","src":"5708:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5711:1:28","nodeType":"YulLiteral","src":"5711:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5701:6:28","nodeType":"YulIdentifier","src":"5701:6:28"},"nativeSrc":"5701:12:28","nodeType":"YulFunctionCall","src":"5701:12:28"},"nativeSrc":"5701:12:28","nodeType":"YulExpressionStatement","src":"5701:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5678:2:28","nodeType":"YulIdentifier","src":"5678:2:28"},{"kind":"number","nativeSrc":"5682:4:28","nodeType":"YulLiteral","src":"5682:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5674:3:28","nodeType":"YulIdentifier","src":"5674:3:28"},"nativeSrc":"5674:13:28","nodeType":"YulFunctionCall","src":"5674:13:28"},{"name":"dataEnd","nativeSrc":"5689:7:28","nodeType":"YulIdentifier","src":"5689:7:28"}],"functionName":{"name":"slt","nativeSrc":"5670:3:28","nodeType":"YulIdentifier","src":"5670:3:28"},"nativeSrc":"5670:27:28","nodeType":"YulFunctionCall","src":"5670:27:28"}],"functionName":{"name":"iszero","nativeSrc":"5663:6:28","nodeType":"YulIdentifier","src":"5663:6:28"},"nativeSrc":"5663:35:28","nodeType":"YulFunctionCall","src":"5663:35:28"},"nativeSrc":"5660:55:28","nodeType":"YulIf","src":"5660:55:28"},{"nativeSrc":"5724:84:28","nodeType":"YulAssignment","src":"5724:84:28","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5773:2:28","nodeType":"YulIdentifier","src":"5773:2:28"},{"kind":"number","nativeSrc":"5777:2:28","nodeType":"YulLiteral","src":"5777:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5769:3:28","nodeType":"YulIdentifier","src":"5769:3:28"},"nativeSrc":"5769:11:28","nodeType":"YulFunctionCall","src":"5769:11:28"},{"arguments":[{"name":"_1","nativeSrc":"5795:2:28","nodeType":"YulIdentifier","src":"5795:2:28"}],"functionName":{"name":"calldataload","nativeSrc":"5782:12:28","nodeType":"YulIdentifier","src":"5782:12:28"},"nativeSrc":"5782:16:28","nodeType":"YulFunctionCall","src":"5782:16:28"},{"name":"dataEnd","nativeSrc":"5800:7:28","nodeType":"YulIdentifier","src":"5800:7:28"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"5734:34:28","nodeType":"YulIdentifier","src":"5734:34:28"},"nativeSrc":"5734:74:28","nodeType":"YulFunctionCall","src":"5734:74:28"},"variableNames":[{"name":"value1","nativeSrc":"5724:6:28","nodeType":"YulIdentifier","src":"5724:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"5229:585:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5283:9:28","nodeType":"YulTypedName","src":"5283:9:28","type":""},{"name":"dataEnd","nativeSrc":"5294:7:28","nodeType":"YulTypedName","src":"5294:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5306:6:28","nodeType":"YulTypedName","src":"5306:6:28","type":""},{"name":"value1","nativeSrc":"5314:6:28","nodeType":"YulTypedName","src":"5314:6:28","type":""}],"src":"5229:585:28"},{"body":{"nativeSrc":"5923:212:28","nodeType":"YulBlock","src":"5923:212:28","statements":[{"body":{"nativeSrc":"5969:16:28","nodeType":"YulBlock","src":"5969:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5978:1:28","nodeType":"YulLiteral","src":"5978:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"5981:1:28","nodeType":"YulLiteral","src":"5981:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5971:6:28","nodeType":"YulIdentifier","src":"5971:6:28"},"nativeSrc":"5971:12:28","nodeType":"YulFunctionCall","src":"5971:12:28"},"nativeSrc":"5971:12:28","nodeType":"YulExpressionStatement","src":"5971:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5944:7:28","nodeType":"YulIdentifier","src":"5944:7:28"},{"name":"headStart","nativeSrc":"5953:9:28","nodeType":"YulIdentifier","src":"5953:9:28"}],"functionName":{"name":"sub","nativeSrc":"5940:3:28","nodeType":"YulIdentifier","src":"5940:3:28"},"nativeSrc":"5940:23:28","nodeType":"YulFunctionCall","src":"5940:23:28"},{"kind":"number","nativeSrc":"5965:2:28","nodeType":"YulLiteral","src":"5965:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5936:3:28","nodeType":"YulIdentifier","src":"5936:3:28"},"nativeSrc":"5936:32:28","nodeType":"YulFunctionCall","src":"5936:32:28"},"nativeSrc":"5933:52:28","nodeType":"YulIf","src":"5933:52:28"},{"nativeSrc":"5994:33:28","nodeType":"YulAssignment","src":"5994:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6017:9:28","nodeType":"YulIdentifier","src":"6017:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"6004:12:28","nodeType":"YulIdentifier","src":"6004:12:28"},"nativeSrc":"6004:23:28","nodeType":"YulFunctionCall","src":"6004:23:28"},"variableNames":[{"name":"value0","nativeSrc":"5994:6:28","nodeType":"YulIdentifier","src":"5994:6:28"}]},{"nativeSrc":"6036:42:28","nodeType":"YulAssignment","src":"6036:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6063:9:28","nodeType":"YulIdentifier","src":"6063:9:28"},{"kind":"number","nativeSrc":"6074:2:28","nodeType":"YulLiteral","src":"6074:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6059:3:28","nodeType":"YulIdentifier","src":"6059:3:28"},"nativeSrc":"6059:18:28","nodeType":"YulFunctionCall","src":"6059:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"6046:12:28","nodeType":"YulIdentifier","src":"6046:12:28"},"nativeSrc":"6046:32:28","nodeType":"YulFunctionCall","src":"6046:32:28"},"variableNames":[{"name":"value1","nativeSrc":"6036:6:28","nodeType":"YulIdentifier","src":"6036:6:28"}]},{"nativeSrc":"6087:42:28","nodeType":"YulAssignment","src":"6087:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6114:9:28","nodeType":"YulIdentifier","src":"6114:9:28"},{"kind":"number","nativeSrc":"6125:2:28","nodeType":"YulLiteral","src":"6125:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6110:3:28","nodeType":"YulIdentifier","src":"6110:3:28"},"nativeSrc":"6110:18:28","nodeType":"YulFunctionCall","src":"6110:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"6097:12:28","nodeType":"YulIdentifier","src":"6097:12:28"},"nativeSrc":"6097:32:28","nodeType":"YulFunctionCall","src":"6097:32:28"},"variableNames":[{"name":"value2","nativeSrc":"6087:6:28","nodeType":"YulIdentifier","src":"6087:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256","nativeSrc":"5819:316:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5873:9:28","nodeType":"YulTypedName","src":"5873:9:28","type":""},{"name":"dataEnd","nativeSrc":"5884:7:28","nodeType":"YulTypedName","src":"5884:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5896:6:28","nodeType":"YulTypedName","src":"5896:6:28","type":""},{"name":"value1","nativeSrc":"5904:6:28","nodeType":"YulTypedName","src":"5904:6:28","type":""},{"name":"value2","nativeSrc":"5912:6:28","nodeType":"YulTypedName","src":"5912:6:28","type":""}],"src":"5819:316:28"},{"body":{"nativeSrc":"6241:76:28","nodeType":"YulBlock","src":"6241:76:28","statements":[{"nativeSrc":"6251:26:28","nodeType":"YulAssignment","src":"6251:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6263:9:28","nodeType":"YulIdentifier","src":"6263:9:28"},{"kind":"number","nativeSrc":"6274:2:28","nodeType":"YulLiteral","src":"6274:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6259:3:28","nodeType":"YulIdentifier","src":"6259:3:28"},"nativeSrc":"6259:18:28","nodeType":"YulFunctionCall","src":"6259:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6251:4:28","nodeType":"YulIdentifier","src":"6251:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6293:9:28","nodeType":"YulIdentifier","src":"6293:9:28"},{"name":"value0","nativeSrc":"6304:6:28","nodeType":"YulIdentifier","src":"6304:6:28"}],"functionName":{"name":"mstore","nativeSrc":"6286:6:28","nodeType":"YulIdentifier","src":"6286:6:28"},"nativeSrc":"6286:25:28","nodeType":"YulFunctionCall","src":"6286:25:28"},"nativeSrc":"6286:25:28","nodeType":"YulExpressionStatement","src":"6286:25:28"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6140:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6210:9:28","nodeType":"YulTypedName","src":"6210:9:28","type":""},{"name":"value0","nativeSrc":"6221:6:28","nodeType":"YulTypedName","src":"6221:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6232:4:28","nodeType":"YulTypedName","src":"6232:4:28","type":""}],"src":"6140:177:28"},{"body":{"nativeSrc":"6419:293:28","nodeType":"YulBlock","src":"6419:293:28","statements":[{"body":{"nativeSrc":"6465:16:28","nodeType":"YulBlock","src":"6465:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6474:1:28","nodeType":"YulLiteral","src":"6474:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"6477:1:28","nodeType":"YulLiteral","src":"6477:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6467:6:28","nodeType":"YulIdentifier","src":"6467:6:28"},"nativeSrc":"6467:12:28","nodeType":"YulFunctionCall","src":"6467:12:28"},"nativeSrc":"6467:12:28","nodeType":"YulExpressionStatement","src":"6467:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6440:7:28","nodeType":"YulIdentifier","src":"6440:7:28"},{"name":"headStart","nativeSrc":"6449:9:28","nodeType":"YulIdentifier","src":"6449:9:28"}],"functionName":{"name":"sub","nativeSrc":"6436:3:28","nodeType":"YulIdentifier","src":"6436:3:28"},"nativeSrc":"6436:23:28","nodeType":"YulFunctionCall","src":"6436:23:28"},{"kind":"number","nativeSrc":"6461:2:28","nodeType":"YulLiteral","src":"6461:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6432:3:28","nodeType":"YulIdentifier","src":"6432:3:28"},"nativeSrc":"6432:32:28","nodeType":"YulFunctionCall","src":"6432:32:28"},"nativeSrc":"6429:52:28","nodeType":"YulIf","src":"6429:52:28"},{"nativeSrc":"6490:33:28","nodeType":"YulAssignment","src":"6490:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6513:9:28","nodeType":"YulIdentifier","src":"6513:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"6500:12:28","nodeType":"YulIdentifier","src":"6500:12:28"},"nativeSrc":"6500:23:28","nodeType":"YulFunctionCall","src":"6500:23:28"},"variableNames":[{"name":"value0","nativeSrc":"6490:6:28","nodeType":"YulIdentifier","src":"6490:6:28"}]},{"nativeSrc":"6532:46:28","nodeType":"YulVariableDeclaration","src":"6532:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6563:9:28","nodeType":"YulIdentifier","src":"6563:9:28"},{"kind":"number","nativeSrc":"6574:2:28","nodeType":"YulLiteral","src":"6574:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6559:3:28","nodeType":"YulIdentifier","src":"6559:3:28"},"nativeSrc":"6559:18:28","nodeType":"YulFunctionCall","src":"6559:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"6546:12:28","nodeType":"YulIdentifier","src":"6546:12:28"},"nativeSrc":"6546:32:28","nodeType":"YulFunctionCall","src":"6546:32:28"},"variables":[{"name":"offset","nativeSrc":"6536:6:28","nodeType":"YulTypedName","src":"6536:6:28","type":""}]},{"body":{"nativeSrc":"6621:16:28","nodeType":"YulBlock","src":"6621:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6630:1:28","nodeType":"YulLiteral","src":"6630:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"6633:1:28","nodeType":"YulLiteral","src":"6633:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6623:6:28","nodeType":"YulIdentifier","src":"6623:6:28"},"nativeSrc":"6623:12:28","nodeType":"YulFunctionCall","src":"6623:12:28"},"nativeSrc":"6623:12:28","nodeType":"YulExpressionStatement","src":"6623:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6593:6:28","nodeType":"YulIdentifier","src":"6593:6:28"},{"kind":"number","nativeSrc":"6601:18:28","nodeType":"YulLiteral","src":"6601:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6590:2:28","nodeType":"YulIdentifier","src":"6590:2:28"},"nativeSrc":"6590:30:28","nodeType":"YulFunctionCall","src":"6590:30:28"},"nativeSrc":"6587:50:28","nodeType":"YulIf","src":"6587:50:28"},{"nativeSrc":"6646:60:28","nodeType":"YulAssignment","src":"6646:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6678:9:28","nodeType":"YulIdentifier","src":"6678:9:28"},{"name":"offset","nativeSrc":"6689:6:28","nodeType":"YulIdentifier","src":"6689:6:28"}],"functionName":{"name":"add","nativeSrc":"6674:3:28","nodeType":"YulIdentifier","src":"6674:3:28"},"nativeSrc":"6674:22:28","nodeType":"YulFunctionCall","src":"6674:22:28"},{"name":"dataEnd","nativeSrc":"6698:7:28","nodeType":"YulIdentifier","src":"6698:7:28"}],"functionName":{"name":"abi_decode_string","nativeSrc":"6656:17:28","nodeType":"YulIdentifier","src":"6656:17:28"},"nativeSrc":"6656:50:28","nodeType":"YulFunctionCall","src":"6656:50:28"},"variableNames":[{"name":"value1","nativeSrc":"6646:6:28","nodeType":"YulIdentifier","src":"6646:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptr","nativeSrc":"6322:390:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6377:9:28","nodeType":"YulTypedName","src":"6377:9:28","type":""},{"name":"dataEnd","nativeSrc":"6388:7:28","nodeType":"YulTypedName","src":"6388:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6400:6:28","nodeType":"YulTypedName","src":"6400:6:28","type":""},{"name":"value1","nativeSrc":"6408:6:28","nodeType":"YulTypedName","src":"6408:6:28","type":""}],"src":"6322:390:28"},{"body":{"nativeSrc":"6818:125:28","nodeType":"YulBlock","src":"6818:125:28","statements":[{"nativeSrc":"6828:26:28","nodeType":"YulAssignment","src":"6828:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"6840:9:28","nodeType":"YulIdentifier","src":"6840:9:28"},{"kind":"number","nativeSrc":"6851:2:28","nodeType":"YulLiteral","src":"6851:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6836:3:28","nodeType":"YulIdentifier","src":"6836:3:28"},"nativeSrc":"6836:18:28","nodeType":"YulFunctionCall","src":"6836:18:28"},"variableNames":[{"name":"tail","nativeSrc":"6828:4:28","nodeType":"YulIdentifier","src":"6828:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6870:9:28","nodeType":"YulIdentifier","src":"6870:9:28"},{"arguments":[{"name":"value0","nativeSrc":"6885:6:28","nodeType":"YulIdentifier","src":"6885:6:28"},{"kind":"number","nativeSrc":"6893:42:28","nodeType":"YulLiteral","src":"6893:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6881:3:28","nodeType":"YulIdentifier","src":"6881:3:28"},"nativeSrc":"6881:55:28","nodeType":"YulFunctionCall","src":"6881:55:28"}],"functionName":{"name":"mstore","nativeSrc":"6863:6:28","nodeType":"YulIdentifier","src":"6863:6:28"},"nativeSrc":"6863:74:28","nodeType":"YulFunctionCall","src":"6863:74:28"},"nativeSrc":"6863:74:28","nodeType":"YulExpressionStatement","src":"6863:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6717:226:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6787:9:28","nodeType":"YulTypedName","src":"6787:9:28","type":""},{"name":"value0","nativeSrc":"6798:6:28","nodeType":"YulTypedName","src":"6798:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6809:4:28","nodeType":"YulTypedName","src":"6809:4:28","type":""}],"src":"6717:226:28"},{"body":{"nativeSrc":"6995:109:28","nodeType":"YulBlock","src":"6995:109:28","statements":[{"nativeSrc":"7005:29:28","nodeType":"YulAssignment","src":"7005:29:28","value":{"arguments":[{"name":"offset","nativeSrc":"7027:6:28","nodeType":"YulIdentifier","src":"7027:6:28"}],"functionName":{"name":"calldataload","nativeSrc":"7014:12:28","nodeType":"YulIdentifier","src":"7014:12:28"},"nativeSrc":"7014:20:28","nodeType":"YulFunctionCall","src":"7014:20:28"},"variableNames":[{"name":"value","nativeSrc":"7005:5:28","nodeType":"YulIdentifier","src":"7005:5:28"}]},{"body":{"nativeSrc":"7082:16:28","nodeType":"YulBlock","src":"7082:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7091:1:28","nodeType":"YulLiteral","src":"7091:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7094:1:28","nodeType":"YulLiteral","src":"7094:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7084:6:28","nodeType":"YulIdentifier","src":"7084:6:28"},"nativeSrc":"7084:12:28","nodeType":"YulFunctionCall","src":"7084:12:28"},"nativeSrc":"7084:12:28","nodeType":"YulExpressionStatement","src":"7084:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7056:5:28","nodeType":"YulIdentifier","src":"7056:5:28"},{"arguments":[{"name":"value","nativeSrc":"7067:5:28","nodeType":"YulIdentifier","src":"7067:5:28"},{"kind":"number","nativeSrc":"7074:4:28","nodeType":"YulLiteral","src":"7074:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7063:3:28","nodeType":"YulIdentifier","src":"7063:3:28"},"nativeSrc":"7063:16:28","nodeType":"YulFunctionCall","src":"7063:16:28"}],"functionName":{"name":"eq","nativeSrc":"7053:2:28","nodeType":"YulIdentifier","src":"7053:2:28"},"nativeSrc":"7053:27:28","nodeType":"YulFunctionCall","src":"7053:27:28"}],"functionName":{"name":"iszero","nativeSrc":"7046:6:28","nodeType":"YulIdentifier","src":"7046:6:28"},"nativeSrc":"7046:35:28","nodeType":"YulFunctionCall","src":"7046:35:28"},"nativeSrc":"7043:55:28","nodeType":"YulIf","src":"7043:55:28"}]},"name":"abi_decode_uint8","nativeSrc":"6948:156:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6974:6:28","nodeType":"YulTypedName","src":"6974:6:28","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6985:5:28","nodeType":"YulTypedName","src":"6985:5:28","type":""}],"src":"6948:156:28"},{"body":{"nativeSrc":"7289:556:28","nodeType":"YulBlock","src":"7289:556:28","statements":[{"body":{"nativeSrc":"7336:16:28","nodeType":"YulBlock","src":"7336:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7345:1:28","nodeType":"YulLiteral","src":"7345:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7348:1:28","nodeType":"YulLiteral","src":"7348:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7338:6:28","nodeType":"YulIdentifier","src":"7338:6:28"},"nativeSrc":"7338:12:28","nodeType":"YulFunctionCall","src":"7338:12:28"},"nativeSrc":"7338:12:28","nodeType":"YulExpressionStatement","src":"7338:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7310:7:28","nodeType":"YulIdentifier","src":"7310:7:28"},{"name":"headStart","nativeSrc":"7319:9:28","nodeType":"YulIdentifier","src":"7319:9:28"}],"functionName":{"name":"sub","nativeSrc":"7306:3:28","nodeType":"YulIdentifier","src":"7306:3:28"},"nativeSrc":"7306:23:28","nodeType":"YulFunctionCall","src":"7306:23:28"},{"kind":"number","nativeSrc":"7331:3:28","nodeType":"YulLiteral","src":"7331:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"7302:3:28","nodeType":"YulIdentifier","src":"7302:3:28"},"nativeSrc":"7302:33:28","nodeType":"YulFunctionCall","src":"7302:33:28"},"nativeSrc":"7299:53:28","nodeType":"YulIf","src":"7299:53:28"},{"nativeSrc":"7361:33:28","nodeType":"YulAssignment","src":"7361:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"7384:9:28","nodeType":"YulIdentifier","src":"7384:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"7371:12:28","nodeType":"YulIdentifier","src":"7371:12:28"},"nativeSrc":"7371:23:28","nodeType":"YulFunctionCall","src":"7371:23:28"},"variableNames":[{"name":"value0","nativeSrc":"7361:6:28","nodeType":"YulIdentifier","src":"7361:6:28"}]},{"nativeSrc":"7403:46:28","nodeType":"YulVariableDeclaration","src":"7403:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7434:9:28","nodeType":"YulIdentifier","src":"7434:9:28"},{"kind":"number","nativeSrc":"7445:2:28","nodeType":"YulLiteral","src":"7445:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7430:3:28","nodeType":"YulIdentifier","src":"7430:3:28"},"nativeSrc":"7430:18:28","nodeType":"YulFunctionCall","src":"7430:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"7417:12:28","nodeType":"YulIdentifier","src":"7417:12:28"},"nativeSrc":"7417:32:28","nodeType":"YulFunctionCall","src":"7417:32:28"},"variables":[{"name":"offset","nativeSrc":"7407:6:28","nodeType":"YulTypedName","src":"7407:6:28","type":""}]},{"body":{"nativeSrc":"7492:16:28","nodeType":"YulBlock","src":"7492:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7501:1:28","nodeType":"YulLiteral","src":"7501:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"7504:1:28","nodeType":"YulLiteral","src":"7504:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7494:6:28","nodeType":"YulIdentifier","src":"7494:6:28"},"nativeSrc":"7494:12:28","nodeType":"YulFunctionCall","src":"7494:12:28"},"nativeSrc":"7494:12:28","nodeType":"YulExpressionStatement","src":"7494:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7464:6:28","nodeType":"YulIdentifier","src":"7464:6:28"},{"kind":"number","nativeSrc":"7472:18:28","nodeType":"YulLiteral","src":"7472:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7461:2:28","nodeType":"YulIdentifier","src":"7461:2:28"},"nativeSrc":"7461:30:28","nodeType":"YulFunctionCall","src":"7461:30:28"},"nativeSrc":"7458:50:28","nodeType":"YulIf","src":"7458:50:28"},{"nativeSrc":"7517:60:28","nodeType":"YulAssignment","src":"7517:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7549:9:28","nodeType":"YulIdentifier","src":"7549:9:28"},{"name":"offset","nativeSrc":"7560:6:28","nodeType":"YulIdentifier","src":"7560:6:28"}],"functionName":{"name":"add","nativeSrc":"7545:3:28","nodeType":"YulIdentifier","src":"7545:3:28"},"nativeSrc":"7545:22:28","nodeType":"YulFunctionCall","src":"7545:22:28"},{"name":"dataEnd","nativeSrc":"7569:7:28","nodeType":"YulIdentifier","src":"7569:7:28"}],"functionName":{"name":"abi_decode_string","nativeSrc":"7527:17:28","nodeType":"YulIdentifier","src":"7527:17:28"},"nativeSrc":"7527:50:28","nodeType":"YulFunctionCall","src":"7527:50:28"},"variableNames":[{"name":"value1","nativeSrc":"7517:6:28","nodeType":"YulIdentifier","src":"7517:6:28"}]},{"nativeSrc":"7586:42:28","nodeType":"YulAssignment","src":"7586:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7613:9:28","nodeType":"YulIdentifier","src":"7613:9:28"},{"kind":"number","nativeSrc":"7624:2:28","nodeType":"YulLiteral","src":"7624:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7609:3:28","nodeType":"YulIdentifier","src":"7609:3:28"},"nativeSrc":"7609:18:28","nodeType":"YulFunctionCall","src":"7609:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"7596:12:28","nodeType":"YulIdentifier","src":"7596:12:28"},"nativeSrc":"7596:32:28","nodeType":"YulFunctionCall","src":"7596:32:28"},"variableNames":[{"name":"value2","nativeSrc":"7586:6:28","nodeType":"YulIdentifier","src":"7586:6:28"}]},{"nativeSrc":"7637:42:28","nodeType":"YulAssignment","src":"7637:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7664:9:28","nodeType":"YulIdentifier","src":"7664:9:28"},{"kind":"number","nativeSrc":"7675:2:28","nodeType":"YulLiteral","src":"7675:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7660:3:28","nodeType":"YulIdentifier","src":"7660:3:28"},"nativeSrc":"7660:18:28","nodeType":"YulFunctionCall","src":"7660:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"7647:12:28","nodeType":"YulIdentifier","src":"7647:12:28"},"nativeSrc":"7647:32:28","nodeType":"YulFunctionCall","src":"7647:32:28"},"variableNames":[{"name":"value3","nativeSrc":"7637:6:28","nodeType":"YulIdentifier","src":"7637:6:28"}]},{"nativeSrc":"7688:47:28","nodeType":"YulAssignment","src":"7688:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7719:9:28","nodeType":"YulIdentifier","src":"7719:9:28"},{"kind":"number","nativeSrc":"7730:3:28","nodeType":"YulLiteral","src":"7730:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7715:3:28","nodeType":"YulIdentifier","src":"7715:3:28"},"nativeSrc":"7715:19:28","nodeType":"YulFunctionCall","src":"7715:19:28"}],"functionName":{"name":"abi_decode_uint8","nativeSrc":"7698:16:28","nodeType":"YulIdentifier","src":"7698:16:28"},"nativeSrc":"7698:37:28","nodeType":"YulFunctionCall","src":"7698:37:28"},"variableNames":[{"name":"value4","nativeSrc":"7688:6:28","nodeType":"YulIdentifier","src":"7688:6:28"}]},{"nativeSrc":"7744:43:28","nodeType":"YulAssignment","src":"7744:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7771:9:28","nodeType":"YulIdentifier","src":"7771:9:28"},{"kind":"number","nativeSrc":"7782:3:28","nodeType":"YulLiteral","src":"7782:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7767:3:28","nodeType":"YulIdentifier","src":"7767:3:28"},"nativeSrc":"7767:19:28","nodeType":"YulFunctionCall","src":"7767:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"7754:12:28","nodeType":"YulIdentifier","src":"7754:12:28"},"nativeSrc":"7754:33:28","nodeType":"YulFunctionCall","src":"7754:33:28"},"variableNames":[{"name":"value5","nativeSrc":"7744:6:28","nodeType":"YulIdentifier","src":"7744:6:28"}]},{"nativeSrc":"7796:43:28","nodeType":"YulAssignment","src":"7796:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7823:9:28","nodeType":"YulIdentifier","src":"7823:9:28"},{"kind":"number","nativeSrc":"7834:3:28","nodeType":"YulLiteral","src":"7834:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7819:3:28","nodeType":"YulIdentifier","src":"7819:3:28"},"nativeSrc":"7819:19:28","nodeType":"YulFunctionCall","src":"7819:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"7806:12:28","nodeType":"YulIdentifier","src":"7806:12:28"},"nativeSrc":"7806:33:28","nodeType":"YulFunctionCall","src":"7806:33:28"},"variableNames":[{"name":"value6","nativeSrc":"7796:6:28","nodeType":"YulIdentifier","src":"7796:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32","nativeSrc":"7109:736:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7207:9:28","nodeType":"YulTypedName","src":"7207:9:28","type":""},{"name":"dataEnd","nativeSrc":"7218:7:28","nodeType":"YulTypedName","src":"7218:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7230:6:28","nodeType":"YulTypedName","src":"7230:6:28","type":""},{"name":"value1","nativeSrc":"7238:6:28","nodeType":"YulTypedName","src":"7238:6:28","type":""},{"name":"value2","nativeSrc":"7246:6:28","nodeType":"YulTypedName","src":"7246:6:28","type":""},{"name":"value3","nativeSrc":"7254:6:28","nodeType":"YulTypedName","src":"7254:6:28","type":""},{"name":"value4","nativeSrc":"7262:6:28","nodeType":"YulTypedName","src":"7262:6:28","type":""},{"name":"value5","nativeSrc":"7270:6:28","nodeType":"YulTypedName","src":"7270:6:28","type":""},{"name":"value6","nativeSrc":"7278:6:28","nodeType":"YulTypedName","src":"7278:6:28","type":""}],"src":"7109:736:28"},{"body":{"nativeSrc":"8015:500:28","nodeType":"YulBlock","src":"8015:500:28","statements":[{"body":{"nativeSrc":"8062:16:28","nodeType":"YulBlock","src":"8062:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8071:1:28","nodeType":"YulLiteral","src":"8071:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"8074:1:28","nodeType":"YulLiteral","src":"8074:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8064:6:28","nodeType":"YulIdentifier","src":"8064:6:28"},"nativeSrc":"8064:12:28","nodeType":"YulFunctionCall","src":"8064:12:28"},"nativeSrc":"8064:12:28","nodeType":"YulExpressionStatement","src":"8064:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8036:7:28","nodeType":"YulIdentifier","src":"8036:7:28"},{"name":"headStart","nativeSrc":"8045:9:28","nodeType":"YulIdentifier","src":"8045:9:28"}],"functionName":{"name":"sub","nativeSrc":"8032:3:28","nodeType":"YulIdentifier","src":"8032:3:28"},"nativeSrc":"8032:23:28","nodeType":"YulFunctionCall","src":"8032:23:28"},{"kind":"number","nativeSrc":"8057:3:28","nodeType":"YulLiteral","src":"8057:3:28","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"8028:3:28","nodeType":"YulIdentifier","src":"8028:3:28"},"nativeSrc":"8028:33:28","nodeType":"YulFunctionCall","src":"8028:33:28"},"nativeSrc":"8025:53:28","nodeType":"YulIf","src":"8025:53:28"},{"nativeSrc":"8087:33:28","nodeType":"YulAssignment","src":"8087:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"8110:9:28","nodeType":"YulIdentifier","src":"8110:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"8097:12:28","nodeType":"YulIdentifier","src":"8097:12:28"},"nativeSrc":"8097:23:28","nodeType":"YulFunctionCall","src":"8097:23:28"},"variableNames":[{"name":"value0","nativeSrc":"8087:6:28","nodeType":"YulIdentifier","src":"8087:6:28"}]},{"nativeSrc":"8129:42:28","nodeType":"YulAssignment","src":"8129:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8156:9:28","nodeType":"YulIdentifier","src":"8156:9:28"},{"kind":"number","nativeSrc":"8167:2:28","nodeType":"YulLiteral","src":"8167:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8152:3:28","nodeType":"YulIdentifier","src":"8152:3:28"},"nativeSrc":"8152:18:28","nodeType":"YulFunctionCall","src":"8152:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"8139:12:28","nodeType":"YulIdentifier","src":"8139:12:28"},"nativeSrc":"8139:32:28","nodeType":"YulFunctionCall","src":"8139:32:28"},"variableNames":[{"name":"value1","nativeSrc":"8129:6:28","nodeType":"YulIdentifier","src":"8129:6:28"}]},{"nativeSrc":"8180:46:28","nodeType":"YulVariableDeclaration","src":"8180:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8211:9:28","nodeType":"YulIdentifier","src":"8211:9:28"},{"kind":"number","nativeSrc":"8222:2:28","nodeType":"YulLiteral","src":"8222:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8207:3:28","nodeType":"YulIdentifier","src":"8207:3:28"},"nativeSrc":"8207:18:28","nodeType":"YulFunctionCall","src":"8207:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"8194:12:28","nodeType":"YulIdentifier","src":"8194:12:28"},"nativeSrc":"8194:32:28","nodeType":"YulFunctionCall","src":"8194:32:28"},"variables":[{"name":"offset","nativeSrc":"8184:6:28","nodeType":"YulTypedName","src":"8184:6:28","type":""}]},{"body":{"nativeSrc":"8269:16:28","nodeType":"YulBlock","src":"8269:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8278:1:28","nodeType":"YulLiteral","src":"8278:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"8281:1:28","nodeType":"YulLiteral","src":"8281:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8271:6:28","nodeType":"YulIdentifier","src":"8271:6:28"},"nativeSrc":"8271:12:28","nodeType":"YulFunctionCall","src":"8271:12:28"},"nativeSrc":"8271:12:28","nodeType":"YulExpressionStatement","src":"8271:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8241:6:28","nodeType":"YulIdentifier","src":"8241:6:28"},{"kind":"number","nativeSrc":"8249:18:28","nodeType":"YulLiteral","src":"8249:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8238:2:28","nodeType":"YulIdentifier","src":"8238:2:28"},"nativeSrc":"8238:30:28","nodeType":"YulFunctionCall","src":"8238:30:28"},"nativeSrc":"8235:50:28","nodeType":"YulIf","src":"8235:50:28"},{"nativeSrc":"8294:60:28","nodeType":"YulAssignment","src":"8294:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8326:9:28","nodeType":"YulIdentifier","src":"8326:9:28"},{"name":"offset","nativeSrc":"8337:6:28","nodeType":"YulIdentifier","src":"8337:6:28"}],"functionName":{"name":"add","nativeSrc":"8322:3:28","nodeType":"YulIdentifier","src":"8322:3:28"},"nativeSrc":"8322:22:28","nodeType":"YulFunctionCall","src":"8322:22:28"},{"name":"dataEnd","nativeSrc":"8346:7:28","nodeType":"YulIdentifier","src":"8346:7:28"}],"functionName":{"name":"abi_decode_string","nativeSrc":"8304:17:28","nodeType":"YulIdentifier","src":"8304:17:28"},"nativeSrc":"8304:50:28","nodeType":"YulFunctionCall","src":"8304:50:28"},"variableNames":[{"name":"value2","nativeSrc":"8294:6:28","nodeType":"YulIdentifier","src":"8294:6:28"}]},{"nativeSrc":"8363:42:28","nodeType":"YulAssignment","src":"8363:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8390:9:28","nodeType":"YulIdentifier","src":"8390:9:28"},{"kind":"number","nativeSrc":"8401:2:28","nodeType":"YulLiteral","src":"8401:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8386:3:28","nodeType":"YulIdentifier","src":"8386:3:28"},"nativeSrc":"8386:18:28","nodeType":"YulFunctionCall","src":"8386:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"8373:12:28","nodeType":"YulIdentifier","src":"8373:12:28"},"nativeSrc":"8373:32:28","nodeType":"YulFunctionCall","src":"8373:32:28"},"variableNames":[{"name":"value3","nativeSrc":"8363:6:28","nodeType":"YulIdentifier","src":"8363:6:28"}]},{"nativeSrc":"8414:43:28","nodeType":"YulAssignment","src":"8414:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8441:9:28","nodeType":"YulIdentifier","src":"8441:9:28"},{"kind":"number","nativeSrc":"8452:3:28","nodeType":"YulLiteral","src":"8452:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8437:3:28","nodeType":"YulIdentifier","src":"8437:3:28"},"nativeSrc":"8437:19:28","nodeType":"YulFunctionCall","src":"8437:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"8424:12:28","nodeType":"YulIdentifier","src":"8424:12:28"},"nativeSrc":"8424:33:28","nodeType":"YulFunctionCall","src":"8424:33:28"},"variableNames":[{"name":"value4","nativeSrc":"8414:6:28","nodeType":"YulIdentifier","src":"8414:6:28"}]},{"nativeSrc":"8466:43:28","nodeType":"YulAssignment","src":"8466:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8493:9:28","nodeType":"YulIdentifier","src":"8493:9:28"},{"kind":"number","nativeSrc":"8504:3:28","nodeType":"YulLiteral","src":"8504:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8489:3:28","nodeType":"YulIdentifier","src":"8489:3:28"},"nativeSrc":"8489:19:28","nodeType":"YulFunctionCall","src":"8489:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"8476:12:28","nodeType":"YulIdentifier","src":"8476:12:28"},"nativeSrc":"8476:33:28","nodeType":"YulFunctionCall","src":"8476:33:28"},"variableNames":[{"name":"value5","nativeSrc":"8466:6:28","nodeType":"YulIdentifier","src":"8466:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32","nativeSrc":"7850:665:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7941:9:28","nodeType":"YulTypedName","src":"7941:9:28","type":""},{"name":"dataEnd","nativeSrc":"7952:7:28","nodeType":"YulTypedName","src":"7952:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7964:6:28","nodeType":"YulTypedName","src":"7964:6:28","type":""},{"name":"value1","nativeSrc":"7972:6:28","nodeType":"YulTypedName","src":"7972:6:28","type":""},{"name":"value2","nativeSrc":"7980:6:28","nodeType":"YulTypedName","src":"7980:6:28","type":""},{"name":"value3","nativeSrc":"7988:6:28","nodeType":"YulTypedName","src":"7988:6:28","type":""},{"name":"value4","nativeSrc":"7996:6:28","nodeType":"YulTypedName","src":"7996:6:28","type":""},{"name":"value5","nativeSrc":"8004:6:28","nodeType":"YulTypedName","src":"8004:6:28","type":""}],"src":"7850:665:28"},{"body":{"nativeSrc":"8607:161:28","nodeType":"YulBlock","src":"8607:161:28","statements":[{"body":{"nativeSrc":"8653:16:28","nodeType":"YulBlock","src":"8653:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8662:1:28","nodeType":"YulLiteral","src":"8662:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"8665:1:28","nodeType":"YulLiteral","src":"8665:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8655:6:28","nodeType":"YulIdentifier","src":"8655:6:28"},"nativeSrc":"8655:12:28","nodeType":"YulFunctionCall","src":"8655:12:28"},"nativeSrc":"8655:12:28","nodeType":"YulExpressionStatement","src":"8655:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8628:7:28","nodeType":"YulIdentifier","src":"8628:7:28"},{"name":"headStart","nativeSrc":"8637:9:28","nodeType":"YulIdentifier","src":"8637:9:28"}],"functionName":{"name":"sub","nativeSrc":"8624:3:28","nodeType":"YulIdentifier","src":"8624:3:28"},"nativeSrc":"8624:23:28","nodeType":"YulFunctionCall","src":"8624:23:28"},{"kind":"number","nativeSrc":"8649:2:28","nodeType":"YulLiteral","src":"8649:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8620:3:28","nodeType":"YulIdentifier","src":"8620:3:28"},"nativeSrc":"8620:32:28","nodeType":"YulFunctionCall","src":"8620:32:28"},"nativeSrc":"8617:52:28","nodeType":"YulIf","src":"8617:52:28"},{"nativeSrc":"8678:33:28","nodeType":"YulAssignment","src":"8678:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"8701:9:28","nodeType":"YulIdentifier","src":"8701:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"8688:12:28","nodeType":"YulIdentifier","src":"8688:12:28"},"nativeSrc":"8688:23:28","nodeType":"YulFunctionCall","src":"8688:23:28"},"variableNames":[{"name":"value0","nativeSrc":"8678:6:28","nodeType":"YulIdentifier","src":"8678:6:28"}]},{"nativeSrc":"8720:42:28","nodeType":"YulAssignment","src":"8720:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8747:9:28","nodeType":"YulIdentifier","src":"8747:9:28"},{"kind":"number","nativeSrc":"8758:2:28","nodeType":"YulLiteral","src":"8758:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8743:3:28","nodeType":"YulIdentifier","src":"8743:3:28"},"nativeSrc":"8743:18:28","nodeType":"YulFunctionCall","src":"8743:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"8730:12:28","nodeType":"YulIdentifier","src":"8730:12:28"},"nativeSrc":"8730:32:28","nodeType":"YulFunctionCall","src":"8730:32:28"},"variableNames":[{"name":"value1","nativeSrc":"8720:6:28","nodeType":"YulIdentifier","src":"8720:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nativeSrc":"8520:248:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8565:9:28","nodeType":"YulTypedName","src":"8565:9:28","type":""},{"name":"dataEnd","nativeSrc":"8576:7:28","nodeType":"YulTypedName","src":"8576:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8588:6:28","nodeType":"YulTypedName","src":"8588:6:28","type":""},{"name":"value1","nativeSrc":"8596:6:28","nodeType":"YulTypedName","src":"8596:6:28","type":""}],"src":"8520:248:28"},{"body":{"nativeSrc":"8877:212:28","nodeType":"YulBlock","src":"8877:212:28","statements":[{"body":{"nativeSrc":"8923:16:28","nodeType":"YulBlock","src":"8923:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8932:1:28","nodeType":"YulLiteral","src":"8932:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"8935:1:28","nodeType":"YulLiteral","src":"8935:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8925:6:28","nodeType":"YulIdentifier","src":"8925:6:28"},"nativeSrc":"8925:12:28","nodeType":"YulFunctionCall","src":"8925:12:28"},"nativeSrc":"8925:12:28","nodeType":"YulExpressionStatement","src":"8925:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8898:7:28","nodeType":"YulIdentifier","src":"8898:7:28"},{"name":"headStart","nativeSrc":"8907:9:28","nodeType":"YulIdentifier","src":"8907:9:28"}],"functionName":{"name":"sub","nativeSrc":"8894:3:28","nodeType":"YulIdentifier","src":"8894:3:28"},"nativeSrc":"8894:23:28","nodeType":"YulFunctionCall","src":"8894:23:28"},{"kind":"number","nativeSrc":"8919:2:28","nodeType":"YulLiteral","src":"8919:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8890:3:28","nodeType":"YulIdentifier","src":"8890:3:28"},"nativeSrc":"8890:32:28","nodeType":"YulFunctionCall","src":"8890:32:28"},"nativeSrc":"8887:52:28","nodeType":"YulIf","src":"8887:52:28"},{"nativeSrc":"8948:33:28","nodeType":"YulAssignment","src":"8948:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"8971:9:28","nodeType":"YulIdentifier","src":"8971:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"8958:12:28","nodeType":"YulIdentifier","src":"8958:12:28"},"nativeSrc":"8958:23:28","nodeType":"YulFunctionCall","src":"8958:23:28"},"variableNames":[{"name":"value0","nativeSrc":"8948:6:28","nodeType":"YulIdentifier","src":"8948:6:28"}]},{"nativeSrc":"8990:42:28","nodeType":"YulAssignment","src":"8990:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9017:9:28","nodeType":"YulIdentifier","src":"9017:9:28"},{"kind":"number","nativeSrc":"9028:2:28","nodeType":"YulLiteral","src":"9028:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9013:3:28","nodeType":"YulIdentifier","src":"9013:3:28"},"nativeSrc":"9013:18:28","nodeType":"YulFunctionCall","src":"9013:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"9000:12:28","nodeType":"YulIdentifier","src":"9000:12:28"},"nativeSrc":"9000:32:28","nodeType":"YulFunctionCall","src":"9000:32:28"},"variableNames":[{"name":"value1","nativeSrc":"8990:6:28","nodeType":"YulIdentifier","src":"8990:6:28"}]},{"nativeSrc":"9041:42:28","nodeType":"YulAssignment","src":"9041:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9068:9:28","nodeType":"YulIdentifier","src":"9068:9:28"},{"kind":"number","nativeSrc":"9079:2:28","nodeType":"YulLiteral","src":"9079:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9064:3:28","nodeType":"YulIdentifier","src":"9064:3:28"},"nativeSrc":"9064:18:28","nodeType":"YulFunctionCall","src":"9064:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"9051:12:28","nodeType":"YulIdentifier","src":"9051:12:28"},"nativeSrc":"9051:32:28","nodeType":"YulFunctionCall","src":"9051:32:28"},"variableNames":[{"name":"value2","nativeSrc":"9041:6:28","nodeType":"YulIdentifier","src":"9041:6:28"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes32","nativeSrc":"8773:316:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8827:9:28","nodeType":"YulTypedName","src":"8827:9:28","type":""},{"name":"dataEnd","nativeSrc":"8838:7:28","nodeType":"YulTypedName","src":"8838:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8850:6:28","nodeType":"YulTypedName","src":"8850:6:28","type":""},{"name":"value1","nativeSrc":"8858:6:28","nodeType":"YulTypedName","src":"8858:6:28","type":""},{"name":"value2","nativeSrc":"8866:6:28","nodeType":"YulTypedName","src":"8866:6:28","type":""}],"src":"8773:316:28"},{"body":{"nativeSrc":"9247:372:28","nodeType":"YulBlock","src":"9247:372:28","statements":[{"body":{"nativeSrc":"9294:16:28","nodeType":"YulBlock","src":"9294:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9303:1:28","nodeType":"YulLiteral","src":"9303:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"9306:1:28","nodeType":"YulLiteral","src":"9306:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9296:6:28","nodeType":"YulIdentifier","src":"9296:6:28"},"nativeSrc":"9296:12:28","nodeType":"YulFunctionCall","src":"9296:12:28"},"nativeSrc":"9296:12:28","nodeType":"YulExpressionStatement","src":"9296:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9268:7:28","nodeType":"YulIdentifier","src":"9268:7:28"},{"name":"headStart","nativeSrc":"9277:9:28","nodeType":"YulIdentifier","src":"9277:9:28"}],"functionName":{"name":"sub","nativeSrc":"9264:3:28","nodeType":"YulIdentifier","src":"9264:3:28"},"nativeSrc":"9264:23:28","nodeType":"YulFunctionCall","src":"9264:23:28"},{"kind":"number","nativeSrc":"9289:3:28","nodeType":"YulLiteral","src":"9289:3:28","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"9260:3:28","nodeType":"YulIdentifier","src":"9260:3:28"},"nativeSrc":"9260:33:28","nodeType":"YulFunctionCall","src":"9260:33:28"},"nativeSrc":"9257:53:28","nodeType":"YulIf","src":"9257:53:28"},{"nativeSrc":"9319:33:28","nodeType":"YulAssignment","src":"9319:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"9342:9:28","nodeType":"YulIdentifier","src":"9342:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"9329:12:28","nodeType":"YulIdentifier","src":"9329:12:28"},"nativeSrc":"9329:23:28","nodeType":"YulFunctionCall","src":"9329:23:28"},"variableNames":[{"name":"value0","nativeSrc":"9319:6:28","nodeType":"YulIdentifier","src":"9319:6:28"}]},{"nativeSrc":"9361:42:28","nodeType":"YulAssignment","src":"9361:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9388:9:28","nodeType":"YulIdentifier","src":"9388:9:28"},{"kind":"number","nativeSrc":"9399:2:28","nodeType":"YulLiteral","src":"9399:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9384:3:28","nodeType":"YulIdentifier","src":"9384:3:28"},"nativeSrc":"9384:18:28","nodeType":"YulFunctionCall","src":"9384:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"9371:12:28","nodeType":"YulIdentifier","src":"9371:12:28"},"nativeSrc":"9371:32:28","nodeType":"YulFunctionCall","src":"9371:32:28"},"variableNames":[{"name":"value1","nativeSrc":"9361:6:28","nodeType":"YulIdentifier","src":"9361:6:28"}]},{"nativeSrc":"9412:42:28","nodeType":"YulAssignment","src":"9412:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9439:9:28","nodeType":"YulIdentifier","src":"9439:9:28"},{"kind":"number","nativeSrc":"9450:2:28","nodeType":"YulLiteral","src":"9450:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9435:3:28","nodeType":"YulIdentifier","src":"9435:3:28"},"nativeSrc":"9435:18:28","nodeType":"YulFunctionCall","src":"9435:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"9422:12:28","nodeType":"YulIdentifier","src":"9422:12:28"},"nativeSrc":"9422:32:28","nodeType":"YulFunctionCall","src":"9422:32:28"},"variableNames":[{"name":"value2","nativeSrc":"9412:6:28","nodeType":"YulIdentifier","src":"9412:6:28"}]},{"nativeSrc":"9463:46:28","nodeType":"YulAssignment","src":"9463:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9494:9:28","nodeType":"YulIdentifier","src":"9494:9:28"},{"kind":"number","nativeSrc":"9505:2:28","nodeType":"YulLiteral","src":"9505:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9490:3:28","nodeType":"YulIdentifier","src":"9490:3:28"},"nativeSrc":"9490:18:28","nodeType":"YulFunctionCall","src":"9490:18:28"}],"functionName":{"name":"abi_decode_uint8","nativeSrc":"9473:16:28","nodeType":"YulIdentifier","src":"9473:16:28"},"nativeSrc":"9473:36:28","nodeType":"YulFunctionCall","src":"9473:36:28"},"variableNames":[{"name":"value3","nativeSrc":"9463:6:28","nodeType":"YulIdentifier","src":"9463:6:28"}]},{"nativeSrc":"9518:43:28","nodeType":"YulAssignment","src":"9518:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9545:9:28","nodeType":"YulIdentifier","src":"9545:9:28"},{"kind":"number","nativeSrc":"9556:3:28","nodeType":"YulLiteral","src":"9556:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9541:3:28","nodeType":"YulIdentifier","src":"9541:3:28"},"nativeSrc":"9541:19:28","nodeType":"YulFunctionCall","src":"9541:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"9528:12:28","nodeType":"YulIdentifier","src":"9528:12:28"},"nativeSrc":"9528:33:28","nodeType":"YulFunctionCall","src":"9528:33:28"},"variableNames":[{"name":"value4","nativeSrc":"9518:6:28","nodeType":"YulIdentifier","src":"9518:6:28"}]},{"nativeSrc":"9570:43:28","nodeType":"YulAssignment","src":"9570:43:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9597:9:28","nodeType":"YulIdentifier","src":"9597:9:28"},{"kind":"number","nativeSrc":"9608:3:28","nodeType":"YulLiteral","src":"9608:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9593:3:28","nodeType":"YulIdentifier","src":"9593:3:28"},"nativeSrc":"9593:19:28","nodeType":"YulFunctionCall","src":"9593:19:28"}],"functionName":{"name":"calldataload","nativeSrc":"9580:12:28","nodeType":"YulIdentifier","src":"9580:12:28"},"nativeSrc":"9580:33:28","nodeType":"YulFunctionCall","src":"9580:33:28"},"variableNames":[{"name":"value5","nativeSrc":"9570:6:28","nodeType":"YulIdentifier","src":"9570:6:28"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32","nativeSrc":"9094:525:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9173:9:28","nodeType":"YulTypedName","src":"9173:9:28","type":""},{"name":"dataEnd","nativeSrc":"9184:7:28","nodeType":"YulTypedName","src":"9184:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9196:6:28","nodeType":"YulTypedName","src":"9196:6:28","type":""},{"name":"value1","nativeSrc":"9204:6:28","nodeType":"YulTypedName","src":"9204:6:28","type":""},{"name":"value2","nativeSrc":"9212:6:28","nodeType":"YulTypedName","src":"9212:6:28","type":""},{"name":"value3","nativeSrc":"9220:6:28","nodeType":"YulTypedName","src":"9220:6:28","type":""},{"name":"value4","nativeSrc":"9228:6:28","nodeType":"YulTypedName","src":"9228:6:28","type":""},{"name":"value5","nativeSrc":"9236:6:28","nodeType":"YulTypedName","src":"9236:6:28","type":""}],"src":"9094:525:28"},{"body":{"nativeSrc":"9755:396:28","nodeType":"YulBlock","src":"9755:396:28","statements":[{"body":{"nativeSrc":"9802:16:28","nodeType":"YulBlock","src":"9802:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9811:1:28","nodeType":"YulLiteral","src":"9811:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"9814:1:28","nodeType":"YulLiteral","src":"9814:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9804:6:28","nodeType":"YulIdentifier","src":"9804:6:28"},"nativeSrc":"9804:12:28","nodeType":"YulFunctionCall","src":"9804:12:28"},"nativeSrc":"9804:12:28","nodeType":"YulExpressionStatement","src":"9804:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9776:7:28","nodeType":"YulIdentifier","src":"9776:7:28"},{"name":"headStart","nativeSrc":"9785:9:28","nodeType":"YulIdentifier","src":"9785:9:28"}],"functionName":{"name":"sub","nativeSrc":"9772:3:28","nodeType":"YulIdentifier","src":"9772:3:28"},"nativeSrc":"9772:23:28","nodeType":"YulFunctionCall","src":"9772:23:28"},{"kind":"number","nativeSrc":"9797:3:28","nodeType":"YulLiteral","src":"9797:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"9768:3:28","nodeType":"YulIdentifier","src":"9768:3:28"},"nativeSrc":"9768:33:28","nodeType":"YulFunctionCall","src":"9768:33:28"},"nativeSrc":"9765:53:28","nodeType":"YulIf","src":"9765:53:28"},{"nativeSrc":"9827:33:28","nodeType":"YulAssignment","src":"9827:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"9850:9:28","nodeType":"YulIdentifier","src":"9850:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"9837:12:28","nodeType":"YulIdentifier","src":"9837:12:28"},"nativeSrc":"9837:23:28","nodeType":"YulFunctionCall","src":"9837:23:28"},"variableNames":[{"name":"value0","nativeSrc":"9827:6:28","nodeType":"YulIdentifier","src":"9827:6:28"}]},{"nativeSrc":"9869:46:28","nodeType":"YulVariableDeclaration","src":"9869:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9900:9:28","nodeType":"YulIdentifier","src":"9900:9:28"},{"kind":"number","nativeSrc":"9911:2:28","nodeType":"YulLiteral","src":"9911:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9896:3:28","nodeType":"YulIdentifier","src":"9896:3:28"},"nativeSrc":"9896:18:28","nodeType":"YulFunctionCall","src":"9896:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"9883:12:28","nodeType":"YulIdentifier","src":"9883:12:28"},"nativeSrc":"9883:32:28","nodeType":"YulFunctionCall","src":"9883:32:28"},"variables":[{"name":"offset","nativeSrc":"9873:6:28","nodeType":"YulTypedName","src":"9873:6:28","type":""}]},{"body":{"nativeSrc":"9958:16:28","nodeType":"YulBlock","src":"9958:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9967:1:28","nodeType":"YulLiteral","src":"9967:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"9970:1:28","nodeType":"YulLiteral","src":"9970:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9960:6:28","nodeType":"YulIdentifier","src":"9960:6:28"},"nativeSrc":"9960:12:28","nodeType":"YulFunctionCall","src":"9960:12:28"},"nativeSrc":"9960:12:28","nodeType":"YulExpressionStatement","src":"9960:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9930:6:28","nodeType":"YulIdentifier","src":"9930:6:28"},{"kind":"number","nativeSrc":"9938:18:28","nodeType":"YulLiteral","src":"9938:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9927:2:28","nodeType":"YulIdentifier","src":"9927:2:28"},"nativeSrc":"9927:30:28","nodeType":"YulFunctionCall","src":"9927:30:28"},"nativeSrc":"9924:50:28","nodeType":"YulIf","src":"9924:50:28"},{"nativeSrc":"9983:60:28","nodeType":"YulAssignment","src":"9983:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10015:9:28","nodeType":"YulIdentifier","src":"10015:9:28"},{"name":"offset","nativeSrc":"10026:6:28","nodeType":"YulIdentifier","src":"10026:6:28"}],"functionName":{"name":"add","nativeSrc":"10011:3:28","nodeType":"YulIdentifier","src":"10011:3:28"},"nativeSrc":"10011:22:28","nodeType":"YulFunctionCall","src":"10011:22:28"},{"name":"dataEnd","nativeSrc":"10035:7:28","nodeType":"YulIdentifier","src":"10035:7:28"}],"functionName":{"name":"abi_decode_string","nativeSrc":"9993:17:28","nodeType":"YulIdentifier","src":"9993:17:28"},"nativeSrc":"9993:50:28","nodeType":"YulFunctionCall","src":"9993:50:28"},"variableNames":[{"name":"value1","nativeSrc":"9983:6:28","nodeType":"YulIdentifier","src":"9983:6:28"}]},{"nativeSrc":"10052:42:28","nodeType":"YulAssignment","src":"10052:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10079:9:28","nodeType":"YulIdentifier","src":"10079:9:28"},{"kind":"number","nativeSrc":"10090:2:28","nodeType":"YulLiteral","src":"10090:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10075:3:28","nodeType":"YulIdentifier","src":"10075:3:28"},"nativeSrc":"10075:18:28","nodeType":"YulFunctionCall","src":"10075:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"10062:12:28","nodeType":"YulIdentifier","src":"10062:12:28"},"nativeSrc":"10062:32:28","nodeType":"YulFunctionCall","src":"10062:32:28"},"variableNames":[{"name":"value2","nativeSrc":"10052:6:28","nodeType":"YulIdentifier","src":"10052:6:28"}]},{"nativeSrc":"10103:42:28","nodeType":"YulAssignment","src":"10103:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10130:9:28","nodeType":"YulIdentifier","src":"10130:9:28"},{"kind":"number","nativeSrc":"10141:2:28","nodeType":"YulLiteral","src":"10141:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10126:3:28","nodeType":"YulIdentifier","src":"10126:3:28"},"nativeSrc":"10126:18:28","nodeType":"YulFunctionCall","src":"10126:18:28"}],"functionName":{"name":"calldataload","nativeSrc":"10113:12:28","nodeType":"YulIdentifier","src":"10113:12:28"},"nativeSrc":"10113:32:28","nodeType":"YulFunctionCall","src":"10113:32:28"},"variableNames":[{"name":"value3","nativeSrc":"10103:6:28","nodeType":"YulIdentifier","src":"10103:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32","nativeSrc":"9624:527:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9697:9:28","nodeType":"YulTypedName","src":"9697:9:28","type":""},{"name":"dataEnd","nativeSrc":"9708:7:28","nodeType":"YulTypedName","src":"9708:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9720:6:28","nodeType":"YulTypedName","src":"9720:6:28","type":""},{"name":"value1","nativeSrc":"9728:6:28","nodeType":"YulTypedName","src":"9728:6:28","type":""},{"name":"value2","nativeSrc":"9736:6:28","nodeType":"YulTypedName","src":"9736:6:28","type":""},{"name":"value3","nativeSrc":"9744:6:28","nodeType":"YulTypedName","src":"9744:6:28","type":""}],"src":"9624:527:28"},{"body":{"nativeSrc":"10222:184:28","nodeType":"YulBlock","src":"10222:184:28","statements":[{"nativeSrc":"10232:10:28","nodeType":"YulVariableDeclaration","src":"10232:10:28","value":{"kind":"number","nativeSrc":"10241:1:28","nodeType":"YulLiteral","src":"10241:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10236:1:28","nodeType":"YulTypedName","src":"10236:1:28","type":""}]},{"body":{"nativeSrc":"10301:63:28","nodeType":"YulBlock","src":"10301:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10326:3:28","nodeType":"YulIdentifier","src":"10326:3:28"},{"name":"i","nativeSrc":"10331:1:28","nodeType":"YulIdentifier","src":"10331:1:28"}],"functionName":{"name":"add","nativeSrc":"10322:3:28","nodeType":"YulIdentifier","src":"10322:3:28"},"nativeSrc":"10322:11:28","nodeType":"YulFunctionCall","src":"10322:11:28"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10345:3:28","nodeType":"YulIdentifier","src":"10345:3:28"},{"name":"i","nativeSrc":"10350:1:28","nodeType":"YulIdentifier","src":"10350:1:28"}],"functionName":{"name":"add","nativeSrc":"10341:3:28","nodeType":"YulIdentifier","src":"10341:3:28"},"nativeSrc":"10341:11:28","nodeType":"YulFunctionCall","src":"10341:11:28"}],"functionName":{"name":"mload","nativeSrc":"10335:5:28","nodeType":"YulIdentifier","src":"10335:5:28"},"nativeSrc":"10335:18:28","nodeType":"YulFunctionCall","src":"10335:18:28"}],"functionName":{"name":"mstore","nativeSrc":"10315:6:28","nodeType":"YulIdentifier","src":"10315:6:28"},"nativeSrc":"10315:39:28","nodeType":"YulFunctionCall","src":"10315:39:28"},"nativeSrc":"10315:39:28","nodeType":"YulExpressionStatement","src":"10315:39:28"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10262:1:28","nodeType":"YulIdentifier","src":"10262:1:28"},{"name":"length","nativeSrc":"10265:6:28","nodeType":"YulIdentifier","src":"10265:6:28"}],"functionName":{"name":"lt","nativeSrc":"10259:2:28","nodeType":"YulIdentifier","src":"10259:2:28"},"nativeSrc":"10259:13:28","nodeType":"YulFunctionCall","src":"10259:13:28"},"nativeSrc":"10251:113:28","nodeType":"YulForLoop","post":{"nativeSrc":"10273:19:28","nodeType":"YulBlock","src":"10273:19:28","statements":[{"nativeSrc":"10275:15:28","nodeType":"YulAssignment","src":"10275:15:28","value":{"arguments":[{"name":"i","nativeSrc":"10284:1:28","nodeType":"YulIdentifier","src":"10284:1:28"},{"kind":"number","nativeSrc":"10287:2:28","nodeType":"YulLiteral","src":"10287:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10280:3:28","nodeType":"YulIdentifier","src":"10280:3:28"},"nativeSrc":"10280:10:28","nodeType":"YulFunctionCall","src":"10280:10:28"},"variableNames":[{"name":"i","nativeSrc":"10275:1:28","nodeType":"YulIdentifier","src":"10275:1:28"}]}]},"pre":{"nativeSrc":"10255:3:28","nodeType":"YulBlock","src":"10255:3:28","statements":[]},"src":"10251:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10384:3:28","nodeType":"YulIdentifier","src":"10384:3:28"},{"name":"length","nativeSrc":"10389:6:28","nodeType":"YulIdentifier","src":"10389:6:28"}],"functionName":{"name":"add","nativeSrc":"10380:3:28","nodeType":"YulIdentifier","src":"10380:3:28"},"nativeSrc":"10380:16:28","nodeType":"YulFunctionCall","src":"10380:16:28"},{"kind":"number","nativeSrc":"10398:1:28","nodeType":"YulLiteral","src":"10398:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10373:6:28","nodeType":"YulIdentifier","src":"10373:6:28"},"nativeSrc":"10373:27:28","nodeType":"YulFunctionCall","src":"10373:27:28"},"nativeSrc":"10373:27:28","nodeType":"YulExpressionStatement","src":"10373:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10156:250:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10200:3:28","nodeType":"YulTypedName","src":"10200:3:28","type":""},{"name":"dst","nativeSrc":"10205:3:28","nodeType":"YulTypedName","src":"10205:3:28","type":""},{"name":"length","nativeSrc":"10210:6:28","nodeType":"YulTypedName","src":"10210:6:28","type":""}],"src":"10156:250:28"},{"body":{"nativeSrc":"10461:280:28","nodeType":"YulBlock","src":"10461:280:28","statements":[{"nativeSrc":"10471:26:28","nodeType":"YulVariableDeclaration","src":"10471:26:28","value":{"arguments":[{"name":"value","nativeSrc":"10491:5:28","nodeType":"YulIdentifier","src":"10491:5:28"}],"functionName":{"name":"mload","nativeSrc":"10485:5:28","nodeType":"YulIdentifier","src":"10485:5:28"},"nativeSrc":"10485:12:28","nodeType":"YulFunctionCall","src":"10485:12:28"},"variables":[{"name":"length","nativeSrc":"10475:6:28","nodeType":"YulTypedName","src":"10475:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10513:3:28","nodeType":"YulIdentifier","src":"10513:3:28"},{"name":"length","nativeSrc":"10518:6:28","nodeType":"YulIdentifier","src":"10518:6:28"}],"functionName":{"name":"mstore","nativeSrc":"10506:6:28","nodeType":"YulIdentifier","src":"10506:6:28"},"nativeSrc":"10506:19:28","nodeType":"YulFunctionCall","src":"10506:19:28"},"nativeSrc":"10506:19:28","nodeType":"YulExpressionStatement","src":"10506:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10573:5:28","nodeType":"YulIdentifier","src":"10573:5:28"},{"kind":"number","nativeSrc":"10580:4:28","nodeType":"YulLiteral","src":"10580:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10569:3:28","nodeType":"YulIdentifier","src":"10569:3:28"},"nativeSrc":"10569:16:28","nodeType":"YulFunctionCall","src":"10569:16:28"},{"arguments":[{"name":"pos","nativeSrc":"10591:3:28","nodeType":"YulIdentifier","src":"10591:3:28"},{"kind":"number","nativeSrc":"10596:4:28","nodeType":"YulLiteral","src":"10596:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10587:3:28","nodeType":"YulIdentifier","src":"10587:3:28"},"nativeSrc":"10587:14:28","nodeType":"YulFunctionCall","src":"10587:14:28"},{"name":"length","nativeSrc":"10603:6:28","nodeType":"YulIdentifier","src":"10603:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10534:34:28","nodeType":"YulIdentifier","src":"10534:34:28"},"nativeSrc":"10534:76:28","nodeType":"YulFunctionCall","src":"10534:76:28"},"nativeSrc":"10534:76:28","nodeType":"YulExpressionStatement","src":"10534:76:28"},{"nativeSrc":"10619:116:28","nodeType":"YulAssignment","src":"10619:116:28","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"10634:3:28","nodeType":"YulIdentifier","src":"10634:3:28"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10647:6:28","nodeType":"YulIdentifier","src":"10647:6:28"},{"kind":"number","nativeSrc":"10655:2:28","nodeType":"YulLiteral","src":"10655:2:28","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10643:3:28","nodeType":"YulIdentifier","src":"10643:3:28"},"nativeSrc":"10643:15:28","nodeType":"YulFunctionCall","src":"10643:15:28"},{"kind":"number","nativeSrc":"10660:66:28","nodeType":"YulLiteral","src":"10660:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"10639:3:28","nodeType":"YulIdentifier","src":"10639:3:28"},"nativeSrc":"10639:88:28","nodeType":"YulFunctionCall","src":"10639:88:28"}],"functionName":{"name":"add","nativeSrc":"10630:3:28","nodeType":"YulIdentifier","src":"10630:3:28"},"nativeSrc":"10630:98:28","nodeType":"YulFunctionCall","src":"10630:98:28"},{"kind":"number","nativeSrc":"10730:4:28","nodeType":"YulLiteral","src":"10730:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10626:3:28","nodeType":"YulIdentifier","src":"10626:3:28"},"nativeSrc":"10626:109:28","nodeType":"YulFunctionCall","src":"10626:109:28"},"variableNames":[{"name":"end","nativeSrc":"10619:3:28","nodeType":"YulIdentifier","src":"10619:3:28"}]}]},"name":"abi_encode_string","nativeSrc":"10411:330:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10438:5:28","nodeType":"YulTypedName","src":"10438:5:28","type":""},{"name":"pos","nativeSrc":"10445:3:28","nodeType":"YulTypedName","src":"10445:3:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10453:3:28","nodeType":"YulTypedName","src":"10453:3:28","type":""}],"src":"10411:330:28"},{"body":{"nativeSrc":"10895:142:28","nodeType":"YulBlock","src":"10895:142:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10912:9:28","nodeType":"YulIdentifier","src":"10912:9:28"},{"kind":"number","nativeSrc":"10923:2:28","nodeType":"YulLiteral","src":"10923:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"10905:6:28","nodeType":"YulIdentifier","src":"10905:6:28"},"nativeSrc":"10905:21:28","nodeType":"YulFunctionCall","src":"10905:21:28"},"nativeSrc":"10905:21:28","nodeType":"YulExpressionStatement","src":"10905:21:28"},{"nativeSrc":"10935:53:28","nodeType":"YulAssignment","src":"10935:53:28","value":{"arguments":[{"name":"value0","nativeSrc":"10961:6:28","nodeType":"YulIdentifier","src":"10961:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"10973:9:28","nodeType":"YulIdentifier","src":"10973:9:28"},{"kind":"number","nativeSrc":"10984:2:28","nodeType":"YulLiteral","src":"10984:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10969:3:28","nodeType":"YulIdentifier","src":"10969:3:28"},"nativeSrc":"10969:18:28","nodeType":"YulFunctionCall","src":"10969:18:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"10943:17:28","nodeType":"YulIdentifier","src":"10943:17:28"},"nativeSrc":"10943:45:28","nodeType":"YulFunctionCall","src":"10943:45:28"},"variableNames":[{"name":"tail","nativeSrc":"10935:4:28","nodeType":"YulIdentifier","src":"10935:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11008:9:28","nodeType":"YulIdentifier","src":"11008:9:28"},{"kind":"number","nativeSrc":"11019:2:28","nodeType":"YulLiteral","src":"11019:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11004:3:28","nodeType":"YulIdentifier","src":"11004:3:28"},"nativeSrc":"11004:18:28","nodeType":"YulFunctionCall","src":"11004:18:28"},{"name":"value1","nativeSrc":"11024:6:28","nodeType":"YulIdentifier","src":"11024:6:28"}],"functionName":{"name":"mstore","nativeSrc":"10997:6:28","nodeType":"YulIdentifier","src":"10997:6:28"},"nativeSrc":"10997:34:28","nodeType":"YulFunctionCall","src":"10997:34:28"},"nativeSrc":"10997:34:28","nodeType":"YulExpressionStatement","src":"10997:34:28"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed","nativeSrc":"10746:291:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10856:9:28","nodeType":"YulTypedName","src":"10856:9:28","type":""},{"name":"value1","nativeSrc":"10867:6:28","nodeType":"YulTypedName","src":"10867:6:28","type":""},{"name":"value0","nativeSrc":"10875:6:28","nodeType":"YulTypedName","src":"10875:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10886:4:28","nodeType":"YulTypedName","src":"10886:4:28","type":""}],"src":"10746:291:28"},{"body":{"nativeSrc":"11123:103:28","nodeType":"YulBlock","src":"11123:103:28","statements":[{"body":{"nativeSrc":"11169:16:28","nodeType":"YulBlock","src":"11169:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11178:1:28","nodeType":"YulLiteral","src":"11178:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"11181:1:28","nodeType":"YulLiteral","src":"11181:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11171:6:28","nodeType":"YulIdentifier","src":"11171:6:28"},"nativeSrc":"11171:12:28","nodeType":"YulFunctionCall","src":"11171:12:28"},"nativeSrc":"11171:12:28","nodeType":"YulExpressionStatement","src":"11171:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11144:7:28","nodeType":"YulIdentifier","src":"11144:7:28"},{"name":"headStart","nativeSrc":"11153:9:28","nodeType":"YulIdentifier","src":"11153:9:28"}],"functionName":{"name":"sub","nativeSrc":"11140:3:28","nodeType":"YulIdentifier","src":"11140:3:28"},"nativeSrc":"11140:23:28","nodeType":"YulFunctionCall","src":"11140:23:28"},{"kind":"number","nativeSrc":"11165:2:28","nodeType":"YulLiteral","src":"11165:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11136:3:28","nodeType":"YulIdentifier","src":"11136:3:28"},"nativeSrc":"11136:32:28","nodeType":"YulFunctionCall","src":"11136:32:28"},"nativeSrc":"11133:52:28","nodeType":"YulIf","src":"11133:52:28"},{"nativeSrc":"11194:26:28","nodeType":"YulAssignment","src":"11194:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"11210:9:28","nodeType":"YulIdentifier","src":"11210:9:28"}],"functionName":{"name":"mload","nativeSrc":"11204:5:28","nodeType":"YulIdentifier","src":"11204:5:28"},"nativeSrc":"11204:16:28","nodeType":"YulFunctionCall","src":"11204:16:28"},"variableNames":[{"name":"value0","nativeSrc":"11194:6:28","nodeType":"YulIdentifier","src":"11194:6:28"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"11042:184:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11089:9:28","nodeType":"YulTypedName","src":"11089:9:28","type":""},{"name":"dataEnd","nativeSrc":"11100:7:28","nodeType":"YulTypedName","src":"11100:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11112:6:28","nodeType":"YulTypedName","src":"11112:6:28","type":""}],"src":"11042:184:28"},{"body":{"nativeSrc":"11263:152:28","nodeType":"YulBlock","src":"11263:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11280:1:28","nodeType":"YulLiteral","src":"11280:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"11283:77:28","nodeType":"YulLiteral","src":"11283:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11273:6:28","nodeType":"YulIdentifier","src":"11273:6:28"},"nativeSrc":"11273:88:28","nodeType":"YulFunctionCall","src":"11273:88:28"},"nativeSrc":"11273:88:28","nodeType":"YulExpressionStatement","src":"11273:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11377:1:28","nodeType":"YulLiteral","src":"11377:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"11380:4:28","nodeType":"YulLiteral","src":"11380:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"11370:6:28","nodeType":"YulIdentifier","src":"11370:6:28"},"nativeSrc":"11370:15:28","nodeType":"YulFunctionCall","src":"11370:15:28"},"nativeSrc":"11370:15:28","nodeType":"YulExpressionStatement","src":"11370:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11401:1:28","nodeType":"YulLiteral","src":"11401:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"11404:4:28","nodeType":"YulLiteral","src":"11404:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11394:6:28","nodeType":"YulIdentifier","src":"11394:6:28"},"nativeSrc":"11394:15:28","nodeType":"YulFunctionCall","src":"11394:15:28"},"nativeSrc":"11394:15:28","nodeType":"YulExpressionStatement","src":"11394:15:28"}]},"name":"panic_error_0x11","nativeSrc":"11231:184:28","nodeType":"YulFunctionDefinition","src":"11231:184:28"},{"body":{"nativeSrc":"11468:77:28","nodeType":"YulBlock","src":"11468:77:28","statements":[{"nativeSrc":"11478:16:28","nodeType":"YulAssignment","src":"11478:16:28","value":{"arguments":[{"name":"x","nativeSrc":"11489:1:28","nodeType":"YulIdentifier","src":"11489:1:28"},{"name":"y","nativeSrc":"11492:1:28","nodeType":"YulIdentifier","src":"11492:1:28"}],"functionName":{"name":"add","nativeSrc":"11485:3:28","nodeType":"YulIdentifier","src":"11485:3:28"},"nativeSrc":"11485:9:28","nodeType":"YulFunctionCall","src":"11485:9:28"},"variableNames":[{"name":"sum","nativeSrc":"11478:3:28","nodeType":"YulIdentifier","src":"11478:3:28"}]},{"body":{"nativeSrc":"11517:22:28","nodeType":"YulBlock","src":"11517:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11519:16:28","nodeType":"YulIdentifier","src":"11519:16:28"},"nativeSrc":"11519:18:28","nodeType":"YulFunctionCall","src":"11519:18:28"},"nativeSrc":"11519:18:28","nodeType":"YulExpressionStatement","src":"11519:18:28"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11509:1:28","nodeType":"YulIdentifier","src":"11509:1:28"},{"name":"sum","nativeSrc":"11512:3:28","nodeType":"YulIdentifier","src":"11512:3:28"}],"functionName":{"name":"gt","nativeSrc":"11506:2:28","nodeType":"YulIdentifier","src":"11506:2:28"},"nativeSrc":"11506:10:28","nodeType":"YulFunctionCall","src":"11506:10:28"},"nativeSrc":"11503:36:28","nodeType":"YulIf","src":"11503:36:28"}]},"name":"checked_add_t_uint256","nativeSrc":"11420:125:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11451:1:28","nodeType":"YulTypedName","src":"11451:1:28","type":""},{"name":"y","nativeSrc":"11454:1:28","nodeType":"YulTypedName","src":"11454:1:28","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11460:3:28","nodeType":"YulTypedName","src":"11460:3:28","type":""}],"src":"11420:125:28"},{"body":{"nativeSrc":"11707:162:28","nodeType":"YulBlock","src":"11707:162:28","statements":[{"nativeSrc":"11717:26:28","nodeType":"YulAssignment","src":"11717:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"11729:9:28","nodeType":"YulIdentifier","src":"11729:9:28"},{"kind":"number","nativeSrc":"11740:2:28","nodeType":"YulLiteral","src":"11740:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11725:3:28","nodeType":"YulIdentifier","src":"11725:3:28"},"nativeSrc":"11725:18:28","nodeType":"YulFunctionCall","src":"11725:18:28"},"variableNames":[{"name":"tail","nativeSrc":"11717:4:28","nodeType":"YulIdentifier","src":"11717:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11759:9:28","nodeType":"YulIdentifier","src":"11759:9:28"},{"name":"value0","nativeSrc":"11770:6:28","nodeType":"YulIdentifier","src":"11770:6:28"}],"functionName":{"name":"mstore","nativeSrc":"11752:6:28","nodeType":"YulIdentifier","src":"11752:6:28"},"nativeSrc":"11752:25:28","nodeType":"YulFunctionCall","src":"11752:25:28"},"nativeSrc":"11752:25:28","nodeType":"YulExpressionStatement","src":"11752:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11797:9:28","nodeType":"YulIdentifier","src":"11797:9:28"},{"kind":"number","nativeSrc":"11808:2:28","nodeType":"YulLiteral","src":"11808:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11793:3:28","nodeType":"YulIdentifier","src":"11793:3:28"},"nativeSrc":"11793:18:28","nodeType":"YulFunctionCall","src":"11793:18:28"},{"name":"value1","nativeSrc":"11813:6:28","nodeType":"YulIdentifier","src":"11813:6:28"}],"functionName":{"name":"mstore","nativeSrc":"11786:6:28","nodeType":"YulIdentifier","src":"11786:6:28"},"nativeSrc":"11786:34:28","nodeType":"YulFunctionCall","src":"11786:34:28"},"nativeSrc":"11786:34:28","nodeType":"YulExpressionStatement","src":"11786:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11840:9:28","nodeType":"YulIdentifier","src":"11840:9:28"},{"kind":"number","nativeSrc":"11851:2:28","nodeType":"YulLiteral","src":"11851:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11836:3:28","nodeType":"YulIdentifier","src":"11836:3:28"},"nativeSrc":"11836:18:28","nodeType":"YulFunctionCall","src":"11836:18:28"},{"name":"value2","nativeSrc":"11856:6:28","nodeType":"YulIdentifier","src":"11856:6:28"}],"functionName":{"name":"mstore","nativeSrc":"11829:6:28","nodeType":"YulIdentifier","src":"11829:6:28"},"nativeSrc":"11829:34:28","nodeType":"YulFunctionCall","src":"11829:34:28"},"nativeSrc":"11829:34:28","nodeType":"YulExpressionStatement","src":"11829:34:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11550:319:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11660:9:28","nodeType":"YulTypedName","src":"11660:9:28","type":""},{"name":"value2","nativeSrc":"11671:6:28","nodeType":"YulTypedName","src":"11671:6:28","type":""},{"name":"value1","nativeSrc":"11679:6:28","nodeType":"YulTypedName","src":"11679:6:28","type":""},{"name":"value0","nativeSrc":"11687:6:28","nodeType":"YulTypedName","src":"11687:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11698:4:28","nodeType":"YulTypedName","src":"11698:4:28","type":""}],"src":"11550:319:28"},{"body":{"nativeSrc":"12048:234:28","nodeType":"YulBlock","src":"12048:234:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12065:9:28","nodeType":"YulIdentifier","src":"12065:9:28"},{"kind":"number","nativeSrc":"12076:2:28","nodeType":"YulLiteral","src":"12076:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12058:6:28","nodeType":"YulIdentifier","src":"12058:6:28"},"nativeSrc":"12058:21:28","nodeType":"YulFunctionCall","src":"12058:21:28"},"nativeSrc":"12058:21:28","nodeType":"YulExpressionStatement","src":"12058:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12099:9:28","nodeType":"YulIdentifier","src":"12099:9:28"},{"kind":"number","nativeSrc":"12110:2:28","nodeType":"YulLiteral","src":"12110:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12095:3:28","nodeType":"YulIdentifier","src":"12095:3:28"},"nativeSrc":"12095:18:28","nodeType":"YulFunctionCall","src":"12095:18:28"},{"kind":"number","nativeSrc":"12115:2:28","nodeType":"YulLiteral","src":"12115:2:28","type":"","value":"44"}],"functionName":{"name":"mstore","nativeSrc":"12088:6:28","nodeType":"YulIdentifier","src":"12088:6:28"},"nativeSrc":"12088:30:28","nodeType":"YulFunctionCall","src":"12088:30:28"},"nativeSrc":"12088:30:28","nodeType":"YulExpressionStatement","src":"12088:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12138:9:28","nodeType":"YulIdentifier","src":"12138:9:28"},{"kind":"number","nativeSrc":"12149:2:28","nodeType":"YulLiteral","src":"12149:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12134:3:28","nodeType":"YulIdentifier","src":"12134:3:28"},"nativeSrc":"12134:18:28","nodeType":"YulFunctionCall","src":"12134:18:28"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nativeSrc":"12154:34:28","nodeType":"YulLiteral","src":"12154:34:28","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nativeSrc":"12127:6:28","nodeType":"YulIdentifier","src":"12127:6:28"},"nativeSrc":"12127:62:28","nodeType":"YulFunctionCall","src":"12127:62:28"},"nativeSrc":"12127:62:28","nodeType":"YulExpressionStatement","src":"12127:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12209:9:28","nodeType":"YulIdentifier","src":"12209:9:28"},{"kind":"number","nativeSrc":"12220:2:28","nodeType":"YulLiteral","src":"12220:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12205:3:28","nodeType":"YulIdentifier","src":"12205:3:28"},"nativeSrc":"12205:18:28","nodeType":"YulFunctionCall","src":"12205:18:28"},{"hexValue":"64656c656761746563616c6c","kind":"string","nativeSrc":"12225:14:28","nodeType":"YulLiteral","src":"12225:14:28","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nativeSrc":"12198:6:28","nodeType":"YulIdentifier","src":"12198:6:28"},"nativeSrc":"12198:42:28","nodeType":"YulFunctionCall","src":"12198:42:28"},"nativeSrc":"12198:42:28","nodeType":"YulExpressionStatement","src":"12198:42:28"},{"nativeSrc":"12249:27:28","nodeType":"YulAssignment","src":"12249:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"12261:9:28","nodeType":"YulIdentifier","src":"12261:9:28"},{"kind":"number","nativeSrc":"12272:3:28","nodeType":"YulLiteral","src":"12272:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12257:3:28","nodeType":"YulIdentifier","src":"12257:3:28"},"nativeSrc":"12257:19:28","nodeType":"YulFunctionCall","src":"12257:19:28"},"variableNames":[{"name":"tail","nativeSrc":"12249:4:28","nodeType":"YulIdentifier","src":"12249:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11874:408:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12025:9:28","nodeType":"YulTypedName","src":"12025:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12039:4:28","nodeType":"YulTypedName","src":"12039:4:28","type":""}],"src":"11874:408:28"},{"body":{"nativeSrc":"12461:234:28","nodeType":"YulBlock","src":"12461:234:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12478:9:28","nodeType":"YulIdentifier","src":"12478:9:28"},{"kind":"number","nativeSrc":"12489:2:28","nodeType":"YulLiteral","src":"12489:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12471:6:28","nodeType":"YulIdentifier","src":"12471:6:28"},"nativeSrc":"12471:21:28","nodeType":"YulFunctionCall","src":"12471:21:28"},"nativeSrc":"12471:21:28","nodeType":"YulExpressionStatement","src":"12471:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12512:9:28","nodeType":"YulIdentifier","src":"12512:9:28"},{"kind":"number","nativeSrc":"12523:2:28","nodeType":"YulLiteral","src":"12523:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12508:3:28","nodeType":"YulIdentifier","src":"12508:3:28"},"nativeSrc":"12508:18:28","nodeType":"YulFunctionCall","src":"12508:18:28"},{"kind":"number","nativeSrc":"12528:2:28","nodeType":"YulLiteral","src":"12528:2:28","type":"","value":"44"}],"functionName":{"name":"mstore","nativeSrc":"12501:6:28","nodeType":"YulIdentifier","src":"12501:6:28"},"nativeSrc":"12501:30:28","nodeType":"YulFunctionCall","src":"12501:30:28"},"nativeSrc":"12501:30:28","nodeType":"YulExpressionStatement","src":"12501:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12551:9:28","nodeType":"YulIdentifier","src":"12551:9:28"},{"kind":"number","nativeSrc":"12562:2:28","nodeType":"YulLiteral","src":"12562:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12547:3:28","nodeType":"YulIdentifier","src":"12547:3:28"},"nativeSrc":"12547:18:28","nodeType":"YulFunctionCall","src":"12547:18:28"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nativeSrc":"12567:34:28","nodeType":"YulLiteral","src":"12567:34:28","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nativeSrc":"12540:6:28","nodeType":"YulIdentifier","src":"12540:6:28"},"nativeSrc":"12540:62:28","nodeType":"YulFunctionCall","src":"12540:62:28"},"nativeSrc":"12540:62:28","nodeType":"YulExpressionStatement","src":"12540:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12622:9:28","nodeType":"YulIdentifier","src":"12622:9:28"},{"kind":"number","nativeSrc":"12633:2:28","nodeType":"YulLiteral","src":"12633:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12618:3:28","nodeType":"YulIdentifier","src":"12618:3:28"},"nativeSrc":"12618:18:28","nodeType":"YulFunctionCall","src":"12618:18:28"},{"hexValue":"6163746976652070726f7879","kind":"string","nativeSrc":"12638:14:28","nodeType":"YulLiteral","src":"12638:14:28","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nativeSrc":"12611:6:28","nodeType":"YulIdentifier","src":"12611:6:28"},"nativeSrc":"12611:42:28","nodeType":"YulFunctionCall","src":"12611:42:28"},"nativeSrc":"12611:42:28","nodeType":"YulExpressionStatement","src":"12611:42:28"},{"nativeSrc":"12662:27:28","nodeType":"YulAssignment","src":"12662:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"12674:9:28","nodeType":"YulIdentifier","src":"12674:9:28"},{"kind":"number","nativeSrc":"12685:3:28","nodeType":"YulLiteral","src":"12685:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12670:3:28","nodeType":"YulIdentifier","src":"12670:3:28"},"nativeSrc":"12670:19:28","nodeType":"YulFunctionCall","src":"12670:19:28"},"variableNames":[{"name":"tail","nativeSrc":"12662:4:28","nodeType":"YulIdentifier","src":"12662:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12287:408:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12438:9:28","nodeType":"YulTypedName","src":"12438:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12452:4:28","nodeType":"YulTypedName","src":"12452:4:28","type":""}],"src":"12287:408:28"},{"body":{"nativeSrc":"12732:152:28","nodeType":"YulBlock","src":"12732:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12749:1:28","nodeType":"YulLiteral","src":"12749:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"12752:77:28","nodeType":"YulLiteral","src":"12752:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12742:6:28","nodeType":"YulIdentifier","src":"12742:6:28"},"nativeSrc":"12742:88:28","nodeType":"YulFunctionCall","src":"12742:88:28"},"nativeSrc":"12742:88:28","nodeType":"YulExpressionStatement","src":"12742:88:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12846:1:28","nodeType":"YulLiteral","src":"12846:1:28","type":"","value":"4"},{"kind":"number","nativeSrc":"12849:4:28","nodeType":"YulLiteral","src":"12849:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"12839:6:28","nodeType":"YulIdentifier","src":"12839:6:28"},"nativeSrc":"12839:15:28","nodeType":"YulFunctionCall","src":"12839:15:28"},"nativeSrc":"12839:15:28","nodeType":"YulExpressionStatement","src":"12839:15:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12870:1:28","nodeType":"YulLiteral","src":"12870:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"12873:4:28","nodeType":"YulLiteral","src":"12873:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12863:6:28","nodeType":"YulIdentifier","src":"12863:6:28"},"nativeSrc":"12863:15:28","nodeType":"YulFunctionCall","src":"12863:15:28"},"nativeSrc":"12863:15:28","nodeType":"YulExpressionStatement","src":"12863:15:28"}]},"name":"panic_error_0x32","nativeSrc":"12700:184:28","nodeType":"YulFunctionDefinition","src":"12700:184:28"},{"body":{"nativeSrc":"13063:176:28","nodeType":"YulBlock","src":"13063:176:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13080:9:28","nodeType":"YulIdentifier","src":"13080:9:28"},{"kind":"number","nativeSrc":"13091:2:28","nodeType":"YulLiteral","src":"13091:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"13073:6:28","nodeType":"YulIdentifier","src":"13073:6:28"},"nativeSrc":"13073:21:28","nodeType":"YulFunctionCall","src":"13073:21:28"},"nativeSrc":"13073:21:28","nodeType":"YulExpressionStatement","src":"13073:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13114:9:28","nodeType":"YulIdentifier","src":"13114:9:28"},{"kind":"number","nativeSrc":"13125:2:28","nodeType":"YulLiteral","src":"13125:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13110:3:28","nodeType":"YulIdentifier","src":"13110:3:28"},"nativeSrc":"13110:18:28","nodeType":"YulFunctionCall","src":"13110:18:28"},{"kind":"number","nativeSrc":"13130:2:28","nodeType":"YulLiteral","src":"13130:2:28","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"13103:6:28","nodeType":"YulIdentifier","src":"13103:6:28"},"nativeSrc":"13103:30:28","nodeType":"YulFunctionCall","src":"13103:30:28"},"nativeSrc":"13103:30:28","nodeType":"YulExpressionStatement","src":"13103:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13153:9:28","nodeType":"YulIdentifier","src":"13153:9:28"},{"kind":"number","nativeSrc":"13164:2:28","nodeType":"YulLiteral","src":"13164:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13149:3:28","nodeType":"YulIdentifier","src":"13149:3:28"},"nativeSrc":"13149:18:28","nodeType":"YulFunctionCall","src":"13149:18:28"},{"hexValue":"526561736f6e20636f646520616c726561647920657869737473","kind":"string","nativeSrc":"13169:28:28","nodeType":"YulLiteral","src":"13169:28:28","type":"","value":"Reason code already exists"}],"functionName":{"name":"mstore","nativeSrc":"13142:6:28","nodeType":"YulIdentifier","src":"13142:6:28"},"nativeSrc":"13142:56:28","nodeType":"YulFunctionCall","src":"13142:56:28"},"nativeSrc":"13142:56:28","nodeType":"YulExpressionStatement","src":"13142:56:28"},{"nativeSrc":"13207:26:28","nodeType":"YulAssignment","src":"13207:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"13219:9:28","nodeType":"YulIdentifier","src":"13219:9:28"},{"kind":"number","nativeSrc":"13230:2:28","nodeType":"YulLiteral","src":"13230:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13215:3:28","nodeType":"YulIdentifier","src":"13215:3:28"},"nativeSrc":"13215:18:28","nodeType":"YulFunctionCall","src":"13215:18:28"},"variableNames":[{"name":"tail","nativeSrc":"13207:4:28","nodeType":"YulIdentifier","src":"13207:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12889:350:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13040:9:28","nodeType":"YulTypedName","src":"13040:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13054:4:28","nodeType":"YulTypedName","src":"13054:4:28","type":""}],"src":"12889:350:28"},{"body":{"nativeSrc":"13291:148:28","nodeType":"YulBlock","src":"13291:148:28","statements":[{"body":{"nativeSrc":"13382:22:28","nodeType":"YulBlock","src":"13382:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13384:16:28","nodeType":"YulIdentifier","src":"13384:16:28"},"nativeSrc":"13384:18:28","nodeType":"YulFunctionCall","src":"13384:18:28"},"nativeSrc":"13384:18:28","nodeType":"YulExpressionStatement","src":"13384:18:28"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"13307:5:28","nodeType":"YulIdentifier","src":"13307:5:28"},{"kind":"number","nativeSrc":"13314:66:28","nodeType":"YulLiteral","src":"13314:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"13304:2:28","nodeType":"YulIdentifier","src":"13304:2:28"},"nativeSrc":"13304:77:28","nodeType":"YulFunctionCall","src":"13304:77:28"},"nativeSrc":"13301:103:28","nodeType":"YulIf","src":"13301:103:28"},{"nativeSrc":"13413:20:28","nodeType":"YulAssignment","src":"13413:20:28","value":{"arguments":[{"name":"value","nativeSrc":"13424:5:28","nodeType":"YulIdentifier","src":"13424:5:28"},{"kind":"number","nativeSrc":"13431:1:28","nodeType":"YulLiteral","src":"13431:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13420:3:28","nodeType":"YulIdentifier","src":"13420:3:28"},"nativeSrc":"13420:13:28","nodeType":"YulFunctionCall","src":"13420:13:28"},"variableNames":[{"name":"ret","nativeSrc":"13413:3:28","nodeType":"YulIdentifier","src":"13413:3:28"}]}]},"name":"increment_t_uint256","nativeSrc":"13244:195:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13273:5:28","nodeType":"YulTypedName","src":"13273:5:28","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"13283:3:28","nodeType":"YulTypedName","src":"13283:3:28","type":""}],"src":"13244:195:28"},{"body":{"nativeSrc":"13595:481:28","nodeType":"YulBlock","src":"13595:481:28","statements":[{"nativeSrc":"13605:12:28","nodeType":"YulVariableDeclaration","src":"13605:12:28","value":{"kind":"number","nativeSrc":"13615:2:28","nodeType":"YulLiteral","src":"13615:2:28","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"13609:2:28","nodeType":"YulTypedName","src":"13609:2:28","type":""}]},{"nativeSrc":"13626:32:28","nodeType":"YulVariableDeclaration","src":"13626:32:28","value":{"arguments":[{"name":"headStart","nativeSrc":"13644:9:28","nodeType":"YulIdentifier","src":"13644:9:28"},{"name":"_1","nativeSrc":"13655:2:28","nodeType":"YulIdentifier","src":"13655:2:28"}],"functionName":{"name":"add","nativeSrc":"13640:3:28","nodeType":"YulIdentifier","src":"13640:3:28"},"nativeSrc":"13640:18:28","nodeType":"YulFunctionCall","src":"13640:18:28"},"variables":[{"name":"tail_1","nativeSrc":"13630:6:28","nodeType":"YulTypedName","src":"13630:6:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13674:9:28","nodeType":"YulIdentifier","src":"13674:9:28"},{"name":"_1","nativeSrc":"13685:2:28","nodeType":"YulIdentifier","src":"13685:2:28"}],"functionName":{"name":"mstore","nativeSrc":"13667:6:28","nodeType":"YulIdentifier","src":"13667:6:28"},"nativeSrc":"13667:21:28","nodeType":"YulFunctionCall","src":"13667:21:28"},"nativeSrc":"13667:21:28","nodeType":"YulExpressionStatement","src":"13667:21:28"},{"nativeSrc":"13697:17:28","nodeType":"YulVariableDeclaration","src":"13697:17:28","value":{"name":"tail_1","nativeSrc":"13708:6:28","nodeType":"YulIdentifier","src":"13708:6:28"},"variables":[{"name":"pos","nativeSrc":"13701:3:28","nodeType":"YulTypedName","src":"13701:3:28","type":""}]},{"nativeSrc":"13723:27:28","nodeType":"YulVariableDeclaration","src":"13723:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"13743:6:28","nodeType":"YulIdentifier","src":"13743:6:28"}],"functionName":{"name":"mload","nativeSrc":"13737:5:28","nodeType":"YulIdentifier","src":"13737:5:28"},"nativeSrc":"13737:13:28","nodeType":"YulFunctionCall","src":"13737:13:28"},"variables":[{"name":"length","nativeSrc":"13727:6:28","nodeType":"YulTypedName","src":"13727:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"13766:6:28","nodeType":"YulIdentifier","src":"13766:6:28"},{"name":"length","nativeSrc":"13774:6:28","nodeType":"YulIdentifier","src":"13774:6:28"}],"functionName":{"name":"mstore","nativeSrc":"13759:6:28","nodeType":"YulIdentifier","src":"13759:6:28"},"nativeSrc":"13759:22:28","nodeType":"YulFunctionCall","src":"13759:22:28"},"nativeSrc":"13759:22:28","nodeType":"YulExpressionStatement","src":"13759:22:28"},{"nativeSrc":"13790:25:28","nodeType":"YulAssignment","src":"13790:25:28","value":{"arguments":[{"name":"headStart","nativeSrc":"13801:9:28","nodeType":"YulIdentifier","src":"13801:9:28"},{"kind":"number","nativeSrc":"13812:2:28","nodeType":"YulLiteral","src":"13812:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13797:3:28","nodeType":"YulIdentifier","src":"13797:3:28"},"nativeSrc":"13797:18:28","nodeType":"YulFunctionCall","src":"13797:18:28"},"variableNames":[{"name":"pos","nativeSrc":"13790:3:28","nodeType":"YulIdentifier","src":"13790:3:28"}]},{"nativeSrc":"13824:29:28","nodeType":"YulVariableDeclaration","src":"13824:29:28","value":{"arguments":[{"name":"value0","nativeSrc":"13842:6:28","nodeType":"YulIdentifier","src":"13842:6:28"},{"name":"_1","nativeSrc":"13850:2:28","nodeType":"YulIdentifier","src":"13850:2:28"}],"functionName":{"name":"add","nativeSrc":"13838:3:28","nodeType":"YulIdentifier","src":"13838:3:28"},"nativeSrc":"13838:15:28","nodeType":"YulFunctionCall","src":"13838:15:28"},"variables":[{"name":"srcPtr","nativeSrc":"13828:6:28","nodeType":"YulTypedName","src":"13828:6:28","type":""}]},{"nativeSrc":"13862:10:28","nodeType":"YulVariableDeclaration","src":"13862:10:28","value":{"kind":"number","nativeSrc":"13871:1:28","nodeType":"YulLiteral","src":"13871:1:28","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"13866:1:28","nodeType":"YulTypedName","src":"13866:1:28","type":""}]},{"body":{"nativeSrc":"13930:120:28","nodeType":"YulBlock","src":"13930:120:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13951:3:28","nodeType":"YulIdentifier","src":"13951:3:28"},{"arguments":[{"name":"srcPtr","nativeSrc":"13962:6:28","nodeType":"YulIdentifier","src":"13962:6:28"}],"functionName":{"name":"mload","nativeSrc":"13956:5:28","nodeType":"YulIdentifier","src":"13956:5:28"},"nativeSrc":"13956:13:28","nodeType":"YulFunctionCall","src":"13956:13:28"}],"functionName":{"name":"mstore","nativeSrc":"13944:6:28","nodeType":"YulIdentifier","src":"13944:6:28"},"nativeSrc":"13944:26:28","nodeType":"YulFunctionCall","src":"13944:26:28"},"nativeSrc":"13944:26:28","nodeType":"YulExpressionStatement","src":"13944:26:28"},{"nativeSrc":"13983:19:28","nodeType":"YulAssignment","src":"13983:19:28","value":{"arguments":[{"name":"pos","nativeSrc":"13994:3:28","nodeType":"YulIdentifier","src":"13994:3:28"},{"name":"_1","nativeSrc":"13999:2:28","nodeType":"YulIdentifier","src":"13999:2:28"}],"functionName":{"name":"add","nativeSrc":"13990:3:28","nodeType":"YulIdentifier","src":"13990:3:28"},"nativeSrc":"13990:12:28","nodeType":"YulFunctionCall","src":"13990:12:28"},"variableNames":[{"name":"pos","nativeSrc":"13983:3:28","nodeType":"YulIdentifier","src":"13983:3:28"}]},{"nativeSrc":"14015:25:28","nodeType":"YulAssignment","src":"14015:25:28","value":{"arguments":[{"name":"srcPtr","nativeSrc":"14029:6:28","nodeType":"YulIdentifier","src":"14029:6:28"},{"name":"_1","nativeSrc":"14037:2:28","nodeType":"YulIdentifier","src":"14037:2:28"}],"functionName":{"name":"add","nativeSrc":"14025:3:28","nodeType":"YulIdentifier","src":"14025:3:28"},"nativeSrc":"14025:15:28","nodeType":"YulFunctionCall","src":"14025:15:28"},"variableNames":[{"name":"srcPtr","nativeSrc":"14015:6:28","nodeType":"YulIdentifier","src":"14015:6:28"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"13892:1:28","nodeType":"YulIdentifier","src":"13892:1:28"},{"name":"length","nativeSrc":"13895:6:28","nodeType":"YulIdentifier","src":"13895:6:28"}],"functionName":{"name":"lt","nativeSrc":"13889:2:28","nodeType":"YulIdentifier","src":"13889:2:28"},"nativeSrc":"13889:13:28","nodeType":"YulFunctionCall","src":"13889:13:28"},"nativeSrc":"13881:169:28","nodeType":"YulForLoop","post":{"nativeSrc":"13903:18:28","nodeType":"YulBlock","src":"13903:18:28","statements":[{"nativeSrc":"13905:14:28","nodeType":"YulAssignment","src":"13905:14:28","value":{"arguments":[{"name":"i","nativeSrc":"13914:1:28","nodeType":"YulIdentifier","src":"13914:1:28"},{"kind":"number","nativeSrc":"13917:1:28","nodeType":"YulLiteral","src":"13917:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13910:3:28","nodeType":"YulIdentifier","src":"13910:3:28"},"nativeSrc":"13910:9:28","nodeType":"YulFunctionCall","src":"13910:9:28"},"variableNames":[{"name":"i","nativeSrc":"13905:1:28","nodeType":"YulIdentifier","src":"13905:1:28"}]}]},"pre":{"nativeSrc":"13885:3:28","nodeType":"YulBlock","src":"13885:3:28","statements":[]},"src":"13881:169:28"},{"nativeSrc":"14059:11:28","nodeType":"YulAssignment","src":"14059:11:28","value":{"name":"pos","nativeSrc":"14067:3:28","nodeType":"YulIdentifier","src":"14067:3:28"},"variableNames":[{"name":"tail","nativeSrc":"14059:4:28","nodeType":"YulIdentifier","src":"14059:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"13444:632:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13564:9:28","nodeType":"YulTypedName","src":"13564:9:28","type":""},{"name":"value0","nativeSrc":"13575:6:28","nodeType":"YulTypedName","src":"13575:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13586:4:28","nodeType":"YulTypedName","src":"13586:4:28","type":""}],"src":"13444:632:28"},{"body":{"nativeSrc":"14255:236:28","nodeType":"YulBlock","src":"14255:236:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14272:9:28","nodeType":"YulIdentifier","src":"14272:9:28"},{"kind":"number","nativeSrc":"14283:2:28","nodeType":"YulLiteral","src":"14283:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14265:6:28","nodeType":"YulIdentifier","src":"14265:6:28"},"nativeSrc":"14265:21:28","nodeType":"YulFunctionCall","src":"14265:21:28"},"nativeSrc":"14265:21:28","nodeType":"YulExpressionStatement","src":"14265:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14306:9:28","nodeType":"YulIdentifier","src":"14306:9:28"},{"kind":"number","nativeSrc":"14317:2:28","nodeType":"YulLiteral","src":"14317:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14302:3:28","nodeType":"YulIdentifier","src":"14302:3:28"},"nativeSrc":"14302:18:28","nodeType":"YulFunctionCall","src":"14302:18:28"},{"kind":"number","nativeSrc":"14322:2:28","nodeType":"YulLiteral","src":"14322:2:28","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"14295:6:28","nodeType":"YulIdentifier","src":"14295:6:28"},"nativeSrc":"14295:30:28","nodeType":"YulFunctionCall","src":"14295:30:28"},"nativeSrc":"14295:30:28","nodeType":"YulExpressionStatement","src":"14295:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14345:9:28","nodeType":"YulIdentifier","src":"14345:9:28"},{"kind":"number","nativeSrc":"14356:2:28","nodeType":"YulLiteral","src":"14356:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14341:3:28","nodeType":"YulIdentifier","src":"14341:3:28"},"nativeSrc":"14341:18:28","nodeType":"YulFunctionCall","src":"14341:18:28"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nativeSrc":"14361:34:28","nodeType":"YulLiteral","src":"14361:34:28","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nativeSrc":"14334:6:28","nodeType":"YulIdentifier","src":"14334:6:28"},"nativeSrc":"14334:62:28","nodeType":"YulFunctionCall","src":"14334:62:28"},"nativeSrc":"14334:62:28","nodeType":"YulExpressionStatement","src":"14334:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14416:9:28","nodeType":"YulIdentifier","src":"14416:9:28"},{"kind":"number","nativeSrc":"14427:2:28","nodeType":"YulLiteral","src":"14427:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14412:3:28","nodeType":"YulIdentifier","src":"14412:3:28"},"nativeSrc":"14412:18:28","nodeType":"YulFunctionCall","src":"14412:18:28"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nativeSrc":"14432:16:28","nodeType":"YulLiteral","src":"14432:16:28","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nativeSrc":"14405:6:28","nodeType":"YulIdentifier","src":"14405:6:28"},"nativeSrc":"14405:44:28","nodeType":"YulFunctionCall","src":"14405:44:28"},"nativeSrc":"14405:44:28","nodeType":"YulExpressionStatement","src":"14405:44:28"},{"nativeSrc":"14458:27:28","nodeType":"YulAssignment","src":"14458:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"14470:9:28","nodeType":"YulIdentifier","src":"14470:9:28"},{"kind":"number","nativeSrc":"14481:3:28","nodeType":"YulLiteral","src":"14481:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14466:3:28","nodeType":"YulIdentifier","src":"14466:3:28"},"nativeSrc":"14466:19:28","nodeType":"YulFunctionCall","src":"14466:19:28"},"variableNames":[{"name":"tail","nativeSrc":"14458:4:28","nodeType":"YulIdentifier","src":"14458:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14081:410:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14232:9:28","nodeType":"YulTypedName","src":"14232:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14246:4:28","nodeType":"YulTypedName","src":"14246:4:28","type":""}],"src":"14081:410:28"},{"body":{"nativeSrc":"14670:178:28","nodeType":"YulBlock","src":"14670:178:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14687:9:28","nodeType":"YulIdentifier","src":"14687:9:28"},{"kind":"number","nativeSrc":"14698:2:28","nodeType":"YulLiteral","src":"14698:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14680:6:28","nodeType":"YulIdentifier","src":"14680:6:28"},"nativeSrc":"14680:21:28","nodeType":"YulFunctionCall","src":"14680:21:28"},"nativeSrc":"14680:21:28","nodeType":"YulExpressionStatement","src":"14680:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14721:9:28","nodeType":"YulIdentifier","src":"14721:9:28"},{"kind":"number","nativeSrc":"14732:2:28","nodeType":"YulLiteral","src":"14732:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14717:3:28","nodeType":"YulIdentifier","src":"14717:3:28"},"nativeSrc":"14717:18:28","nodeType":"YulFunctionCall","src":"14717:18:28"},{"kind":"number","nativeSrc":"14737:2:28","nodeType":"YulLiteral","src":"14737:2:28","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"14710:6:28","nodeType":"YulIdentifier","src":"14710:6:28"},"nativeSrc":"14710:30:28","nodeType":"YulFunctionCall","src":"14710:30:28"},"nativeSrc":"14710:30:28","nodeType":"YulExpressionStatement","src":"14710:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14760:9:28","nodeType":"YulIdentifier","src":"14760:9:28"},{"kind":"number","nativeSrc":"14771:2:28","nodeType":"YulLiteral","src":"14771:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14756:3:28","nodeType":"YulIdentifier","src":"14756:3:28"},"nativeSrc":"14756:18:28","nodeType":"YulFunctionCall","src":"14756:18:28"},{"hexValue":"4e6f7420612076616c696420436f6e74726163742041646472657373","kind":"string","nativeSrc":"14776:30:28","nodeType":"YulLiteral","src":"14776:30:28","type":"","value":"Not a valid Contract Address"}],"functionName":{"name":"mstore","nativeSrc":"14749:6:28","nodeType":"YulIdentifier","src":"14749:6:28"},"nativeSrc":"14749:58:28","nodeType":"YulFunctionCall","src":"14749:58:28"},"nativeSrc":"14749:58:28","nodeType":"YulExpressionStatement","src":"14749:58:28"},{"nativeSrc":"14816:26:28","nodeType":"YulAssignment","src":"14816:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"14828:9:28","nodeType":"YulIdentifier","src":"14828:9:28"},{"kind":"number","nativeSrc":"14839:2:28","nodeType":"YulLiteral","src":"14839:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14824:3:28","nodeType":"YulIdentifier","src":"14824:3:28"},"nativeSrc":"14824:18:28","nodeType":"YulFunctionCall","src":"14824:18:28"},"variableNames":[{"name":"tail","nativeSrc":"14816:4:28","nodeType":"YulIdentifier","src":"14816:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14496:352:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14647:9:28","nodeType":"YulTypedName","src":"14647:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14661:4:28","nodeType":"YulTypedName","src":"14661:4:28","type":""}],"src":"14496:352:28"},{"body":{"nativeSrc":"15027:175:28","nodeType":"YulBlock","src":"15027:175:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15044:9:28","nodeType":"YulIdentifier","src":"15044:9:28"},{"kind":"number","nativeSrc":"15055:2:28","nodeType":"YulLiteral","src":"15055:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15037:6:28","nodeType":"YulIdentifier","src":"15037:6:28"},"nativeSrc":"15037:21:28","nodeType":"YulFunctionCall","src":"15037:21:28"},"nativeSrc":"15037:21:28","nodeType":"YulExpressionStatement","src":"15037:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15078:9:28","nodeType":"YulIdentifier","src":"15078:9:28"},{"kind":"number","nativeSrc":"15089:2:28","nodeType":"YulLiteral","src":"15089:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15074:3:28","nodeType":"YulIdentifier","src":"15074:3:28"},"nativeSrc":"15074:18:28","nodeType":"YulFunctionCall","src":"15074:18:28"},{"kind":"number","nativeSrc":"15094:2:28","nodeType":"YulLiteral","src":"15094:2:28","type":"","value":"25"}],"functionName":{"name":"mstore","nativeSrc":"15067:6:28","nodeType":"YulIdentifier","src":"15067:6:28"},"nativeSrc":"15067:30:28","nodeType":"YulFunctionCall","src":"15067:30:28"},"nativeSrc":"15067:30:28","nodeType":"YulExpressionStatement","src":"15067:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15117:9:28","nodeType":"YulIdentifier","src":"15117:9:28"},{"kind":"number","nativeSrc":"15128:2:28","nodeType":"YulLiteral","src":"15128:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15113:3:28","nodeType":"YulIdentifier","src":"15113:3:28"},"nativeSrc":"15113:18:28","nodeType":"YulFunctionCall","src":"15113:18:28"},{"hexValue":"4e6f7420612076616c69642041646d696e2041646472657373","kind":"string","nativeSrc":"15133:27:28","nodeType":"YulLiteral","src":"15133:27:28","type":"","value":"Not a valid Admin Address"}],"functionName":{"name":"mstore","nativeSrc":"15106:6:28","nodeType":"YulIdentifier","src":"15106:6:28"},"nativeSrc":"15106:55:28","nodeType":"YulFunctionCall","src":"15106:55:28"},"nativeSrc":"15106:55:28","nodeType":"YulExpressionStatement","src":"15106:55:28"},{"nativeSrc":"15170:26:28","nodeType":"YulAssignment","src":"15170:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"15182:9:28","nodeType":"YulIdentifier","src":"15182:9:28"},{"kind":"number","nativeSrc":"15193:2:28","nodeType":"YulLiteral","src":"15193:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15178:3:28","nodeType":"YulIdentifier","src":"15178:3:28"},"nativeSrc":"15178:18:28","nodeType":"YulFunctionCall","src":"15178:18:28"},"variableNames":[{"name":"tail","nativeSrc":"15170:4:28","nodeType":"YulIdentifier","src":"15170:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14853:349:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15004:9:28","nodeType":"YulTypedName","src":"15004:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15018:4:28","nodeType":"YulTypedName","src":"15018:4:28","type":""}],"src":"14853:349:28"},{"body":{"nativeSrc":"15314:87:28","nodeType":"YulBlock","src":"15314:87:28","statements":[{"nativeSrc":"15324:26:28","nodeType":"YulAssignment","src":"15324:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"15336:9:28","nodeType":"YulIdentifier","src":"15336:9:28"},{"kind":"number","nativeSrc":"15347:2:28","nodeType":"YulLiteral","src":"15347:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15332:3:28","nodeType":"YulIdentifier","src":"15332:3:28"},"nativeSrc":"15332:18:28","nodeType":"YulFunctionCall","src":"15332:18:28"},"variableNames":[{"name":"tail","nativeSrc":"15324:4:28","nodeType":"YulIdentifier","src":"15324:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15366:9:28","nodeType":"YulIdentifier","src":"15366:9:28"},{"arguments":[{"name":"value0","nativeSrc":"15381:6:28","nodeType":"YulIdentifier","src":"15381:6:28"},{"kind":"number","nativeSrc":"15389:4:28","nodeType":"YulLiteral","src":"15389:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"15377:3:28","nodeType":"YulIdentifier","src":"15377:3:28"},"nativeSrc":"15377:17:28","nodeType":"YulFunctionCall","src":"15377:17:28"}],"functionName":{"name":"mstore","nativeSrc":"15359:6:28","nodeType":"YulIdentifier","src":"15359:6:28"},"nativeSrc":"15359:36:28","nodeType":"YulFunctionCall","src":"15359:36:28"},"nativeSrc":"15359:36:28","nodeType":"YulExpressionStatement","src":"15359:36:28"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nativeSrc":"15207:194:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15283:9:28","nodeType":"YulTypedName","src":"15283:9:28","type":""},{"name":"value0","nativeSrc":"15294:6:28","nodeType":"YulTypedName","src":"15294:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15305:4:28","nodeType":"YulTypedName","src":"15305:4:28","type":""}],"src":"15207:194:28"},{"body":{"nativeSrc":"15580:246:28","nodeType":"YulBlock","src":"15580:246:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15597:9:28","nodeType":"YulIdentifier","src":"15597:9:28"},{"kind":"number","nativeSrc":"15608:2:28","nodeType":"YulLiteral","src":"15608:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"15590:6:28","nodeType":"YulIdentifier","src":"15590:6:28"},"nativeSrc":"15590:21:28","nodeType":"YulFunctionCall","src":"15590:21:28"},"nativeSrc":"15590:21:28","nodeType":"YulExpressionStatement","src":"15590:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15631:9:28","nodeType":"YulIdentifier","src":"15631:9:28"},{"kind":"number","nativeSrc":"15642:2:28","nodeType":"YulLiteral","src":"15642:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15627:3:28","nodeType":"YulIdentifier","src":"15627:3:28"},"nativeSrc":"15627:18:28","nodeType":"YulFunctionCall","src":"15627:18:28"},{"kind":"number","nativeSrc":"15647:2:28","nodeType":"YulLiteral","src":"15647:2:28","type":"","value":"56"}],"functionName":{"name":"mstore","nativeSrc":"15620:6:28","nodeType":"YulIdentifier","src":"15620:6:28"},"nativeSrc":"15620:30:28","nodeType":"YulFunctionCall","src":"15620:30:28"},"nativeSrc":"15620:30:28","nodeType":"YulExpressionStatement","src":"15620:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15670:9:28","nodeType":"YulIdentifier","src":"15670:9:28"},{"kind":"number","nativeSrc":"15681:2:28","nodeType":"YulLiteral","src":"15681:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15666:3:28","nodeType":"YulIdentifier","src":"15666:3:28"},"nativeSrc":"15666:18:28","nodeType":"YulFunctionCall","src":"15666:18:28"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nativeSrc":"15686:34:28","nodeType":"YulLiteral","src":"15686:34:28","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nativeSrc":"15659:6:28","nodeType":"YulIdentifier","src":"15659:6:28"},"nativeSrc":"15659:62:28","nodeType":"YulFunctionCall","src":"15659:62:28"},"nativeSrc":"15659:62:28","nodeType":"YulExpressionStatement","src":"15659:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15741:9:28","nodeType":"YulIdentifier","src":"15741:9:28"},{"kind":"number","nativeSrc":"15752:2:28","nodeType":"YulLiteral","src":"15752:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15737:3:28","nodeType":"YulIdentifier","src":"15737:3:28"},"nativeSrc":"15737:18:28","nodeType":"YulFunctionCall","src":"15737:18:28"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nativeSrc":"15757:26:28","nodeType":"YulLiteral","src":"15757:26:28","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nativeSrc":"15730:6:28","nodeType":"YulIdentifier","src":"15730:6:28"},"nativeSrc":"15730:54:28","nodeType":"YulFunctionCall","src":"15730:54:28"},"nativeSrc":"15730:54:28","nodeType":"YulExpressionStatement","src":"15730:54:28"},{"nativeSrc":"15793:27:28","nodeType":"YulAssignment","src":"15793:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"15805:9:28","nodeType":"YulIdentifier","src":"15805:9:28"},{"kind":"number","nativeSrc":"15816:3:28","nodeType":"YulLiteral","src":"15816:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15801:3:28","nodeType":"YulIdentifier","src":"15801:3:28"},"nativeSrc":"15801:19:28","nodeType":"YulFunctionCall","src":"15801:19:28"},"variableNames":[{"name":"tail","nativeSrc":"15793:4:28","nodeType":"YulIdentifier","src":"15793:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15406:420:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15557:9:28","nodeType":"YulTypedName","src":"15557:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15571:4:28","nodeType":"YulTypedName","src":"15571:4:28","type":""}],"src":"15406:420:28"},{"body":{"nativeSrc":"16005:168:28","nodeType":"YulBlock","src":"16005:168:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16022:9:28","nodeType":"YulIdentifier","src":"16022:9:28"},{"kind":"number","nativeSrc":"16033:2:28","nodeType":"YulLiteral","src":"16033:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16015:6:28","nodeType":"YulIdentifier","src":"16015:6:28"},"nativeSrc":"16015:21:28","nodeType":"YulFunctionCall","src":"16015:21:28"},"nativeSrc":"16015:21:28","nodeType":"YulExpressionStatement","src":"16015:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16056:9:28","nodeType":"YulIdentifier","src":"16056:9:28"},{"kind":"number","nativeSrc":"16067:2:28","nodeType":"YulLiteral","src":"16067:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16052:3:28","nodeType":"YulIdentifier","src":"16052:3:28"},"nativeSrc":"16052:18:28","nodeType":"YulFunctionCall","src":"16052:18:28"},{"kind":"number","nativeSrc":"16072:2:28","nodeType":"YulLiteral","src":"16072:2:28","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"16045:6:28","nodeType":"YulIdentifier","src":"16045:6:28"},"nativeSrc":"16045:30:28","nodeType":"YulFunctionCall","src":"16045:30:28"},"nativeSrc":"16045:30:28","nodeType":"YulExpressionStatement","src":"16045:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16095:9:28","nodeType":"YulIdentifier","src":"16095:9:28"},{"kind":"number","nativeSrc":"16106:2:28","nodeType":"YulLiteral","src":"16106:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16091:3:28","nodeType":"YulIdentifier","src":"16091:3:28"},"nativeSrc":"16091:18:28","nodeType":"YulFunctionCall","src":"16091:18:28"},{"hexValue":"536561736f6e20616c726561647920736574","kind":"string","nativeSrc":"16111:20:28","nodeType":"YulLiteral","src":"16111:20:28","type":"","value":"Season already set"}],"functionName":{"name":"mstore","nativeSrc":"16084:6:28","nodeType":"YulIdentifier","src":"16084:6:28"},"nativeSrc":"16084:48:28","nodeType":"YulFunctionCall","src":"16084:48:28"},"nativeSrc":"16084:48:28","nodeType":"YulExpressionStatement","src":"16084:48:28"},{"nativeSrc":"16141:26:28","nodeType":"YulAssignment","src":"16141:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"16153:9:28","nodeType":"YulIdentifier","src":"16153:9:28"},{"kind":"number","nativeSrc":"16164:2:28","nodeType":"YulLiteral","src":"16164:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16149:3:28","nodeType":"YulIdentifier","src":"16149:3:28"},"nativeSrc":"16149:18:28","nodeType":"YulFunctionCall","src":"16149:18:28"},"variableNames":[{"name":"tail","nativeSrc":"16141:4:28","nodeType":"YulIdentifier","src":"16141:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15831:342:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15982:9:28","nodeType":"YulTypedName","src":"15982:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15996:4:28","nodeType":"YulTypedName","src":"15996:4:28","type":""}],"src":"15831:342:28"},{"body":{"nativeSrc":"16352:176:28","nodeType":"YulBlock","src":"16352:176:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16369:9:28","nodeType":"YulIdentifier","src":"16369:9:28"},{"kind":"number","nativeSrc":"16380:2:28","nodeType":"YulLiteral","src":"16380:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16362:6:28","nodeType":"YulIdentifier","src":"16362:6:28"},"nativeSrc":"16362:21:28","nodeType":"YulFunctionCall","src":"16362:21:28"},"nativeSrc":"16362:21:28","nodeType":"YulExpressionStatement","src":"16362:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16403:9:28","nodeType":"YulIdentifier","src":"16403:9:28"},{"kind":"number","nativeSrc":"16414:2:28","nodeType":"YulLiteral","src":"16414:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16399:3:28","nodeType":"YulIdentifier","src":"16399:3:28"},"nativeSrc":"16399:18:28","nodeType":"YulFunctionCall","src":"16399:18:28"},{"kind":"number","nativeSrc":"16419:2:28","nodeType":"YulLiteral","src":"16419:2:28","type":"","value":"26"}],"functionName":{"name":"mstore","nativeSrc":"16392:6:28","nodeType":"YulIdentifier","src":"16392:6:28"},"nativeSrc":"16392:30:28","nodeType":"YulFunctionCall","src":"16392:30:28"},"nativeSrc":"16392:30:28","nodeType":"YulExpressionStatement","src":"16392:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16442:9:28","nodeType":"YulIdentifier","src":"16442:9:28"},{"kind":"number","nativeSrc":"16453:2:28","nodeType":"YulLiteral","src":"16453:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16438:3:28","nodeType":"YulIdentifier","src":"16438:3:28"},"nativeSrc":"16438:18:28","nodeType":"YulFunctionCall","src":"16438:18:28"},{"hexValue":"526561736f6e20636f646520646f6573206e6f74206578697374","kind":"string","nativeSrc":"16458:28:28","nodeType":"YulLiteral","src":"16458:28:28","type":"","value":"Reason code does not exist"}],"functionName":{"name":"mstore","nativeSrc":"16431:6:28","nodeType":"YulIdentifier","src":"16431:6:28"},"nativeSrc":"16431:56:28","nodeType":"YulFunctionCall","src":"16431:56:28"},"nativeSrc":"16431:56:28","nodeType":"YulExpressionStatement","src":"16431:56:28"},{"nativeSrc":"16496:26:28","nodeType":"YulAssignment","src":"16496:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"16508:9:28","nodeType":"YulIdentifier","src":"16508:9:28"},{"kind":"number","nativeSrc":"16519:2:28","nodeType":"YulLiteral","src":"16519:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16504:3:28","nodeType":"YulIdentifier","src":"16504:3:28"},"nativeSrc":"16504:18:28","nodeType":"YulFunctionCall","src":"16504:18:28"},"variableNames":[{"name":"tail","nativeSrc":"16496:4:28","nodeType":"YulIdentifier","src":"16496:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad26fe53f2fca31247987ef6a4af0496ee097218b3387432e3c6fed944f205a4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16178:350:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16329:9:28","nodeType":"YulTypedName","src":"16329:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16343:4:28","nodeType":"YulTypedName","src":"16343:4:28","type":""}],"src":"16178:350:28"},{"body":{"nativeSrc":"16614:170:28","nodeType":"YulBlock","src":"16614:170:28","statements":[{"body":{"nativeSrc":"16660:16:28","nodeType":"YulBlock","src":"16660:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16669:1:28","nodeType":"YulLiteral","src":"16669:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"16672:1:28","nodeType":"YulLiteral","src":"16672:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16662:6:28","nodeType":"YulIdentifier","src":"16662:6:28"},"nativeSrc":"16662:12:28","nodeType":"YulFunctionCall","src":"16662:12:28"},"nativeSrc":"16662:12:28","nodeType":"YulExpressionStatement","src":"16662:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16635:7:28","nodeType":"YulIdentifier","src":"16635:7:28"},{"name":"headStart","nativeSrc":"16644:9:28","nodeType":"YulIdentifier","src":"16644:9:28"}],"functionName":{"name":"sub","nativeSrc":"16631:3:28","nodeType":"YulIdentifier","src":"16631:3:28"},"nativeSrc":"16631:23:28","nodeType":"YulFunctionCall","src":"16631:23:28"},{"kind":"number","nativeSrc":"16656:2:28","nodeType":"YulLiteral","src":"16656:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16627:3:28","nodeType":"YulIdentifier","src":"16627:3:28"},"nativeSrc":"16627:32:28","nodeType":"YulFunctionCall","src":"16627:32:28"},"nativeSrc":"16624:52:28","nodeType":"YulIf","src":"16624:52:28"},{"nativeSrc":"16685:29:28","nodeType":"YulVariableDeclaration","src":"16685:29:28","value":{"arguments":[{"name":"headStart","nativeSrc":"16704:9:28","nodeType":"YulIdentifier","src":"16704:9:28"}],"functionName":{"name":"mload","nativeSrc":"16698:5:28","nodeType":"YulIdentifier","src":"16698:5:28"},"nativeSrc":"16698:16:28","nodeType":"YulFunctionCall","src":"16698:16:28"},"variables":[{"name":"value","nativeSrc":"16689:5:28","nodeType":"YulTypedName","src":"16689:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16748:5:28","nodeType":"YulIdentifier","src":"16748:5:28"}],"functionName":{"name":"validator_revert_address","nativeSrc":"16723:24:28","nodeType":"YulIdentifier","src":"16723:24:28"},"nativeSrc":"16723:31:28","nodeType":"YulFunctionCall","src":"16723:31:28"},"nativeSrc":"16723:31:28","nodeType":"YulExpressionStatement","src":"16723:31:28"},{"nativeSrc":"16763:15:28","nodeType":"YulAssignment","src":"16763:15:28","value":{"name":"value","nativeSrc":"16773:5:28","nodeType":"YulIdentifier","src":"16773:5:28"},"variableNames":[{"name":"value0","nativeSrc":"16763:6:28","nodeType":"YulIdentifier","src":"16763:6:28"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"16533:251:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16580:9:28","nodeType":"YulTypedName","src":"16580:9:28","type":""},{"name":"dataEnd","nativeSrc":"16591:7:28","nodeType":"YulTypedName","src":"16591:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16603:6:28","nodeType":"YulTypedName","src":"16603:6:28","type":""}],"src":"16533:251:28"},{"body":{"nativeSrc":"16963:173:28","nodeType":"YulBlock","src":"16963:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"16980:9:28","nodeType":"YulIdentifier","src":"16980:9:28"},{"kind":"number","nativeSrc":"16991:2:28","nodeType":"YulLiteral","src":"16991:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"16973:6:28","nodeType":"YulIdentifier","src":"16973:6:28"},"nativeSrc":"16973:21:28","nodeType":"YulFunctionCall","src":"16973:21:28"},"nativeSrc":"16973:21:28","nodeType":"YulExpressionStatement","src":"16973:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17014:9:28","nodeType":"YulIdentifier","src":"17014:9:28"},{"kind":"number","nativeSrc":"17025:2:28","nodeType":"YulLiteral","src":"17025:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17010:3:28","nodeType":"YulIdentifier","src":"17010:3:28"},"nativeSrc":"17010:18:28","nodeType":"YulFunctionCall","src":"17010:18:28"},{"kind":"number","nativeSrc":"17030:2:28","nodeType":"YulLiteral","src":"17030:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"17003:6:28","nodeType":"YulIdentifier","src":"17003:6:28"},"nativeSrc":"17003:30:28","nodeType":"YulFunctionCall","src":"17003:30:28"},"nativeSrc":"17003:30:28","nodeType":"YulExpressionStatement","src":"17003:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17053:9:28","nodeType":"YulIdentifier","src":"17053:9:28"},{"kind":"number","nativeSrc":"17064:2:28","nodeType":"YulLiteral","src":"17064:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17049:3:28","nodeType":"YulIdentifier","src":"17049:3:28"},"nativeSrc":"17049:18:28","nodeType":"YulFunctionCall","src":"17049:18:28"},{"hexValue":"53656e646572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"17069:25:28","nodeType":"YulLiteral","src":"17069:25:28","type":"","value":"Sender is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"17042:6:28","nodeType":"YulIdentifier","src":"17042:6:28"},"nativeSrc":"17042:53:28","nodeType":"YulFunctionCall","src":"17042:53:28"},"nativeSrc":"17042:53:28","nodeType":"YulExpressionStatement","src":"17042:53:28"},{"nativeSrc":"17104:26:28","nodeType":"YulAssignment","src":"17104:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"17116:9:28","nodeType":"YulIdentifier","src":"17116:9:28"},{"kind":"number","nativeSrc":"17127:2:28","nodeType":"YulLiteral","src":"17127:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17112:3:28","nodeType":"YulIdentifier","src":"17112:3:28"},"nativeSrc":"17112:18:28","nodeType":"YulFunctionCall","src":"17112:18:28"},"variableNames":[{"name":"tail","nativeSrc":"17104:4:28","nodeType":"YulIdentifier","src":"17104:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16789:347:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16940:9:28","nodeType":"YulTypedName","src":"16940:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16954:4:28","nodeType":"YulTypedName","src":"16954:4:28","type":""}],"src":"16789:347:28"},{"body":{"nativeSrc":"17361:160:28","nodeType":"YulBlock","src":"17361:160:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"17378:3:28","nodeType":"YulIdentifier","src":"17378:3:28"},{"kind":"number","nativeSrc":"17383:66:28","nodeType":"YulLiteral","src":"17383:66:28","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"}],"functionName":{"name":"mstore","nativeSrc":"17371:6:28","nodeType":"YulIdentifier","src":"17371:6:28"},"nativeSrc":"17371:79:28","nodeType":"YulFunctionCall","src":"17371:79:28"},"nativeSrc":"17371:79:28","nodeType":"YulExpressionStatement","src":"17371:79:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"17470:3:28","nodeType":"YulIdentifier","src":"17470:3:28"},{"kind":"number","nativeSrc":"17475:2:28","nodeType":"YulLiteral","src":"17475:2:28","type":"","value":"28"}],"functionName":{"name":"add","nativeSrc":"17466:3:28","nodeType":"YulIdentifier","src":"17466:3:28"},"nativeSrc":"17466:12:28","nodeType":"YulFunctionCall","src":"17466:12:28"},{"name":"value0","nativeSrc":"17480:6:28","nodeType":"YulIdentifier","src":"17480:6:28"}],"functionName":{"name":"mstore","nativeSrc":"17459:6:28","nodeType":"YulIdentifier","src":"17459:6:28"},"nativeSrc":"17459:28:28","nodeType":"YulFunctionCall","src":"17459:28:28"},"nativeSrc":"17459:28:28","nodeType":"YulExpressionStatement","src":"17459:28:28"},{"nativeSrc":"17496:19:28","nodeType":"YulAssignment","src":"17496:19:28","value":{"arguments":[{"name":"pos","nativeSrc":"17507:3:28","nodeType":"YulIdentifier","src":"17507:3:28"},{"kind":"number","nativeSrc":"17512:2:28","nodeType":"YulLiteral","src":"17512:2:28","type":"","value":"60"}],"functionName":{"name":"add","nativeSrc":"17503:3:28","nodeType":"YulIdentifier","src":"17503:3:28"},"nativeSrc":"17503:12:28","nodeType":"YulFunctionCall","src":"17503:12:28"},"variableNames":[{"name":"end","nativeSrc":"17496:3:28","nodeType":"YulIdentifier","src":"17496:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"17141:380:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17337:3:28","nodeType":"YulTypedName","src":"17337:3:28","type":""},{"name":"value0","nativeSrc":"17342:6:28","nodeType":"YulTypedName","src":"17342:6:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17353:3:28","nodeType":"YulTypedName","src":"17353:3:28","type":""}],"src":"17141:380:28"},{"body":{"nativeSrc":"17707:217:28","nodeType":"YulBlock","src":"17707:217:28","statements":[{"nativeSrc":"17717:27:28","nodeType":"YulAssignment","src":"17717:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"17729:9:28","nodeType":"YulIdentifier","src":"17729:9:28"},{"kind":"number","nativeSrc":"17740:3:28","nodeType":"YulLiteral","src":"17740:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"17725:3:28","nodeType":"YulIdentifier","src":"17725:3:28"},"nativeSrc":"17725:19:28","nodeType":"YulFunctionCall","src":"17725:19:28"},"variableNames":[{"name":"tail","nativeSrc":"17717:4:28","nodeType":"YulIdentifier","src":"17717:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"17760:9:28","nodeType":"YulIdentifier","src":"17760:9:28"},{"name":"value0","nativeSrc":"17771:6:28","nodeType":"YulIdentifier","src":"17771:6:28"}],"functionName":{"name":"mstore","nativeSrc":"17753:6:28","nodeType":"YulIdentifier","src":"17753:6:28"},"nativeSrc":"17753:25:28","nodeType":"YulFunctionCall","src":"17753:25:28"},"nativeSrc":"17753:25:28","nodeType":"YulExpressionStatement","src":"17753:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17798:9:28","nodeType":"YulIdentifier","src":"17798:9:28"},{"kind":"number","nativeSrc":"17809:2:28","nodeType":"YulLiteral","src":"17809:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17794:3:28","nodeType":"YulIdentifier","src":"17794:3:28"},"nativeSrc":"17794:18:28","nodeType":"YulFunctionCall","src":"17794:18:28"},{"arguments":[{"name":"value1","nativeSrc":"17818:6:28","nodeType":"YulIdentifier","src":"17818:6:28"},{"kind":"number","nativeSrc":"17826:4:28","nodeType":"YulLiteral","src":"17826:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"17814:3:28","nodeType":"YulIdentifier","src":"17814:3:28"},"nativeSrc":"17814:17:28","nodeType":"YulFunctionCall","src":"17814:17:28"}],"functionName":{"name":"mstore","nativeSrc":"17787:6:28","nodeType":"YulIdentifier","src":"17787:6:28"},"nativeSrc":"17787:45:28","nodeType":"YulFunctionCall","src":"17787:45:28"},"nativeSrc":"17787:45:28","nodeType":"YulExpressionStatement","src":"17787:45:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17852:9:28","nodeType":"YulIdentifier","src":"17852:9:28"},{"kind":"number","nativeSrc":"17863:2:28","nodeType":"YulLiteral","src":"17863:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17848:3:28","nodeType":"YulIdentifier","src":"17848:3:28"},"nativeSrc":"17848:18:28","nodeType":"YulFunctionCall","src":"17848:18:28"},{"name":"value2","nativeSrc":"17868:6:28","nodeType":"YulIdentifier","src":"17868:6:28"}],"functionName":{"name":"mstore","nativeSrc":"17841:6:28","nodeType":"YulIdentifier","src":"17841:6:28"},"nativeSrc":"17841:34:28","nodeType":"YulFunctionCall","src":"17841:34:28"},"nativeSrc":"17841:34:28","nodeType":"YulExpressionStatement","src":"17841:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17895:9:28","nodeType":"YulIdentifier","src":"17895:9:28"},{"kind":"number","nativeSrc":"17906:2:28","nodeType":"YulLiteral","src":"17906:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"17891:3:28","nodeType":"YulIdentifier","src":"17891:3:28"},"nativeSrc":"17891:18:28","nodeType":"YulFunctionCall","src":"17891:18:28"},{"name":"value3","nativeSrc":"17911:6:28","nodeType":"YulIdentifier","src":"17911:6:28"}],"functionName":{"name":"mstore","nativeSrc":"17884:6:28","nodeType":"YulIdentifier","src":"17884:6:28"},"nativeSrc":"17884:34:28","nodeType":"YulFunctionCall","src":"17884:34:28"},"nativeSrc":"17884:34:28","nodeType":"YulExpressionStatement","src":"17884:34:28"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"17526:398:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17652:9:28","nodeType":"YulTypedName","src":"17652:9:28","type":""},{"name":"value3","nativeSrc":"17663:6:28","nodeType":"YulTypedName","src":"17663:6:28","type":""},{"name":"value2","nativeSrc":"17671:6:28","nodeType":"YulTypedName","src":"17671:6:28","type":""},{"name":"value1","nativeSrc":"17679:6:28","nodeType":"YulTypedName","src":"17679:6:28","type":""},{"name":"value0","nativeSrc":"17687:6:28","nodeType":"YulTypedName","src":"17687:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17698:4:28","nodeType":"YulTypedName","src":"17698:4:28","type":""}],"src":"17526:398:28"},{"body":{"nativeSrc":"18103:173:28","nodeType":"YulBlock","src":"18103:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18120:9:28","nodeType":"YulIdentifier","src":"18120:9:28"},{"kind":"number","nativeSrc":"18131:2:28","nodeType":"YulLiteral","src":"18131:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"18113:6:28","nodeType":"YulIdentifier","src":"18113:6:28"},"nativeSrc":"18113:21:28","nodeType":"YulFunctionCall","src":"18113:21:28"},"nativeSrc":"18113:21:28","nodeType":"YulExpressionStatement","src":"18113:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18154:9:28","nodeType":"YulIdentifier","src":"18154:9:28"},{"kind":"number","nativeSrc":"18165:2:28","nodeType":"YulLiteral","src":"18165:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18150:3:28","nodeType":"YulIdentifier","src":"18150:3:28"},"nativeSrc":"18150:18:28","nodeType":"YulFunctionCall","src":"18150:18:28"},{"kind":"number","nativeSrc":"18170:2:28","nodeType":"YulLiteral","src":"18170:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"18143:6:28","nodeType":"YulIdentifier","src":"18143:6:28"},"nativeSrc":"18143:30:28","nodeType":"YulFunctionCall","src":"18143:30:28"},"nativeSrc":"18143:30:28","nodeType":"YulExpressionStatement","src":"18143:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18193:9:28","nodeType":"YulIdentifier","src":"18193:9:28"},{"kind":"number","nativeSrc":"18204:2:28","nodeType":"YulLiteral","src":"18204:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18189:3:28","nodeType":"YulIdentifier","src":"18189:3:28"},"nativeSrc":"18189:18:28","nodeType":"YulFunctionCall","src":"18189:18:28"},{"hexValue":"5369676e6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"18209:25:28","nodeType":"YulLiteral","src":"18209:25:28","type":"","value":"Signer is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"18182:6:28","nodeType":"YulIdentifier","src":"18182:6:28"},"nativeSrc":"18182:53:28","nodeType":"YulFunctionCall","src":"18182:53:28"},"nativeSrc":"18182:53:28","nodeType":"YulExpressionStatement","src":"18182:53:28"},{"nativeSrc":"18244:26:28","nodeType":"YulAssignment","src":"18244:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"18256:9:28","nodeType":"YulIdentifier","src":"18256:9:28"},{"kind":"number","nativeSrc":"18267:2:28","nodeType":"YulLiteral","src":"18267:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18252:3:28","nodeType":"YulIdentifier","src":"18252:3:28"},"nativeSrc":"18252:18:28","nodeType":"YulFunctionCall","src":"18252:18:28"},"variableNames":[{"name":"tail","nativeSrc":"18244:4:28","nodeType":"YulIdentifier","src":"18244:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b755ce87409e8192f91119a3d1231484c648c9b5603f8975131c450383d3f8aa__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17929:347:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18080:9:28","nodeType":"YulTypedName","src":"18080:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18094:4:28","nodeType":"YulTypedName","src":"18094:4:28","type":""}],"src":"17929:347:28"},{"body":{"nativeSrc":"18330:79:28","nodeType":"YulBlock","src":"18330:79:28","statements":[{"nativeSrc":"18340:17:28","nodeType":"YulAssignment","src":"18340:17:28","value":{"arguments":[{"name":"x","nativeSrc":"18352:1:28","nodeType":"YulIdentifier","src":"18352:1:28"},{"name":"y","nativeSrc":"18355:1:28","nodeType":"YulIdentifier","src":"18355:1:28"}],"functionName":{"name":"sub","nativeSrc":"18348:3:28","nodeType":"YulIdentifier","src":"18348:3:28"},"nativeSrc":"18348:9:28","nodeType":"YulFunctionCall","src":"18348:9:28"},"variableNames":[{"name":"diff","nativeSrc":"18340:4:28","nodeType":"YulIdentifier","src":"18340:4:28"}]},{"body":{"nativeSrc":"18381:22:28","nodeType":"YulBlock","src":"18381:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18383:16:28","nodeType":"YulIdentifier","src":"18383:16:28"},"nativeSrc":"18383:18:28","nodeType":"YulFunctionCall","src":"18383:18:28"},"nativeSrc":"18383:18:28","nodeType":"YulExpressionStatement","src":"18383:18:28"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"18372:4:28","nodeType":"YulIdentifier","src":"18372:4:28"},{"name":"x","nativeSrc":"18378:1:28","nodeType":"YulIdentifier","src":"18378:1:28"}],"functionName":{"name":"gt","nativeSrc":"18369:2:28","nodeType":"YulIdentifier","src":"18369:2:28"},"nativeSrc":"18369:11:28","nodeType":"YulFunctionCall","src":"18369:11:28"},"nativeSrc":"18366:37:28","nodeType":"YulIf","src":"18366:37:28"}]},"name":"checked_sub_t_uint256","nativeSrc":"18281:128:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18312:1:28","nodeType":"YulTypedName","src":"18312:1:28","type":""},{"name":"y","nativeSrc":"18315:1:28","nodeType":"YulTypedName","src":"18315:1:28","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"18321:4:28","nodeType":"YulTypedName","src":"18321:4:28","type":""}],"src":"18281:128:28"},{"body":{"nativeSrc":"18543:168:28","nodeType":"YulBlock","src":"18543:168:28","statements":[{"nativeSrc":"18553:26:28","nodeType":"YulAssignment","src":"18553:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"18565:9:28","nodeType":"YulIdentifier","src":"18565:9:28"},{"kind":"number","nativeSrc":"18576:2:28","nodeType":"YulLiteral","src":"18576:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18561:3:28","nodeType":"YulIdentifier","src":"18561:3:28"},"nativeSrc":"18561:18:28","nodeType":"YulFunctionCall","src":"18561:18:28"},"variableNames":[{"name":"tail","nativeSrc":"18553:4:28","nodeType":"YulIdentifier","src":"18553:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18595:9:28","nodeType":"YulIdentifier","src":"18595:9:28"},{"name":"value0","nativeSrc":"18606:6:28","nodeType":"YulIdentifier","src":"18606:6:28"}],"functionName":{"name":"mstore","nativeSrc":"18588:6:28","nodeType":"YulIdentifier","src":"18588:6:28"},"nativeSrc":"18588:25:28","nodeType":"YulFunctionCall","src":"18588:25:28"},"nativeSrc":"18588:25:28","nodeType":"YulExpressionStatement","src":"18588:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18633:9:28","nodeType":"YulIdentifier","src":"18633:9:28"},{"kind":"number","nativeSrc":"18644:2:28","nodeType":"YulLiteral","src":"18644:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18629:3:28","nodeType":"YulIdentifier","src":"18629:3:28"},"nativeSrc":"18629:18:28","nodeType":"YulFunctionCall","src":"18629:18:28"},{"arguments":[{"name":"value1","nativeSrc":"18653:6:28","nodeType":"YulIdentifier","src":"18653:6:28"},{"kind":"number","nativeSrc":"18661:42:28","nodeType":"YulLiteral","src":"18661:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"18649:3:28","nodeType":"YulIdentifier","src":"18649:3:28"},"nativeSrc":"18649:55:28","nodeType":"YulFunctionCall","src":"18649:55:28"}],"functionName":{"name":"mstore","nativeSrc":"18622:6:28","nodeType":"YulIdentifier","src":"18622:6:28"},"nativeSrc":"18622:83:28","nodeType":"YulFunctionCall","src":"18622:83:28"},"nativeSrc":"18622:83:28","nodeType":"YulExpressionStatement","src":"18622:83:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nativeSrc":"18414:297:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18504:9:28","nodeType":"YulTypedName","src":"18504:9:28","type":""},{"name":"value1","nativeSrc":"18515:6:28","nodeType":"YulTypedName","src":"18515:6:28","type":""},{"name":"value0","nativeSrc":"18523:6:28","nodeType":"YulTypedName","src":"18523:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18534:4:28","nodeType":"YulTypedName","src":"18534:4:28","type":""}],"src":"18414:297:28"},{"body":{"nativeSrc":"18873:241:28","nodeType":"YulBlock","src":"18873:241:28","statements":[{"nativeSrc":"18883:26:28","nodeType":"YulAssignment","src":"18883:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"18895:9:28","nodeType":"YulIdentifier","src":"18895:9:28"},{"kind":"number","nativeSrc":"18906:2:28","nodeType":"YulLiteral","src":"18906:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18891:3:28","nodeType":"YulIdentifier","src":"18891:3:28"},"nativeSrc":"18891:18:28","nodeType":"YulFunctionCall","src":"18891:18:28"},"variableNames":[{"name":"tail","nativeSrc":"18883:4:28","nodeType":"YulIdentifier","src":"18883:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"18925:9:28","nodeType":"YulIdentifier","src":"18925:9:28"},{"name":"value0","nativeSrc":"18936:6:28","nodeType":"YulIdentifier","src":"18936:6:28"}],"functionName":{"name":"mstore","nativeSrc":"18918:6:28","nodeType":"YulIdentifier","src":"18918:6:28"},"nativeSrc":"18918:25:28","nodeType":"YulFunctionCall","src":"18918:25:28"},"nativeSrc":"18918:25:28","nodeType":"YulExpressionStatement","src":"18918:25:28"},{"nativeSrc":"18952:52:28","nodeType":"YulVariableDeclaration","src":"18952:52:28","value":{"kind":"number","nativeSrc":"18962:42:28","nodeType":"YulLiteral","src":"18962:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"18956:2:28","nodeType":"YulTypedName","src":"18956:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19024:9:28","nodeType":"YulIdentifier","src":"19024:9:28"},{"kind":"number","nativeSrc":"19035:2:28","nodeType":"YulLiteral","src":"19035:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19020:3:28","nodeType":"YulIdentifier","src":"19020:3:28"},"nativeSrc":"19020:18:28","nodeType":"YulFunctionCall","src":"19020:18:28"},{"arguments":[{"name":"value1","nativeSrc":"19044:6:28","nodeType":"YulIdentifier","src":"19044:6:28"},{"name":"_1","nativeSrc":"19052:2:28","nodeType":"YulIdentifier","src":"19052:2:28"}],"functionName":{"name":"and","nativeSrc":"19040:3:28","nodeType":"YulIdentifier","src":"19040:3:28"},"nativeSrc":"19040:15:28","nodeType":"YulFunctionCall","src":"19040:15:28"}],"functionName":{"name":"mstore","nativeSrc":"19013:6:28","nodeType":"YulIdentifier","src":"19013:6:28"},"nativeSrc":"19013:43:28","nodeType":"YulFunctionCall","src":"19013:43:28"},"nativeSrc":"19013:43:28","nodeType":"YulExpressionStatement","src":"19013:43:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19076:9:28","nodeType":"YulIdentifier","src":"19076:9:28"},{"kind":"number","nativeSrc":"19087:2:28","nodeType":"YulLiteral","src":"19087:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19072:3:28","nodeType":"YulIdentifier","src":"19072:3:28"},"nativeSrc":"19072:18:28","nodeType":"YulFunctionCall","src":"19072:18:28"},{"arguments":[{"name":"value2","nativeSrc":"19096:6:28","nodeType":"YulIdentifier","src":"19096:6:28"},{"name":"_1","nativeSrc":"19104:2:28","nodeType":"YulIdentifier","src":"19104:2:28"}],"functionName":{"name":"and","nativeSrc":"19092:3:28","nodeType":"YulIdentifier","src":"19092:3:28"},"nativeSrc":"19092:15:28","nodeType":"YulFunctionCall","src":"19092:15:28"}],"functionName":{"name":"mstore","nativeSrc":"19065:6:28","nodeType":"YulIdentifier","src":"19065:6:28"},"nativeSrc":"19065:43:28","nodeType":"YulFunctionCall","src":"19065:43:28"},"nativeSrc":"19065:43:28","nodeType":"YulExpressionStatement","src":"19065:43:28"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed","nativeSrc":"18716:398:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18826:9:28","nodeType":"YulTypedName","src":"18826:9:28","type":""},{"name":"value2","nativeSrc":"18837:6:28","nodeType":"YulTypedName","src":"18837:6:28","type":""},{"name":"value1","nativeSrc":"18845:6:28","nodeType":"YulTypedName","src":"18845:6:28","type":""},{"name":"value0","nativeSrc":"18853:6:28","nodeType":"YulTypedName","src":"18853:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18864:4:28","nodeType":"YulTypedName","src":"18864:4:28","type":""}],"src":"18716:398:28"},{"body":{"nativeSrc":"19200:103:28","nodeType":"YulBlock","src":"19200:103:28","statements":[{"body":{"nativeSrc":"19246:16:28","nodeType":"YulBlock","src":"19246:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19255:1:28","nodeType":"YulLiteral","src":"19255:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"19258:1:28","nodeType":"YulLiteral","src":"19258:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19248:6:28","nodeType":"YulIdentifier","src":"19248:6:28"},"nativeSrc":"19248:12:28","nodeType":"YulFunctionCall","src":"19248:12:28"},"nativeSrc":"19248:12:28","nodeType":"YulExpressionStatement","src":"19248:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19221:7:28","nodeType":"YulIdentifier","src":"19221:7:28"},{"name":"headStart","nativeSrc":"19230:9:28","nodeType":"YulIdentifier","src":"19230:9:28"}],"functionName":{"name":"sub","nativeSrc":"19217:3:28","nodeType":"YulIdentifier","src":"19217:3:28"},"nativeSrc":"19217:23:28","nodeType":"YulFunctionCall","src":"19217:23:28"},{"kind":"number","nativeSrc":"19242:2:28","nodeType":"YulLiteral","src":"19242:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19213:3:28","nodeType":"YulIdentifier","src":"19213:3:28"},"nativeSrc":"19213:32:28","nodeType":"YulFunctionCall","src":"19213:32:28"},"nativeSrc":"19210:52:28","nodeType":"YulIf","src":"19210:52:28"},{"nativeSrc":"19271:26:28","nodeType":"YulAssignment","src":"19271:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"19287:9:28","nodeType":"YulIdentifier","src":"19287:9:28"}],"functionName":{"name":"mload","nativeSrc":"19281:5:28","nodeType":"YulIdentifier","src":"19281:5:28"},"nativeSrc":"19281:16:28","nodeType":"YulFunctionCall","src":"19281:16:28"},"variableNames":[{"name":"value0","nativeSrc":"19271:6:28","nodeType":"YulIdentifier","src":"19271:6:28"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"19119:184:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19166:9:28","nodeType":"YulTypedName","src":"19166:9:28","type":""},{"name":"dataEnd","nativeSrc":"19177:7:28","nodeType":"YulTypedName","src":"19177:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19189:6:28","nodeType":"YulTypedName","src":"19189:6:28","type":""}],"src":"19119:184:28"},{"body":{"nativeSrc":"19482:236:28","nodeType":"YulBlock","src":"19482:236:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19499:9:28","nodeType":"YulIdentifier","src":"19499:9:28"},{"kind":"number","nativeSrc":"19510:2:28","nodeType":"YulLiteral","src":"19510:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19492:6:28","nodeType":"YulIdentifier","src":"19492:6:28"},"nativeSrc":"19492:21:28","nodeType":"YulFunctionCall","src":"19492:21:28"},"nativeSrc":"19492:21:28","nodeType":"YulExpressionStatement","src":"19492:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19533:9:28","nodeType":"YulIdentifier","src":"19533:9:28"},{"kind":"number","nativeSrc":"19544:2:28","nodeType":"YulLiteral","src":"19544:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19529:3:28","nodeType":"YulIdentifier","src":"19529:3:28"},"nativeSrc":"19529:18:28","nodeType":"YulFunctionCall","src":"19529:18:28"},{"kind":"number","nativeSrc":"19549:2:28","nodeType":"YulLiteral","src":"19549:2:28","type":"","value":"46"}],"functionName":{"name":"mstore","nativeSrc":"19522:6:28","nodeType":"YulIdentifier","src":"19522:6:28"},"nativeSrc":"19522:30:28","nodeType":"YulFunctionCall","src":"19522:30:28"},"nativeSrc":"19522:30:28","nodeType":"YulExpressionStatement","src":"19522:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19572:9:28","nodeType":"YulIdentifier","src":"19572:9:28"},{"kind":"number","nativeSrc":"19583:2:28","nodeType":"YulLiteral","src":"19583:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19568:3:28","nodeType":"YulIdentifier","src":"19568:3:28"},"nativeSrc":"19568:18:28","nodeType":"YulFunctionCall","src":"19568:18:28"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nativeSrc":"19588:34:28","nodeType":"YulLiteral","src":"19588:34:28","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nativeSrc":"19561:6:28","nodeType":"YulIdentifier","src":"19561:6:28"},"nativeSrc":"19561:62:28","nodeType":"YulFunctionCall","src":"19561:62:28"},"nativeSrc":"19561:62:28","nodeType":"YulExpressionStatement","src":"19561:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19643:9:28","nodeType":"YulIdentifier","src":"19643:9:28"},{"kind":"number","nativeSrc":"19654:2:28","nodeType":"YulLiteral","src":"19654:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19639:3:28","nodeType":"YulIdentifier","src":"19639:3:28"},"nativeSrc":"19639:18:28","nodeType":"YulFunctionCall","src":"19639:18:28"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nativeSrc":"19659:16:28","nodeType":"YulLiteral","src":"19659:16:28","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nativeSrc":"19632:6:28","nodeType":"YulIdentifier","src":"19632:6:28"},"nativeSrc":"19632:44:28","nodeType":"YulFunctionCall","src":"19632:44:28"},"nativeSrc":"19632:44:28","nodeType":"YulExpressionStatement","src":"19632:44:28"},{"nativeSrc":"19685:27:28","nodeType":"YulAssignment","src":"19685:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"19697:9:28","nodeType":"YulIdentifier","src":"19697:9:28"},{"kind":"number","nativeSrc":"19708:3:28","nodeType":"YulLiteral","src":"19708:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19693:3:28","nodeType":"YulIdentifier","src":"19693:3:28"},"nativeSrc":"19693:19:28","nodeType":"YulFunctionCall","src":"19693:19:28"},"variableNames":[{"name":"tail","nativeSrc":"19685:4:28","nodeType":"YulIdentifier","src":"19685:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19308:410:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19459:9:28","nodeType":"YulTypedName","src":"19459:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19473:4:28","nodeType":"YulTypedName","src":"19473:4:28","type":""}],"src":"19308:410:28"},{"body":{"nativeSrc":"19897:231:28","nodeType":"YulBlock","src":"19897:231:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"19914:9:28","nodeType":"YulIdentifier","src":"19914:9:28"},{"kind":"number","nativeSrc":"19925:2:28","nodeType":"YulLiteral","src":"19925:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"19907:6:28","nodeType":"YulIdentifier","src":"19907:6:28"},"nativeSrc":"19907:21:28","nodeType":"YulFunctionCall","src":"19907:21:28"},"nativeSrc":"19907:21:28","nodeType":"YulExpressionStatement","src":"19907:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19948:9:28","nodeType":"YulIdentifier","src":"19948:9:28"},{"kind":"number","nativeSrc":"19959:2:28","nodeType":"YulLiteral","src":"19959:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19944:3:28","nodeType":"YulIdentifier","src":"19944:3:28"},"nativeSrc":"19944:18:28","nodeType":"YulFunctionCall","src":"19944:18:28"},{"kind":"number","nativeSrc":"19964:2:28","nodeType":"YulLiteral","src":"19964:2:28","type":"","value":"41"}],"functionName":{"name":"mstore","nativeSrc":"19937:6:28","nodeType":"YulIdentifier","src":"19937:6:28"},"nativeSrc":"19937:30:28","nodeType":"YulFunctionCall","src":"19937:30:28"},"nativeSrc":"19937:30:28","nodeType":"YulExpressionStatement","src":"19937:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19987:9:28","nodeType":"YulIdentifier","src":"19987:9:28"},{"kind":"number","nativeSrc":"19998:2:28","nodeType":"YulLiteral","src":"19998:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19983:3:28","nodeType":"YulIdentifier","src":"19983:3:28"},"nativeSrc":"19983:18:28","nodeType":"YulFunctionCall","src":"19983:18:28"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nativeSrc":"20003:34:28","nodeType":"YulLiteral","src":"20003:34:28","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nativeSrc":"19976:6:28","nodeType":"YulIdentifier","src":"19976:6:28"},"nativeSrc":"19976:62:28","nodeType":"YulFunctionCall","src":"19976:62:28"},"nativeSrc":"19976:62:28","nodeType":"YulExpressionStatement","src":"19976:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20058:9:28","nodeType":"YulIdentifier","src":"20058:9:28"},{"kind":"number","nativeSrc":"20069:2:28","nodeType":"YulLiteral","src":"20069:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20054:3:28","nodeType":"YulIdentifier","src":"20054:3:28"},"nativeSrc":"20054:18:28","nodeType":"YulFunctionCall","src":"20054:18:28"},{"hexValue":"6961626c6555554944","kind":"string","nativeSrc":"20074:11:28","nodeType":"YulLiteral","src":"20074:11:28","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nativeSrc":"20047:6:28","nodeType":"YulIdentifier","src":"20047:6:28"},"nativeSrc":"20047:39:28","nodeType":"YulFunctionCall","src":"20047:39:28"},"nativeSrc":"20047:39:28","nodeType":"YulExpressionStatement","src":"20047:39:28"},{"nativeSrc":"20095:27:28","nodeType":"YulAssignment","src":"20095:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"20107:9:28","nodeType":"YulIdentifier","src":"20107:9:28"},{"kind":"number","nativeSrc":"20118:3:28","nodeType":"YulLiteral","src":"20118:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20103:3:28","nodeType":"YulIdentifier","src":"20103:3:28"},"nativeSrc":"20103:19:28","nodeType":"YulFunctionCall","src":"20103:19:28"},"variableNames":[{"name":"tail","nativeSrc":"20095:4:28","nodeType":"YulIdentifier","src":"20095:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19723:405:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19874:9:28","nodeType":"YulTypedName","src":"19874:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19888:4:28","nodeType":"YulTypedName","src":"19888:4:28","type":""}],"src":"19723:405:28"},{"body":{"nativeSrc":"20307:233:28","nodeType":"YulBlock","src":"20307:233:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20324:9:28","nodeType":"YulIdentifier","src":"20324:9:28"},{"kind":"number","nativeSrc":"20335:2:28","nodeType":"YulLiteral","src":"20335:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20317:6:28","nodeType":"YulIdentifier","src":"20317:6:28"},"nativeSrc":"20317:21:28","nodeType":"YulFunctionCall","src":"20317:21:28"},"nativeSrc":"20317:21:28","nodeType":"YulExpressionStatement","src":"20317:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20358:9:28","nodeType":"YulIdentifier","src":"20358:9:28"},{"kind":"number","nativeSrc":"20369:2:28","nodeType":"YulLiteral","src":"20369:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20354:3:28","nodeType":"YulIdentifier","src":"20354:3:28"},"nativeSrc":"20354:18:28","nodeType":"YulFunctionCall","src":"20354:18:28"},{"kind":"number","nativeSrc":"20374:2:28","nodeType":"YulLiteral","src":"20374:2:28","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"20347:6:28","nodeType":"YulIdentifier","src":"20347:6:28"},"nativeSrc":"20347:30:28","nodeType":"YulFunctionCall","src":"20347:30:28"},"nativeSrc":"20347:30:28","nodeType":"YulExpressionStatement","src":"20347:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20397:9:28","nodeType":"YulIdentifier","src":"20397:9:28"},{"kind":"number","nativeSrc":"20408:2:28","nodeType":"YulLiteral","src":"20408:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20393:3:28","nodeType":"YulIdentifier","src":"20393:3:28"},"nativeSrc":"20393:18:28","nodeType":"YulFunctionCall","src":"20393:18:28"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nativeSrc":"20413:34:28","nodeType":"YulLiteral","src":"20413:34:28","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nativeSrc":"20386:6:28","nodeType":"YulIdentifier","src":"20386:6:28"},"nativeSrc":"20386:62:28","nodeType":"YulFunctionCall","src":"20386:62:28"},"nativeSrc":"20386:62:28","nodeType":"YulExpressionStatement","src":"20386:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20468:9:28","nodeType":"YulIdentifier","src":"20468:9:28"},{"kind":"number","nativeSrc":"20479:2:28","nodeType":"YulLiteral","src":"20479:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20464:3:28","nodeType":"YulIdentifier","src":"20464:3:28"},"nativeSrc":"20464:18:28","nodeType":"YulFunctionCall","src":"20464:18:28"},{"hexValue":"6e697469616c697a696e67","kind":"string","nativeSrc":"20484:13:28","nodeType":"YulLiteral","src":"20484:13:28","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nativeSrc":"20457:6:28","nodeType":"YulIdentifier","src":"20457:6:28"},"nativeSrc":"20457:41:28","nodeType":"YulFunctionCall","src":"20457:41:28"},"nativeSrc":"20457:41:28","nodeType":"YulExpressionStatement","src":"20457:41:28"},{"nativeSrc":"20507:27:28","nodeType":"YulAssignment","src":"20507:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"20519:9:28","nodeType":"YulIdentifier","src":"20519:9:28"},{"kind":"number","nativeSrc":"20530:3:28","nodeType":"YulLiteral","src":"20530:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"20515:3:28","nodeType":"YulIdentifier","src":"20515:3:28"},"nativeSrc":"20515:19:28","nodeType":"YulFunctionCall","src":"20515:19:28"},"variableNames":[{"name":"tail","nativeSrc":"20507:4:28","nodeType":"YulIdentifier","src":"20507:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20133:407:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20284:9:28","nodeType":"YulTypedName","src":"20284:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20298:4:28","nodeType":"YulTypedName","src":"20298:4:28","type":""}],"src":"20133:407:28"},{"body":{"nativeSrc":"20719:170:28","nodeType":"YulBlock","src":"20719:170:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"20736:9:28","nodeType":"YulIdentifier","src":"20736:9:28"},{"kind":"number","nativeSrc":"20747:2:28","nodeType":"YulLiteral","src":"20747:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"20729:6:28","nodeType":"YulIdentifier","src":"20729:6:28"},"nativeSrc":"20729:21:28","nodeType":"YulFunctionCall","src":"20729:21:28"},"nativeSrc":"20729:21:28","nodeType":"YulExpressionStatement","src":"20729:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20770:9:28","nodeType":"YulIdentifier","src":"20770:9:28"},{"kind":"number","nativeSrc":"20781:2:28","nodeType":"YulLiteral","src":"20781:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20766:3:28","nodeType":"YulIdentifier","src":"20766:3:28"},"nativeSrc":"20766:18:28","nodeType":"YulFunctionCall","src":"20766:18:28"},{"kind":"number","nativeSrc":"20786:2:28","nodeType":"YulLiteral","src":"20786:2:28","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"20759:6:28","nodeType":"YulIdentifier","src":"20759:6:28"},"nativeSrc":"20759:30:28","nodeType":"YulFunctionCall","src":"20759:30:28"},"nativeSrc":"20759:30:28","nodeType":"YulExpressionStatement","src":"20759:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20809:9:28","nodeType":"YulIdentifier","src":"20809:9:28"},{"kind":"number","nativeSrc":"20820:2:28","nodeType":"YulLiteral","src":"20820:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20805:3:28","nodeType":"YulIdentifier","src":"20805:3:28"},"nativeSrc":"20805:18:28","nodeType":"YulFunctionCall","src":"20805:18:28"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"20825:22:28","nodeType":"YulLiteral","src":"20825:22:28","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"20798:6:28","nodeType":"YulIdentifier","src":"20798:6:28"},"nativeSrc":"20798:50:28","nodeType":"YulFunctionCall","src":"20798:50:28"},"nativeSrc":"20798:50:28","nodeType":"YulExpressionStatement","src":"20798:50:28"},{"nativeSrc":"20857:26:28","nodeType":"YulAssignment","src":"20857:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"20869:9:28","nodeType":"YulIdentifier","src":"20869:9:28"},{"kind":"number","nativeSrc":"20880:2:28","nodeType":"YulLiteral","src":"20880:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20865:3:28","nodeType":"YulIdentifier","src":"20865:3:28"},"nativeSrc":"20865:18:28","nodeType":"YulFunctionCall","src":"20865:18:28"},"variableNames":[{"name":"tail","nativeSrc":"20857:4:28","nodeType":"YulIdentifier","src":"20857:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20545:344:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20696:9:28","nodeType":"YulTypedName","src":"20696:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20710:4:28","nodeType":"YulTypedName","src":"20710:4:28","type":""}],"src":"20545:344:28"},{"body":{"nativeSrc":"21068:177:28","nodeType":"YulBlock","src":"21068:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21085:9:28","nodeType":"YulIdentifier","src":"21085:9:28"},{"kind":"number","nativeSrc":"21096:2:28","nodeType":"YulLiteral","src":"21096:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"21078:6:28","nodeType":"YulIdentifier","src":"21078:6:28"},"nativeSrc":"21078:21:28","nodeType":"YulFunctionCall","src":"21078:21:28"},"nativeSrc":"21078:21:28","nodeType":"YulExpressionStatement","src":"21078:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21119:9:28","nodeType":"YulIdentifier","src":"21119:9:28"},{"kind":"number","nativeSrc":"21130:2:28","nodeType":"YulLiteral","src":"21130:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21115:3:28","nodeType":"YulIdentifier","src":"21115:3:28"},"nativeSrc":"21115:18:28","nodeType":"YulFunctionCall","src":"21115:18:28"},{"kind":"number","nativeSrc":"21135:2:28","nodeType":"YulLiteral","src":"21135:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"21108:6:28","nodeType":"YulIdentifier","src":"21108:6:28"},"nativeSrc":"21108:30:28","nodeType":"YulFunctionCall","src":"21108:30:28"},"nativeSrc":"21108:30:28","nodeType":"YulExpressionStatement","src":"21108:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21158:9:28","nodeType":"YulIdentifier","src":"21158:9:28"},{"kind":"number","nativeSrc":"21169:2:28","nodeType":"YulLiteral","src":"21169:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21154:3:28","nodeType":"YulIdentifier","src":"21154:3:28"},"nativeSrc":"21154:18:28","nodeType":"YulFunctionCall","src":"21154:18:28"},{"hexValue":"496e76616c696420636f6e73756d6520726561736f6e20636f6465","kind":"string","nativeSrc":"21174:29:28","nodeType":"YulLiteral","src":"21174:29:28","type":"","value":"Invalid consume reason code"}],"functionName":{"name":"mstore","nativeSrc":"21147:6:28","nodeType":"YulIdentifier","src":"21147:6:28"},"nativeSrc":"21147:57:28","nodeType":"YulFunctionCall","src":"21147:57:28"},"nativeSrc":"21147:57:28","nodeType":"YulExpressionStatement","src":"21147:57:28"},{"nativeSrc":"21213:26:28","nodeType":"YulAssignment","src":"21213:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"21225:9:28","nodeType":"YulIdentifier","src":"21225:9:28"},{"kind":"number","nativeSrc":"21236:2:28","nodeType":"YulLiteral","src":"21236:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21221:3:28","nodeType":"YulIdentifier","src":"21221:3:28"},"nativeSrc":"21221:18:28","nodeType":"YulFunctionCall","src":"21221:18:28"},"variableNames":[{"name":"tail","nativeSrc":"21213:4:28","nodeType":"YulIdentifier","src":"21213:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20894:351:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21045:9:28","nodeType":"YulTypedName","src":"21045:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21059:4:28","nodeType":"YulTypedName","src":"21059:4:28","type":""}],"src":"20894:351:28"},{"body":{"nativeSrc":"21435:285:28","nodeType":"YulBlock","src":"21435:285:28","statements":[{"nativeSrc":"21445:27:28","nodeType":"YulAssignment","src":"21445:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"21457:9:28","nodeType":"YulIdentifier","src":"21457:9:28"},{"kind":"number","nativeSrc":"21468:3:28","nodeType":"YulLiteral","src":"21468:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21453:3:28","nodeType":"YulIdentifier","src":"21453:3:28"},"nativeSrc":"21453:19:28","nodeType":"YulFunctionCall","src":"21453:19:28"},"variableNames":[{"name":"tail","nativeSrc":"21445:4:28","nodeType":"YulIdentifier","src":"21445:4:28"}]},{"nativeSrc":"21481:52:28","nodeType":"YulVariableDeclaration","src":"21481:52:28","value":{"kind":"number","nativeSrc":"21491:42:28","nodeType":"YulLiteral","src":"21491:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"21485:2:28","nodeType":"YulTypedName","src":"21485:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"21549:9:28","nodeType":"YulIdentifier","src":"21549:9:28"},{"arguments":[{"name":"value0","nativeSrc":"21564:6:28","nodeType":"YulIdentifier","src":"21564:6:28"},{"name":"_1","nativeSrc":"21572:2:28","nodeType":"YulIdentifier","src":"21572:2:28"}],"functionName":{"name":"and","nativeSrc":"21560:3:28","nodeType":"YulIdentifier","src":"21560:3:28"},"nativeSrc":"21560:15:28","nodeType":"YulFunctionCall","src":"21560:15:28"}],"functionName":{"name":"mstore","nativeSrc":"21542:6:28","nodeType":"YulIdentifier","src":"21542:6:28"},"nativeSrc":"21542:34:28","nodeType":"YulFunctionCall","src":"21542:34:28"},"nativeSrc":"21542:34:28","nodeType":"YulExpressionStatement","src":"21542:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21596:9:28","nodeType":"YulIdentifier","src":"21596:9:28"},{"kind":"number","nativeSrc":"21607:2:28","nodeType":"YulLiteral","src":"21607:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21592:3:28","nodeType":"YulIdentifier","src":"21592:3:28"},"nativeSrc":"21592:18:28","nodeType":"YulFunctionCall","src":"21592:18:28"},{"name":"value1","nativeSrc":"21612:6:28","nodeType":"YulIdentifier","src":"21612:6:28"}],"functionName":{"name":"mstore","nativeSrc":"21585:6:28","nodeType":"YulIdentifier","src":"21585:6:28"},"nativeSrc":"21585:34:28","nodeType":"YulFunctionCall","src":"21585:34:28"},"nativeSrc":"21585:34:28","nodeType":"YulExpressionStatement","src":"21585:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21639:9:28","nodeType":"YulIdentifier","src":"21639:9:28"},{"kind":"number","nativeSrc":"21650:2:28","nodeType":"YulLiteral","src":"21650:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21635:3:28","nodeType":"YulIdentifier","src":"21635:3:28"},"nativeSrc":"21635:18:28","nodeType":"YulFunctionCall","src":"21635:18:28"},{"name":"value2","nativeSrc":"21655:6:28","nodeType":"YulIdentifier","src":"21655:6:28"}],"functionName":{"name":"mstore","nativeSrc":"21628:6:28","nodeType":"YulIdentifier","src":"21628:6:28"},"nativeSrc":"21628:34:28","nodeType":"YulFunctionCall","src":"21628:34:28"},"nativeSrc":"21628:34:28","nodeType":"YulExpressionStatement","src":"21628:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21682:9:28","nodeType":"YulIdentifier","src":"21682:9:28"},{"kind":"number","nativeSrc":"21693:2:28","nodeType":"YulLiteral","src":"21693:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21678:3:28","nodeType":"YulIdentifier","src":"21678:3:28"},"nativeSrc":"21678:18:28","nodeType":"YulFunctionCall","src":"21678:18:28"},{"arguments":[{"name":"value3","nativeSrc":"21702:6:28","nodeType":"YulIdentifier","src":"21702:6:28"},{"name":"_1","nativeSrc":"21710:2:28","nodeType":"YulIdentifier","src":"21710:2:28"}],"functionName":{"name":"and","nativeSrc":"21698:3:28","nodeType":"YulIdentifier","src":"21698:3:28"},"nativeSrc":"21698:15:28","nodeType":"YulFunctionCall","src":"21698:15:28"}],"functionName":{"name":"mstore","nativeSrc":"21671:6:28","nodeType":"YulIdentifier","src":"21671:6:28"},"nativeSrc":"21671:43:28","nodeType":"YulFunctionCall","src":"21671:43:28"},"nativeSrc":"21671:43:28","nodeType":"YulExpressionStatement","src":"21671:43:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed","nativeSrc":"21250:470:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21380:9:28","nodeType":"YulTypedName","src":"21380:9:28","type":""},{"name":"value3","nativeSrc":"21391:6:28","nodeType":"YulTypedName","src":"21391:6:28","type":""},{"name":"value2","nativeSrc":"21399:6:28","nodeType":"YulTypedName","src":"21399:6:28","type":""},{"name":"value1","nativeSrc":"21407:6:28","nodeType":"YulTypedName","src":"21407:6:28","type":""},{"name":"value0","nativeSrc":"21415:6:28","nodeType":"YulTypedName","src":"21415:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21426:4:28","nodeType":"YulTypedName","src":"21426:4:28","type":""}],"src":"21250:470:28"},{"body":{"nativeSrc":"21984:251:28","nodeType":"YulBlock","src":"21984:251:28","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22001:3:28","nodeType":"YulIdentifier","src":"22001:3:28"},{"name":"value0","nativeSrc":"22006:6:28","nodeType":"YulIdentifier","src":"22006:6:28"}],"functionName":{"name":"mstore","nativeSrc":"21994:6:28","nodeType":"YulIdentifier","src":"21994:6:28"},"nativeSrc":"21994:19:28","nodeType":"YulFunctionCall","src":"21994:19:28"},"nativeSrc":"21994:19:28","nodeType":"YulExpressionStatement","src":"21994:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"22033:3:28","nodeType":"YulIdentifier","src":"22033:3:28"},{"kind":"number","nativeSrc":"22038:2:28","nodeType":"YulLiteral","src":"22038:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22029:3:28","nodeType":"YulIdentifier","src":"22029:3:28"},"nativeSrc":"22029:12:28","nodeType":"YulFunctionCall","src":"22029:12:28"},{"name":"value1","nativeSrc":"22043:6:28","nodeType":"YulIdentifier","src":"22043:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22022:6:28","nodeType":"YulIdentifier","src":"22022:6:28"},"nativeSrc":"22022:28:28","nodeType":"YulFunctionCall","src":"22022:28:28"},"nativeSrc":"22022:28:28","nodeType":"YulExpressionStatement","src":"22022:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"22070:3:28","nodeType":"YulIdentifier","src":"22070:3:28"},{"kind":"number","nativeSrc":"22075:2:28","nodeType":"YulLiteral","src":"22075:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22066:3:28","nodeType":"YulIdentifier","src":"22066:3:28"},"nativeSrc":"22066:12:28","nodeType":"YulFunctionCall","src":"22066:12:28"},{"name":"value2","nativeSrc":"22080:6:28","nodeType":"YulIdentifier","src":"22080:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22059:6:28","nodeType":"YulIdentifier","src":"22059:6:28"},"nativeSrc":"22059:28:28","nodeType":"YulFunctionCall","src":"22059:28:28"},"nativeSrc":"22059:28:28","nodeType":"YulExpressionStatement","src":"22059:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"22107:3:28","nodeType":"YulIdentifier","src":"22107:3:28"},{"kind":"number","nativeSrc":"22112:2:28","nodeType":"YulLiteral","src":"22112:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22103:3:28","nodeType":"YulIdentifier","src":"22103:3:28"},"nativeSrc":"22103:12:28","nodeType":"YulFunctionCall","src":"22103:12:28"},{"name":"value3","nativeSrc":"22117:6:28","nodeType":"YulIdentifier","src":"22117:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22096:6:28","nodeType":"YulIdentifier","src":"22096:6:28"},"nativeSrc":"22096:28:28","nodeType":"YulFunctionCall","src":"22096:28:28"},"nativeSrc":"22096:28:28","nodeType":"YulExpressionStatement","src":"22096:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"22144:3:28","nodeType":"YulIdentifier","src":"22144:3:28"},{"kind":"number","nativeSrc":"22149:3:28","nodeType":"YulLiteral","src":"22149:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22140:3:28","nodeType":"YulIdentifier","src":"22140:3:28"},"nativeSrc":"22140:13:28","nodeType":"YulFunctionCall","src":"22140:13:28"},{"name":"value4","nativeSrc":"22155:6:28","nodeType":"YulIdentifier","src":"22155:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22133:6:28","nodeType":"YulIdentifier","src":"22133:6:28"},"nativeSrc":"22133:29:28","nodeType":"YulFunctionCall","src":"22133:29:28"},"nativeSrc":"22133:29:28","nodeType":"YulExpressionStatement","src":"22133:29:28"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"22182:3:28","nodeType":"YulIdentifier","src":"22182:3:28"},{"kind":"number","nativeSrc":"22187:3:28","nodeType":"YulLiteral","src":"22187:3:28","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22178:3:28","nodeType":"YulIdentifier","src":"22178:3:28"},"nativeSrc":"22178:13:28","nodeType":"YulFunctionCall","src":"22178:13:28"},{"name":"value5","nativeSrc":"22193:6:28","nodeType":"YulIdentifier","src":"22193:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22171:6:28","nodeType":"YulIdentifier","src":"22171:6:28"},"nativeSrc":"22171:29:28","nodeType":"YulFunctionCall","src":"22171:29:28"},"nativeSrc":"22171:29:28","nodeType":"YulExpressionStatement","src":"22171:29:28"},{"nativeSrc":"22209:20:28","nodeType":"YulAssignment","src":"22209:20:28","value":{"arguments":[{"name":"pos","nativeSrc":"22220:3:28","nodeType":"YulIdentifier","src":"22220:3:28"},{"kind":"number","nativeSrc":"22225:3:28","nodeType":"YulLiteral","src":"22225:3:28","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"22216:3:28","nodeType":"YulIdentifier","src":"22216:3:28"},"nativeSrc":"22216:13:28","nodeType":"YulFunctionCall","src":"22216:13:28"},"variableNames":[{"name":"end","nativeSrc":"22209:3:28","nodeType":"YulIdentifier","src":"22209:3:28"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"21725:510:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21920:3:28","nodeType":"YulTypedName","src":"21920:3:28","type":""},{"name":"value5","nativeSrc":"21925:6:28","nodeType":"YulTypedName","src":"21925:6:28","type":""},{"name":"value4","nativeSrc":"21933:6:28","nodeType":"YulTypedName","src":"21933:6:28","type":""},{"name":"value3","nativeSrc":"21941:6:28","nodeType":"YulTypedName","src":"21941:6:28","type":""},{"name":"value2","nativeSrc":"21949:6:28","nodeType":"YulTypedName","src":"21949:6:28","type":""},{"name":"value1","nativeSrc":"21957:6:28","nodeType":"YulTypedName","src":"21957:6:28","type":""},{"name":"value0","nativeSrc":"21965:6:28","nodeType":"YulTypedName","src":"21965:6:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21976:3:28","nodeType":"YulTypedName","src":"21976:3:28","type":""}],"src":"21725:510:28"},{"body":{"nativeSrc":"22414:235:28","nodeType":"YulBlock","src":"22414:235:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22431:9:28","nodeType":"YulIdentifier","src":"22431:9:28"},{"kind":"number","nativeSrc":"22442:2:28","nodeType":"YulLiteral","src":"22442:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"22424:6:28","nodeType":"YulIdentifier","src":"22424:6:28"},"nativeSrc":"22424:21:28","nodeType":"YulFunctionCall","src":"22424:21:28"},"nativeSrc":"22424:21:28","nodeType":"YulExpressionStatement","src":"22424:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22465:9:28","nodeType":"YulIdentifier","src":"22465:9:28"},{"kind":"number","nativeSrc":"22476:2:28","nodeType":"YulLiteral","src":"22476:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22461:3:28","nodeType":"YulIdentifier","src":"22461:3:28"},"nativeSrc":"22461:18:28","nodeType":"YulFunctionCall","src":"22461:18:28"},{"kind":"number","nativeSrc":"22481:2:28","nodeType":"YulLiteral","src":"22481:2:28","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"22454:6:28","nodeType":"YulIdentifier","src":"22454:6:28"},"nativeSrc":"22454:30:28","nodeType":"YulFunctionCall","src":"22454:30:28"},"nativeSrc":"22454:30:28","nodeType":"YulExpressionStatement","src":"22454:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22504:9:28","nodeType":"YulIdentifier","src":"22504:9:28"},{"kind":"number","nativeSrc":"22515:2:28","nodeType":"YulLiteral","src":"22515:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22500:3:28","nodeType":"YulIdentifier","src":"22500:3:28"},"nativeSrc":"22500:18:28","nodeType":"YulFunctionCall","src":"22500:18:28"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"22520:34:28","nodeType":"YulLiteral","src":"22520:34:28","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"22493:6:28","nodeType":"YulIdentifier","src":"22493:6:28"},"nativeSrc":"22493:62:28","nodeType":"YulFunctionCall","src":"22493:62:28"},"nativeSrc":"22493:62:28","nodeType":"YulExpressionStatement","src":"22493:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22575:9:28","nodeType":"YulIdentifier","src":"22575:9:28"},{"kind":"number","nativeSrc":"22586:2:28","nodeType":"YulLiteral","src":"22586:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22571:3:28","nodeType":"YulIdentifier","src":"22571:3:28"},"nativeSrc":"22571:18:28","nodeType":"YulFunctionCall","src":"22571:18:28"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"22591:15:28","nodeType":"YulLiteral","src":"22591:15:28","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"22564:6:28","nodeType":"YulIdentifier","src":"22564:6:28"},"nativeSrc":"22564:43:28","nodeType":"YulFunctionCall","src":"22564:43:28"},"nativeSrc":"22564:43:28","nodeType":"YulExpressionStatement","src":"22564:43:28"},{"nativeSrc":"22616:27:28","nodeType":"YulAssignment","src":"22616:27:28","value":{"arguments":[{"name":"headStart","nativeSrc":"22628:9:28","nodeType":"YulIdentifier","src":"22628:9:28"},{"kind":"number","nativeSrc":"22639:3:28","nodeType":"YulLiteral","src":"22639:3:28","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22624:3:28","nodeType":"YulIdentifier","src":"22624:3:28"},"nativeSrc":"22624:19:28","nodeType":"YulFunctionCall","src":"22624:19:28"},"variableNames":[{"name":"tail","nativeSrc":"22616:4:28","nodeType":"YulIdentifier","src":"22616:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22240:409:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22391:9:28","nodeType":"YulTypedName","src":"22391:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22405:4:28","nodeType":"YulTypedName","src":"22405:4:28","type":""}],"src":"22240:409:28"},{"body":{"nativeSrc":"22783:119:28","nodeType":"YulBlock","src":"22783:119:28","statements":[{"nativeSrc":"22793:26:28","nodeType":"YulAssignment","src":"22793:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"22805:9:28","nodeType":"YulIdentifier","src":"22805:9:28"},{"kind":"number","nativeSrc":"22816:2:28","nodeType":"YulLiteral","src":"22816:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22801:3:28","nodeType":"YulIdentifier","src":"22801:3:28"},"nativeSrc":"22801:18:28","nodeType":"YulFunctionCall","src":"22801:18:28"},"variableNames":[{"name":"tail","nativeSrc":"22793:4:28","nodeType":"YulIdentifier","src":"22793:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"22835:9:28","nodeType":"YulIdentifier","src":"22835:9:28"},{"name":"value0","nativeSrc":"22846:6:28","nodeType":"YulIdentifier","src":"22846:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22828:6:28","nodeType":"YulIdentifier","src":"22828:6:28"},"nativeSrc":"22828:25:28","nodeType":"YulFunctionCall","src":"22828:25:28"},"nativeSrc":"22828:25:28","nodeType":"YulExpressionStatement","src":"22828:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22873:9:28","nodeType":"YulIdentifier","src":"22873:9:28"},{"kind":"number","nativeSrc":"22884:2:28","nodeType":"YulLiteral","src":"22884:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22869:3:28","nodeType":"YulIdentifier","src":"22869:3:28"},"nativeSrc":"22869:18:28","nodeType":"YulFunctionCall","src":"22869:18:28"},{"name":"value1","nativeSrc":"22889:6:28","nodeType":"YulIdentifier","src":"22889:6:28"}],"functionName":{"name":"mstore","nativeSrc":"22862:6:28","nodeType":"YulIdentifier","src":"22862:6:28"},"nativeSrc":"22862:34:28","nodeType":"YulFunctionCall","src":"22862:34:28"},"nativeSrc":"22862:34:28","nodeType":"YulExpressionStatement","src":"22862:34:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"22654:248:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22744:9:28","nodeType":"YulTypedName","src":"22744:9:28","type":""},{"name":"value1","nativeSrc":"22755:6:28","nodeType":"YulTypedName","src":"22755:6:28","type":""},{"name":"value0","nativeSrc":"22763:6:28","nodeType":"YulTypedName","src":"22763:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22774:4:28","nodeType":"YulTypedName","src":"22774:4:28","type":""}],"src":"22654:248:28"},{"body":{"nativeSrc":"23044:150:28","nodeType":"YulBlock","src":"23044:150:28","statements":[{"nativeSrc":"23054:27:28","nodeType":"YulVariableDeclaration","src":"23054:27:28","value":{"arguments":[{"name":"value0","nativeSrc":"23074:6:28","nodeType":"YulIdentifier","src":"23074:6:28"}],"functionName":{"name":"mload","nativeSrc":"23068:5:28","nodeType":"YulIdentifier","src":"23068:5:28"},"nativeSrc":"23068:13:28","nodeType":"YulFunctionCall","src":"23068:13:28"},"variables":[{"name":"length","nativeSrc":"23058:6:28","nodeType":"YulTypedName","src":"23058:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"23129:6:28","nodeType":"YulIdentifier","src":"23129:6:28"},{"kind":"number","nativeSrc":"23137:4:28","nodeType":"YulLiteral","src":"23137:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23125:3:28","nodeType":"YulIdentifier","src":"23125:3:28"},"nativeSrc":"23125:17:28","nodeType":"YulFunctionCall","src":"23125:17:28"},{"name":"pos","nativeSrc":"23144:3:28","nodeType":"YulIdentifier","src":"23144:3:28"},{"name":"length","nativeSrc":"23149:6:28","nodeType":"YulIdentifier","src":"23149:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"23090:34:28","nodeType":"YulIdentifier","src":"23090:34:28"},"nativeSrc":"23090:66:28","nodeType":"YulFunctionCall","src":"23090:66:28"},"nativeSrc":"23090:66:28","nodeType":"YulExpressionStatement","src":"23090:66:28"},{"nativeSrc":"23165:23:28","nodeType":"YulAssignment","src":"23165:23:28","value":{"arguments":[{"name":"pos","nativeSrc":"23176:3:28","nodeType":"YulIdentifier","src":"23176:3:28"},{"name":"length","nativeSrc":"23181:6:28","nodeType":"YulIdentifier","src":"23181:6:28"}],"functionName":{"name":"add","nativeSrc":"23172:3:28","nodeType":"YulIdentifier","src":"23172:3:28"},"nativeSrc":"23172:16:28","nodeType":"YulFunctionCall","src":"23172:16:28"},"variableNames":[{"name":"end","nativeSrc":"23165:3:28","nodeType":"YulIdentifier","src":"23165:3:28"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"22907:287:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23020:3:28","nodeType":"YulTypedName","src":"23020:3:28","type":""},{"name":"value0","nativeSrc":"23025:6:28","nodeType":"YulTypedName","src":"23025:6:28","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23036:3:28","nodeType":"YulTypedName","src":"23036:3:28","type":""}],"src":"22907:287:28"},{"body":{"nativeSrc":"23373:179:28","nodeType":"YulBlock","src":"23373:179:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23390:9:28","nodeType":"YulIdentifier","src":"23390:9:28"},{"kind":"number","nativeSrc":"23401:2:28","nodeType":"YulLiteral","src":"23401:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"23383:6:28","nodeType":"YulIdentifier","src":"23383:6:28"},"nativeSrc":"23383:21:28","nodeType":"YulFunctionCall","src":"23383:21:28"},"nativeSrc":"23383:21:28","nodeType":"YulExpressionStatement","src":"23383:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23424:9:28","nodeType":"YulIdentifier","src":"23424:9:28"},{"kind":"number","nativeSrc":"23435:2:28","nodeType":"YulLiteral","src":"23435:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23420:3:28","nodeType":"YulIdentifier","src":"23420:3:28"},"nativeSrc":"23420:18:28","nodeType":"YulFunctionCall","src":"23420:18:28"},{"kind":"number","nativeSrc":"23440:2:28","nodeType":"YulLiteral","src":"23440:2:28","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"23413:6:28","nodeType":"YulIdentifier","src":"23413:6:28"},"nativeSrc":"23413:30:28","nodeType":"YulFunctionCall","src":"23413:30:28"},"nativeSrc":"23413:30:28","nodeType":"YulExpressionStatement","src":"23413:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23463:9:28","nodeType":"YulIdentifier","src":"23463:9:28"},{"kind":"number","nativeSrc":"23474:2:28","nodeType":"YulLiteral","src":"23474:2:28","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23459:3:28","nodeType":"YulIdentifier","src":"23459:3:28"},"nativeSrc":"23459:18:28","nodeType":"YulFunctionCall","src":"23459:18:28"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"23479:31:28","nodeType":"YulLiteral","src":"23479:31:28","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"23452:6:28","nodeType":"YulIdentifier","src":"23452:6:28"},"nativeSrc":"23452:59:28","nodeType":"YulFunctionCall","src":"23452:59:28"},"nativeSrc":"23452:59:28","nodeType":"YulExpressionStatement","src":"23452:59:28"},{"nativeSrc":"23520:26:28","nodeType":"YulAssignment","src":"23520:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"23532:9:28","nodeType":"YulIdentifier","src":"23532:9:28"},{"kind":"number","nativeSrc":"23543:2:28","nodeType":"YulLiteral","src":"23543:2:28","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23528:3:28","nodeType":"YulIdentifier","src":"23528:3:28"},"nativeSrc":"23528:18:28","nodeType":"YulFunctionCall","src":"23528:18:28"},"variableNames":[{"name":"tail","nativeSrc":"23520:4:28","nodeType":"YulIdentifier","src":"23520:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23199:353:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23350:9:28","nodeType":"YulTypedName","src":"23350:9:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23364:4:28","nodeType":"YulTypedName","src":"23364:4:28","type":""}],"src":"23199:353:28"},{"body":{"nativeSrc":"23678:99:28","nodeType":"YulBlock","src":"23678:99:28","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"23695:9:28","nodeType":"YulIdentifier","src":"23695:9:28"},{"kind":"number","nativeSrc":"23706:2:28","nodeType":"YulLiteral","src":"23706:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"23688:6:28","nodeType":"YulIdentifier","src":"23688:6:28"},"nativeSrc":"23688:21:28","nodeType":"YulFunctionCall","src":"23688:21:28"},"nativeSrc":"23688:21:28","nodeType":"YulExpressionStatement","src":"23688:21:28"},{"nativeSrc":"23718:53:28","nodeType":"YulAssignment","src":"23718:53:28","value":{"arguments":[{"name":"value0","nativeSrc":"23744:6:28","nodeType":"YulIdentifier","src":"23744:6:28"},{"arguments":[{"name":"headStart","nativeSrc":"23756:9:28","nodeType":"YulIdentifier","src":"23756:9:28"},{"kind":"number","nativeSrc":"23767:2:28","nodeType":"YulLiteral","src":"23767:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23752:3:28","nodeType":"YulIdentifier","src":"23752:3:28"},"nativeSrc":"23752:18:28","nodeType":"YulFunctionCall","src":"23752:18:28"}],"functionName":{"name":"abi_encode_string","nativeSrc":"23726:17:28","nodeType":"YulIdentifier","src":"23726:17:28"},"nativeSrc":"23726:45:28","nodeType":"YulFunctionCall","src":"23726:45:28"},"variableNames":[{"name":"tail","nativeSrc":"23718:4:28","nodeType":"YulIdentifier","src":"23718:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23557:220:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23647:9:28","nodeType":"YulTypedName","src":"23647:9:28","type":""},{"name":"value0","nativeSrc":"23658:6:28","nodeType":"YulTypedName","src":"23658:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23669:4:28","nodeType":"YulTypedName","src":"23669:4:28","type":""}],"src":"23557:220:28"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_contract$_IRealmId_$2979__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Reason code already exists\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not a valid Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not a valid Admin Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Season already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad26fe53f2fca31247987ef6a4af0496ee097218b3387432e3c6fed944f205a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Reason code does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ab09f98e2d0df4e964b9b7f9b0dd1b2bfe87c01f728557013892d40ee8359279__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Sender is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_b755ce87409e8192f91119a3d1231484c648c9b5603f8975131c450383d3f8aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Signer is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid consume reason code\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        mstore(add(pos, 128), value4)\n        mstore(add(pos, 160), value5)\n        end := add(pos, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1519":[{"length":32,"start":2276},{"length":32,"start":2457},{"length":32,"start":3861},{"length":32,"start":4037},{"length":32,"start":4366}]},"linkReferences":{},"object":"6080604052600436106101e35760003560e01c8063906405a311610102578063d14a5c7111610095578063e564a0e211610064578063e564a0e2146105e1578063f2fde38b14610601578063f72c0d8b14610621578063f95159621461065557600080fd5b8063d14a5c7114610561578063d547741f14610581578063dc893ce4146105a1578063df00bb24146105c157600080fd5b80639d70b005116100d15780639d70b005146104d7578063a3b0b5a3146104f7578063ad3b1d481461052b578063bcb396211461054b57600080fd5b8063906405a31461045757806391d148541461047757806399d342ac146104975780639cc7f708146104b757600080fd5b8063485cc9551161017a578063794459be11610149578063794459be146103e257806386a8e98a146104025780638bb9c5bf146104225780638da5cb5b1461044257600080fd5b8063485cc9551461035c5780634f1ef2861461037c57806351955dfc1461038f57806352d1902d146103cd57600080fd5b80632f2ff15d116101b65780632f2ff15d146102bc5780633659cfe6146102dc5780633f30b00f146102fc5780634529cc1b1461031c57600080fd5b8063098b6419146101e8578063141a468c1461021b57806318ee89f0146102485780632b48dc721461026a575b600080fd5b3480156101f457600080fd5b50610208610203366004612f1d565b610685565b6040519081526020015b60405180910390f35b34801561022757600080fd5b50610208610236366004612f6d565b60696020526000908152604090205481565b34801561025457600080fd5b50610268610263366004612f86565b6107e6565b005b34801561027657600080fd5b506067546102979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610212565b3480156102c857600080fd5b506102686102d7366004612fe3565b61089f565b3480156102e857600080fd5b506102686102f7366004613013565b6108cd565b34801561030857600080fd5b50610268610317366004613030565b610ad7565b34801561032857600080fd5b5061034c610337366004612f6d565b60666020526000908152604090205460ff1681565b6040519015158152602001610212565b34801561036857600080fd5b506102686103773660046130d6565b610c1e565b61026861038a366004613104565b610efe565b34801561039b57600080fd5b506102086103aa366004613168565b606860209081526000938452604080852082529284528284209052825290205481565b3480156103d957600080fd5b506102086110f4565b3480156103ee57600080fd5b506102086103fd366004613194565b6111e0565b34801561040e57600080fd5b5061026861041d366004612f6d565b61134a565b34801561042e57600080fd5b5061026861043d366004612f6d565b61143a565b34801561044e57600080fd5b5061029761144e565b34801561046357600080fd5b50610268610472366004613030565b61147a565b34801561048357600080fd5b5061034c610492366004612fe3565b6115c1565b3480156104a357600080fd5b506102686104b23660046131e7565b61160c565b3480156104c357600080fd5b506102086104d2366004612f6d565b6116c0565b3480156104e357600080fd5b506102686104f2366004613265565b611787565b34801561050357600080fd5b506102087f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a981565b34801561053757600080fd5b506102086105463660046132d1565b611839565b34801561055757600080fd5b5061020860655481565b34801561056d57600080fd5b5061026861057c366004613168565b6118f7565b34801561058d57600080fd5b5061026861059c366004612fe3565b611ab6565b3480156105ad57600080fd5b506102686105bc3660046132f3565b611ad9565b3480156105cd57600080fd5b506102086105dc366004613168565b611dc1565b3480156105ed57600080fd5b506102686105fc366004613344565b611de6565b34801561060d57600080fd5b5061026861061c366004613013565b611e8d565b34801561062d57600080fd5b506102087f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b34801561066157600080fd5b5061034c610670366004612f6d565b606a6020526000908152604090205460ff1681565b6067546040517fcad6b901000000000000000000000000000000000000000000000000000000008152600091829173ffffffffffffffffffffffffffffffffffffffff9091169063cad6b901906106e29086908890600401613409565b602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610723919061342b565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810183905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc919061342b565b60009687526068602090815260408089209489529381528388209188525250909320549392505050565b61081b7f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9335b610814611ea1565b9190611ecf565b600085815260686020908152604080832087845282528083208684529091528120805484929061084c908490613473565b909155505060408051858152602081018590529081018390528190869033907f9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad829060600160405180910390a45050505050565b336108b2816108ac611f55565b90611f83565b6108c88383836108c0611ea1565b929190611fee565b505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610a0c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610aaf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161098e565b610ab8816120c5565b60408051600080825260208201909252610ad4918391906120ef565b50565b610ae4335b6108ac611f55565b60005b8151811015610be357606a6000838381518110610b0657610b06613486565b60209081029190910181015182528101919091526040016000205460ff1615610b8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520616c726561647920657869737473000000000000604482015260640161098e565b6001606a6000848481518110610ba357610ba3613486565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610bdb906134b5565b915050610ae7565b507f0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e81604051610c1391906134ed565b60405180910390a150565b600054610100900460ff1615808015610c3e5750600054600160ff909116105b80610c585750303b158015610c58575060005460ff166001145b610ce4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161098e565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610d4257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610d4a6122ee565b610d5c82610d56611f55565b90612387565b73ffffffffffffffffffffffffffffffffffffffff8316610dd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f7420612076616c696420436f6e7472616374204164647265737300000000604482015260640161098e565b73ffffffffffffffffffffffffffffffffffffffff8216610e56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420612076616c69642041646d696e204164647265737300000000000000604482015260640161098e565b606780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905580156108c857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610fc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c0000000000000000000000000000000000000000606482015260840161098e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110387f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146110db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f78790000000000000000000000000000000000000000606482015260840161098e565b6110e4826120c5565b6110f0828260016120ef565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146111bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161098e565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6067546040517fcad6b901000000000000000000000000000000000000000000000000000000008152600091829173ffffffffffffffffffffffffffffffffffffffff9091169063cad6b9019061123d9086908890600401613409565b602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e919061342b565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810183905291925060009173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa1580156112f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611317919061342b565b60655460009081526068602090815260408083209583529481528482209282529190915291909120549150505b92915050565b61135333610adc565b60008181526066602052604090205460ff16156113cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f536561736f6e20616c7265616479207365740000000000000000000000000000604482015260640161098e565b60658190556000818152606660205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef3190610c139083815260200190565b610ad43382611447611ea1565b91906123c6565b600061147561145b611f55565b5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b61148333610adc565b60005b815181101561159157606a60008383815181106114a5576114a5613486565b60209081029190910181015182528101919091526040016000205460ff16611529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520646f6573206e6f74206578697374000000000000604482015260640161098e565b606a600083838151811061153f5761153f613486565b602090810291909101810151825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580611589816134b5565b915050611486565b507f5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff981604051610c1391906134ed565b600061160583836115d0611ea1565b60009283526020908152604080842073ffffffffffffffffffffffffffffffffffffffff909316845291905290205460ff1690565b9392505050565b6067546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b90190611665908a908c90600401613409565b602060405180830381865afa158015611682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a6919061342b565b90506116b6818787878787611ad9565b5050505050505050565b6067546040517fa9735f9400000000000000000000000000000000000000000000000000000000815260048101839052600091829173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa158015611734573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611758919061342b565b606554600090815260686020908152604080832096835295815285822092825291909152929092205492915050565b6067546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b901906117e09088908a90600401613409565b602060405180830381865afa1580156117fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611821919061342b565b905061183087828686866107e6565b50505050505050565b6067546040517fa9735f9400000000000000000000000000000000000000000000000000000000815260048101839052600091829173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa1580156118ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d1919061342b565b600094855260686020908152604080872095875294815284862091865252505090205490565b6067546040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905260009173ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa158015611967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198b9190613531565b90503373ffffffffffffffffffffffffffffffffffffffff821614611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f53656e646572206973206e6f7420746865206f776e6572000000000000000000604482015260640161098e565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810186905260009173ffffffffffffffffffffffffffffffffffffffff169063a9735f9490602401602060405180830381865afa158015611a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa0919061342b565b9050611aaf8582868633612462565b5050505050565b33611ac3816108ac611f55565b6108c8838383611ad1611ea1565b92919061262c565b6067546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810188905260009173ffffffffffffffffffffffffffffffffffffffff169063a9735f9490602401602060405180830381865afa158015611b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6d919061342b565b90506000611b908888606960008c815260200190815260200160002054896126f6565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052909150600090605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611c52573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101516067547f6352211e000000000000000000000000000000000000000000000000000000008352600483018e90529093506000925073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa158015611cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d109190613531565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611da7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5369676e6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161098e565b611db48b868c8c85612462565b5050505050505050505050565b600083815260696020526040812054611dde9085908590856126f6565b949350505050565b6067546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b90190611e3f9087908990600401613409565b602060405180830381865afa158015611e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e80919061342b565b9050611aaf8184846118f7565b610ad43382611e9a611f55565b91906127dd565b60008061134460017fc8827d3282af6f37b64c3e9e6f3ac9df286ab0bb0fccd6f8661bf19adb368b2361354e565b60008281526020848152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166108c8576040517f7aa728820000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff8216602482015260440161098e565b60008061134460017fc9ed16f33ab3a66c84bfd83099ccb2a8845871e2e1c1928f63797152f0fd54cd61354e565b815473ffffffffffffffffffffffffffffffffffffffff8281169116146110f0576040517f2ef4875e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161098e565b60008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff166120bf5760008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8681168086529184529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055815187815292830152918316918101919091527f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d906060015b60405180910390a15b50505050565b610ad47f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e33361080c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612122576108c8836128f1565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156121a7575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526121a49181019061342b565b60015b612233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f742055555053000000000000000000000000000000000000606482015260840161098e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146122e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c65555549440000000000000000000000000000000000000000000000606482015260840161098e565b506108c88383836129fb565b600054610100900460ff16612385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161098e565b565b6123bc6123b560017f5b388d90dc1312ba799f321972f13311234fa1163bcabec7cf66101c4876eb8461354e565b6001612a20565b6110f08282612a6c565b6123d1838284611ecf565b60008181526020848152604080832073ffffffffffffffffffffffffffffffffffffffff86168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580518481529182018390528101919091527ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b90606001610ef1565b606554600090815260686020908152604080832088845282528083208784529091529020548311156124f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161098e565b6000828152606a602052604090205460ff16612568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420636f6e73756d6520726561736f6e20636f64650000000000604482015260640161098e565b606554600090815260686020908152604080832088845282528083208784529091528120805485929061259c90849061354e565b9091555050606554604080513381526020810187905290810185905273ffffffffffffffffffffffffffffffffffffffff8316606082015283919087907fe514533875fbd3f8f396088d636e746599d8b5c3ba77e9ccfa9fc01ff70646019060800160405180910390a46000858152606960205260408120805491612620836134b5565b91905055505050505050565b60008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915290205460ff16156120bf5760008381526020858152604080832073ffffffffffffffffffffffffffffffffffffffff8681168086529184529382902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055815187815292830152918316918101919091527ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b906060016120b6565b6067546040517fa9735f9400000000000000000000000000000000000000000000000000000000815260048101869052600091829173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa15801561276a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278e919061342b565b6065546040805160208082019a909a52808201939093526060830197909752608082015260a0810193909352505060c0808201929092528251808203909201825260e001909152805191012090565b825473ffffffffffffffffffffffffffffffffffffffff908116908316811461284a576040517f2ef4875e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161098e565b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146120bf5783547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8381169182178655604051908316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350505050565b73ffffffffffffffffffffffffffffffffffffffff81163b612995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161098e565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612a0483612b29565b600082511180612a115750805b156108c8576120bf8383612b76565b81548290828110612a67576040517fbf0c18ec000000000000000000000000000000000000000000000000000000008152600481018290526024810184905260440161098e565b505550565b73ffffffffffffffffffffffffffffffffffffffff811615612af45781547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff821690811783556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35b6110f07f7f5828d0000000000000000000000000000000000000000000000000000000006001612b22612b9b565b9190612bc9565b612b32816128f1565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611605838360405180606001604052806027815260200161359160279139612ca5565b60008061134460017fca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e61354e565b7c01000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612c41576040517f72c683bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000919091166000908152602092909252604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051612ccf9190613561565b600060405180830381855af49150503d8060008114612d0a576040519150601f19603f3d011682016040523d82523d6000602084013e612d0f565b606091505b5091509150612d2086838387612d2a565b9695505050505050565b60608315612dc0578251600003612db95773ffffffffffffffffffffffffffffffffffffffff85163b612db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161098e565b5081611dde565b611dde8383815115612dd55781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e919061357d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612e7f57612e7f612e09565b604052919050565b600067ffffffffffffffff831115612ea157612ea1612e09565b612ed260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601612e38565b9050828152838383011115612ee657600080fd5b828260208301376000602084830101529392505050565b600082601f830112612f0e57600080fd5b61160583833560208501612e87565b600080600060608486031215612f3257600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612f5757600080fd5b612f6386828701612efd565b9150509250925092565b600060208284031215612f7f57600080fd5b5035919050565b600080600080600060a08688031215612f9e57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b73ffffffffffffffffffffffffffffffffffffffff81168114610ad457600080fd5b60008060408385031215612ff657600080fd5b82359150602083013561300881612fc1565b809150509250929050565b60006020828403121561302557600080fd5b813561160581612fc1565b6000602080838503121561304357600080fd5b823567ffffffffffffffff8082111561305b57600080fd5b818501915085601f83011261306f57600080fd5b81358181111561308157613081612e09565b8060051b9150613092848301612e38565b81815291830184019184810190888411156130ac57600080fd5b938501935b838510156130ca578435825293850193908501906130b1565b98975050505050505050565b600080604083850312156130e957600080fd5b82356130f481612fc1565b9150602083013561300881612fc1565b6000806040838503121561311757600080fd5b823561312281612fc1565b9150602083013567ffffffffffffffff81111561313e57600080fd5b8301601f8101851361314f57600080fd5b61315e85823560208401612e87565b9150509250929050565b60008060006060848603121561317d57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156131a757600080fd5b82359150602083013567ffffffffffffffff8111156131c557600080fd5b61315e85828601612efd565b803560ff811681146131e257600080fd5b919050565b600080600080600080600060e0888a03121561320257600080fd5b87359650602088013567ffffffffffffffff81111561322057600080fd5b61322c8a828b01612efd565b9650506040880135945060608801359350613249608089016131d1565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060c0878903121561327e57600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156132a357600080fd5b6132af89828a01612efd565b945050606087013592506080870135915060a087013590509295509295509295565b600080604083850312156132e457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561330c57600080fd5b86359550602087013594506040870135935061332a606088016131d1565b92506080870135915060a087013590509295509295509295565b6000806000806080858703121561335a57600080fd5b84359350602085013567ffffffffffffffff81111561337857600080fd5b61338487828801612efd565b949794965050505060408301359260600135919050565b60005b838110156133b657818101518382015260200161339e565b50506000910152565b600081518084526133d781602086016020860161339b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061341c60408301856133bf565b90508260208301529392505050565b60006020828403121561343d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561134457611344613444565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036134e6576134e6613444565b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561352557835183529284019291840191600101613509565b50909695505050505050565b60006020828403121561354357600080fd5b815161160581612fc1565b8181038181111561134457611344613444565b6000825161357381846020870161339b565b9190910192915050565b60208152600061160560208301846133bf56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e61c3ce3f5cda44350cf395b1eafc277f6c2e2431e606ed6743e6e31829b4f164736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x906405A3 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD14A5C71 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE564A0E2 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE564A0E2 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xF9515962 EQ PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD14A5C71 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xDC893CE4 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xDF00BB24 EQ PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D70B005 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x9D70B005 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xAD3B1D48 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xBCB39621 EQ PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x906405A3 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x99D342AC EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x9CC7F708 EQ PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x794459BE GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x794459BE EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x86A8E98A EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8BB9C5BF EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x51955DFC EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3F30B00F EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x4529CC1B EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98B6419 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x141A468C EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x18EE89F0 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x2B48DC72 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F1D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F86 JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x67 SLOAD PUSH2 0x297 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0xAD7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x30D6 JUMP JUMPDEST PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x268 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3104 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3168 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x10F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x144E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0x15C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E7 JUMP JUMPDEST PUSH2 0x160C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3265 JUMP JUMPDEST PUSH2 0x1787 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0x1839 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x3168 JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0x1AB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x32F3 JUMP JUMPDEST PUSH2 0x1AD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x3168 JUMP JUMPDEST PUSH2 0x1DC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x3344 JUMP JUMPDEST PUSH2 0x1DE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x1E8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0x670 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x6E2 SWAP1 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP10 KECCAK256 SWAP5 DUP10 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP9 KECCAK256 SWAP2 DUP9 MSTORE MSTORE POP SWAP1 SWAP4 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x81B PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 CALLER JUMPDEST PUSH2 0x814 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x84C SWAP1 DUP5 SWAP1 PUSH2 0x3473 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x9092BF6BD1CF7DB4FCF41AEDC7C0333B51C57F5B80B429BC3D9CAA5587C6AD82 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x8B2 DUP2 PUSH2 0x8AC PUSH2 0x1F55 JUMP JUMPDEST SWAP1 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x8C8 DUP4 DUP4 DUP4 PUSH2 0x8C0 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA0C PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH2 0xAB8 DUP2 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAD4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x20EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE4 CALLER JUMPDEST PUSH2 0x8AC PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x6A PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB06 JUMPI PUSH2 0xB06 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6A PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xBDB SWAP1 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE7 JUMP JUMPDEST POP PUSH32 0xD8C56A8918EC09C2FE3C4D9FCC00ECE66DF217A1AB3AD768DD0A71620DA5B4E DUP2 PUSH1 0x40 MLOAD PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC3E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC58 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC58 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xD42 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD4A PUSH2 0x22EE JUMP JUMPDEST PUSH2 0xD5C DUP3 PUSH2 0xD56 PUSH2 0x1F55 JUMP JUMPDEST SWAP1 PUSH2 0x2387 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C696420436F6E7472616374204164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xE56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C69642041646D696E204164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1038 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH2 0x10E4 DUP3 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x10F0 DUP3 DUP3 PUSH1 0x1 PUSH2 0x20EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x123D SWAP1 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1353 CALLER PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536561736F6E20616C7265616479207365740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x65 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x61228C895F8BA06548597D3E34A23BC0ECB6D1E62A1EB3FA30BE04883A17EF31 SWAP1 PUSH2 0xC13 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xAD4 CALLER DUP3 PUSH2 0x1447 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1475 PUSH2 0x145B PUSH2 0x1F55 JUMP JUMPDEST SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1483 CALLER PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x6A PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14A5 JUMPI PUSH2 0x14A5 PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520646F6573206E6F74206578697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x6A PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x153F JUMPI PUSH2 0x153F PUSH2 0x3486 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 PUSH2 0x1589 DUP2 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1486 JUMP JUMPDEST POP PUSH32 0x5B2C9FCBB27D48BDBFC59F0564B5BA81539309EBF09A940FAD64D171BCFB9FF9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x34ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1605 DUP4 DUP4 PUSH2 0x15D0 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x1665 SWAP1 DUP11 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1682 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x16B6 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1AD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1734 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1758 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x17E0 SWAP1 DUP9 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1821 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x1830 DUP8 DUP3 DUP7 DUP7 DUP7 PUSH2 0x7E6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE POP POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198B SWAP2 SWAP1 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E646572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA0 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x1AAF DUP6 DUP3 DUP7 DUP7 CALLER PUSH2 0x2462 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x1AC3 DUP2 PUSH2 0x8AC PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x8C8 DUP4 DUP4 DUP4 PUSH2 0x1AD1 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x262C JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B90 DUP9 DUP9 PUSH1 0x69 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD MLOAD PUSH1 0x67 SLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD DUP15 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x0 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x3531 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH2 0x1DB4 DUP12 DUP7 DUP13 DUP13 DUP6 PUSH2 0x2462 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1DDE SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 PUSH2 0x26F6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x1E3F SWAP1 DUP8 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3409 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E80 SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST SWAP1 POP PUSH2 0x1AAF DUP2 DUP5 DUP5 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0xAD4 CALLER DUP3 PUSH2 0x1E9A PUSH2 0x1F55 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 PUSH1 0x1 PUSH32 0xC8827D3282AF6F37B64C3E9E6F3AC9DF286AB0BB0FCCD6F8661BF19ADB368B23 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7AA7288200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 PUSH1 0x1 PUSH32 0xC9ED16F33AB3A66C84BFD83099CCB2A8845871E2E1C1928F63797152F0FD54CD PUSH2 0x354E JUMP JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x10F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2EF4875E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x20BF JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAD4 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 CALLER PUSH2 0x80C JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2122 JUMPI PUSH2 0x8C8 DUP4 PUSH2 0x28F1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x21A7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x21A4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2233 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x22E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST POP PUSH2 0x8C8 DUP4 DUP4 DUP4 PUSH2 0x29FB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2385 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x23BC PUSH2 0x23B5 PUSH1 0x1 PUSH32 0x5B388D90DC1312BA799F321972F13311234FA1163BCABEC7CF66101C4876EB84 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x1 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x10F0 DUP3 DUP3 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x23D1 DUP4 DUP3 DUP5 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x60 ADD PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x24F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E73756D6520726561736F6E20636F64650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x259C SWAP1 DUP5 SWAP1 PUSH2 0x354E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE DUP4 SWAP2 SWAP1 DUP8 SWAP1 PUSH32 0xE514533875FBD3F8F396088D636E746599D8B5C3BA77E9CCFA9FC01FF7064601 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2620 DUP4 PUSH2 0x34B5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20BF JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 PUSH1 0x60 ADD PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x276A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x278E SWAP2 SWAP1 PUSH2 0x342B JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0xC0 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xE0 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP4 AND DUP2 EQ PUSH2 0x284A JUMPI PUSH1 0x40 MLOAD PUSH32 0x2EF4875E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x98E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20BF JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 DUP3 OR DUP7 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x2995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x98E JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A04 DUP4 PUSH2 0x2B29 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2A11 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x20BF DUP4 DUP4 PUSH2 0x2B76 JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 DUP3 DUP2 LT PUSH2 0x2A67 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF0C18EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x98E JUMP JUMPDEST POP SSTORE POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x2AF4 JUMPI DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 JUMPDEST PUSH2 0x10F0 PUSH32 0x7F5828D000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH2 0x2B22 PUSH2 0x2B9B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH2 0x2B32 DUP2 PUSH2 0x28F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1605 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3591 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2CA5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1344 PUSH1 0x1 PUSH32 0xCA9D3E17F264B0F3984E2634E94ADB37FA3E6A8103F06AEAE6FA59E21C769F5E PUSH2 0x354E JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2C41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x72C683BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2CCF SWAP2 SWAP1 PUSH2 0x3561 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2D20 DUP7 DUP4 DUP4 DUP8 PUSH2 0x2D2A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2DC0 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2DB9 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x2DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x98E JUMP JUMPDEST POP DUP2 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x1DDE DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2DD5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x357D JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2E7F JUMPI PUSH2 0x2E7F PUSH2 0x2E09 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2EA1 JUMPI PUSH2 0x2EA1 PUSH2 0x2E09 JUMP JUMPDEST PUSH2 0x2ED2 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD PUSH2 0x2E38 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x2EE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1605 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F63 DUP7 DUP3 DUP8 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2F9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xAD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3008 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1605 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x305B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x306F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3081 JUMPI PUSH2 0x3081 PUSH2 0x2E09 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x3092 DUP5 DUP4 ADD PUSH2 0x2E38 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x30AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x30CA JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x30B1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x30F4 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3008 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3122 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x313E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x314F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x315E DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2E87 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x317D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x315E DUP6 DUP3 DUP7 ADD PUSH2 0x2EFD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x31E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x322C DUP11 DUP3 DUP12 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3249 PUSH1 0x80 DUP10 ADD PUSH2 0x31D1 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x327E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32AF DUP10 DUP3 DUP11 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x330C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x332A PUSH1 0x60 DUP9 ADD PUSH2 0x31D1 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x335A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3384 DUP8 DUP3 DUP9 ADD PUSH2 0x2EFD JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x339E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x33D7 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x339B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x341C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x33BF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x343D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x3444 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x34E6 JUMPI PUSH2 0x34E6 PUSH2 0x3444 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3525 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3509 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1605 DUP2 PUSH2 0x2FC1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x3444 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3573 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x339B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x33BF JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212201E61C3 0xCE EXTCODEHASH 0x5C 0xDA PREVRANDAO CALLDATALOAD 0xC RETURN SWAP6 0xB1 0xEA 0xFC 0x27 PUSH32 0x6C2E2431E606ED6743E6E31829B4F164736F6C63430008150033000000000000 ","sourceMap":"773:8152:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7524:316;;;;;;;;;;-1:-1:-1;7524:316:25;;;;;:::i;:::-;;:::i;:::-;;;1849:25:28;;;1837:2;1822:18;7524:316:25;;;;;;;;1528:41;;;;;;;;;;-1:-1:-1;1528:41:25;;;;;:::i;:::-;;;;;;;;;;;;;;4172:456;;;;;;;;;;-1:-1:-1;4172:456:25;;;;;:::i;:::-;;:::i;:::-;;1302:31;;;;;;;;;;-1:-1:-1;1302:31:25;;;;;;;;;;;2722:42:28;2710:55;;;2692:74;;2680:2;2665:18;1302:31:25;2529:243:28;1116:257:0;;;;;;;;;;-1:-1:-1;1116:257:0;;;;;:::i;:::-;;:::i;3387:195:20:-;;;;;;;;;;-1:-1:-1;3387:195:20;;;;;:::i;:::-;;:::i;3198:447:25:-;;;;;;;;;;-1:-1:-1;3198:447:25;;;;;:::i;:::-;;:::i;1232:39::-;;;;;;;;;;-1:-1:-1;1232:39:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4809:14:28;;4802:22;4784:41;;4772:2;4757:18;1232:39:25;4644:187:28;2323:405:25;;;;;;;;;;-1:-1:-1;2323:405:25;;;;;:::i;:::-;;:::i;3901:220:20:-;;;;;;:::i;:::-;;:::i;1364:83:25:-;;;;;;;;;;-1:-1:-1;1364:83:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3006:131:20;;;;;;;;;;;;;:::i;8062:307:25:-;;;;;;;;;;-1:-1:-1;8062:307:25;;;;;:::i;:::-;;:::i;2889:303::-;;;;;;;;;;-1:-1:-1;2889:303:25;;;;;:::i;:::-;;:::i;1994:124:0:-;;;;;;;;;;-1:-1:-1;1994:124:0;;;;;:::i;:::-;;:::i;710:120:1:-;;;;;;;;;;;;;:::i;3651:515:25:-;;;;;;;;;;-1:-1:-1;3651:515:25;;;;;:::i;:::-;;:::i;2159:162:0:-;;;;;;;;;;-1:-1:-1;2159:162:0;;;;;:::i;:::-;;:::i;5665:281:25:-;;;;;;;;;;-1:-1:-1;5665:281:25;;;;;:::i;:::-;;:::i;7846:210::-;;;;;;;;;;-1:-1:-1;7846:210:25;;;;;:::i;:::-;;:::i;4634:357::-;;;;;;;;;;-1:-1:-1;4634:357:25;;;;;:::i;:::-;;:::i;1025:68::-;;;;;;;;;;;;1066:27;1025:68;;7299:219;;;;;;;;;;-1:-1:-1;7299:219:25;;;;;:::i;:::-;;:::i;1198:28::-;;;;;;;;;;;;;;;;6924:369;;;;;;;;;;-1:-1:-1;6924:369:25;;;;;:::i;:::-;;:::i;1694:259:0:-;;;;;;;;;;-1:-1:-1;1694:259:0;;;;;:::i;:::-;;:::i;5952:719:25:-;;;;;;;;;;-1:-1:-1;5952:719:25;;;;;:::i;:::-;;:::i;8729:194::-;;;;;;;;;;-1:-1:-1;8729:194:25;;;;;:::i;:::-;;:::i;6677:241::-;;;;;;;;;;-1:-1:-1;6677:241:25;;;;;:::i;:::-;;:::i;864:152:1:-;;;;;;;;;;-1:-1:-1;864:152:1;;;;;:::i;:::-;;:::i;1099:66:25:-;;;;;;;;;;;;1139:26;1099:66;;1640:57;;;;;;;;;;-1:-1:-1;1640:57:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;7524:316;7660:15;;:45;;;;;7623:7;;;;7660:15;;;;;:26;;:45;;7687:5;;7694:10;;7660:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7740:15;;:35;;;;;;;;1849:25:28;;;7642:63:25;;-1:-1:-1;7715:22:25;;7740:15;;;;;:26;;1822:18:28;;7740:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7792:16;;;;:8;:16;;;;;;;;:25;;;;;;;;;:41;;;;-1:-1:-1;7792:41:25;;;;;7524:316;-1:-1:-1;;;7524:316:25:o;4172:456::-;4360:74;1066:27;719:10:23;4421:12:25;4360:29;:27;:29::i;:::-;:44;:74;:44;:74::i;:::-;4473:16;;;;:8;:16;;;;;;;;:25;;;;;;;;:41;;;;;;;;:51;;4518:6;;4473:16;:51;;4518:6;;4473:51;:::i;:::-;;;;-1:-1:-1;;4540:81:25;;;11752:25:28;;;11808:2;11793:18;;11786:34;;;11836:18;;;11829:34;;;4570:17:25;;4562:6;;4550:10;;4540:81;;11740:2:28;11725:18;4540:81:25;;;;;;;4172:456;;;;;:::o;1116:257:0:-;719:10:23;1226:66:0;719:10:23;1226:33:0;:31;:33::i;:::-;:56;;:66::i;:::-;1302:64;1342:4;1348:7;1357:8;1302:29;:27;:29::i;:::-;:39;:64;;:39;:64::i;:::-;1175:198;1116:257;;:::o;3387:195:20:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;12076:2:28;1873:80:20;;;12058:21:28;12115:2;12095:18;;;12088:30;12154:34;12134:18;;;12127:62;12225:14;12205:18;;;12198:42;12257:19;;1873:80:20;;;;;;;;;1995:6;1971:30;;:20;1312:66:17;1536:65;;;;1457:151;1971:20:20;:30;;;1963:87;;;;;;;12489:2:28;1963:87:20;;;12471:21:28;12528:2;12508:18;;;12501:30;12567:34;12547:18;;;12540:62;12638:14;12618:18;;;12611:42;12670:19;;1963:87:20;12287:408:28;1963:87:20;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3198:447:25:-;3282:70;719:10:23;3339:12:25;3282:33;:31;:33::i;:70::-;3367:9;3362:220;3386:12;:19;3382:1;:23;3362:220;;;3435:25;:42;3461:12;3474:1;3461:15;;;;;;;;:::i;:::-;;;;;;;;;;;;3435:42;;;;;;;;;;-1:-1:-1;3435:42:25;;;;3434:43;3426:82;;;;;;;13091:2:28;3426:82:25;;;13073:21:28;13130:2;13110:18;;;13103:30;13169:28;13149:18;;;13142:56;13215:18;;3426:82:25;12889:350:28;3426:82:25;3567:4;3522:25;:42;3548:12;3561:1;3548:15;;;;;;;;:::i;:::-;;;;;;;3522:42;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;3407:3;;;;;:::i;:::-;;;;3362:220;;;;3597:41;3625:12;3597:41;;;;;;:::i;:::-;;;;;;;;3198:447;:::o;2323:405::-;3279:19:19;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:19;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:19;1713:19:21;:23;;;3387:66:19;;-1:-1:-1;3436:12:19;;;;;:17;3387:66;3325:201;;;;;;;14283:2:28;3325:201:19;;;14265:21:28;14322:2;14302:18;;;14295:30;14361:34;14341:18;;;14334:62;14432:16;14412:18;;;14405:44;14466:19;;3325:201:19;14081:410:28;3325:201:19;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;2414:24:25::1;:22;:24::i;:::-;2448:51;2492:6;2448:33;:31;:33::i;:::-;:43:::0;::::1;:51::i;:::-;2518:39;::::0;::::1;2510:80;;;::::0;::::1;::::0;;14698:2:28;2510:80:25::1;::::0;::::1;14680:21:28::0;14737:2;14717:18;;;14710:30;14776;14756:18;;;14749:58;14824:18;;2510:80:25::1;14496:352:28::0;2510:80:25::1;2608:29;::::0;::::1;2600:67;;;::::0;::::1;::::0;;15055:2:28;2600:67:25::1;::::0;::::1;15037:21:28::0;15094:2;15074:18;;;15067:30;15133:27;15113:18;;;15106:55;15178:18;;2600:67:25::1;14853:349:28::0;2600:67:25::1;2677:15;:44:::0;;;::::1;;::::0;::::1;;::::0;;3647:99:19;;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;15359:36:28;;3721:14:19;;15347:2:28;15332:18;3721:14:19;;;;;;;;3269:483;2323:405:25;;:::o;3901:220:20:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;12076:2:28;1873:80:20;;;12058:21:28;12115:2;12095:18;;;12088:30;12154:34;12134:18;;;12127:62;12225:14;12205:18;;;12198:42;12257:19;;1873:80:20;11874:408:28;1873:80:20;1995:6;1971:30;;:20;1312:66:17;1536:65;;;;1457:151;1971:20:20;:30;;;1963:87;;;;;;;12489:2:28;1963:87:20;;;12471:21:28;12528:2;12508:18;;;12501:30;12567:34;12547:18;;;12540:62;12638:14;12618:18;;;12611:42;12670:19;;1963:87:20;12287:408:28;1963:87:20;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;2316:23;2333:6;2316:23;;2308:92;;;;;;;15608:2:28;2308:92:20;;;15590:21:28;15647:2;15627:18;;;15620:30;15686:34;15666:18;;;15659:62;15757:26;15737:18;;;15730:54;15801:19;;2308:92:20;15406:420:28;2308:92:20;-1:-1:-1;1312:66:17::1;3006:131:20::0;:::o;8062:307:25:-;8182:15;;:45;;;;;8145:7;;;;8182:15;;;;;:26;;:45;;8209:5;;8216:10;;8182:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8262:15;;:35;;;;;;;;1849:25:28;;;8164:63:25;;-1:-1:-1;8237:22:25;;8262:15;;;;;:26;;1822:18:28;;8262:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8323:13;;8314:23;;;;:8;:23;;;;;;;;:32;;;;;;;;;:48;;;;;;;;;;;;;-1:-1:-1;;8062:307:25;;;;;:::o;2889:303::-;2951:70;719:10:23;3008:12:25;640:96:23;2951:70:25;3040:16;;;;:7;:16;;;;;;;;3039:17;3031:48;;;;;;;16033:2:28;3031:48:25;;;16015:21:28;16072:2;16052:18;;;16045:30;16111:20;16091:18;;;16084:48;16149:18;;3031:48:25;15831:342:28;3031:48:25;3089:13;:23;;;3122:16;;;;:7;:16;;;;;;;:23;;;;3141:4;3122:23;;;3160:25;;;;;3105:7;1849:25:28;;1837:2;1822:18;;1703:177;1994:124:0;2049:62;719:10:23;2106:4:0;2049:29;:27;:29::i;:::-;:42;:62;:42;:62::i;710:120:1:-;756:7;782:41;:33;:31;:33::i;:::-;3515:15:9;;;;3419:118;782:41:1;775:48;;710:120;:::o;3651:515:25:-;3738:70;719:10:23;3795:12:25;640:96:23;3738:70:25;3887:9;3882:219;3906:12;:19;3902:1;:23;3882:219;;;3954:25;:42;3980:12;3993:1;3980:15;;;;;;;;:::i;:::-;;;;;;;;;;;;3954:42;;;;;;;;;;-1:-1:-1;3954:42:25;;;;3946:81;;;;;;;16380:2:28;3946:81:25;;;16362:21:28;16419:2;16399:18;;;16392:30;16458:28;16438:18;;;16431:56;16504:18;;3946:81:25;16178:350:28;3946:81:25;4048:25;:42;4074:12;4087:1;4074:15;;;;;;;;:::i;:::-;;;;;;;;;;;;4048:42;;;;;;;;;;-1:-1:-1;4048:42:25;4041:49;;;;;;3927:3;;;;:::i;:::-;;;;3882:219;;;;4116:43;4146:12;4116:43;;;;;;:::i;2159:162:0:-;2230:13;2262:52;2300:4;2306:7;2262:29;:27;:29::i;:::-;2675:13:8;2707;;;;;;;;;;;:22;;;;;;;;;;;;;;;2586:150;2262:52:0;2255:59;2159:162;-1:-1:-1;;;2159:162:0:o;5665:281:25:-;5832:15;;:45;;;;;5814:15;;5832;;;:26;;:45;;5859:5;;5866:10;;5832:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5814:63;;5887:52;5895:7;5904:6;5912:17;5931:1;5934;5937;5887:7;:52::i;:::-;5804:142;5665:281;;;;;;;:::o;7846:210::-;7949:15;;:35;;;;;;;;1849:25:28;;;7905:7:25;;;;7949:15;;;;;:26;;1822:18:28;;7949:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8010:13;;8001:23;;;;:8;:23;;;;;;;;:32;;;;;;;;;:48;;;;;;;;;;;;;7846:210;-1:-1:-1;;7846:210:25:o;4634:357::-;4863:15;;:44;;;;;4845:15;;4863;;;:26;;:44;;4890:4;;4896:10;;4863:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4845:62;;4917:67;4925:6;4933:7;4942:14;4958:6;4966:17;4917:7;:67::i;:::-;4835:156;4634:357;;;;;;:::o;7299:219::-;7418:15;;:35;;;;;;;;1849:25:28;;;7374:7:25;;;;7418:15;;;;;:26;;1822:18:28;;7418:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7470:16;;;;:8;:16;;;;;;;;:25;;;;;;;;;:41;;;;-1:-1:-1;;7470:41:25;;;;7299:219::o;6924:369::-;7035:15;;:32;;;;;;;;1849:25:28;;;7018:14:25;;7035:15;;;:23;;1822:18:28;;7035:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7018:49;-1:-1:-1;7085:10:25;:20;;;;7077:56;;;;;;;16991:2:28;7077:56:25;;;16973:21:28;17030:2;17010:18;;;17003:30;17069:25;17049:18;;;17042:53;17112:18;;7077:56:25;16789:347:28;7077:56:25;7169:15;;:35;;;;;;;;1849:25:28;;;7144:22:25;;7169:15;;;:26;;1822:18:28;;7169:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7144:60;;7214:72;7223:7;7232:14;7248:6;7256:17;7275:10;7214:8;:72::i;:::-;7008:285;;6924:369;;;:::o;1694:259:0:-;719:10:23;1805:66:0;719:10:23;1805:33:0;:31;:33::i;:66::-;1881:65;1922:4;1928:7;1937:8;1881:29;:27;:29::i;:::-;:40;:65;;:40;:65::i;5952:719:25:-;6158:15;;:35;;;;;;;;1849:25:28;;;6133:22:25;;6158:15;;;:26;;1822:18:28;;6158:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6133:60;;6203:20;6226:68;6242:7;6251:6;6259;:15;6266:7;6259:15;;;;;;;;;;;;6276:17;6226:15;:68::i;:::-;6338:66;;17383::28;6338::25;;;17371:79:28;17466:12;;;17459:28;;;6203:91:25;;-1:-1:-1;6304:21:25;;17503:12:28;;6338:66:25;;;;;;;;;;;;;6328:77;;6338:66;6328:77;;;;6415:14;6432:33;;;;;;;;;17753:25:28;;;17826:4;17814:17;;17794:18;;;17787:45;;;;17848:18;;;17841:34;;;17891:18;;;17884:34;;;6328:77:25;;-1:-1:-1;6415:14:25;6432:33;;17725:19:28;;6432:33:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6432:33:25;;;;;;6492:15;;:32;;;;;;1849:25:28;;;6432:33:25;;-1:-1:-1;;;;6492:15:25;;;:23;;1822:18:28;;6492:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6475:49;;6552:6;6542:16;;:6;:16;;;6534:52;;;;;;;18131:2:28;6534:52:25;;;18113:21:28;18170:2;18150:18;;;18143:30;18209:25;18189:18;;;18182:53;18252:18;;6534:52:25;17929:347:28;6534:52:25;6596:68;6605:7;6614:14;6630:6;6638:17;6657:6;6596:8;:68::i;:::-;6067:604;;;;;5952:719;;;;;;:::o;8729:194::-;8827:7;8887:15;;;:6;:15;;;;;;8854:61;;8870:7;;8879:6;;8904:10;8854:15;:61::i;:::-;8846:70;8729:194;-1:-1:-1;;;;8729:194:25:o;6677:241::-;6813:15;;:45;;;;;6795:15;;6813;;;:26;;:45;;6840:5;;6847:10;;6813:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6795:63;;6868:43;6876:7;6885:6;6893:17;6868:7;:43::i;864:152:1:-;934:75;719:10:23;1000:8:1;934:33;:31;:33::i;:::-;:51;:75;:51;:75::i;4219:174:8:-;4260:16;;540:67;606:1;548:54;540:67;:::i;3459:170::-;2675:13;2707;;;;;;;;;;;:22;;;;;;;;;;;;;3556:66;;3594:28;;;;;;;;18588:25:28;;;18661:42;18649:55;;18629:18;;;18622:83;18561:18;;3594:28:8;18414:297:28;4865:174:9;4906:16;;761:71;831:1;769:58;761:71;:::i;4189:162::-;4295:15;;;4284:26;;;4295:15;;4284:26;4280:64;;4319:25;;;;;2722:42:28;2710:55;;4319:25:9;;;2692:74:28;2665:18;;4319:25:9;2529:243:28;989:272:8;2675:13;2707;;;;;;;;;;;:22;;;;;;;;;;;;;1094:161;;1139:7;:13;;;;;;;;;;;:22;;;;;;;;;;;;;;:29;;;;1164:4;1139:29;;;1187:57;;18918:25:28;;;19020:18;;;19013:43;19092:15;;;19072:18;;;19065:43;;;;1187:57:8;;18906:2:28;18891:18;1187:57:8;;;;;;;;1094:161;989:272;;;;:::o;2734:149:25:-;2803:73;1139:26;719:10:23;2863:12:25;640:96:23;2820:944:17;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;3383:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:17;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;;;;19510:2:28;3610:56:17;;;19492:21:28;19549:2;19529:18;;;19522:30;19588:34;19568:18;;;19561:62;19659:16;19639:18;;;19632:44;19693:19;;3610:56:17;19308:410:28;3379:302:17;1312:66;3496:28;;3488:82;;;;;;;19925:2:28;3488:82:17;;;19907:21:28;19964:2;19944:18;;;19937:30;20003:34;19983:18;;;19976:62;20074:11;20054:18;;;20047:39;20103:19;;3488:82:17;19723:405:28;3488:82:17;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;1042:67:20:-;5374:13:19;;;;;;;5366:69;;;;;;;20335:2:28;5366:69:19;;;20317:21:28;20374:2;20354:18;;;20347:30;20413:34;20393:18;;;20386:62;20484:13;20464:18;;;20457:41;20515:19;;5366:69:19;20133:407:28;5366:69:19;1042:67:20:o;2354:180:9:-;2432:54;897:69;965:1;905:56;897:69;:::i;:::-;2484:1;2432:28;:54::i;:::-;2496:31;:1;2514:12;2496:17;:31::i;2168:234:8:-;2257:30;:1;2274:4;2280:6;2257:16;:30::i;:::-;2321:5;2297:13;;;;;;;;;;;:21;;;;;;;;;;;;;:29;;;;;;2341:54;;18918:25:28;;;19020:18;;;19013:43;;;19072:18;;19065:43;;;;2341:54:8;;18906:2:28;18891:18;2341:54:8;18716:398:28;4997:662:25;5201:13;;5192:23;;;;:8;:23;;;;;;;;:32;;;;;;;;:48;;;;;;;;;:58;-1:-1:-1;5192:58:25;5184:91;;;;;;;20747:2:28;5184:91:25;;;20729:21:28;20786:2;20766:18;;;20759:30;20825:22;20805:18;;;20798:50;20865:18;;5184:91:25;20545:344:28;5184:91:25;5369:44;;;;:25;:44;;;;;;;;5361:84;;;;;;;21096:2:28;5361:84:25;;;21078:21:28;21135:2;21115:18;;;21108:30;21174:29;21154:18;;;21147:57;21221:18;;5361:84:25;20894:351:28;5361:84:25;5465:13;;5456:23;;;;:8;:23;;;;;;;;:32;;;;;;;;:48;;;;;;;;:58;;5508:6;;5456:23;:58;;5508:6;;5456:58;:::i;:::-;;;;-1:-1:-1;;5548:13:25;;5530:95;;;5582:10;21542:34:28;;21607:2;21592:18;;21585:34;;;21635:18;;;21628:34;;;21491:42;21698:15;;21693:2;21678:18;;21671:43;5563:17:25;;5548:13;5539:7;;5530:95;;21468:3:28;21453:19;5530:95:25;;;;;;;5635:15;;;;:6;:15;;;;;:17;;;;;;:::i;:::-;;;;;;4997:662;;;;;:::o;1639:273:8:-;2675:13;2707;;;;;;;;;;;:22;;;;;;;;;;;;;1745:161;;;1814:5;1789:13;;;;;;;;;;;:22;;;;;;;;;;;;;;:30;;;;;;1838:57;;18918:25:28;;;19020:18;;;19013:43;19092:15;;;19072:18;;;19065:43;;;;1838:57:8;;18906:2:28;18891:18;1838:57:8;18716:398:28;8375:348:25;8535:15;;:35;;;;;;;;1849:25:28;;;8491:7:25;;;;8535:15;;;;;:26;;1822:18:28;;8535:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8658:13;;8608:83;;;;;;;21994:19:28;;;;22029:12;;;22022:28;;;;22066:12;;;22059:28;;;;22103:12;;;22096:28;22140:13;;;22133:29;;;;-1:-1:-1;;22178:13:28;;;;22171:29;;;;8608:83:25;;;;;;;;;;22216:13:28;;8608:83:25;;;8598:94;;;;;;8375:348::o;2909:383:9:-;3031:15;;;;;;;3060:23;;;;3056:60;;3092:24;;;;;2722:42:28;2710:55;;3092:24:9;;;2692:74:28;2665:18;;3092:24:9;2529:243:28;3056:60:9;3147:8;3130:25;;:13;:25;;;3126:160;;3171:26;;;;;;;;;;;;;3216:59;;;;;;;;-1:-1:-1;;3216:59:9;2997:295;2909:383;;;:::o;1699:281:17:-;1713:19:21;;;;1772:106:17;;;;;;;22442:2:28;1772:106:17;;;22424:21:28;22481:2;22461:18;;;22454:30;22520:34;22500:18;;;22493:62;22591:15;22571:18;;;22564:43;22624:19;;1772:106:17;22240:409:28;1772:106:17;1312:66;1888:85;;;;;;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;672:357:14:-;866:20;;821:11;;900:21;;;896:88;;930:54;;;;;;;;22828:25:28;;;22869:18;;;22862:34;;;22801:18;;930:54:14;22654:248:28;896:88:14;-1:-1:-1;994:28:14;-1:-1:-1;672:357:14:o;1402:355:9:-;1490:26;;;;1486:166;;1532:30;;;;;;;;;;;;1581:60;;-1:-1:-1;;1581:60:9;;-1:-1:-1;;1581:60:9;1486:166;1661:89;1718:25;1745:4;1661:34;:32;:34::i;:::-;:56;:89;:56;:89::i;2086:152:17:-;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;;;;;;;;;;2086:152;:::o;6685:198:21:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;1705:174:12:-;1746:16;;365:79;443:1;373:66;365:79;:::i;773:235::-;881:35;896:20;881:35;;;877:68;;925:20;;;;;;;;;;;;;;877:68;955:34;;;;;:21;:34;;;;;;;;;;;;:46;;;;;;;;;;;;;773:235::o;7069:325:21:-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:21:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;1713:19;;;;8124:60;;;;;;;23401:2:28;8124:60:21;;;23383:21:28;23440:2;23420:18;;;23413:30;23479:31;23459:18;;;23452:59;23528:18;;8124:60:21;23199:353:28;8124:60:21;-1:-1:-1;8219:10:21;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;14:184:28:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:334;274:2;268:9;330:2;320:13;;335:66;316:86;304:99;;433:18;418:34;;454:22;;;415:62;412:88;;;480:18;;:::i;:::-;516:2;509:22;203:334;;-1:-1:-1;203:334:28:o;542:466::-;607:5;641:18;633:6;630:30;627:56;;;663:18;;:::i;:::-;701:116;811:4;742:66;737:2;729:6;725:15;721:88;717:99;701:116;:::i;:::-;692:125;;840:6;833:5;826:21;880:3;871:6;866:3;862:16;859:25;856:45;;;897:1;894;887:12;856:45;946:6;941:3;934:4;927:5;923:16;910:43;1000:1;993:4;984:6;977:5;973:18;969:29;962:40;542:466;;;;;:::o;1013:222::-;1056:5;1109:3;1102:4;1094:6;1090:17;1086:27;1076:55;;1127:1;1124;1117:12;1076:55;1149:80;1225:3;1216:6;1203:20;1196:4;1188:6;1184:17;1149:80;:::i;1240:458::-;1327:6;1335;1343;1396:2;1384:9;1375:7;1371:23;1367:32;1364:52;;;1412:1;1409;1402:12;1364:52;1448:9;1435:23;1425:33;;1505:2;1494:9;1490:18;1477:32;1467:42;;1560:2;1549:9;1545:18;1532:32;1587:18;1579:6;1576:30;1573:50;;;1619:1;1616;1609:12;1573:50;1642;1684:7;1675:6;1664:9;1660:22;1642:50;:::i;:::-;1632:60;;;1240:458;;;;;:::o;1885:180::-;1944:6;1997:2;1985:9;1976:7;1972:23;1968:32;1965:52;;;2013:1;2010;2003:12;1965:52;-1:-1:-1;2036:23:28;;1885:180;-1:-1:-1;1885:180:28:o;2070:454::-;2165:6;2173;2181;2189;2197;2250:3;2238:9;2229:7;2225:23;2221:33;2218:53;;;2267:1;2264;2257:12;2218:53;-1:-1:-1;;2290:23:28;;;2360:2;2345:18;;2332:32;;-1:-1:-1;2411:2:28;2396:18;;2383:32;;2462:2;2447:18;;2434:32;;-1:-1:-1;2513:3:28;2498:19;2485:33;;-1:-1:-1;2070:454:28;-1:-1:-1;2070:454:28:o;2777:154::-;2863:42;2856:5;2852:54;2845:5;2842:65;2832:93;;2921:1;2918;2911:12;2936:315;3004:6;3012;3065:2;3053:9;3044:7;3040:23;3036:32;3033:52;;;3081:1;3078;3071:12;3033:52;3117:9;3104:23;3094:33;;3177:2;3166:9;3162:18;3149:32;3190:31;3215:5;3190:31;:::i;:::-;3240:5;3230:15;;;2936:315;;;;;:::o;3256:247::-;3315:6;3368:2;3356:9;3347:7;3343:23;3339:32;3336:52;;;3384:1;3381;3374:12;3336:52;3423:9;3410:23;3442:31;3467:5;3442:31;:::i;3508:946::-;3592:6;3623:2;3666;3654:9;3645:7;3641:23;3637:32;3634:52;;;3682:1;3679;3672:12;3634:52;3722:9;3709:23;3751:18;3792:2;3784:6;3781:14;3778:34;;;3808:1;3805;3798:12;3778:34;3846:6;3835:9;3831:22;3821:32;;3891:7;3884:4;3880:2;3876:13;3872:27;3862:55;;3913:1;3910;3903:12;3862:55;3949:2;3936:16;3971:2;3967;3964:10;3961:36;;;3977:18;;:::i;:::-;4023:2;4020:1;4016:10;4006:20;;4046:28;4070:2;4066;4062:11;4046:28;:::i;:::-;4108:15;;;4178:11;;;4174:20;;;4139:12;;;;4206:19;;;4203:39;;;4238:1;4235;4228:12;4203:39;4262:11;;;;4282:142;4298:6;4293:3;4290:15;4282:142;;;4364:17;;4352:30;;4315:12;;;;4402;;;;4282:142;;;4443:5;3508:946;-1:-1:-1;;;;;;;;3508:946:28:o;4836:388::-;4904:6;4912;4965:2;4953:9;4944:7;4940:23;4936:32;4933:52;;;4981:1;4978;4971:12;4933:52;5020:9;5007:23;5039:31;5064:5;5039:31;:::i;:::-;5089:5;-1:-1:-1;5146:2:28;5131:18;;5118:32;5159:33;5118:32;5159:33;:::i;5229:585::-;5306:6;5314;5367:2;5355:9;5346:7;5342:23;5338:32;5335:52;;;5383:1;5380;5373:12;5335:52;5422:9;5409:23;5441:31;5466:5;5441:31;:::i;:::-;5491:5;-1:-1:-1;5547:2:28;5532:18;;5519:32;5574:18;5563:30;;5560:50;;;5606:1;5603;5596:12;5560:50;5629:22;;5682:4;5674:13;;5670:27;-1:-1:-1;5660:55:28;;5711:1;5708;5701:12;5660:55;5734:74;5800:7;5795:2;5782:16;5777:2;5773;5769:11;5734:74;:::i;:::-;5724:84;;;5229:585;;;;;:::o;5819:316::-;5896:6;5904;5912;5965:2;5953:9;5944:7;5940:23;5936:32;5933:52;;;5981:1;5978;5971:12;5933:52;-1:-1:-1;;6004:23:28;;;6074:2;6059:18;;6046:32;;-1:-1:-1;6125:2:28;6110:18;;;6097:32;;5819:316;-1:-1:-1;5819:316:28:o;6322:390::-;6400:6;6408;6461:2;6449:9;6440:7;6436:23;6432:32;6429:52;;;6477:1;6474;6467:12;6429:52;6513:9;6500:23;6490:33;;6574:2;6563:9;6559:18;6546:32;6601:18;6593:6;6590:30;6587:50;;;6633:1;6630;6623:12;6587:50;6656;6698:7;6689:6;6678:9;6674:22;6656:50;:::i;6948:156::-;7014:20;;7074:4;7063:16;;7053:27;;7043:55;;7094:1;7091;7084:12;7043:55;6948:156;;;:::o;7109:736::-;7230:6;7238;7246;7254;7262;7270;7278;7331:3;7319:9;7310:7;7306:23;7302:33;7299:53;;;7348:1;7345;7338:12;7299:53;7384:9;7371:23;7361:33;;7445:2;7434:9;7430:18;7417:32;7472:18;7464:6;7461:30;7458:50;;;7504:1;7501;7494:12;7458:50;7527;7569:7;7560:6;7549:9;7545:22;7527:50;:::i;:::-;7517:60;;;7624:2;7613:9;7609:18;7596:32;7586:42;;7675:2;7664:9;7660:18;7647:32;7637:42;;7698:37;7730:3;7719:9;7715:19;7698:37;:::i;:::-;7688:47;;7782:3;7771:9;7767:19;7754:33;7744:43;;7834:3;7823:9;7819:19;7806:33;7796:43;;7109:736;;;;;;;;;;:::o;7850:665::-;7964:6;7972;7980;7988;7996;8004;8057:3;8045:9;8036:7;8032:23;8028:33;8025:53;;;8074:1;8071;8064:12;8025:53;8110:9;8097:23;8087:33;;8167:2;8156:9;8152:18;8139:32;8129:42;;8222:2;8211:9;8207:18;8194:32;8249:18;8241:6;8238:30;8235:50;;;8281:1;8278;8271:12;8235:50;8304;8346:7;8337:6;8326:9;8322:22;8304:50;:::i;:::-;8294:60;;;8401:2;8390:9;8386:18;8373:32;8363:42;;8452:3;8441:9;8437:19;8424:33;8414:43;;8504:3;8493:9;8489:19;8476:33;8466:43;;7850:665;;;;;;;;:::o;8520:248::-;8588:6;8596;8649:2;8637:9;8628:7;8624:23;8620:32;8617:52;;;8665:1;8662;8655:12;8617:52;-1:-1:-1;;8688:23:28;;;8758:2;8743:18;;;8730:32;;-1:-1:-1;8520:248:28:o;9094:525::-;9196:6;9204;9212;9220;9228;9236;9289:3;9277:9;9268:7;9264:23;9260:33;9257:53;;;9306:1;9303;9296:12;9257:53;9342:9;9329:23;9319:33;;9399:2;9388:9;9384:18;9371:32;9361:42;;9450:2;9439:9;9435:18;9422:32;9412:42;;9473:36;9505:2;9494:9;9490:18;9473:36;:::i;:::-;9463:46;;9556:3;9545:9;9541:19;9528:33;9518:43;;9608:3;9597:9;9593:19;9580:33;9570:43;;9094:525;;;;;;;;:::o;9624:527::-;9720:6;9728;9736;9744;9797:3;9785:9;9776:7;9772:23;9768:33;9765:53;;;9814:1;9811;9804:12;9765:53;9850:9;9837:23;9827:33;;9911:2;9900:9;9896:18;9883:32;9938:18;9930:6;9927:30;9924:50;;;9970:1;9967;9960:12;9924:50;9993;10035:7;10026:6;10015:9;10011:22;9993:50;:::i;:::-;9624:527;;9983:60;;-1:-1:-1;;;;10090:2:28;10075:18;;10062:32;;10141:2;10126:18;10113:32;;9624:527;-1:-1:-1;9624:527:28:o;10156:250::-;10241:1;10251:113;10265:6;10262:1;10259:13;10251:113;;;10341:11;;;10335:18;10322:11;;;10315:39;10287:2;10280:10;10251:113;;;-1:-1:-1;;10398:1:28;10380:16;;10373:27;10156:250::o;10411:330::-;10453:3;10491:5;10485:12;10518:6;10513:3;10506:19;10534:76;10603:6;10596:4;10591:3;10587:14;10580:4;10573:5;10569:16;10534:76;:::i;:::-;10655:2;10643:15;10660:66;10639:88;10630:98;;;;10730:4;10626:109;;10411:330;-1:-1:-1;;10411:330:28:o;10746:291::-;10923:2;10912:9;10905:21;10886:4;10943:45;10984:2;10973:9;10969:18;10961:6;10943:45;:::i;:::-;10935:53;;11024:6;11019:2;11008:9;11004:18;10997:34;10746:291;;;;;:::o;11042:184::-;11112:6;11165:2;11153:9;11144:7;11140:23;11136:32;11133:52;;;11181:1;11178;11171:12;11133:52;-1:-1:-1;11204:16:28;;11042:184;-1:-1:-1;11042:184:28:o;11231:::-;11283:77;11280:1;11273:88;11380:4;11377:1;11370:15;11404:4;11401:1;11394:15;11420:125;11485:9;;;11506:10;;;11503:36;;;11519:18;;:::i;12700:184::-;12752:77;12749:1;12742:88;12849:4;12846:1;12839:15;12873:4;12870:1;12863:15;13244:195;13283:3;13314:66;13307:5;13304:77;13301:103;;13384:18;;:::i;:::-;-1:-1:-1;13431:1:28;13420:13;;13244:195::o;13444:632::-;13615:2;13667:21;;;13737:13;;13640:18;;;13759:22;;;13586:4;;13615:2;13838:15;;;;13812:2;13797:18;;;13586:4;13881:169;13895:6;13892:1;13889:13;13881:169;;;13956:13;;13944:26;;14025:15;;;;13990:12;;;;13917:1;13910:9;13881:169;;;-1:-1:-1;14067:3:28;;13444:632;-1:-1:-1;;;;;;13444:632:28:o;16533:251::-;16603:6;16656:2;16644:9;16635:7;16631:23;16627:32;16624:52;;;16672:1;16669;16662:12;16624:52;16704:9;16698:16;16723:31;16748:5;16723:31;:::i;18281:128::-;18348:9;;;18369:11;;;18366:37;;;18383:18;;:::i;22907:287::-;23036:3;23074:6;23068:13;23090:66;23149:6;23144:3;23137:4;23129:6;23125:17;23090:66;:::i;:::-;23172:16;;;;;22907:287;-1:-1:-1;;22907:287:28:o;23557:220::-;23706:2;23695:9;23688:21;23669:4;23726:45;23767:2;23756:9;23752:18;23744:6;23726:45;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"2761000","executionCost":"infinite","totalCost":"infinite"},"external":{"DEPOSITOR_ROLE()":"251","UPGRADER_ROLE()":"272","allowedConsumeReasonCodes(bytes32)":"2560","balanceOf(bytes32,bytes32,string)":"infinite","balanceOf(bytes32,string)":"infinite","balanceOf(bytes32,uint256)":"infinite","balanceOf(uint256)":"infinite","balances(bytes32,uint256,uint256)":"2692","batchAddConsumeReasonCodes(bytes32[])":"infinite","batchRemoveConsumeReasonCodes(bytes32[])":"infinite","consume(bytes32,string,uint256,bytes32)":"infinite","consume(bytes32,string,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","consume(uint256,uint256,bytes32)":"infinite","consume(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","currentSeason()":"2395","deposit(bytes32,bytes32,string,uint256,uint256,bytes32)":"infinite","deposit(bytes32,uint256,uint256,uint256,bytes32)":"infinite","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"infinite","initialize(address,address)":"infinite","nonces(uint256)":"2496","owner()":"infinite","preparePayload(uint256,uint256,bytes32)":"infinite","proxiableUUID()":"infinite","realmIdContract()":"2426","renounceRole(bytes32)":"infinite","revokeRole(bytes32,address)":"infinite","seasons(bytes32)":"2562","setCurrentSeason(bytes32)":"infinite","transferOwnership(address)":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_consume(uint256,uint256,uint256,bytes32,address)":"infinite","_preparePayload(uint256,uint256,uint256,bytes32)":"infinite"}},"methodIdentifiers":{"DEPOSITOR_ROLE()":"a3b0b5a3","UPGRADER_ROLE()":"f72c0d8b","allowedConsumeReasonCodes(bytes32)":"f9515962","balanceOf(bytes32,bytes32,string)":"098b6419","balanceOf(bytes32,string)":"794459be","balanceOf(bytes32,uint256)":"ad3b1d48","balanceOf(uint256)":"9cc7f708","balances(bytes32,uint256,uint256)":"51955dfc","batchAddConsumeReasonCodes(bytes32[])":"3f30b00f","batchRemoveConsumeReasonCodes(bytes32[])":"906405a3","consume(bytes32,string,uint256,bytes32)":"e564a0e2","consume(bytes32,string,uint256,bytes32,uint8,bytes32,bytes32)":"99d342ac","consume(uint256,uint256,bytes32)":"d14a5c71","consume(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"dc893ce4","currentSeason()":"bcb39621","deposit(bytes32,bytes32,string,uint256,uint256,bytes32)":"9d70b005","deposit(bytes32,uint256,uint256,uint256,bytes32)":"18ee89f0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address)":"485cc955","nonces(uint256)":"141a468c","owner()":"8da5cb5b","preparePayload(uint256,uint256,bytes32)":"df00bb24","proxiableUUID()":"52d1902d","realmIdContract()":"2b48dc72","renounceRole(bytes32)":"8bb9c5bf","revokeRole(bytes32,address)":"d547741f","seasons(bytes32)":"4529cc1b","setCurrentSeason(bytes32)":"86a8e98a","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IllegalInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentPhase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPhase\",\"type\":\"uint256\"}],\"name\":\"InitializationPhaseAlreadyReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotContractOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotRoleHolder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"BatchAddedConsumeReasonCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"BatchRemovedConsumeReasonCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"realmIdOwner\",\"type\":\"address\"}],\"name\":\"Consumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"}],\"name\":\"SetCurrentSeason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"allowedConsumeReasonCodes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"batchAddConsumeReasonCodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"batchRemoveConsumeReasonCodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSeason\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"depositReasonCode\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"depositReasonCode\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasRole_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_realmIdContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"}],\"name\":\"preparePayload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realmIdContract\",\"outputs\":[{\"internalType\":\"contract IRealmId\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"seasons\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_season\",\"type\":\"bytes32\"}],\"name\":\"setCurrentSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InitializationPhaseAlreadyReached(uint256,uint256)\":[{\"params\":{\"currentPhase\":\"The current phase.\",\"newPhase\":\"The new phase trying to be set.\"}}],\"NotContractOwner(address)\":[{\"params\":{\"account\":\"The account that was checked.\"}}],\"NotRoleHolder(bytes32,address)\":[{\"params\":{\"account\":\"The account that was checked.\",\"role\":\"The role the caller is missing.\"}}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OwnershipTransferred(address,address)\":{\"params\":{\"newOwner\":\"the new contract owner.\",\"previousOwner\":\"the previous contract owner.\"}},\"RoleGranted(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been granted the role.\",\"operator\":\"The account that granted the role.\",\"role\":\"The role that has been granted.\"}},\"RoleRevoked(bytes32,address,address)\":{\"params\":{\"account\":\"The account that has been revoked the role.\",\"operator\":\"The account that revoked the role.\",\"role\":\"The role that has been revoked.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"grantRole(bytes32,address)\":{\"details\":\"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleGranted} event if the account did not previously have the role.\",\"params\":{\"account\":\"The account to grant the role to.\",\"role\":\"The role to grant.\"}},\"hasRole(bytes32,address)\":{\"params\":{\"account\":\"The account.\",\"role\":\"The role.\"},\"returns\":{\"hasRole_\":\"Whether `account` has `role`.\"}},\"owner()\":{\"returns\":{\"_0\":\"The address of the contract owner.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32)\":{\"details\":\"Reverts if `sender` does not have `role`.Emits a {RoleRevoked} event.\",\"params\":{\"role\":\"The role to renounce.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Reverts with {NotContractOwner} if the sender is not the contract owner.Emits a {RoleRevoked} event if the account previously had the role.\",\"params\":{\"account\":\"The account to revoke the role from.\",\"role\":\"The role to revoke.\"}},\"transferOwnership(address)\":{\"details\":\"Reverts if the sender is not the contract owner.Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\",\"params\":{\"newOwner\":\"The address of the new contract owner. Using the zero address means renouncing ownership.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"IllegalInterfaceId()\":[{\"notice\":\"Thrown when setting the illegal interfaceId 0xffffffff.\"}],\"InitializationPhaseAlreadyReached(uint256,uint256)\":[{\"notice\":\"Emitted when trying to set a phase value that has already been reached.\"}],\"NotContractOwner(address)\":[{\"notice\":\"Thrown when an account is not the contract owner but is required to.\"}],\"NotRoleHolder(bytes32,address)\":[{\"notice\":\"Thrown when an account does not have the required role.\"}]},\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Emitted when the contract ownership changes.\"},\"RoleGranted(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is granted to `account`.\"},\"RoleRevoked(bytes32,address,address)\":{\"notice\":\"Emitted when `role` is revoked from `account`.\"}},\"kind\":\"user\",\"methods\":{\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Retrieves whether an account has a role.\"},\"owner()\":{\"notice\":\"Gets the address of the contract owner.\"},\"renounceRole(bytes32)\":{\"notice\":\"Renounces a role by the sender.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes a role from an account.\"},\"transferOwnership(address)\":{\"notice\":\"Sets the address of the new contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/MocaPoints.sol\":\"MocaPoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IAccessControl} from \\\"./../../access/interfaces/IAccessControl.sol\\\";\\nimport {AccessControlStorage} from \\\"./../libraries/AccessControlStorage.sol\\\";\\nimport {ContractOwnershipStorage} from \\\"./../libraries/ContractOwnershipStorage.sol\\\";\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/// @title Access control via roles management (proxiable version).\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC173 (Contract Ownership standard).\\nabstract contract AccessControlBase is IAccessControl, Context {\\n    using AccessControlStorage for AccessControlStorage.Layout;\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n\\n    /// @notice Grants a role to an account.\\n    /// @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\\n    /// @param role The role to grant.\\n    /// @param account The account to grant the role to.\\n    function grantRole(bytes32 role, address account) external {\\n        address operator = _msgSender();\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(operator);\\n        AccessControlStorage.layout().grantRole(role, account, operator);\\n    }\\n\\n    /// @notice Revokes a role from an account.\\n    /// @dev Reverts with {NotContractOwner} if the sender is not the contract owner.\\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\\n    /// @param role The role to revoke.\\n    /// @param account The account to revoke the role from.\\n    function revokeRole(bytes32 role, address account) external {\\n        address operator = _msgSender();\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(operator);\\n        AccessControlStorage.layout().revokeRole(role, account, operator);\\n    }\\n\\n    /// @inheritdoc IAccessControl\\n    function renounceRole(bytes32 role) external {\\n        AccessControlStorage.layout().renounceRole(_msgSender(), role);\\n    }\\n\\n    /// @inheritdoc IAccessControl\\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_) {\\n        return AccessControlStorage.layout().hasRole(role, account);\\n    }\\n}\\n\",\"keccak256\":\"0x922cf4abb506400feb78edab23e1cacddbd50541d345f460004e73a5eef182dc\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173} from \\\"./../interfaces/IERC173.sol\\\";\\nimport {ContractOwnershipStorage} from \\\"./../libraries/ContractOwnershipStorage.sol\\\";\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/// @title ERC173 Contract Ownership Standard (proxiable version).\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\\nabstract contract ContractOwnershipBase is IERC173, Context {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n\\n    /// @inheritdoc IERC173\\n    function owner() public view virtual returns (address) {\\n        return ContractOwnershipStorage.layout().owner();\\n    }\\n\\n    /// @inheritdoc IERC173\\n    function transferOwnership(address newOwner) public virtual {\\n        ContractOwnershipStorage.layout().transferOwnership(_msgSender(), newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xe13f43f5bdef2f333ddc9dc27bd7153d2c00911d6b6516dd5755d9f3ad5dc12a\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/errors/AccessControlErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account does not have the required role.\\n/// @param role The role the caller is missing.\\n/// @param account The account that was checked.\\nerror NotRoleHolder(bytes32 role, address account);\\n\\n/// @notice Thrown when an account does not have the required role on a target contract.\\n/// @param targetContract The contract that was checked.\\n/// @param role The role that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractRoleHolder(address targetContract, bytes32 role, address account);\\n\",\"keccak256\":\"0x01f13fa7f5c5473314dabbd6b556d8e2036dc6e850e03ead0ea605ed4c4e16eb\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/errors/ContractOwnershipErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when an account is not the contract owner but is required to.\\n/// @param account The account that was checked.\\nerror NotContractOwner(address account);\\n\\n/// @notice Thrown when an account is not the target contract owner but is required to.\\n/// @param targetContract The contract that was checked.\\n/// @param account The account that was checked.\\nerror NotTargetContractOwner(address targetContract, address account);\\n\",\"keccak256\":\"0x00d2942a00eeb8103ff9e5ea3f91e31458087aeebc615f26b9f8188cfcba698e\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IAccessControlEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title Access control via roles management (events)\\ninterface IAccessControlEvents {\\n    /// @notice Emitted when `role` is granted to `account`.\\n    /// @param role The role that has been granted.\\n    /// @param account The account that has been granted the role.\\n    /// @param operator The account that granted the role.\\n    event RoleGranted(bytes32 role, address account, address operator);\\n\\n    /// @notice Emitted when `role` is revoked from `account`.\\n    /// @param role The role that has been revoked.\\n    /// @param account The account that has been revoked the role.\\n    /// @param operator The account that revoked the role.\\n    event RoleRevoked(bytes32 role, address account, address operator);\\n}\\n\",\"keccak256\":\"0xc33eb3e7869dc886ff1bd5526494a67e2bea02185d8b54cacb2ad2d166faddcd\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/events/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC-173 Contract Ownership Standard (events)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173Events {\\n    /// @notice Emitted when the contract ownership changes.\\n    /// @param previousOwner the previous contract owner.\\n    /// @param newOwner the new contract owner.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xc2e60c72fac96170696024e07fc5650e270c6cf1a701af4aa0a945bd4b113877\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\n\\n/// @title Access control via roles management (functions)\\ninterface IAccessControl is IAccessControlEvents {\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param role The role to renounce.\\n    function renounceRole(bytes32 role) external;\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(bytes32 role, address account) external view returns (bool hasRole_);\\n}\\n\",\"keccak256\":\"0xf5548f89b99d4f4bdfe6ee694db7fb002457fe1a50ce381a5cb6b84019e032af\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\n\\n/// @title ERC-173 Contract Ownership Standard (functions)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-173\\n/// @dev Note: the ERC-165 identifier for this interface is 0x7f5828d0\\ninterface IERC173 is IERC173Events {\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts if the sender is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner() external view returns (address contractOwner);\\n}\\n\",\"keccak256\":\"0xbb6b2221718a4abaa95b449cb42111c8b1840ea7e439d801d0fffe8a93bd9a18\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotRoleHolder, NotTargetContractRoleHolder} from \\\"./../errors/AccessControlErrors.sol\\\";\\nimport {IAccessControlEvents} from \\\"./../events/IAccessControlEvents.sol\\\";\\nimport {IAccessControl} from \\\"./../interfaces/IAccessControl.sol\\\";\\n\\nlibrary AccessControlStorage {\\n    using AccessControlStorage for AccessControlStorage.Layout;\\n\\n    struct Layout {\\n        mapping(bytes32 => mapping(address => bool)) roles;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.AccessControl.storage\\\")) - 1);\\n\\n    /// @notice Grants a role to an account.\\n    /// @dev Note: Call to this function should be properly access controlled.\\n    /// @dev Emits a {RoleGranted} event if the account did not previously have the role.\\n    /// @param role The role to grant.\\n    /// @param account The account to grant the role to.\\n    /// @param operator The account requesting the role change.\\n    function grantRole(Layout storage s, bytes32 role, address account, address operator) internal {\\n        if (!s.hasRole(role, account)) {\\n            s.roles[role][account] = true;\\n            emit IAccessControlEvents.RoleGranted(role, account, operator);\\n        }\\n    }\\n\\n    /// @notice Revokes a role from an account.\\n    /// @dev Note: Call to this function should be properly access controlled.\\n    /// @dev Emits a {RoleRevoked} event if the account previously had the role.\\n    /// @param role The role to revoke.\\n    /// @param account The account to revoke the role from.\\n    /// @param operator The account requesting the role change.\\n    function revokeRole(Layout storage s, bytes32 role, address account, address operator) internal {\\n        if (s.hasRole(role, account)) {\\n            s.roles[role][account] = false;\\n            emit IAccessControlEvents.RoleRevoked(role, account, operator);\\n        }\\n    }\\n\\n    /// @notice Renounces a role by the sender.\\n    /// @dev Reverts with {NotRoleHolder} if `sender` does not have `role`.\\n    /// @dev Emits a {RoleRevoked} event.\\n    /// @param sender The message sender.\\n    /// @param role The role to renounce.\\n    function renounceRole(Layout storage s, address sender, bytes32 role) internal {\\n        s.enforceHasRole(role, sender);\\n        s.roles[role][sender] = false;\\n        emit IAccessControlEvents.RoleRevoked(role, sender, sender);\\n    }\\n\\n    /// @notice Retrieves whether an account has a role.\\n    /// @param role The role.\\n    /// @param account The account.\\n    /// @return hasRole_ Whether `account` has `role`.\\n    function hasRole(Layout storage s, bytes32 role, address account) internal view returns (bool hasRole_) {\\n        return s.roles[role][account];\\n    }\\n\\n    /// @notice Checks whether an account has a role in a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param role The role to check.\\n    /// @param account The account to check.\\n    /// @return hasTargetContractRole_ Whether `account` has `role` in `targetContract`.\\n    function hasTargetContractRole(address targetContract, bytes32 role, address account) internal view returns (bool hasTargetContractRole_) {\\n        return IAccessControl(targetContract).hasRole(role, account);\\n    }\\n\\n    /// @notice Ensures that an account has a role.\\n    /// @dev Reverts with {NotRoleHolder} if `account` does not have `role`.\\n    /// @param role The role.\\n    /// @param account The account.\\n    function enforceHasRole(Layout storage s, bytes32 role, address account) internal view {\\n        if (!s.hasRole(role, account)) revert NotRoleHolder(role, account);\\n    }\\n\\n    /// @notice Enforces that an account has a role in a target contract.\\n    /// @dev Reverts with {NotTargetContractRoleHolder} if the account does not have the role.\\n    /// @param targetContract The contract to check.\\n    /// @param role The role to check.\\n    /// @param account The account to check.\\n    function enforceHasTargetContractRole(address targetContract, bytes32 role, address account) internal view {\\n        if (!hasTargetContractRole(targetContract, role, account)) {\\n            revert NotTargetContractRoleHolder(targetContract, role, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x42e330c26f28436ae28d7f418331748fd0b3a64fc0f130b84a14b2eb013b3668\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {NotContractOwner, NotTargetContractOwner} from \\\"./../errors/ContractOwnershipErrors.sol\\\";\\nimport {IERC173Events} from \\\"./../events/IERC173Events.sol\\\";\\nimport {IERC173} from \\\"./../interfaces/IERC173.sol\\\";\\nimport {ProxyInitialization} from \\\"./../../proxy/libraries/ProxyInitialization.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"./../../introspection/libraries/InterfaceDetectionStorage.sol\\\";\\n\\nlibrary ContractOwnershipStorage {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        address contractOwner;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.access.ContractOwnership.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with an initial contract owner (immutable version).\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function constructorInit(Layout storage s, address initialOwner) internal {\\n        if (initialOwner != address(0)) {\\n            s.contractOwner = initialOwner;\\n            emit IERC173Events.OwnershipTransferred(address(0), initialOwner);\\n        }\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC173).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with an initial contract owner (proxied version).\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interface(s) as supported: ERC173.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Emits an {OwnershipTransferred} if `initialOwner` is not the zero address.\\n    /// @param initialOwner The initial contract owner.\\n    function proxyInit(Layout storage s, address initialOwner) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(initialOwner);\\n    }\\n\\n    /// @notice Sets the address of the new contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `sender` is not the contract owner.\\n    /// @dev Emits an {OwnershipTransferred} event if `newOwner` is different from the current contract owner.\\n    /// @param newOwner The address of the new contract owner. Using the zero address means renouncing ownership.\\n    function transferOwnership(Layout storage s, address sender, address newOwner) internal {\\n        address previousOwner = s.contractOwner;\\n        if (sender != previousOwner) revert NotContractOwner(sender);\\n        if (previousOwner != newOwner) {\\n            s.contractOwner = newOwner;\\n            emit IERC173Events.OwnershipTransferred(previousOwner, newOwner);\\n        }\\n    }\\n\\n    /// @notice Gets the address of the contract owner.\\n    /// @return contractOwner The address of the contract owner.\\n    function owner(Layout storage s) internal view returns (address contractOwner) {\\n        return s.contractOwner;\\n    }\\n\\n    /// @notice Checks whether an account is the owner of a target contract.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    /// @return isTargetContractOwner_ Whether `account` is the owner of `targetContract`.\\n    function isTargetContractOwner(address targetContract, address account) internal view returns (bool isTargetContractOwner_) {\\n        return IERC173(targetContract).owner() == account;\\n    }\\n\\n    /// @notice Ensures that an account is the contract owner.\\n    /// @dev Reverts with {NotContractOwner} if `account` is not the contract owner.\\n    /// @param account The account.\\n    function enforceIsContractOwner(Layout storage s, address account) internal view {\\n        if (account != s.contractOwner) revert NotContractOwner(account);\\n    }\\n\\n    /// @notice Enforces that an account is the owner of a target contract.\\n    /// @dev Reverts with {NotTheTargetContractOwner} if the account is not the owner.\\n    /// @param targetContract The contract to check.\\n    /// @param account The account to check.\\n    function enforceIsTargetContractOwner(address targetContract, address account) internal view {\\n        if (!isTargetContractOwner(targetContract, account)) {\\n            revert NotTargetContractOwner(targetContract, account);\\n        }\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcd1d10d7304df028a482fe9d2c8e6280ed69abee1c5a392aae2c1da9291d81e1\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0x14e798b909b7215752bc10da92caf9ba8edcd8ff70ec2300e0a6f9c7972ec31c\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x22ffd665621114141366ce3d054fe7e4934979e827db9eb26fa9297bf0270662\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba3584cfcf74c44441e971745559a0d475a8145548bfd67407f6acb2c9dd2eec\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x65cba678628c092823ff6d4075d952b1e9de71f59c15309f459b71301a135993\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0xf7b57ddf1642ee542e64a4966dca8e32d0bada2591d2eb713bba2e5a3ef54a3d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"contracts/MocaPoints/MocaPoints.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {IRealmId} from \\\"./interface/IRealmId.sol\\\";\\nimport {AccessControlStorage} from \\\"@animoca/ethereum-contracts/contracts/access/libraries/AccessControlStorage.sol\\\";\\nimport {AccessControlBase} from \\\"@animoca/ethereum-contracts/contracts/access/base/AccessControlBase.sol\\\";\\nimport {ContractOwnershipBase} from \\\"@animoca/ethereum-contracts/contracts/access/base/ContractOwnershipBase.sol\\\";\\nimport {ContractOwnershipStorage} from \\\"@animoca/ethereum-contracts/contracts/access/libraries/ContractOwnershipStorage.sol\\\";\\nimport {Initializable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport {UUPSUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract MocaPoints is Initializable, AccessControlBase, ContractOwnershipBase, UUPSUpgradeable {\\n    using ContractOwnershipStorage for ContractOwnershipStorage.Layout;\\n    using AccessControlStorage for AccessControlStorage.Layout;\\n\\n    // Roles\\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\\\"DEPOSITOR_ROLE\\\");\\n    bytes32 public constant UPGRADER_ROLE = keccak256(\\\"UPGRADER_ROLE\\\");\\n\\n    // Seasonal variables\\n    bytes32 public currentSeason;\\n    mapping(bytes32 => bool) public seasons;\\n\\n    // RealmId contract\\n    IRealmId public realmIdContract;\\n\\n    // Balances mapping\\n    mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256))) public balances; // season => realmId => realmIdVersion => balance\\n\\n    // Nonce management\\n    mapping(uint256 => uint256) public nonces; // realmId => nonce\\n\\n    // Allowed consume reason codes mapping\\n    mapping(bytes32 => bool) public allowedConsumeReasonCodes;\\n\\n    event SetCurrentSeason(bytes32 season);\\n    event BatchAddedConsumeReasonCode(bytes32[] reasonCodes);\\n    event BatchRemovedConsumeReasonCode(bytes32[] reasonCodes);\\n    event Deposited(\\n        address indexed sender,\\n        bytes32 indexed season,\\n        bytes32 indexed reasonCode,\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount\\n    );\\n\\n    event Consumed(\\n        uint256 indexed realmId,\\n        bytes32 indexed season,\\n        bytes32 indexed reasonCode,\\n        address operator,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        address realmIdOwner\\n    );\\n\\n    function initialize(address _realmIdContract, address _admin) public initializer {\\n        __UUPSUpgradeable_init();\\n        ContractOwnershipStorage.layout().proxyInit(_admin);\\n\\n        require(address(_realmIdContract) != address(0), \\\"Not a valid Contract Address\\\");\\n        require(address(_admin) != address(0), \\\"Not a valid Admin Address\\\");\\n        realmIdContract = IRealmId(_realmIdContract);\\n    }\\n\\n    function _authorizeUpgrade(address) internal view override {\\n        AccessControlStorage.layout().enforceHasRole(UPGRADER_ROLE, _msgSender());\\n    }\\n\\n    function setCurrentSeason(bytes32 _season) external {\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(_msgSender());\\n        require(!seasons[_season], \\\"Season already set\\\");\\n        currentSeason = _season;\\n        seasons[_season] = true;\\n        emit SetCurrentSeason(_season);\\n    }\\n\\n    function batchAddConsumeReasonCodes(bytes32[] memory _reasonCodes) public {\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(_msgSender());\\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\\n            require(!allowedConsumeReasonCodes[_reasonCodes[i]], \\\"Reason code already exists\\\");\\n            allowedConsumeReasonCodes[_reasonCodes[i]] = true;\\n        }\\n\\n        emit BatchAddedConsumeReasonCode(_reasonCodes);\\n    }\\n\\n    function batchRemoveConsumeReasonCodes(bytes32[] memory _reasonCodes) public {\\n        ContractOwnershipStorage.layout().enforceIsContractOwner(_msgSender());\\n\\n        // Check if each reason code exists and can be removed\\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\\n            require(allowedConsumeReasonCodes[_reasonCodes[i]], \\\"Reason code does not exist\\\");\\n            delete allowedConsumeReasonCodes[_reasonCodes[i]];\\n        }\\n\\n        emit BatchRemovedConsumeReasonCode(_reasonCodes);\\n    }\\n\\n    function deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) public {\\n        // Check if the sender has the Depositor role\\n        AccessControlStorage.layout().enforceHasRole(DEPOSITOR_ROLE, _msgSender());\\n\\n        // increase balance\\n        balances[season][realmId][realmIdVersion] += amount;\\n\\n        emit Deposited(msg.sender, season, depositReasonCode, realmId, realmIdVersion, amount);\\n    }\\n\\n    function deposit(\\n        bytes32 season,\\n        bytes32 parentNode,\\n        string memory name,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        bytes32 depositReasonCode\\n    ) public {\\n        uint256 realmId = realmIdContract.getTokenId(name, parentNode);\\n        deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\\n    }\\n\\n    function _consume(uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 consumeReasonCode, address owner_) internal {\\n        // Check if the sender has enough balance\\n        require(balances[currentSeason][realmId][realmIdVersion] >= amount, \\\"Insufficient balance\\\");\\n        // Check if the consumeReasonCode exists and is true in the mapping\\n        require(allowedConsumeReasonCodes[consumeReasonCode], \\\"Invalid consume reason code\\\");\\n\\n        balances[currentSeason][realmId][realmIdVersion] -= amount;\\n\\n        emit Consumed(realmId, currentSeason, consumeReasonCode, msg.sender, realmIdVersion, amount, owner_);\\n        nonces[realmId]++;\\n    }\\n\\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) public {\\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\\n        consume(realmId, amount, consumeReasonCode, v, r, s);\\n    }\\n\\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) public {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        bytes32 _messageHash = _preparePayload(realmId, amount, nonces[realmId], consumeReasonCode);\\n        bytes32 messageDigest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", _messageHash));\\n        address signer = ecrecover(messageDigest, v, r, s);\\n        address owner_ = realmIdContract.ownerOf(realmId);\\n        require(signer == owner_, \\\"Signer is not the owner\\\");\\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, owner_);\\n    }\\n\\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode) public {\\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\\n        consume(realmId, amount, consumeReasonCode);\\n    }\\n\\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) public {\\n        address owner_ = realmIdContract.ownerOf(realmId);\\n        require(msg.sender == owner_, \\\"Sender is not the owner\\\");\\n\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, msg.sender);\\n    }\\n\\n    function balanceOf(bytes32 season, uint256 realmId) external view returns (uint256) {\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        return balances[season][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOf(bytes32 season, bytes32 parentNode, string memory _name) external view returns (uint256) {\\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        return balances[season][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOf(uint256 realmId) external view returns (uint256) {\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        return balances[currentSeason][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOf(bytes32 parentNode, string memory _name) external view returns (uint256) {\\n        uint256 realmId = realmIdContract.getTokenId(_name, parentNode);\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        return balances[currentSeason][realmId][realmIdVersion];\\n    }\\n\\n    function _preparePayload(uint256 realmId, uint256 amount, uint256 nonce, bytes32 reasonCode) internal view returns (bytes32) {\\n        uint256 realmIdVersion = realmIdContract.burnCounts(realmId);\\n        bytes32 payload = keccak256(abi.encodePacked(realmId, realmIdVersion, amount, currentSeason, reasonCode, nonce));\\n        return payload;\\n    }\\n\\n    function preparePayload(uint256 realmId, uint256 amount, bytes32 reasonCode) public view returns (bytes32) {\\n        return (_preparePayload(realmId, amount, nonces[realmId], reasonCode));\\n    }\\n}\\n\",\"keccak256\":\"0x5c19b21ac531161750e2d5239ca3cf0d43fa07de6573001f0d12c4eea3a6b7ab\",\"license\":\"MIT\"},\"contracts/MocaPoints/interface/IRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\n// import {RealmId} from \\\"../realmIdContract/RealmId.sol\\\";\\n\\ninterface IRealmId {\\n    function burnCounts(uint256 realmId) external view returns (uint256);\\n\\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\\n\\n    function ownerOf(uint256 realmId) external view returns (address);\\n}\\n\",\"keccak256\":\"0xfad6e9198a7ed75d8ebb7253962413ce9e789c9d4a90b31bbf460a3f2bef217a\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1326,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":1329,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1308,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1623,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":2190,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"currentSeason","offset":0,"slot":"101","type":"t_bytes32"},{"astId":2194,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"seasons","offset":0,"slot":"102","type":"t_mapping(t_bytes32,t_bool)"},{"astId":2197,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"realmIdContract","offset":0,"slot":"103","type":"t_contract(IRealmId)2979"},{"astId":2205,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"balances","offset":0,"slot":"104","type":"t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))"},{"astId":2209,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"nonces","offset":0,"slot":"105","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2213,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"allowedConsumeReasonCodes","offset":0,"slot":"106","type":"t_mapping(t_bytes32,t_bool)"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IRealmId)2979":{"encoding":"inplace","label":"contract IRealmId","numberOfBytes":"20"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"errors":{"IllegalInterfaceId()":[{"notice":"Thrown when setting the illegal interfaceId 0xffffffff."}],"InitializationPhaseAlreadyReached(uint256,uint256)":[{"notice":"Emitted when trying to set a phase value that has already been reached."}],"NotContractOwner(address)":[{"notice":"Thrown when an account is not the contract owner but is required to."}],"NotRoleHolder(bytes32,address)":[{"notice":"Thrown when an account does not have the required role."}]},"events":{"OwnershipTransferred(address,address)":{"notice":"Emitted when the contract ownership changes."},"RoleGranted(bytes32,address,address)":{"notice":"Emitted when `role` is granted to `account`."},"RoleRevoked(bytes32,address,address)":{"notice":"Emitted when `role` is revoked from `account`."}},"kind":"user","methods":{"grantRole(bytes32,address)":{"notice":"Grants a role to an account."},"hasRole(bytes32,address)":{"notice":"Retrieves whether an account has a role."},"owner()":{"notice":"Gets the address of the contract owner."},"renounceRole(bytes32)":{"notice":"Renounces a role by the sender."},"revokeRole(bytes32,address)":{"notice":"Revokes a role from an account."},"transferOwnership(address)":{"notice":"Sets the address of the new contract owner."}},"version":1}}},"contracts/MocaPoints/interface/IRealmId.sol":{"IRealmId":{"abi":[{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"burnCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burnCounts(uint256)":"a9735f94","getTokenId(string,bytes32)":"cad6b901","ownerOf(uint256)":"6352211e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"burnCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/interface/IRealmId.sol\":\"IRealmId\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/interface/IRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\n// import {RealmId} from \\\"../realmIdContract/RealmId.sol\\\";\\n\\ninterface IRealmId {\\n    function burnCounts(uint256 realmId) external view returns (uint256);\\n\\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\\n\\n    function ownerOf(uint256 realmId) external view returns (address);\\n}\\n\",\"keccak256\":\"0xfad6e9198a7ed75d8ebb7253962413ce9e789c9d4a90b31bbf460a3f2bef217a\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/mock/realmIdContract/MockRealmId.sol":{"MockRealmId":{"abi":[{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"burnCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610197806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636352211e14610046578063a9735f9414610097578063cad6b901146100b9575b600080fd5b61006d6100543660046100d0565b50733c44cdddb6a900fa2b585dd299e03d12fa4293bc90565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ab6100a53660046100d0565b50600090565b60405190815260200161008e565b6100ab6100c73660046100e9565b600a9392505050565b6000602082840312156100e257600080fd5b5035919050565b6000806000604084860312156100fe57600080fd5b833567ffffffffffffffff8082111561011657600080fd5b818601915086601f83011261012a57600080fd5b81358181111561013957600080fd5b87602082850101111561014b57600080fd5b602092830198909750959091013594935050505056fea2646970667358221220eb51ce8701f3959aea8593bb07841a268b3cb8c93af6c2ed5f5bd5b718b8751264736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA9735F94 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xCAD6B901 EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0 JUMP JUMPDEST POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xAB PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0xA SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MLOAD 0xCE DUP8 ADD RETURN SWAP6 SWAP11 0xEA DUP6 SWAP4 0xBB SMOD DUP5 BYTE 0x26 DUP12 EXTCODECOPY 0xB8 0xC9 GASPRICE 0xF6 0xC2 0xED PUSH0 JUMPDEST 0xD5 0xB7 XOR 0xB8 PUSH22 0x1264736F6C6343000815003300000000000000000000 ","sourceMap":"57:358:27:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@burnCounts_2991":{"entryPoint":null,"id":2991,"parameterSlots":1,"returnSlots":1},"@getTokenId_3003":{"entryPoint":null,"id":3003,"parameterSlots":3,"returnSlots":1},"@ownerOf_3016":{"entryPoint":null,"id":3016,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_bytes32":{"entryPoint":233,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:1280:28","nodeType":"YulBlock","src":"0:1280:28","statements":[{"nativeSrc":"6:3:28","nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nativeSrc":"84:110:28","nodeType":"YulBlock","src":"84:110:28","statements":[{"body":{"nativeSrc":"130:16:28","nodeType":"YulBlock","src":"130:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"139:1:28","nodeType":"YulLiteral","src":"139:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"142:1:28","nodeType":"YulLiteral","src":"142:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"132:6:28","nodeType":"YulIdentifier","src":"132:6:28"},"nativeSrc":"132:12:28","nodeType":"YulFunctionCall","src":"132:12:28"},"nativeSrc":"132:12:28","nodeType":"YulExpressionStatement","src":"132:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"105:7:28","nodeType":"YulIdentifier","src":"105:7:28"},{"name":"headStart","nativeSrc":"114:9:28","nodeType":"YulIdentifier","src":"114:9:28"}],"functionName":{"name":"sub","nativeSrc":"101:3:28","nodeType":"YulIdentifier","src":"101:3:28"},"nativeSrc":"101:23:28","nodeType":"YulFunctionCall","src":"101:23:28"},{"kind":"number","nativeSrc":"126:2:28","nodeType":"YulLiteral","src":"126:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"97:3:28","nodeType":"YulIdentifier","src":"97:3:28"},"nativeSrc":"97:32:28","nodeType":"YulFunctionCall","src":"97:32:28"},"nativeSrc":"94:52:28","nodeType":"YulIf","src":"94:52:28"},{"nativeSrc":"155:33:28","nodeType":"YulAssignment","src":"155:33:28","value":{"arguments":[{"name":"headStart","nativeSrc":"178:9:28","nodeType":"YulIdentifier","src":"178:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"165:12:28","nodeType":"YulIdentifier","src":"165:12:28"},"nativeSrc":"165:23:28","nodeType":"YulFunctionCall","src":"165:23:28"},"variableNames":[{"name":"value0","nativeSrc":"155:6:28","nodeType":"YulIdentifier","src":"155:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"14:180:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50:9:28","nodeType":"YulTypedName","src":"50:9:28","type":""},{"name":"dataEnd","nativeSrc":"61:7:28","nodeType":"YulTypedName","src":"61:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"73:6:28","nodeType":"YulTypedName","src":"73:6:28","type":""}],"src":"14:180:28"},{"body":{"nativeSrc":"300:125:28","nodeType":"YulBlock","src":"300:125:28","statements":[{"nativeSrc":"310:26:28","nodeType":"YulAssignment","src":"310:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"322:9:28","nodeType":"YulIdentifier","src":"322:9:28"},{"kind":"number","nativeSrc":"333:2:28","nodeType":"YulLiteral","src":"333:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"318:3:28","nodeType":"YulIdentifier","src":"318:3:28"},"nativeSrc":"318:18:28","nodeType":"YulFunctionCall","src":"318:18:28"},"variableNames":[{"name":"tail","nativeSrc":"310:4:28","nodeType":"YulIdentifier","src":"310:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"352:9:28","nodeType":"YulIdentifier","src":"352:9:28"},{"arguments":[{"name":"value0","nativeSrc":"367:6:28","nodeType":"YulIdentifier","src":"367:6:28"},{"kind":"number","nativeSrc":"375:42:28","nodeType":"YulLiteral","src":"375:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"363:3:28","nodeType":"YulIdentifier","src":"363:3:28"},"nativeSrc":"363:55:28","nodeType":"YulFunctionCall","src":"363:55:28"}],"functionName":{"name":"mstore","nativeSrc":"345:6:28","nodeType":"YulIdentifier","src":"345:6:28"},"nativeSrc":"345:74:28","nodeType":"YulFunctionCall","src":"345:74:28"},"nativeSrc":"345:74:28","nodeType":"YulExpressionStatement","src":"345:74:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"199:226:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"269:9:28","nodeType":"YulTypedName","src":"269:9:28","type":""},{"name":"value0","nativeSrc":"280:6:28","nodeType":"YulTypedName","src":"280:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"291:4:28","nodeType":"YulTypedName","src":"291:4:28","type":""}],"src":"199:226:28"},{"body":{"nativeSrc":"531:76:28","nodeType":"YulBlock","src":"531:76:28","statements":[{"nativeSrc":"541:26:28","nodeType":"YulAssignment","src":"541:26:28","value":{"arguments":[{"name":"headStart","nativeSrc":"553:9:28","nodeType":"YulIdentifier","src":"553:9:28"},{"kind":"number","nativeSrc":"564:2:28","nodeType":"YulLiteral","src":"564:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"549:3:28","nodeType":"YulIdentifier","src":"549:3:28"},"nativeSrc":"549:18:28","nodeType":"YulFunctionCall","src":"549:18:28"},"variableNames":[{"name":"tail","nativeSrc":"541:4:28","nodeType":"YulIdentifier","src":"541:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"583:9:28","nodeType":"YulIdentifier","src":"583:9:28"},{"name":"value0","nativeSrc":"594:6:28","nodeType":"YulIdentifier","src":"594:6:28"}],"functionName":{"name":"mstore","nativeSrc":"576:6:28","nodeType":"YulIdentifier","src":"576:6:28"},"nativeSrc":"576:25:28","nodeType":"YulFunctionCall","src":"576:25:28"},"nativeSrc":"576:25:28","nodeType":"YulExpressionStatement","src":"576:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"430:177:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"500:9:28","nodeType":"YulTypedName","src":"500:9:28","type":""},{"name":"value0","nativeSrc":"511:6:28","nodeType":"YulTypedName","src":"511:6:28","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"522:4:28","nodeType":"YulTypedName","src":"522:4:28","type":""}],"src":"430:177:28"},{"body":{"nativeSrc":"719:559:28","nodeType":"YulBlock","src":"719:559:28","statements":[{"body":{"nativeSrc":"765:16:28","nodeType":"YulBlock","src":"765:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"774:1:28","nodeType":"YulLiteral","src":"774:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"777:1:28","nodeType":"YulLiteral","src":"777:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"767:6:28","nodeType":"YulIdentifier","src":"767:6:28"},"nativeSrc":"767:12:28","nodeType":"YulFunctionCall","src":"767:12:28"},"nativeSrc":"767:12:28","nodeType":"YulExpressionStatement","src":"767:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"740:7:28","nodeType":"YulIdentifier","src":"740:7:28"},{"name":"headStart","nativeSrc":"749:9:28","nodeType":"YulIdentifier","src":"749:9:28"}],"functionName":{"name":"sub","nativeSrc":"736:3:28","nodeType":"YulIdentifier","src":"736:3:28"},"nativeSrc":"736:23:28","nodeType":"YulFunctionCall","src":"736:23:28"},{"kind":"number","nativeSrc":"761:2:28","nodeType":"YulLiteral","src":"761:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"732:3:28","nodeType":"YulIdentifier","src":"732:3:28"},"nativeSrc":"732:32:28","nodeType":"YulFunctionCall","src":"732:32:28"},"nativeSrc":"729:52:28","nodeType":"YulIf","src":"729:52:28"},{"nativeSrc":"790:37:28","nodeType":"YulVariableDeclaration","src":"790:37:28","value":{"arguments":[{"name":"headStart","nativeSrc":"817:9:28","nodeType":"YulIdentifier","src":"817:9:28"}],"functionName":{"name":"calldataload","nativeSrc":"804:12:28","nodeType":"YulIdentifier","src":"804:12:28"},"nativeSrc":"804:23:28","nodeType":"YulFunctionCall","src":"804:23:28"},"variables":[{"name":"offset","nativeSrc":"794:6:28","nodeType":"YulTypedName","src":"794:6:28","type":""}]},{"nativeSrc":"836:28:28","nodeType":"YulVariableDeclaration","src":"836:28:28","value":{"kind":"number","nativeSrc":"846:18:28","nodeType":"YulLiteral","src":"846:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"840:2:28","nodeType":"YulTypedName","src":"840:2:28","type":""}]},{"body":{"nativeSrc":"891:16:28","nodeType":"YulBlock","src":"891:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"900:1:28","nodeType":"YulLiteral","src":"900:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"903:1:28","nodeType":"YulLiteral","src":"903:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"893:6:28","nodeType":"YulIdentifier","src":"893:6:28"},"nativeSrc":"893:12:28","nodeType":"YulFunctionCall","src":"893:12:28"},"nativeSrc":"893:12:28","nodeType":"YulExpressionStatement","src":"893:12:28"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"879:6:28","nodeType":"YulIdentifier","src":"879:6:28"},{"name":"_1","nativeSrc":"887:2:28","nodeType":"YulIdentifier","src":"887:2:28"}],"functionName":{"name":"gt","nativeSrc":"876:2:28","nodeType":"YulIdentifier","src":"876:2:28"},"nativeSrc":"876:14:28","nodeType":"YulFunctionCall","src":"876:14:28"},"nativeSrc":"873:34:28","nodeType":"YulIf","src":"873:34:28"},{"nativeSrc":"916:32:28","nodeType":"YulVariableDeclaration","src":"916:32:28","value":{"arguments":[{"name":"headStart","nativeSrc":"930:9:28","nodeType":"YulIdentifier","src":"930:9:28"},{"name":"offset","nativeSrc":"941:6:28","nodeType":"YulIdentifier","src":"941:6:28"}],"functionName":{"name":"add","nativeSrc":"926:3:28","nodeType":"YulIdentifier","src":"926:3:28"},"nativeSrc":"926:22:28","nodeType":"YulFunctionCall","src":"926:22:28"},"variables":[{"name":"_2","nativeSrc":"920:2:28","nodeType":"YulTypedName","src":"920:2:28","type":""}]},{"body":{"nativeSrc":"996:16:28","nodeType":"YulBlock","src":"996:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1005:1:28","nodeType":"YulLiteral","src":"1005:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1008:1:28","nodeType":"YulLiteral","src":"1008:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"998:6:28","nodeType":"YulIdentifier","src":"998:6:28"},"nativeSrc":"998:12:28","nodeType":"YulFunctionCall","src":"998:12:28"},"nativeSrc":"998:12:28","nodeType":"YulExpressionStatement","src":"998:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"975:2:28","nodeType":"YulIdentifier","src":"975:2:28"},{"kind":"number","nativeSrc":"979:4:28","nodeType":"YulLiteral","src":"979:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"971:3:28","nodeType":"YulIdentifier","src":"971:3:28"},"nativeSrc":"971:13:28","nodeType":"YulFunctionCall","src":"971:13:28"},{"name":"dataEnd","nativeSrc":"986:7:28","nodeType":"YulIdentifier","src":"986:7:28"}],"functionName":{"name":"slt","nativeSrc":"967:3:28","nodeType":"YulIdentifier","src":"967:3:28"},"nativeSrc":"967:27:28","nodeType":"YulFunctionCall","src":"967:27:28"}],"functionName":{"name":"iszero","nativeSrc":"960:6:28","nodeType":"YulIdentifier","src":"960:6:28"},"nativeSrc":"960:35:28","nodeType":"YulFunctionCall","src":"960:35:28"},"nativeSrc":"957:55:28","nodeType":"YulIf","src":"957:55:28"},{"nativeSrc":"1021:30:28","nodeType":"YulVariableDeclaration","src":"1021:30:28","value":{"arguments":[{"name":"_2","nativeSrc":"1048:2:28","nodeType":"YulIdentifier","src":"1048:2:28"}],"functionName":{"name":"calldataload","nativeSrc":"1035:12:28","nodeType":"YulIdentifier","src":"1035:12:28"},"nativeSrc":"1035:16:28","nodeType":"YulFunctionCall","src":"1035:16:28"},"variables":[{"name":"length","nativeSrc":"1025:6:28","nodeType":"YulTypedName","src":"1025:6:28","type":""}]},{"body":{"nativeSrc":"1078:16:28","nodeType":"YulBlock","src":"1078:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1087:1:28","nodeType":"YulLiteral","src":"1087:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1090:1:28","nodeType":"YulLiteral","src":"1090:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1080:6:28","nodeType":"YulIdentifier","src":"1080:6:28"},"nativeSrc":"1080:12:28","nodeType":"YulFunctionCall","src":"1080:12:28"},"nativeSrc":"1080:12:28","nodeType":"YulExpressionStatement","src":"1080:12:28"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1066:6:28","nodeType":"YulIdentifier","src":"1066:6:28"},{"name":"_1","nativeSrc":"1074:2:28","nodeType":"YulIdentifier","src":"1074:2:28"}],"functionName":{"name":"gt","nativeSrc":"1063:2:28","nodeType":"YulIdentifier","src":"1063:2:28"},"nativeSrc":"1063:14:28","nodeType":"YulFunctionCall","src":"1063:14:28"},"nativeSrc":"1060:34:28","nodeType":"YulIf","src":"1060:34:28"},{"body":{"nativeSrc":"1146:16:28","nodeType":"YulBlock","src":"1146:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1155:1:28","nodeType":"YulLiteral","src":"1155:1:28","type":"","value":"0"},{"kind":"number","nativeSrc":"1158:1:28","nodeType":"YulLiteral","src":"1158:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1148:6:28","nodeType":"YulIdentifier","src":"1148:6:28"},"nativeSrc":"1148:12:28","nodeType":"YulFunctionCall","src":"1148:12:28"},"nativeSrc":"1148:12:28","nodeType":"YulExpressionStatement","src":"1148:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"1117:2:28","nodeType":"YulIdentifier","src":"1117:2:28"},{"name":"length","nativeSrc":"1121:6:28","nodeType":"YulIdentifier","src":"1121:6:28"}],"functionName":{"name":"add","nativeSrc":"1113:3:28","nodeType":"YulIdentifier","src":"1113:3:28"},"nativeSrc":"1113:15:28","nodeType":"YulFunctionCall","src":"1113:15:28"},{"kind":"number","nativeSrc":"1130:4:28","nodeType":"YulLiteral","src":"1130:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1109:3:28","nodeType":"YulIdentifier","src":"1109:3:28"},"nativeSrc":"1109:26:28","nodeType":"YulFunctionCall","src":"1109:26:28"},{"name":"dataEnd","nativeSrc":"1137:7:28","nodeType":"YulIdentifier","src":"1137:7:28"}],"functionName":{"name":"gt","nativeSrc":"1106:2:28","nodeType":"YulIdentifier","src":"1106:2:28"},"nativeSrc":"1106:39:28","nodeType":"YulFunctionCall","src":"1106:39:28"},"nativeSrc":"1103:59:28","nodeType":"YulIf","src":"1103:59:28"},{"nativeSrc":"1171:23:28","nodeType":"YulAssignment","src":"1171:23:28","value":{"arguments":[{"name":"_2","nativeSrc":"1185:2:28","nodeType":"YulIdentifier","src":"1185:2:28"},{"kind":"number","nativeSrc":"1189:4:28","nodeType":"YulLiteral","src":"1189:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1181:3:28","nodeType":"YulIdentifier","src":"1181:3:28"},"nativeSrc":"1181:13:28","nodeType":"YulFunctionCall","src":"1181:13:28"},"variableNames":[{"name":"value0","nativeSrc":"1171:6:28","nodeType":"YulIdentifier","src":"1171:6:28"}]},{"nativeSrc":"1203:16:28","nodeType":"YulAssignment","src":"1203:16:28","value":{"name":"length","nativeSrc":"1213:6:28","nodeType":"YulIdentifier","src":"1213:6:28"},"variableNames":[{"name":"value1","nativeSrc":"1203:6:28","nodeType":"YulIdentifier","src":"1203:6:28"}]},{"nativeSrc":"1228:44:28","nodeType":"YulAssignment","src":"1228:44:28","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1255:9:28","nodeType":"YulIdentifier","src":"1255:9:28"},{"kind":"number","nativeSrc":"1266:4:28","nodeType":"YulLiteral","src":"1266:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1251:3:28","nodeType":"YulIdentifier","src":"1251:3:28"},"nativeSrc":"1251:20:28","nodeType":"YulFunctionCall","src":"1251:20:28"}],"functionName":{"name":"calldataload","nativeSrc":"1238:12:28","nodeType":"YulIdentifier","src":"1238:12:28"},"nativeSrc":"1238:34:28","nodeType":"YulFunctionCall","src":"1238:34:28"},"variableNames":[{"name":"value2","nativeSrc":"1228:6:28","nodeType":"YulIdentifier","src":"1228:6:28"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_bytes32","nativeSrc":"612:666:28","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"669:9:28","nodeType":"YulTypedName","src":"669:9:28","type":""},{"name":"dataEnd","nativeSrc":"680:7:28","nodeType":"YulTypedName","src":"680:7:28","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"692:6:28","nodeType":"YulTypedName","src":"692:6:28","type":""},{"name":"value1","nativeSrc":"700:6:28","nodeType":"YulTypedName","src":"700:6:28","type":""},{"name":"value2","nativeSrc":"708:6:28","nodeType":"YulTypedName","src":"708:6:28","type":""}],"src":"612:666:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80636352211e14610046578063a9735f9414610097578063cad6b901146100b9575b600080fd5b61006d6100543660046100d0565b50733c44cdddb6a900fa2b585dd299e03d12fa4293bc90565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ab6100a53660046100d0565b50600090565b60405190815260200161008e565b6100ab6100c73660046100e9565b600a9392505050565b6000602082840312156100e257600080fd5b5035919050565b6000806000604084860312156100fe57600080fd5b833567ffffffffffffffff8082111561011657600080fd5b818601915086601f83011261012a57600080fd5b81358181111561013957600080fd5b87602082850101111561014b57600080fd5b602092830198909750959091013594935050505056fea2646970667358221220eb51ce8701f3959aea8593bb07841a268b3cb8c93af6c2ed5f5bd5b718b8751264736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA9735F94 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xCAD6B901 EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0 JUMP JUMPDEST POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xAB PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0xA SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MLOAD 0xCE DUP8 ADD RETURN SWAP6 SWAP11 0xEA DUP6 SWAP4 0xBB SMOD DUP5 BYTE 0x26 DUP12 EXTCODECOPY 0xB8 0xC9 GASPRICE 0xF6 0xC2 0xED PUSH0 JUMPDEST 0xD5 0xB7 XOR 0xB8 PUSH22 0x1264736F6C6343000815003300000000000000000000 ","sourceMap":"57:358:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;282:131;;;;;;:::i;:::-;-1:-1:-1;363:42:27;;282:131;;;;375:42:28;363:55;;;345:74;;333:2;318:18;282:131:27;;;;;;;;84:84;;;;;;:::i;:::-;-1:-1:-1;134:7:27;;84:84;;;;576:25:28;;;564:2;549:18;84:84:27;430:177:28;174:102:27;;;;;;:::i;:::-;267:2;174:102;;;;;:::o;14:180:28:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:28;;14:180;-1:-1:-1;14:180:28:o;612:666::-;692:6;700;708;761:2;749:9;740:7;736:23;732:32;729:52;;;777:1;774;767:12;729:52;817:9;804:23;846:18;887:2;879:6;876:14;873:34;;;903:1;900;893:12;873:34;941:6;930:9;926:22;916:32;;986:7;979:4;975:2;971:13;967:27;957:55;;1008:1;1005;998:12;957:55;1048:2;1035:16;1074:2;1066:6;1063:14;1060:34;;;1090:1;1087;1080:12;1060:34;1137:7;1130:4;1121:6;1117:2;1113:15;1109:26;1106:39;1103:59;;;1158:1;1155;1148:12;1103:59;1189:4;1181:13;;;;1213:6;;-1:-1:-1;1251:20:28;;;;1238:34;;612:666;-1:-1:-1;;;;612:666:28:o"},"gasEstimates":{"creation":{"codeDepositCost":"81400","executionCost":"129","totalCost":"81529"},"external":{"burnCounts(uint256)":"274","getTokenId(string,bytes32)":"496","ownerOf(uint256)":"250"}},"methodIdentifiers":{"burnCounts(uint256)":"a9735f94","getTokenId(string,bytes32)":"cad6b901","ownerOf(uint256)":"6352211e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burnCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/mock/realmIdContract/MockRealmId.sol\":\"MockRealmId\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/mock/realmIdContract/MockRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ncontract MockRealmId {\\n    function burnCounts(uint256) public pure returns (uint256) {\\n        return 0;\\n    }\\n\\n    function getTokenId(string calldata, bytes32) public pure returns (uint256) {\\n        return 10;\\n    }\\n\\n    function ownerOf(uint256) public pure returns (address) {\\n        return address(0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC);\\n    }\\n}\\n\",\"keccak256\":\"0x31a2928bc7acba111022bb975099b9a8f76acdd8f1ecce5c871cda55767295a8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}