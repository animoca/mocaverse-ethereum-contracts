{"id":"fc1a1cd38bda5ad9235fef03397b144c","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721Upgradeable.sol\";\nimport \"./IERC721ReceiverUpgradeable.sol\";\nimport \"./extensions/IERC721MetadataUpgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../utils/StringsUpgradeable.sol\";\nimport \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\n    using AddressUpgradeable for address;\n    using StringsUpgradeable for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721Upgradeable.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721Upgradeable.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[44] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721ReceiverUpgradeable {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MocaPoints/interface/IMiddleware.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.8.0;\n\nimport {DataTypes} from \"../realmIdContract/DataTypes.sol\";\n\ninterface IMiddleware {\n    /**\n     * @notice Sets data for middleware.\n     *\n     * @param data Extra data to set.\n     */\n    function setMwData(bytes calldata data) external;\n\n    /**\n     * @notice Process that runs before the name creation happens.\n     *\n     * @param params The params for creating name.\n     * @param data Extra data to process.\n     */\n    function preProcess(DataTypes.RegisterNameParams calldata params, bytes calldata data) external payable;\n\n    /**\n     * @notice Validates the name pattern.\n     *\n     * @param name The name to validate.\n     */\n    function namePatternValid(string calldata name) external view returns (bool);\n}\n"},"contracts/MocaPoints/interface/IRealmId.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\n// import {RealmId} from \"../realmIdContract/RealmId.sol\";\n\ninterface IRealmId {\n    function allowedParentNodes(bytes32 parentNode) external view returns (bool);\n\n    function burnCounts(uint256 realmId) external view returns (uint256);\n\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\n\n    function ownerOf(uint256 realmId) external view returns (address);\n\n    function register(string calldata _name, bytes32 parentNode, address to, bytes calldata preData) external returns (uint256);\n\n    function allowNode(\n        string calldata label,\n        bytes32 parentNode,\n        bool allow,\n        string calldata baseTokenURI,\n        address middleware,\n        bytes calldata middlewareData\n    ) external returns (bytes32 allowedNode);\n\n    function available(string calldata _name, bytes32 parentNode) external view returns (bool);\n}\n"},"contracts/MocaPoints/MocaPoints.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {IRealmId} from \"./interface/IRealmId.sol\";\nimport {PausableUpgradeable} from \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport {AccessControlUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract MocaPoints is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    // Roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\"DEPOSITOR_ROLE\");\n\n    // Seasonal variables\n    bytes32 public currentSeason;\n    mapping(bytes32 => bool) public seasons;\n\n    // Address of the RealmId contract\n    IRealmId public realmIdContract;\n\n    // Admin Address\n    address public adminAddress;\n\n    // Balances mapping\n    mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256))) private balances; // season => realmId => realmIdVersion => balance\n\n    // Nonce mapping\n    mapping(uint256 => uint256) public nonces; // realmId => nonce\n\n    // Allowed consume reason codes mapping\n    mapping(bytes32 => bool) private allowedConsumeReasonCodes;\n\n    event SetCurrentSeason(bytes32 season);\n    event BatchAddedConsumeReasonCode(bytes32[] reasonCodes);\n    event BatchRemovedConsumeReasonCode(bytes32[] reasonCodes);\n    event Deposited(\n        address indexed sender,\n        bytes32 indexed season,\n        bytes32 indexed reasonCode,\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount\n    );\n\n    event Consumed(\n        uint256 indexed realmId,\n        bytes32 indexed season,\n        bytes32 indexed reasonCode,\n        address operator,\n        uint256 nonce,\n        uint256 realmIdVersion,\n        uint256 amount,\n        address realmIdOwner\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address _realmIdContract, address _adminAddress) public initializer {\n        __Pausable_init();\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        require(address(_realmIdContract) != address(0), \"Not a valid Contract Address\");\n        require(address(_adminAddress) != address(0), \"Not a valid Admin Address\");\n\n        _grantRole(DEFAULT_ADMIN_ROLE, _adminAddress);\n        _grantRole(PAUSER_ROLE, _adminAddress);\n        _grantRole(UPGRADER_ROLE, _adminAddress);\n        _grantRole(ADMIN_ROLE, _adminAddress);\n        _grantRole(DEPOSITOR_ROLE, _adminAddress);\n        realmIdContract = IRealmId(_realmIdContract);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n\n    modifier onlyAdmin() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\");\n        _;\n    }\n\n    modifier onlyDepositor() {\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \"Not a depositor\");\n        _;\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function setCurrentSeason(bytes32 _season) external onlyAdmin {\n        require(!seasons[_season], \"Season already set\");\n        currentSeason = _season;\n        seasons[_season] = true;\n        emit SetCurrentSeason(_season);\n    }\n\n    // Function to get the realmIdVersion from the RealmId contract\n    function _getRealmIdVersion(uint256 realmId) internal view returns (uint256) {\n        return realmIdContract.burnCounts(realmId);\n    }\n\n    function isReasonCodeAllowed(bytes32 reasonCode) external view returns (bool) {\n        return allowedConsumeReasonCodes[reasonCode];\n    }\n\n    function _prepareRealmId(bytes32 parentNode, string memory _name) internal view returns (uint256) {\n        return realmIdContract.getTokenId(_name, parentNode);\n    }\n\n    // Function to get the owner of a realmId from the RealmId contract\n    function owner(uint256 realmId) internal view returns (address) {\n        address _owner = realmIdContract.ownerOf(realmId);\n        return _owner;\n    }\n\n    function batchAddConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\n        // Check if each reason code is unique and does not already exist\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\n            require(!allowedConsumeReasonCodes[_reasonCodes[i]], \"Reason code already exists\");\n            allowedConsumeReasonCodes[_reasonCodes[i]] = true;\n        }\n\n        // Emit the event to indicate that all reason codes were added\n        emit BatchAddedConsumeReasonCode(_reasonCodes);\n    }\n\n    function batchRemoveConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\n        // Check if each reason code exists and can be removed\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\n            // require(\n            //     allowedConsumeReasonCodes[_reasonCodes[i]],\n            //     \"Reason code does not exist\"\n            // );\n            delete allowedConsumeReasonCodes[_reasonCodes[i]];\n        }\n\n        // Emit the event to indicate that all reason codes were removed\n        emit BatchRemovedConsumeReasonCode(_reasonCodes);\n    }\n\n    function _deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) internal {\n        // Perform the deposit operation\n        balances[season][realmId][realmIdVersion] += amount;\n\n        // Emit the Deposit event\n        emit Deposited(msg.sender, season, depositReasonCode, realmId, realmIdVersion, amount);\n    }\n\n    function deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) external onlyDepositor {\n        // Check if the sender has the Depositor role\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \"Not a depositor\");\n\n        // Call the internal _deposit function to perform the deposit operation\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\n    }\n\n    function depositWithParentnode(\n        bytes32 season,\n        bytes32 parentNode,\n        string memory name,\n        uint256 realmIdVersion,\n        uint256 amount,\n        bytes32 depositReasonCode\n    ) external onlyDepositor {\n        // Create the realmId using parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, name);\n\n        // Call the internal _deposit function to perform the deposit operation\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\n    }\n\n    function _getSigner(\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount,\n        uint256 nonce,\n        bytes32 consumeReasonCode,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal view returns (address) {\n        bytes32 messageHash = _preparePayload(realmId, realmIdVersion, amount, nonce, consumeReasonCode);\n        return ecrecover(messageHash, v, r, s);\n    }\n\n    function _consumeWithSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) internal {\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n        address signer = _getSigner(realmId, realmIdVersion, amount, nonces[realmId], consumeReasonCode, v, r, s);\n        address owner_ = owner(realmId);\n        require(signer == owner_, \"Signer not owner of realmId\");\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, owner_);\n    }\n\n    function _consume(uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 consumeReasonCode, address owner_) internal {\n        // Check if the sender has enough balance\n        require(balances[currentSeason][realmId][realmIdVersion] >= amount, \"Insufficient balance\");\n\n        // Check if the consumeReasonCode exists and is true in the mapping\n        require(allowedConsumeReasonCodes[consumeReasonCode], \"Invalid consume reason code\");\n\n        // Perform the consume operation\n        balances[currentSeason][realmId][realmIdVersion] -= amount;\n\n        // Emit the Consumed event\n        emit Consumed(realmId, currentSeason, consumeReasonCode, msg.sender, nonces[realmId], realmIdVersion, amount, owner_);\n        // Increment the nonce for the realmId\n        nonces[realmId]++;\n    }\n\n    function consumeWithParentnodeVRS(\n        bytes32 parentNode,\n        string memory _name,\n        uint256 amount,\n        bytes32 consumeReasonCode,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        // get the realmId using parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\n    }\n\n    function consumeWithRealmIdVRS(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) external {\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\n    }\n\n    function _consumeWithoutSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) internal {\n        address owner_ = owner(realmId);\n        require(msg.sender == owner_, \"Signer not owner of realmId\");\n\n        // Call the common _consume function for the core consume operation\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, msg.sender);\n    }\n\n    function consumeWithParentnode(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode) external {\n        // Compute the realmId using the provided parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\n    }\n\n    function consumeWithRealmId(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) external {\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\n    }\n\n    function balanceOfWithSeasonRealmId(bytes32 season, uint256 realmId) external view returns (uint256) {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        return balances[season][realmId][realmIdVersion];\n    }\n\n    function balanceOfWithSeason(bytes32 season, bytes32 parentNode, string memory _name) external view returns (uint256) {\n        // Compute the realmId using the provided parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        // Retrieve and return the balance for the calculated realmId\n        return balances[season][realmId][realmIdVersion];\n    }\n\n    function balanceOfWithRealmId(uint256 realmId) external view returns (uint256) {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        // Retrieve and return the balance for the given realmId at the current season\n        return balances[currentSeason][realmId][realmIdVersion];\n    }\n\n    function balanceOfWithParentNodeName(bytes32 parentNode, string memory _name) external view returns (uint256) {\n        // Compute the realmId using the provided parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        // Retrieve and return the balance for the given realmId at the current season\n        return balances[currentSeason][realmId][realmIdVersion];\n    }\n\n    // Return the payload which is generated using the arguments, current season and the realmIdversion\n    function _preparePayload(\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount,\n        uint256 nonce,\n        bytes32 reasonCode\n    ) internal view returns (bytes32) {\n        bytes32 payload = keccak256(abi.encodePacked(realmId, realmIdVersion, amount, currentSeason, reasonCode, nonce));\n        return payload;\n    }\n\n    // Return the payload which is generated using the arguments, current nonce, current season, and the realmId version\n    function preparePayload(uint256 realmId, uint256 amount, bytes32 reasonCode) external view returns (bytes32) {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        return (_preparePayload(realmId, realmIdVersion, amount, nonces[realmId], reasonCode));\n    }\n}\n"},"contracts/MocaPoints/realmIdContract/DataTypes.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.8.0;\n\nlibrary DataTypes {\n    struct EIP712Signature {\n        uint8 v;\n        bytes32 r;\n        bytes32 s;\n        uint256 deadline;\n    }\n\n    struct MetadataPair {\n        string key;\n        string value;\n    }\n\n    struct RegisterNameParams {\n        address msgSender;\n        string name;\n        bytes32 parentNode;\n        address to;\n    }\n\n    struct RegisterCyberIdParams {\n        address msgSender;\n        string cid;\n        address to;\n        uint256 durationYear;\n    }\n\n    struct RenewCyberIdParams {\n        address msgSender;\n        string cid;\n        uint256 durationYear;\n    }\n\n    struct BidCyberIdParams {\n        address msgSender;\n        string cid;\n        address to;\n        uint256 auctionStartTimestamp;\n    }\n}\n"},"contracts/MocaPoints/realmIdContract/LibString.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.8.0;\n\n// adapted from 721A contracts\nlibrary LibString {\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory ptr) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\n            ptr := add(mload(0x40), 128)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, ptr)\n            // Cache the end of the memory to calculate the length later.\n            let end := ptr\n            // We write the string from the rightmost digit to the leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // Costs a bit more than early returning for the zero case,\n            // but cheaper in terms of deployment and overall runtime costs.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\n                ptr := sub(ptr, 1)\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\n                mstore8(ptr, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n            } temp {\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n            } {\n                // Body of the for loop.\n                ptr := sub(ptr, 1)\n                mstore8(ptr, add(48, mod(temp, 10)))\n            }\n            let length := sub(end, ptr)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            ptr := sub(ptr, 32)\n            // Store the length.\n            mstore(ptr, length)\n        }\n    }\n\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory str) {\n        assembly {\n            let start := mload(0x40)\n            // We need length * 2 bytes for the digits, 2 bytes for the prefix,\n            // and 32 bytes for the length. We add 32 to the total and round down\n            // to a multiple of 32. (32 + 2 + 32) = 66.\n            str := add(start, and(add(shl(1, length), 66), not(31)))\n\n            // Cache the end to calculate the length later.\n            let end := str\n\n            // Allocate the memory.\n            mstore(0x40, str)\n\n            let temp := value\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            for {\n                // Initialize and perform the first pass without check.\n                str := sub(str, 2)\n                mstore8(add(str, 1), byte(and(temp, 15), \"0123456789abcdef\"))\n                mstore8(str, byte(and(shr(4, temp), 15), \"0123456789abcdef\"))\n                temp := shr(8, temp)\n                length := sub(length, 1)\n            } length {\n                length := sub(length, 1)\n            } {\n                str := sub(str, 2)\n                mstore8(add(str, 1), byte(and(temp, 15), \"0123456789abcdef\"))\n                mstore8(str, byte(and(shr(4, temp), 15), \"0123456789abcdef\"))\n                temp := shr(8, temp)\n            }\n\n            if temp {\n                mstore(0x00, \"\\x08\\xc3\\x79\\xa0\") // Function selector of the error method.\n                mstore(0x04, 0x20) // Offset of the error string.\n                mstore(0x24, 23) // Length of the error string.\n                mstore(0x44, \"HEX_LENGTH_INSUFFICIENT\") // The error string.\n                revert(0x00, 0x64) // Revert with (offset, size).\n            }\n\n            // Compute the string's length.\n            let strLength := add(sub(end, str), 2)\n            // Move the pointer and write the \"0x\" prefix.\n            str := sub(str, 32)\n            mstore(str, 0x3078)\n            // Move the pointer and write the length.\n            str := sub(str, 2)\n            mstore(str, strLength)\n        }\n    }\n\n    function toHexString(uint256 value) internal pure returns (string memory str) {\n        assembly {\n            let start := mload(0x40)\n            // We need 32 bytes for the length, 2 bytes for the prefix,\n            // and 64 bytes for the digits.\n            // The next multiple of 32 above (32 + 2 + 64) is 128.\n            str := add(start, 128)\n\n            // Cache the end to calculate the length later.\n            let end := str\n\n            // Allocate the memory.\n            mstore(0x40, str)\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            for {\n                // Initialize and perform the first pass without check.\n                let temp := value\n                str := sub(str, 2)\n                mstore8(add(str, 1), byte(and(temp, 15), \"0123456789abcdef\"))\n                mstore8(str, byte(and(shr(4, temp), 15), \"0123456789abcdef\"))\n                temp := shr(8, temp)\n            } temp {\n                // prettier-ignore\n            } {\n                str := sub(str, 2)\n                mstore8(add(str, 1), byte(and(temp, 15), \"0123456789abcdef\"))\n                mstore8(str, byte(and(shr(4, temp), 15), \"0123456789abcdef\"))\n                temp := shr(8, temp)\n            }\n\n            // Compute the string's length.\n            let strLength := add(sub(end, str), 2)\n            // Move the pointer and write the \"0x\" prefix.\n            str := sub(str, 32)\n            mstore(str, 0x3078)\n            // Move the pointer and write the length.\n            str := sub(str, 2)\n            mstore(str, strLength)\n        }\n    }\n\n    function toHexString(address value) internal pure returns (string memory str) {\n        assembly {\n            let start := mload(0x40)\n            // We need 32 bytes for the length, 2 bytes for the prefix,\n            // and 40 bytes for the digits.\n            // The next multiple of 32 above (32 + 2 + 40) is 96.\n            str := add(start, 96)\n\n            // Allocate the memory.\n            mstore(0x40, str)\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            for {\n                // Initialize and perform the first pass without check.\n                let length := 20\n                let temp := value\n                str := sub(str, 2)\n                mstore8(add(str, 1), byte(and(temp, 15), \"0123456789abcdef\"))\n                mstore8(str, byte(and(shr(4, temp), 15), \"0123456789abcdef\"))\n                temp := shr(8, temp)\n                length := sub(length, 1)\n            } length {\n                length := sub(length, 1)\n            } {\n                str := sub(str, 2)\n                mstore8(add(str, 1), byte(and(temp, 15), \"0123456789abcdef\"))\n                mstore8(str, byte(and(shr(4, temp), 15), \"0123456789abcdef\"))\n                temp := shr(8, temp)\n            }\n\n            // Move the pointer and write the \"0x\" prefix.\n            str := sub(str, 32)\n            mstore(str, 0x3078)\n            // Move the pointer and write the length.\n            str := sub(str, 2)\n            mstore(str, 42)\n        }\n    }\n\n    function toLower(string memory str) internal pure returns (string memory) {\n        bytes memory bStr = bytes(str);\n        bytes memory bLower = new bytes(bStr.length);\n        for (uint256 i = 0; i < bStr.length; i++) {\n            if ((bStr[i] >= \"A\") && (bStr[i] <= \"Z\")) {\n                bLower[i] = bytes1(uint8(bStr[i]) + 32);\n            } else {\n                bLower[i] = bStr[i];\n            }\n        }\n        return string(bLower);\n    }\n\n    function toUpper(string memory str) internal pure returns (string memory) {\n        bytes memory bStr = bytes(str);\n        bytes memory bLower = new bytes(bStr.length);\n        for (uint256 i = 0; i < bStr.length; i++) {\n            if ((bStr[i] >= \"a\") && (bStr[i] <= \"z\")) {\n                bLower[i] = bytes1(uint8(bStr[i]) - 32);\n            } else {\n                bLower[i] = bStr[i];\n            }\n        }\n        return string(bLower);\n    }\n\n    /**\n     * @dev Returns the length of a given string\n     *\n     * @param s The string to measure the length of\n     * @return The length of the input string\n     */\n    function strlen(string memory s) internal pure returns (uint) {\n        uint len;\n        uint i = 0;\n        uint bytelength = bytes(s).length;\n        for (len = 0; i < bytelength; len++) {\n            bytes1 b = bytes(s)[i];\n            if (b < 0x80) {\n                i += 1;\n            } else if (b < 0xE0) {\n                i += 2;\n            } else if (b < 0xF0) {\n                i += 3;\n            } else if (b < 0xF8) {\n                i += 4;\n            } else if (b < 0xFC) {\n                i += 5;\n            } else {\n                i += 6;\n            }\n        }\n        return len;\n    }\n\n    function stringToUint256(string memory s) internal pure returns (uint256) {\n        bytes memory b = bytes(s);\n        uint256 result = 0;\n        for (uint256 i = 0; i < b.length; i++) {\n            uint256 c = uint256(uint8(b[i]));\n            if (c >= 48 && c <= 57) {\n                result = result * 10 + c - 48;\n            }\n        }\n        return result;\n    }\n}\n"},"contracts/MocaPoints/realmIdContract/MetadataResolver.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.8.0;\n\nimport {DataTypes} from \"./DataTypes.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\nabstract contract MetadataResolver is Initializable {\n    /*//////////////////////////////////////////////////////////////\n                            STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(uint64 => mapping(uint256 => mapping(string => string))) _metadatas;\n    mapping(uint256 => uint64) public metadataVersions;\n\n    mapping(uint64 => mapping(uint256 => mapping(string => string))) _gatedMetadatas;\n    mapping(uint256 => uint64) public gatedMetadataVersions;\n\n    /**\n     * @dev Added to allow future versions to add new variables in case this contract becomes\n     *      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[40] private __gap;\n\n    /*//////////////////////////////////////////////////////////////\n                                 CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    // constructor() {\n    //     _disableInitializers();\n    // }\n\n    /*//////////////////////////////////////////////////////////////\n                            EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event MetadataVersionChanged(uint256 indexed tokenId, uint64 newVersion);\n\n    event MetadataChanged(uint256 indexed tokenId, string key, string value);\n\n    event GatedMetadataVersionChanged(uint256 indexed tokenId, uint64 newVersion);\n\n    event GatedMetadataChanged(uint256 indexed tokenId, string key, string value);\n\n    /*//////////////////////////////////////////////////////////////\n                            MODIFIER\n    //////////////////////////////////////////////////////////////*/\n\n    modifier authorised(uint256 tokenId) {\n        require(_isMetadataAuthorised(tokenId), \"METADATA_UNAUTHORISED\");\n        _;\n    }\n\n    modifier gatedAuthorised(uint256 tokenId) {\n        require(_isGatedMetadataAuthorised(tokenId), \"GATED_METADATA_UNAUTHORISED\");\n        _;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            EXTERNAL\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice  Clears all metadata on a token.\n     * @param   tokenId  token to clear metadata.\n     */\n    function clearMetadatas(uint256 tokenId) external virtual authorised(tokenId) {\n        _clearMetadatas(tokenId);\n    }\n\n    /**\n     * @notice  Clears all gated metadata on a token.\n     * @param   tokenId  token to clear metadata.\n     */\n    function clearGatedMetadatas(uint256 tokenId) external virtual gatedAuthorised(tokenId) {\n        _clearGatedMetadatas(tokenId);\n    }\n\n    /**\n     * @notice Sets the metadatas associated with an token and keys.\n     * Only can be called by the owner or approved operators of that token.\n     * @param tokenId The token to update.\n     * @param pairs The kv pairs to set.\n     */\n    function batchSetMetadatas(uint256 tokenId, DataTypes.MetadataPair[] calldata pairs) external authorised(tokenId) {\n        for (uint256 i = 0; i < pairs.length; i++) {\n            DataTypes.MetadataPair memory pair = pairs[i];\n            _metadatas[metadataVersions[tokenId]][tokenId][pair.key] = pair.value;\n            emit MetadataChanged(tokenId, pair.key, pair.value);\n        }\n    }\n\n    /**\n     * @notice Sets the gated metadatas associated with an token and keys.\n     * @param tokenId The token to update.\n     * @param pairs The kv pairs to set.\n     */\n    function batchSetGatedMetadatas(uint256 tokenId, DataTypes.MetadataPair[] memory pairs) public gatedAuthorised(tokenId) {\n        for (uint256 i = 0; i < pairs.length; i++) {\n            DataTypes.MetadataPair memory pair = pairs[i];\n            _gatedMetadatas[gatedMetadataVersions[tokenId]][tokenId][pair.key] = pair.value;\n            emit GatedMetadataChanged(tokenId, pair.key, pair.value);\n        }\n    }\n\n    /**\n     * @notice Returns the metadata associated with an token and key.\n     * @param tokenId The token to query.\n     * @param key The metadata key to query.\n     * @return The associated metadata.\n     */\n    function getMetadata(uint256 tokenId, string calldata key) external view returns (string memory) {\n        return _metadatas[metadataVersions[tokenId]][tokenId][key];\n    }\n\n    /**\n     * @notice Returns the gated metadata associated with an token and key.\n     * @param tokenId The token to query.\n     * @param key The metadata key to query.\n     * @return The associated metadata.\n     */\n    function getGatedMetadata(uint256 tokenId, string memory key) public view returns (string memory) {\n        return _gatedMetadatas[gatedMetadataVersions[tokenId]][tokenId][key];\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            INTERNAL\n    //////////////////////////////////////////////////////////////*/\n\n    function _isMetadataAuthorised(uint256 tokenId) internal view virtual returns (bool);\n\n    function _isGatedMetadataAuthorised(uint256 tokenId) internal view virtual returns (bool);\n\n    function _clearMetadatas(uint256 tokenId) internal virtual {\n        metadataVersions[tokenId]++;\n        emit MetadataVersionChanged(tokenId, metadataVersions[tokenId]);\n    }\n\n    function _clearGatedMetadatas(uint256 tokenId) internal virtual {\n        gatedMetadataVersions[tokenId]++;\n        emit GatedMetadataVersionChanged(tokenId, gatedMetadataVersions[tokenId]);\n    }\n}\n"},"contracts/MocaPoints/realmIdContract/RealmId.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {ERC721Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\nimport {PausableUpgradeable} from \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\nimport {IMiddleware} from \"../interface/IMiddleware.sol\";\nimport {LibString} from \"./LibString.sol\";\nimport {DataTypes} from \"./DataTypes.sol\";\nimport {MetadataResolver} from \"./MetadataResolver.sol\";\n\ncontract RealmId is Initializable, ERC721Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable, MetadataResolver {\n    using LibString for *;\n\n    /*//////////////////////////////////////////////////////////////\n                            STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Token URI prefix.\n     */\n    mapping(bytes32 => string) public baseTokenURIs;\n\n    /**\n     * @notice Middleware contract that processes before and after the registration.\n     */\n    mapping(bytes32 => address) public middlewares;\n\n    /**\n     * @notice The allowed parent nodes of the realmId.\n     * e.g. namehash('moca'), namehash('music')\n     * https://eips.ethereum.org/EIPS/eip-137\n     */\n    mapping(bytes32 => bool) public allowedParentNodes;\n\n    /**\n     * @notice The parent node of the tokenId.\n     */\n    mapping(uint256 => bytes32) public parents;\n\n    /**\n     * @notice The number of realmIds minted.\n     */\n    uint256 internal _mintCount;\n\n    /**\n     * @notice The number of burning for a tokenId.\n     */\n    mapping(uint256 => uint256) public burnCounts;\n\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @dev Emit an event when a realmId is registered.\n     * For example, when \"user.realm\" is registered, the name is \"user\" and the parent node is namehash(\"realm\").\n     *\n     * @param name         The name of the realmId\n     * @param parentNode   The parent node of the realmId\n     * @param tokenId      The tokenId of the realmId\n     * @param to           The address that owns the realmId\n     */\n    event Register(string name, bytes32 parentNode, uint256 indexed tokenId, address indexed to);\n\n    /**\n     * @dev Emit an event when a realmId is burned.\n     *\n     * @param tokenId The tokenId of the realmId\n     * @param burnCount The number of burning for the tokenId\n     */\n    event Burn(uint256 indexed tokenId, uint256 burnCount);\n\n    /**\n     * @dev Emit an event when a middleware is set.\n     *\n     * @param node       The node to set the middleware for\n     * @param middleware The middleware contract address\n     * @param data       The data of the middleware\n     */\n    event MiddlewareSet(bytes32 node, address indexed middleware, bytes data);\n\n    /**\n     * @dev Emit an event when a base token URI is set.\n     *\n     * @param node The node to set the base token URI for\n     * @param uri The base token URI\n     */\n    event BaseTokenURISet(bytes32 node, string uri);\n\n    /**\n     * @dev Emit an event when a node allowance changed.\n     *\n     * @param node       The node\n     * @param label      The label of the node\n     * @param parentNode The parent node of the node\n     * @param allowed    The new state of allowance\n     */\n    event NodeAllowanceChanged(bytes32 indexed node, string label, bytes32 parentNode, bool allowed);\n\n    /*//////////////////////////////////////////////////////////////\n                        CONSTRUCTORS AND INITIALIZERS\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Disable initialization to protect the contract\n     */\n    // constructor() {\n    //     _disableInitializers();\n    // }\n\n    /**\n     * @notice Initialize default storage values and inherited contracts. This should be called\n     *         once after the contract is deployed via the ERC1967 proxy.\n     *\n     * @param _tokenName   The ERC-721 name of the fname token\n     * @param _tokenSymbol The ERC-721 symbol of the fname token\n     */\n    function initialize(string calldata _tokenName, string calldata _tokenSymbol, address _owner) external initializer {\n        /* Initialize inherited contracts */\n        __ERC721_init(_tokenName, _tokenSymbol);\n        __UUPSUpgradeable_init();\n        __Ownable_init();\n        __Pausable_init();\n        _pause();\n        _transferOwnership(_owner);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            REGISTRATION LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Checks if a realmId is available for registration.\n     *\n     * @param _name       The name to check\n     * @param parentNode The parent node of the realmId\n     */\n    function available(string calldata _name, bytes32 parentNode) public view returns (bool) {\n        require(allowedParentNodes[parentNode], \"NODE_NOT_ALLOWED\");\n        uint256 tokenId = getTokenId(_name, parentNode);\n        if (!_exists(tokenId)) {\n            address middleware = middlewares[parentNode];\n            if (middleware != address(0)) {\n                return IMiddleware(middleware).namePatternValid(_name);\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @notice Mints a new realmId.\n     *\n     * @param _name       The name to register\n     * @param parentNode The parent node of the realmId\n     * @param to         The address that will own the realmId\n     * @param preData    The register data for preprocess.\n     * @return uint256   Minted tokenId\n     */\n    function register(string calldata _name, bytes32 parentNode, address to, bytes calldata preData) external returns (uint256) {\n        address middleware = middlewares[parentNode];\n        if (middleware != address(0)) {\n            DataTypes.RegisterNameParams memory params = DataTypes.RegisterNameParams(msg.sender, _name, parentNode, to);\n            IMiddleware(middleware).preProcess(params, preData);\n        }\n        return _register(_name, parentNode, to);\n    }\n\n    /**\n     * @notice Burns a token.\n     *\n     * @param tokenId The token id to burn.\n     */\n    function burn(uint256 tokenId) external {\n        require(_isApprovedOrOwner(msg.sender, tokenId), \"UNAUTHORIZED\");\n        _clearMetadatas(tokenId);\n        _clearGatedMetadatas(tokenId);\n        delete parents[tokenId];\n        super._burn(tokenId);\n        --_mintCount;\n        emit Burn(tokenId, ++burnCounts[tokenId]);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            ERC-721 OVERRIDES\n    //////////////////////////////////////////////////////////////*/\n\n    /// @inheritdoc ERC721Upgradeable\n    function transferFrom(address from, address to, uint256 tokenId) public override {\n        require(!paused(), \"TRANSFER_NOT_ALLOWED\");\n        super.transferFrom(from, to, tokenId);\n    }\n\n    /// @inheritdoc ERC721Upgradeable\n    function safeTransferFrom(address from, address to, uint256 tokenId) public override {\n        require(!paused(), \"TRANSFER_NOT_ALLOWED\");\n        super.safeTransferFrom(from, to, tokenId);\n    }\n\n    /// @inheritdoc ERC721Upgradeable\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public override {\n        require(!paused(), \"TRANSFER_NOT_ALLOWED\");\n        super.safeTransferFrom(from, to, tokenId, data);\n    }\n\n    /**\n     * @notice Returns a distinct URI for a tokenId\n     *\n     * @param tokenId The uint256 tokenId of the realmId\n     */\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_exists(tokenId), \"INVALID_TOKEN_ID\");\n        return string(abi.encodePacked(baseTokenURIs[parents[tokenId]], tokenId.toString()));\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            EXTERNAL VIEW\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Gets token id of the gievn name and parent node.\n     *\n     * @return uint256 The token id.\n     */\n    function getTokenId(string calldata _name, bytes32 parentNode) public pure returns (uint256) {\n        bytes32 nodehash = keccak256(abi.encodePacked(parentNode, keccak256(bytes(_name))));\n        return uint256(nodehash);\n    }\n\n    /**\n     * @notice Gets total number of tokens in existence, burned tokens will reduce the count.\n     *\n     * @return uint256 The total supply.\n     */\n    function totalSupply() external view virtual returns (uint256) {\n        return _mintCount;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            OWNER ONLY\n    //////////////////////////////////////////////////////////////*/\n\n    /**\n     * @notice Sets the base token uri.\n     */\n    function setBaseTokenURI(bytes32 node, string calldata uri) public onlyOwner {\n        baseTokenURIs[node] = uri;\n        emit BaseTokenURISet(node, uri);\n    }\n\n    /**\n     * @notice Sets the middleware and data.\n     */\n    function setMiddleware(bytes32 node, address _middleware, bytes calldata data) public onlyOwner {\n        middlewares[node] = _middleware;\n        if (_middleware != address(0)) {\n            IMiddleware(_middleware).setMwData(data);\n        }\n        emit MiddlewareSet(node, _middleware, data);\n    }\n\n    /**\n     * @notice Pauses all token transfers.\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpauses all token transfers.\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @notice allows node. E.g. '.moca', '.music'.\n     * So that users can register realmId like 'abc.moca', 'abc.music'.\n     * @dev allowNode(\"moca\", bytes32(0)) to allow \".moca\"\n     */\n    function allowNode(\n        string calldata label,\n        bytes32 parentNode,\n        bool allow,\n        string calldata baseTokenURI,\n        address middleware,\n        bytes calldata middlewareData\n    ) external onlyOwner returns (bytes32 allowedNode) {\n        allowedNode = keccak256(abi.encodePacked(parentNode, keccak256(bytes(label))));\n        allowedParentNodes[allowedNode] = allow;\n        emit NodeAllowanceChanged(allowedNode, label, parentNode, allow);\n        setBaseTokenURI(allowedNode, baseTokenURI);\n        setMiddleware(allowedNode, middleware, middlewareData);\n        return allowedNode;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             INTERNAL LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _authorizeUpgrade(address) internal view override {\n        require(owner() == msg.sender, \"NOT_OWNER\");\n    }\n\n    function _register(string calldata _name, bytes32 parentNode, address to) internal returns (uint256) {\n        require(available(_name, parentNode), \"NAME_NOT_AVAILABLE\");\n        uint256 tokenId = getTokenId(_name, parentNode);\n        super._safeMint(to, tokenId);\n        ++_mintCount;\n        parents[tokenId] = parentNode;\n        emit Register(_name, parentNode, tokenId, to);\n        return tokenId;\n    }\n\n    function _isMetadataAuthorised(uint256 tokenId) internal view override returns (bool) {\n        return super._isApprovedOrOwner(msg.sender, tokenId);\n    }\n\n    function _isGatedMetadataAuthorised(uint256 tokenId) internal view override returns (bool) {\n        require(_exists(tokenId), \"TOKEN_NOT_MINTED\");\n        return owner() == msg.sender;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":99999},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[335],"AddressUpgradeable":[2780],"ContextUpgradeable":[2822],"ERC165Upgradeable":[3205],"IAccessControlUpgradeable":[408],"IERC165Upgradeable":[3217],"Initializable":[1074],"MathUpgradeable":[4083],"SignedMathUpgradeable":[4188],"StringsUpgradeable":[3161]},"id":336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":409,"src":"133:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":2823,"src":"175:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3162,"src":"217:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":3206,"src":"259:54:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":336,"sourceUnit":1075,"src":"314:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"Initializable","nameLocations":["2065:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"2065:13:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"2065:13:0"},{"baseName":{"id":10,"name":"ContextUpgradeable","nameLocations":["2080:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2822,"src":"2080:18:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"2080:18:0"},{"baseName":{"id":12,"name":"IAccessControlUpgradeable","nameLocations":["2100:25:0"],"nodeType":"IdentifierPath","referencedDeclaration":408,"src":"2100:25:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2100:25:0"},{"baseName":{"id":14,"name":"ERC165Upgradeable","nameLocations":["2127:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":3205,"src":"2127:17:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2127:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"358:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":335,"linearizedBaseContracts":[335,3205,3217,408,2822,1074],"name":"AccessControlUpgradeable","nameLocation":"2037:24:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":20,"nodeType":"Block","src":"2209:7:0","statements":[]},"id":21,"implemented":true,"kind":"function","modifiers":[{"id":18,"kind":"modifierInvocation","modifierName":{"id":17,"name":"onlyInitializing","nameLocations":["2192:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"2192:16:0"},"nodeType":"ModifierInvocation","src":"2192:16:0"}],"name":"__AccessControl_init","nameLocation":"2160:20:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"2180:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"2209:0:0"},"scope":335,"src":"2151:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":26,"nodeType":"Block","src":"2290:7:0","statements":[]},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":24,"kind":"modifierInvocation","modifierName":{"id":23,"name":"onlyInitializing","nameLocations":["2273:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"2273:16:0"},"nodeType":"ModifierInvocation","src":"2273:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"2231:30:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"2261:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"2290:0:0"},"scope":335,"src":"2222:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AccessControlUpgradeable.RoleData","id":34,"members":[{"constant":false,"id":31,"mutability":"mutable","name":"members","nameLocation":"2353:7:0","nodeType":"VariableDeclaration","scope":34,"src":"2328:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":30,"keyType":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2328:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"adminRole","nameLocation":"2378:9:0","nodeType":"VariableDeclaration","scope":34,"src":"2370:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2309:8:0","nodeType":"StructDefinition","scope":335,"src":"2302:92:0","visibility":"public"},{"constant":false,"id":39,"mutability":"mutable","name":"_roles","nameLocation":"2437:6:0","nodeType":"VariableDeclaration","scope":335,"src":"2400:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":38,"keyType":{"id":35,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2408:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2400:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueType":{"id":37,"nodeType":"UserDefinedTypeName","pathNode":{"id":36,"name":"RoleData","nameLocations":["2419:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":34,"src":"2419:8:0"},"referencedDeclaration":34,"src":"2419:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":42,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2474:18:0","nodeType":"VariableDeclaration","scope":335,"src":"2450:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":40,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":52,"nodeType":"Block","src":"2918:44:0","statements":[{"expression":{"arguments":[{"id":48,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"2939:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":47,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":107,"src":"2928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2928:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50,"nodeType":"ExpressionStatement","src":"2928:16:0"},{"id":51,"nodeType":"PlaceholderStatement","src":"2954:1:0"}]},"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2506:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":53,"name":"onlyRole","nameLocation":"2895:8:0","nodeType":"ModifierDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"role","nameLocation":"2912:4:0","nodeType":"VariableDeclaration","scope":53,"src":"2904:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2903:14:0"},"src":"2886:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3199],"body":{"id":74,"nodeType":"Block","src":"3120:122:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3137:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":64,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3157:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$408_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":63,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3152:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$408","typeString":"type(contract IAccessControlUpgradeable)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3184:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3152:43:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3137:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":70,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3223:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":68,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3199:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$335_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3205:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"3199:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3137:98:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":73,"nodeType":"Return","src":"3130:105:0"}]},"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"2968:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":75,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3038:17:0","nodeType":"FunctionDefinition","overrides":{"id":58,"nodeType":"OverrideSpecifier","overrides":[],"src":"3096:8:0"},"parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"interfaceId","nameLocation":"3063:11:0","nodeType":"VariableDeclaration","scope":75,"src":"3056:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":55,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3056:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3055:20:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"3114:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"3114:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3113:6:0"},"scope":335,"src":"3029:213:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[375],"body":{"id":93,"nodeType":"Block","src":"3421:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":86,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"3438:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":88,"indexExpression":{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"3445:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":89,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3451:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"3438:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":91,"indexExpression":{"id":90,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3459:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":85,"id":92,"nodeType":"Return","src":"3431:36:0"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"3248:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":94,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3338:7:0","nodeType":"FunctionDefinition","overrides":{"id":82,"nodeType":"OverrideSpecifier","overrides":[],"src":"3397:8:0"},"parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"role","nameLocation":"3354:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3346:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":77,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"account","nameLocation":"3368:7:0","nodeType":"VariableDeclaration","scope":94,"src":"3360:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:31:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"3415:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":83,"name":"bool","nodeType":"ElementaryTypeName","src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3414:6:0"},"scope":335,"src":"3329:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":106,"nodeType":"Block","src":"3824:47:0","statements":[{"expression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3845:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":102,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"3851:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[107,146],"referencedDeclaration":146,"src":"3834:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":105,"nodeType":"ExpressionStatement","src":"3834:30:0"}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3480:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":107,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3777:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3796:4:0","nodeType":"VariableDeclaration","scope":107,"src":"3788:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3788:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3787:14:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3824:0:0"},"scope":335,"src":"3768:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":145,"nodeType":"Block","src":"4225:428:0","statements":[{"condition":{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4239:23:0","subExpression":{"arguments":[{"id":116,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4248:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":117,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4254:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":115,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4240:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":144,"nodeType":"IfStatement","src":"4235:412:0","trueBody":{"id":143,"nodeType":"Block","src":"4264:383:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4372:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":128,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4454:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":126,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"4423:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3161_$","typeString":"type(library StringsUpgradeable)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3135,"src":"4423:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4488:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":135,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4572:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4564:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4564:7:0","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":131,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"4533:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$3161_$","typeString":"type(library StringsUpgradeable)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4552:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"4533:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4330:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4334:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4330:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:274:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":121,"name":"string","nodeType":"ElementaryTypeName","src":"4302:6:0","typeDescriptions":{}}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:320:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":120,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4278:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:358:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"4278:358:0"}]}}]},"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3877:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4161:10:0","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"role","nameLocation":"4180:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4172:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4172:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"account","nameLocation":"4194:7:0","nodeType":"VariableDeclaration","scope":146,"src":"4186:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4186:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4171:31:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"4225:0:0"},"scope":335,"src":"4152:501:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[383],"body":{"id":160,"nodeType":"Block","src":"4917:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":155,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4934:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":157,"indexExpression":{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4941:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4934:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4947:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"4934:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":154,"id":159,"nodeType":"Return","src":"4927:29:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4659:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":161,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4843:12:0","nodeType":"FunctionDefinition","overrides":{"id":151,"nodeType":"OverrideSpecifier","overrides":[],"src":"4890:8:0"},"parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4864:4:0","nodeType":"VariableDeclaration","scope":161,"src":"4856:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4856:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4855:14:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"4908:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4907:9:0"},"scope":335,"src":"4834:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[391],"body":{"id":180,"nodeType":"Block","src":"5362:42:0","statements":[{"expression":{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5383:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"5389:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":175,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5372:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"5372:25:0"}]},"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"4969:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":181,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":171,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5355:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":170,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5342:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":173,"kind":"modifierInvocation","modifierName":{"id":169,"name":"onlyRole","nameLocations":["5333:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5333:8:0"},"nodeType":"ModifierInvocation","src":"5333:28:0"}],"name":"grantRole","nameLocation":"5268:9:0","nodeType":"FunctionDefinition","overrides":{"id":168,"nodeType":"OverrideSpecifier","overrides":[],"src":"5324:8:0"},"parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"role","nameLocation":"5286:4:0","nodeType":"VariableDeclaration","scope":181,"src":"5278:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5278:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"account","nameLocation":"5300:7:0","nodeType":"VariableDeclaration","scope":181,"src":"5292:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"5292:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5277:31:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5362:0:0"},"scope":335,"src":"5259:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[399],"body":{"id":200,"nodeType":"Block","src":"5788:43:0","statements":[{"expression":{"arguments":[{"id":196,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5810:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5816:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":195,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5798:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5798:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"5798:26:0"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5410:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":201,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":191,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"5781:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":190,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"5768:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5768:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":193,"kind":"modifierInvocation","modifierName":{"id":189,"name":"onlyRole","nameLocations":["5759:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"5759:8:0"},"nodeType":"ModifierInvocation","src":"5759:28:0"}],"name":"revokeRole","nameLocation":"5693:10:0","nodeType":"FunctionDefinition","overrides":{"id":188,"nodeType":"OverrideSpecifier","overrides":[],"src":"5750:8:0"},"parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"role","nameLocation":"5712:4:0","nodeType":"VariableDeclaration","scope":201,"src":"5704:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5704:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"account","nameLocation":"5726:7:0","nodeType":"VariableDeclaration","scope":201,"src":"5718:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"5718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5703:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5788:0:0"},"scope":335,"src":"5684:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[407],"body":{"id":223,"nodeType":"Block","src":"6445:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":211,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":212,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"6474:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6463:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6488:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":210,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6455:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6455:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"6455:83:0"},{"expression":{"arguments":[{"id":219,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"6561:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":220,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"6567:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":218,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6549:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6549:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"6549:26:0"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"5837:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6377:12:0","nodeType":"FunctionDefinition","overrides":{"id":208,"nodeType":"OverrideSpecifier","overrides":[],"src":"6436:8:0"},"parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"role","nameLocation":"6398:4:0","nodeType":"VariableDeclaration","scope":224,"src":"6390:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"account","nameLocation":"6412:7:0","nodeType":"VariableDeclaration","scope":224,"src":"6404:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"6404:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6389:31:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"6445:0:0"},"scope":335,"src":"6368:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"7335:42:0","statements":[{"expression":{"arguments":[{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"7362:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":232,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7345:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"7345:25:0"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"6588:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7276:10:0","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"role","nameLocation":"7295:4:0","nodeType":"VariableDeclaration","scope":238,"src":"7287:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7287:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"account","nameLocation":"7309:7:0","nodeType":"VariableDeclaration","scope":238,"src":"7301:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"7301:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7286:31:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"7335:0:0"},"scope":335,"src":"7267:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"7575:174:0","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7593:17:0","nodeType":"VariableDeclaration","scope":265,"src":"7585:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7585:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7626:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"7613:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7585:46:0"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":252,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"7641:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":254,"indexExpression":{"id":253,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7648:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7641:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7654:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":33,"src":"7641:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":256,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7666:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7641:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":258,"nodeType":"ExpressionStatement","src":"7641:34:0"},{"eventCall":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"7707:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"7713:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":262,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7732:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":259,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"7690:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7690:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"EmitStatement","src":"7685:57:0"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"7383:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7511:13:0","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"role","nameLocation":"7533:4:0","nodeType":"VariableDeclaration","scope":266,"src":"7525:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7525:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"adminRole","nameLocation":"7547:9:0","nodeType":"VariableDeclaration","scope":266,"src":"7539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7539:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7524:33:0"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"7575:0:0"},"scope":335,"src":"7502:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":297,"nodeType":"Block","src":"7985:165:0","statements":[{"condition":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7999:23:0","subExpression":{"arguments":[{"id":275,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8008:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8014:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":274,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8000:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8000:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"IfStatement","src":"7995:149:0","trueBody":{"id":295,"nodeType":"Block","src":"8024:120:0","statements":[{"expression":{"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":279,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8038:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":281,"indexExpression":{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8045:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8038:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8051:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8038:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":284,"indexExpression":{"id":283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8038:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8070:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8038:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":287,"nodeType":"ExpressionStatement","src":"8038:36:0"},{"eventCall":{"arguments":[{"id":289,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":290,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"8111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"8120:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":288,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"8093:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"8088:45:0"}]}}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"7755:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7926:10:0","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"role","nameLocation":"7945:4:0","nodeType":"VariableDeclaration","scope":298,"src":"7937:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7937:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"account","nameLocation":"7959:7:0","nodeType":"VariableDeclaration","scope":298,"src":"7951:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"7951:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7936:31:0"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"7985:0:0"},"scope":335,"src":"7917:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"8390:165:0","statements":[{"condition":{"arguments":[{"id":307,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8412:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":308,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8418:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":306,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"8404:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"IfStatement","src":"8400:149:0","trueBody":{"id":326,"nodeType":"Block","src":"8428:121:0","statements":[{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":310,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8442:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$34_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":312,"indexExpression":{"id":311,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8449:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8442:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$34_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8455:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8442:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":315,"indexExpression":{"id":314,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8463:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8442:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8474:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8442:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"ExpressionStatement","src":"8442:37:0"},{"eventCall":{"arguments":[{"id":320,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8510:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"8516:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"8525:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8525:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"8498:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"EmitStatement","src":"8493:45:0"}]}}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"8156:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8330:11:0","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"role","nameLocation":"8350:4:0","nodeType":"VariableDeclaration","scope":329,"src":"8342:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8342:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"account","nameLocation":"8364:7:0","nodeType":"VariableDeclaration","scope":329,"src":"8356:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8341:31:0"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"8390:0:0"},"scope":335,"src":"8321:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"8561:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":334,"mutability":"mutable","name":"__gap","nameLocation":"8840:5:0","nodeType":"VariableDeclaration","scope":335,"src":"8820:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"8820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"length":{"hexValue":"3439","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8828:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8820:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":336,"src":"2019:6829:0","usedErrors":[]}],"src":"108:8741:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[408]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":408,"linearizedBaseContracts":[408],"name":"IAccessControlUpgradeable","nameLocation":"219:25:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"251:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":347,"name":"RoleAdminChanged","nameLocation":"554:16:1","nodeType":"EventDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:1","nodeType":"VariableDeclaration","scope":347,"src":"571:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:1","nodeType":"VariableDeclaration","scope":347,"src":"593:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:1","nodeType":"VariableDeclaration","scope":347,"src":"628:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:1"},"src":"548:110:1"},{"anonymous":false,"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"664:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":356,"name":"RoleGranted","nameLocation":"887:11:1","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:1","nodeType":"VariableDeclaration","scope":356,"src":"899:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:1","nodeType":"VariableDeclaration","scope":356,"src":"921:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:1","nodeType":"VariableDeclaration","scope":356,"src":"946:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:1"},"src":"881:89:1"},{"anonymous":false,"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"976:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":365,"name":"RoleRevoked","nameLocation":"1262:11:1","nodeType":"EventDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:1","nodeType":"VariableDeclaration","scope":365,"src":"1274:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:1","nodeType":"VariableDeclaration","scope":365,"src":"1296:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:1","nodeType":"VariableDeclaration","scope":365,"src":"1321:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:1"},"src":"1256:89:1"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"1351:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:1","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"role","nameLocation":"1457:4:1","nodeType":"VariableDeclaration","scope":375,"src":"1449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"account","nameLocation":"1471:7:1","nodeType":"VariableDeclaration","scope":375,"src":"1463:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"1503:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:1"},"scope":408,"src":"1432:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1515:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:1","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"1734:4:1","nodeType":"VariableDeclaration","scope":383,"src":"1726:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1763:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:1"},"scope":408,"src":"1704:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"1778:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"role","nameLocation":"2049:4:1","nodeType":"VariableDeclaration","scope":391,"src":"2041:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"account","nameLocation":"2063:7:1","nodeType":"VariableDeclaration","scope":391,"src":"2055:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2080:0:1"},"scope":408,"src":"2022:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"2087:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":399,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:1","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"role","nameLocation":"2343:4:1","nodeType":"VariableDeclaration","scope":399,"src":"2335:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"account","nameLocation":"2357:7:1","nodeType":"VariableDeclaration","scope":399,"src":"2349:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"2374:0:1"},"scope":408,"src":"2315:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"2381:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":407,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:1","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"role","nameLocation":"2896:4:1","nodeType":"VariableDeclaration","scope":407,"src":"2888:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"account","nameLocation":"2910:7:1","nodeType":"VariableDeclaration","scope":407,"src":"2902:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:1"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"2927:0:1"},"scope":408,"src":"2866:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":409,"src":"209:2721:1","usedErrors":[]}],"src":"94:2837:1"},"id":1},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ContextUpgradeable":[2822],"Initializable":[1074],"OwnableUpgradeable":[540]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":2823,"src":"127:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":1075,"src":"169:42:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":414,"name":"Initializable","nameLocations":["748:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"748:13:2"},"id":415,"nodeType":"InheritanceSpecifier","src":"748:13:2"},{"baseName":{"id":416,"name":"ContextUpgradeable","nameLocations":["763:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":2822,"src":"763:18:2"},"id":417,"nodeType":"InheritanceSpecifier","src":"763:18:2"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"213:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":540,"linearizedBaseContracts":[540,2822,1074],"name":"OwnableUpgradeable","nameLocation":"726:18:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":419,"mutability":"mutable","name":"_owner","nameLocation":"804:6:2","nodeType":"VariableDeclaration","scope":540,"src":"788:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":425,"name":"OwnershipTransferred","nameLocation":"823:20:2","nodeType":"EventDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:2","nodeType":"VariableDeclaration","scope":425,"src":"844:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:2","nodeType":"VariableDeclaration","scope":425,"src":"875:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:2"},"src":"817:84:2"},{"body":{"id":434,"nodeType":"Block","src":"1055:43:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1065:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"1065:26:2"}]},"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"907:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":435,"implemented":true,"kind":"function","modifiers":[{"id":429,"kind":"modifierInvocation","modifierName":{"id":428,"name":"onlyInitializing","nameLocations":["1038:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1038:16:2"},"nodeType":"ModifierInvocation","src":"1038:16:2"}],"name":"__Ownable_init","nameLocation":"1012:14:2","nodeType":"FunctionDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"1026:2:2"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"1055:0:2"},"scope":540,"src":"1003:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1166:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":441,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"1195:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":440,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"1176:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"1176:32:2"}]},"id":446,"implemented":true,"kind":"function","modifiers":[{"id":438,"kind":"modifierInvocation","modifierName":{"id":437,"name":"onlyInitializing","nameLocations":["1149:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1149:16:2"},"nodeType":"ModifierInvocation","src":"1149:16:2"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:2","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"1137:2:2"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1166:0:2"},"scope":540,"src":"1104:111:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":453,"nodeType":"Block","src":"1324:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":449,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"1334:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"1334:13:2"},{"id":452,"nodeType":"PlaceholderStatement","src":"1357:1:2"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1221:77:2","text":" @dev Throws if called by any account other than the owner."},"id":454,"name":"onlyOwner","nameLocation":"1312:9:2","nodeType":"ModifierDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1321:2:2"},"src":"1303:62:2","virtual":false,"visibility":"internal"},{"body":{"id":462,"nodeType":"Block","src":"1496:30:2","statements":[{"expression":{"id":460,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"1513:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":459,"id":461,"nodeType":"Return","src":"1506:13:2"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"1371:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":463,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:2","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"1455:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"1487:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:2"},"scope":540,"src":"1441:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":476,"nodeType":"Block","src":"1644:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":468,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1662:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":470,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"1673:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"1654:68:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1532:62:2","text":" @dev Throws if the sender is not the owner."},"id":477,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"1619:2:2"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"1644:0:2"},"scope":540,"src":"1599:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"2118:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:2","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":483,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2128:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"2128:30:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"1735:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":491,"implemented":true,"kind":"function","modifiers":[{"id":481,"kind":"modifierInvocation","modifierName":{"id":480,"name":"onlyOwner","nameLocations":["2108:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"2108:9:2"},"nodeType":"ModifierInvocation","src":"2108:9:2"}],"name":"renounceOwnership","nameLocation":"2073:17:2","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"2090:2:2"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2118:0:2"},"scope":540,"src":"2064:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"2384:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2402:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:2","typeDescriptions":{}}},"id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"2394:73:2"},{"expression":{"arguments":[{"id":510,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2496:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":509,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2477:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"ExpressionStatement","src":"2477:28:2"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2171:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":514,"implemented":true,"kind":"function","modifiers":[{"id":497,"kind":"modifierInvocation","modifierName":{"id":496,"name":"onlyOwner","nameLocations":["2374:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"2374:9:2"},"nodeType":"ModifierInvocation","src":"2374:9:2"}],"name":"transferOwnership","nameLocation":"2323:17:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:2","nodeType":"VariableDeclaration","scope":514,"src":"2341:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:2"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"2384:0:2"},"scope":540,"src":"2314:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":533,"nodeType":"Block","src":"2729:124:2","statements":[{"assignments":[521],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:2","nodeType":"VariableDeclaration","scope":533,"src":"2739:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":523,"initialValue":{"id":522,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2758:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:2"},{"expression":{"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":524,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2774:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":525,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2783:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":527,"nodeType":"ExpressionStatement","src":"2774:17:2"},{"eventCall":{"arguments":[{"id":529,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2827:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":530,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2837:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":528,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"2806:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"EmitStatement","src":"2801:45:2"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"2518:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:2","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:2","nodeType":"VariableDeclaration","scope":534,"src":"2694:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:2"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2729:0:2"},"scope":540,"src":"2666:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2859:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":539,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:2","nodeType":"VariableDeclaration","scope":540,"src":"3118:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":538,"length":{"hexValue":"3439","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":541,"src":"708:2438:2","usedErrors":[]}],"src":"102:3045:2"},"id":2},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[561]},"id":562,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"132:133:3","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":561,"linearizedBaseContracts":[561],"name":"IERC1967Upgradeable","nameLocation":"276:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"302:68:3","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":548,"name":"Upgraded","nameLocation":"381:8:3","nodeType":"EventDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:3","nodeType":"VariableDeclaration","scope":548,"src":"390:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:3"},"src":"375:47:3"},{"anonymous":false,"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"428:67:3","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":555,"name":"AdminChanged","nameLocation":"506:12:3","nodeType":"EventDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:3","nodeType":"VariableDeclaration","scope":555,"src":"519:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":553,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:3","nodeType":"VariableDeclaration","scope":555,"src":"542:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:3"},"src":"500:60:3"},{"anonymous":false,"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"566:59:3","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":560,"name":"BeaconUpgraded","nameLocation":"636:14:3","nodeType":"EventDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:3","nodeType":"VariableDeclaration","scope":560,"src":"651:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:3"},"src":"630:45:3"}],"scope":562,"src":"266:411:3","usedErrors":[]}],"src":"107:571:3"},"id":3},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[571]},"id":572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":563,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"138:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":571,"linearizedBaseContracts":[571],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"387:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":570,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:4","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"852:2:4"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"878:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:4"},"scope":571,"src":"830:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":572,"src":"342:547:4","usedErrors":[]}],"src":"113:777:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ERC1967UpgradeUpgradeable":[895],"IBeaconUpgradeable":[905],"IERC1822ProxiableUpgradeable":[571],"IERC1967Upgradeable":[561],"Initializable":[1074],"StorageSlotUpgradeable":[2932]},"id":896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":573,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":906,"src":"141:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":562,"src":"184:50:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":572,"src":"235:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":2781,"src":"292:44:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":2933,"src":"337:48:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":896,"sourceUnit":1075,"src":"386:36:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":581,"name":"Initializable","nameLocations":["656:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"656:13:5"},"id":582,"nodeType":"InheritanceSpecifier","src":"656:13:5"},{"baseName":{"id":583,"name":"IERC1967Upgradeable","nameLocations":["671:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"671:19:5"},"id":584,"nodeType":"InheritanceSpecifier","src":"671:19:5"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"424:184:5","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":895,"linearizedBaseContracts":[895,561,1074],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":589,"nodeType":"Block","src":"756:7:5","statements":[]},"id":590,"implemented":true,"kind":"function","modifiers":[{"id":587,"kind":"modifierInvocation","modifierName":{"id":586,"name":"onlyInitializing","nameLocations":["739:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"739:16:5"},"nodeType":"ModifierInvocation","src":"739:16:5"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:5","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"727:2:5"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"756:0:5"},"scope":895,"src":"697:66:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":595,"nodeType":"Block","src":"838:7:5","statements":[]},"id":596,"implemented":true,"kind":"function","modifiers":[{"id":593,"kind":"modifierInvocation","modifierName":{"id":592,"name":"onlyInitializing","nameLocations":["821:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"821:16:5"},"nodeType":"ModifierInvocation","src":"821:16:5"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:5","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"809:2:5"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"838:0:5"},"scope":895,"src":"769:76:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":599,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:5","nodeType":"VariableDeclaration","scope":895,"src":"929:108:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:5","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"1044:214:5","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":603,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:5","nodeType":"VariableDeclaration","scope":895,"src":"1263:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:5","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"1519:89:5","statements":[{"expression":{"expression":{"arguments":[{"id":611,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"1574:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":609,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"1536:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2854,"src":"1536:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2828_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"1536:65:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":608,"id":614,"nodeType":"Return","src":"1529:72:5"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"1385:67:5","text":" @dev Returns the current implementation address."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:5","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"1484:2:5"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"1510:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:5"},"scope":895,"src":"1457:151:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":639,"nodeType":"Block","src":"1762:218:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":625,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"1810:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":623,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"1780:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2780_$","typeString":"type(library AddressUpgradeable)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"1780:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"1772:106:5"},{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":633,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"1926:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":630,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"1888:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2854,"src":"1888:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2828_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"1888:65:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"1956:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":638,"nodeType":"ExpressionStatement","src":"1888:85:5"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"1614:80:5","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:5","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:5","nodeType":"VariableDeclaration","scope":640,"src":"1727:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"1762:0:5"},"scope":895,"src":"1699:281:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":654,"nodeType":"Block","src":"2142:96:5","statements":[{"expression":{"arguments":[{"id":647,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2171:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":646,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2152:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"2152:37:5"},{"eventCall":{"arguments":[{"id":651,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"2213:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":650,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2204:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"EmitStatement","src":"2199:32:5"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1986:95:5","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:5","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:5","nodeType":"VariableDeclaration","scope":655,"src":"2106:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"2142:0:5"},"scope":895,"src":"2086:152:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"2470:178:5","statements":[{"expression":{"arguments":[{"id":666,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2491:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":665,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"2480:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"2480:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2523:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:5","memberName":"length","nodeType":"MemberAccess","src":"2523:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":673,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2542:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"IfStatement","src":"2519:123:5","trueBody":{"id":682,"nodeType":"Block","src":"2553:89:5","statements":[{"expression":{"arguments":[{"id":678,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2607:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":679,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2626:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":675,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2567:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2780_$","typeString":"type(library AddressUpgradeable)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"2567:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":681,"nodeType":"ExpressionStatement","src":"2567:64:5"}]}}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2244:123:5","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:5","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:5","nodeType":"VariableDeclaration","scope":685,"src":"2399:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"data","nameLocation":"2439:4:5","nodeType":"VariableDeclaration","scope":685,"src":"2426:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:5","nodeType":"VariableDeclaration","scope":685,"src":"2445:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":661,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:5"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"2470:0:5"},"scope":895,"src":"2372:276:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"2922:842:5","statements":[{"condition":{"expression":{"arguments":[{"id":697,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3274:14:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":695,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"3236:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:5","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2865,"src":"3236:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2831_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2831_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2830,"src":"3236:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":735,"nodeType":"Block","src":"3365:393:5","statements":[{"clauses":[{"block":{"id":720,"nodeType":"Block","src":"3470:115:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":714,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":715,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3504:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"3488:82:5"}]},"errorName":"","id":721,"nodeType":"TryCatchClause","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"slot","nameLocation":"3464:4:5","nodeType":"VariableDeclaration","scope":721,"src":"3456:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:5"},"src":"3447:138:5"},{"block":{"id":726,"nodeType":"Block","src":"3592:89:5","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":722,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"3610:56:5"}]},"errorName":"","id":727,"nodeType":"TryCatchClause","src":"3586:95:5"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":706,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3412:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":705,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3383:28:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$571_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$571","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:5","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":570,"src":"3383:61:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":728,"nodeType":"TryStatement","src":"3379:302:5"},{"expression":{"arguments":[{"id":730,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3712:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"3731:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":732,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"3737:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":729,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"3694:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"3694:53:5"}]},"id":736,"nodeType":"IfStatement","src":"3232:526:5","trueBody":{"id":704,"nodeType":"Block","src":"3297:62:5","statements":[{"expression":{"arguments":[{"id":701,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3330:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":700,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3311:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"3311:37:5"}]}}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"2654:161:5","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:5","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:5","nodeType":"VariableDeclaration","scope":738,"src":"2851:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"data","nameLocation":"2891:4:5","nodeType":"VariableDeclaration","scope":738,"src":"2878:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":689,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:5","nodeType":"VariableDeclaration","scope":738,"src":"2897:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":691,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:5"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"2922:0:5"},"scope":895,"src":"2820:944:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"3770:189:5","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":742,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:5","nodeType":"VariableDeclaration","scope":895,"src":"3964:106:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:5","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":754,"nodeType":"Block","src":"4185:80:5","statements":[{"expression":{"expression":{"arguments":[{"id":750,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4240:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":748,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"4202:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2854,"src":"4202:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2828_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"4202:56:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":747,"id":753,"nodeType":"Return","src":"4195:63:5"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"4077:50:5","text":" @dev Returns the current admin."},"id":755,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"4150:2:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":755,"src":"4176:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:5"},"scope":895,"src":"4132:133:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"4392:167:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4410:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:5","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"ExpressionStatement","src":"4402:73:5"},{"expression":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":774,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4523:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":771,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"4485:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2854,"src":"4485:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2828_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"4485:56:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":777,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"4544:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":779,"nodeType":"ExpressionStatement","src":"4485:67:5"}]},"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"4271:71:5","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:5","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:5","nodeType":"VariableDeclaration","scope":781,"src":"4366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:5"},"returnParameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4392:0:5"},"scope":895,"src":"4347:212:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":797,"nodeType":"Block","src":"4719:86:5","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":788,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"4747:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4760:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4734:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"EmitStatement","src":"4729:40:5"},{"expression":{"arguments":[{"id":794,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4789:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":793,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"4779:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"4779:19:5"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"4565:100:5","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:5","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:5","nodeType":"VariableDeclaration","scope":798,"src":"4692:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:5"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"4719:0:5"},"scope":895,"src":"4670:135:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"4811:232:5","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":802,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:5","nodeType":"VariableDeclaration","scope":895,"src":"5048:107:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:5","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"5272:81:5","statements":[{"expression":{"expression":{"arguments":[{"id":810,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5327:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":808,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"5289:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2854,"src":"5289:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2828_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"5289:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":807,"id":813,"nodeType":"Return","src":"5282:64:5"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"5162:51:5","text":" @dev Returns the current beacon."},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:5","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"5237:2:5"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"5263:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:5"},"scope":895,"src":"5218:135:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":850,"nodeType":"Block","src":"5482:368:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":824,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5530:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":822,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"5500:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2780_$","typeString":"type(library AddressUpgradeable)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"5500:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"ExpressionStatement","src":"5492:90:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":833,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5662:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":832,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"5643:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$905_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$905","typeString":"contract IBeaconUpgradeable"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":904,"src":"5643:44:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":830,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"5613:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2780_$","typeString":"type(library AddressUpgradeable)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"5613:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"ExpressionStatement","src":"5592:172:5"},{"expression":{"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":844,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"5812:12:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":841,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"5774:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2932_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:5","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2854,"src":"5774:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2828_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:5","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2827,"src":"5774:57:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":847,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5834:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":849,"nodeType":"ExpressionStatement","src":"5774:69:5"}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"5359:71:5","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":851,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:5","nodeType":"VariableDeclaration","scope":851,"src":"5455:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"5482:0:5"},"scope":895,"src":"5435:415:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":888,"nodeType":"Block","src":"6249:239:5","statements":[{"expression":{"arguments":[{"id":862,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6270:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6259:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"6259:21:5"},{"eventCall":{"arguments":[{"id":866,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6310:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"6295:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"EmitStatement","src":"6290:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":869,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"6334:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:5","memberName":"length","nodeType":"MemberAccess","src":"6334:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":873,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"6353:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":887,"nodeType":"IfStatement","src":"6330:152:5","trueBody":{"id":886,"nodeType":"Block","src":"6364:118:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":879,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6437:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":878,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"6418:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$905_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$905","typeString":"contract IBeaconUpgradeable"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:5","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":904,"src":"6418:44:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":883,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"6466:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":875,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6378:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2780_$","typeString":"type(library AddressUpgradeable)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:5","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"6378:39:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":885,"nodeType":"ExpressionStatement","src":"6378:93:5"}]}}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5856:292:5","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:5","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:5","nodeType":"VariableDeclaration","scope":889,"src":"6186:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"data","nameLocation":"6218:4:5","nodeType":"VariableDeclaration","scope":889,"src":"6205:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":855,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:5","nodeType":"VariableDeclaration","scope":889,"src":"6224:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:5"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"6249:0:5"},"scope":895,"src":"6153:335:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"6494:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":894,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:5","nodeType":"VariableDeclaration","scope":895,"src":"6753:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":893,"length":{"hexValue":"3530","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":896,"src":"609:6172:5","usedErrors":[]}],"src":"116:6666:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[905]},"id":906,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":897,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"118:79:6","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":905,"linearizedBaseContracts":[905],"name":"IBeaconUpgradeable","nameLocation":"208:18:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":899,"nodeType":"StructuredDocumentation","src":"233:162:6","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":904,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:6","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"423:2:6"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"449:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:6"},"scope":905,"src":"400:58:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":906,"src":"198:262:6","usedErrors":[]}],"src":"93:368:6"},"id":6},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"Initializable":[1074]},"id":1075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":907,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1075,"sourceUnit":2781,"src":"138:44:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"184:2209:7","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1074,"linearizedBaseContracts":[1074],"name":"Initializable","nameLocation":"2412:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"2432:109:7","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":912,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:7","nodeType":"VariableDeclaration","scope":1074,"src":"2546:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":911,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"2579:91:7","text":" @dev Indicates that the contract is in the process of being initialized."},"id":915,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:7","nodeType":"VariableDeclaration","scope":1074,"src":"2675:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":914,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"2708:90:7","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":920,"name":"Initialized","nameLocation":"2809:11:7","nodeType":"EventDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:7","nodeType":"VariableDeclaration","scope":920,"src":"2821:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":917,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:7"},"src":"2803:33:7"},{"body":{"id":975,"nodeType":"Block","src":"3269:483:7","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:7","nodeType":"VariableDeclaration","scope":975,"src":"3279:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":923,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":927,"initialValue":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:7","subExpression":{"id":925,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3302:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3347:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3365:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:7","subExpression":{"arguments":[{"arguments":[{"id":939,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1074","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1074","typeString":"contract Initializable"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:7","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":935,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"3388:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2780_$","typeString":"type(library AddressUpgradeable)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"3388:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3436:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"3325:201:7"},{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":952,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3536:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":955,"nodeType":"ExpressionStatement","src":"3536:16:7"},{"condition":{"id":956,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3566:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"3562:65:7","trueBody":{"id":961,"nodeType":"Block","src":"3582:45:7","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3596:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":960,"nodeType":"ExpressionStatement","src":"3596:20:7"}]}},{"id":963,"nodeType":"PlaceholderStatement","src":"3636:1:7"},{"condition":{"id":964,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3651:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":974,"nodeType":"IfStatement","src":"3647:99:7","trueBody":{"id":973,"nodeType":"Block","src":"3667:79:7","statements":[{"expression":{"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":965,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3681:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"ExpressionStatement","src":"3681:21:7"},{"eventCall":{"arguments":[{"hexValue":"31","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":969,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3721:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"EmitStatement","src":"3716:19:7"}]}}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"2842:399:7","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":976,"name":"initializer","nameLocation":"3255:11:7","nodeType":"ModifierDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"3266:2:7"},"src":"3246:506:7","virtual":false,"visibility":"internal"},{"body":{"id":1008,"nodeType":"Block","src":"4863:255:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:7","subExpression":{"id":982,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4882:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4899:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":985,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4914:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"ExpressionStatement","src":"4873:99:7"},{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":991,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4982:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":992,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4997:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":994,"nodeType":"ExpressionStatement","src":"4982:22:7"},{"expression":{"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":995,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5014:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":998,"nodeType":"ExpressionStatement","src":"5014:20:7"},{"id":999,"nodeType":"PlaceholderStatement","src":"5044:1:7"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1000,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5055:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1003,"nodeType":"ExpressionStatement","src":"5055:21:7"},{"eventCall":{"arguments":[{"id":1005,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5103:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1004,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5091:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"EmitStatement","src":"5086:25:7"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"3758:1062:7","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1009,"name":"reinitializer","nameLocation":"4834:13:7","nodeType":"ModifierDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"version","nameLocation":"4854:7:7","nodeType":"VariableDeclaration","scope":1009,"src":"4848:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":978,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:7"},"src":"4825:293:7","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"5356:97:7","statements":[{"expression":{"arguments":[{"id":1013,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5374:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"5366:69:7"},{"id":1017,"nodeType":"PlaceholderStatement","src":"5445:1:7"}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"5124:199:7","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1019,"name":"onlyInitializing","nameLocation":"5337:16:7","nodeType":"ModifierDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"5353:2:7"},"src":"5328:125:7","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"5988:231:7","statements":[{"expression":{"arguments":[{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:7","subExpression":{"id":1024,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6007:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"5998:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6078:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1031,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:7","memberName":"max","nodeType":"MemberAccess","src":"6094:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"nodeType":"IfStatement","src":"6074:139:7","trueBody":{"id":1052,"nodeType":"Block","src":"6111:102:7","statements":[{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1036,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6125:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1038,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1037,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:7","memberName":"max","nodeType":"MemberAccess","src":"6140:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1043,"nodeType":"ExpressionStatement","src":"6125:30:7"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1046,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:7","memberName":"max","nodeType":"MemberAccess","src":"6186:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1044,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"6174:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"EmitStatement","src":"6169:33:7"}]}}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"5459:475:7","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:7","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[],"src":"5968:2:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"5988:0:7"},"scope":1074,"src":"5939:280:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"6393:36:7","statements":[{"expression":{"id":1061,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6410:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1060,"id":1062,"nodeType":"Return","src":"6403:19:7"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"6225:99:7","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:7","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"6360:2:7"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"6386:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1058,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:7"},"scope":1074,"src":"6329:100:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"6601:37:7","statements":[{"expression":{"id":1070,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"6618:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1069,"id":1071,"nodeType":"Return","src":"6611:20:7"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"6435:105:7","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:7","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"6569:2:7"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"6595:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1067,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:7"},"scope":1074,"src":"6545:93:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1075,"src":"2394:4246:7","usedErrors":[]}],"src":"113:6528:7"},"id":7},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ERC1967UpgradeUpgradeable":[895],"IBeaconUpgradeable":[905],"IERC1822ProxiableUpgradeable":[571],"IERC1967Upgradeable":[561],"Initializable":[1074],"StorageSlotUpgradeable":[2932],"UUPSUpgradeable":[1210]},"id":1211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1076,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":1077,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":572,"src":"140:56:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":1078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":896,"src":"197:50:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":1079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":1075,"src":"248:29:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1081,"name":"Initializable","nameLocations":["965:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"965:13:8"},"id":1082,"nodeType":"InheritanceSpecifier","src":"965:13:8"},{"baseName":{"id":1083,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:8"],"nodeType":"IdentifierPath","referencedDeclaration":571,"src":"980:28:8"},"id":1084,"nodeType":"InheritanceSpecifier","src":"980:28:8"},{"baseName":{"id":1085,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:8"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"1010:25:8"},"id":1086,"nodeType":"InheritanceSpecifier","src":"1010:25:8"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"279:648:8","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1210,"linearizedBaseContracts":[1210,895,561,571,1074],"name":"UUPSUpgradeable","nameLocation":"946:15:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1091,"nodeType":"Block","src":"1102:7:8","statements":[]},"id":1092,"implemented":true,"kind":"function","modifiers":[{"id":1089,"kind":"modifierInvocation","modifierName":{"id":1088,"name":"onlyInitializing","nameLocations":["1085:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1085:16:8"},"nodeType":"ModifierInvocation","src":"1085:16:8"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:8","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1073:2:8"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"1102:0:8"},"scope":1210,"src":"1042:67:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"1185:7:8","statements":[]},"id":1098,"implemented":true,"kind":"function","modifiers":[{"id":1095,"kind":"modifierInvocation","modifierName":{"id":1094,"name":"onlyInitializing","nameLocations":["1168:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1168:16:8"},"nodeType":"ModifierInvocation","src":"1168:16:8"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:8","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"1156:2:8"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"1185:0:8"},"scope":1210,"src":"1115:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"1197:87:8","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":1105,"mutability":"immutable","name":"__self","nameLocation":"1315:6:8","nodeType":"VariableDeclaration","scope":1210,"src":"1289:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":1103,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}],"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:8","typeDescriptions":{}}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1127,"nodeType":"Block","src":"1863:205:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1111,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}],"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:8","typeDescriptions":{}}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1113,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1898:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":1108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"1873:80:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1971:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1121,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1995:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"1963:87:8"},{"id":1126,"nodeType":"PlaceholderStatement","src":"2060:1:8"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"1344:493:8","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":1128,"name":"onlyProxy","nameLocation":"1851:9:8","nodeType":"ModifierDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"1860:2:8"},"src":"1842:226:8","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"2298:120:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1134,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1210","typeString":"contract UUPSUpgradeable"}],"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","typeDescriptions":{}}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1136,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2333:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"2308:92:8"},{"id":1141,"nodeType":"PlaceholderStatement","src":"2410:1:8"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"2074:195:8","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1143,"name":"notDelegated","nameLocation":"2283:12:8","nodeType":"ModifierDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"2295:2:8"},"src":"2274:144:8","virtual":false,"visibility":"internal"},{"baseFunctions":[570],"body":{"id":1154,"nodeType":"Block","src":"3093:44:8","statements":[{"expression":{"id":1152,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3110:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1151,"id":1153,"nodeType":"Return","src":"3103:27:8"}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"2424:577:8","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1155,"implemented":true,"kind":"function","modifiers":[{"id":1148,"kind":"modifierInvocation","modifierName":{"id":1147,"name":"notDelegated","nameLocations":["3062:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1143,"src":"3062:12:8"},"nodeType":"ModifierInvocation","src":"3062:12:8"}],"name":"proxiableUUID","nameLocation":"3015:13:8","nodeType":"FunctionDefinition","overrides":{"id":1146,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:8"},"parameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"3028:2:8"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"3084:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:8"},"scope":1210,"src":"3006:131:8","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1176,"nodeType":"Block","src":"3458:124:8","statements":[{"expression":{"arguments":[{"id":1164,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3486:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1163,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3468:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"3468:36:8"},{"expression":{"arguments":[{"id":1168,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3536:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1169,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1167,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3514:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"3514:61:8"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"3143:239:8","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":1177,"implemented":true,"kind":"function","modifiers":[{"id":1161,"kind":"modifierInvocation","modifierName":{"id":1160,"name":"onlyProxy","nameLocations":["3448:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"3448:9:8"},"nodeType":"ModifierInvocation","src":"3448:9:8"}],"name":"upgradeTo","nameLocation":"3396:9:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:8","nodeType":"VariableDeclaration","scope":1177,"src":"3406:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"3458:0:8"},"scope":1210,"src":"3387:195:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1197,"nodeType":"Block","src":"4006:115:8","statements":[{"expression":{"arguments":[{"id":1188,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4034:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1187,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"4016:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"4016:36:8"},{"expression":{"arguments":[{"id":1192,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"4084:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"4103:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1191,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4062:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"4062:52:8"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"3588:308:8","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":1198,"implemented":true,"kind":"function","modifiers":[{"id":1185,"kind":"modifierInvocation","modifierName":{"id":1184,"name":"onlyProxy","nameLocations":["3996:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1128,"src":"3996:9:8"},"nodeType":"ModifierInvocation","src":"3996:9:8"}],"name":"upgradeToAndCall","nameLocation":"3910:16:8","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:8","nodeType":"VariableDeclaration","scope":1198,"src":"3927:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"data","nameLocation":"3967:4:8","nodeType":"VariableDeclaration","scope":1198,"src":"3954:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:8"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"4006:0:8"},"scope":1210,"src":"3901:220:8","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"4127:397:8","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1204,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:8","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:8","nodeType":"VariableDeclaration","scope":1204,"src":"4556:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:8"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"4599:0:8"},"scope":1210,"src":"4529:71:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"4606:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1209,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:8","nodeType":"VariableDeclaration","scope":1210,"src":"4865:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"length":{"hexValue":"3530","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1211,"src":"928:3965:8","usedErrors":[]}],"src":"115:4779:8"},"id":8},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ContextUpgradeable":[2822],"Initializable":[1074],"PausableUpgradeable":[1337]},"id":1338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1212,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1338,"sourceUnit":2823,"src":"130:41:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1338,"sourceUnit":1075,"src":"172:42:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1216,"name":"Initializable","nameLocations":["697:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"697:13:9"},"id":1217,"nodeType":"InheritanceSpecifier","src":"697:13:9"},{"baseName":{"id":1218,"name":"ContextUpgradeable","nameLocations":["712:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":2822,"src":"712:18:9"},"id":1219,"nodeType":"InheritanceSpecifier","src":"712:18:9"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"216:439:9","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1337,"linearizedBaseContracts":[1337,2822,1074],"name":"PausableUpgradeable","nameLocation":"674:19:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"737:73:9","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1224,"name":"Paused","nameLocation":"821:6:9","nodeType":"EventDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:9","nodeType":"VariableDeclaration","scope":1224,"src":"828:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:9"},"src":"815:30:9"},{"anonymous":false,"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"851:70:9","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1229,"name":"Unpaused","nameLocation":"932:8:9","nodeType":"EventDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:9","nodeType":"VariableDeclaration","scope":1229,"src":"941:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:9"},"src":"926:32:9"},{"constant":false,"id":1231,"mutability":"mutable","name":"_paused","nameLocation":"977:7:9","nodeType":"VariableDeclaration","scope":1337,"src":"964:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1230,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1240,"nodeType":"Block","src":"1116:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1237,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"1126:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1239,"nodeType":"ExpressionStatement","src":"1126:27:9"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"991:67:9","text":" @dev Initializes the contract in unpaused state."},"id":1241,"implemented":true,"kind":"function","modifiers":[{"id":1235,"kind":"modifierInvocation","modifierName":{"id":1234,"name":"onlyInitializing","nameLocations":["1099:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1099:16:9"},"nodeType":"ModifierInvocation","src":"1099:16:9"}],"name":"__Pausable_init","nameLocation":"1072:15:9","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[],"src":"1087:2:9"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"1116:0:9"},"scope":1337,"src":"1063:97:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"1229:32:9","statements":[{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1246,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1239:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1249,"nodeType":"ExpressionStatement","src":"1239:15:9"}]},"id":1251,"implemented":true,"kind":"function","modifiers":[{"id":1244,"kind":"modifierInvocation","modifierName":{"id":1243,"name":"onlyInitializing","nameLocations":["1212:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1212:16:9"},"nodeType":"ModifierInvocation","src":"1212:16:9"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:9","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"1200:2:9"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"1229:0:9"},"scope":1337,"src":"1166:95:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"1472:47:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1254,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"1482:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"ExpressionStatement","src":"1482:19:9"},{"id":1257,"nodeType":"PlaceholderStatement","src":"1511:1:9"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1267:175:9","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1259,"name":"whenNotPaused","nameLocation":"1456:13:9","nodeType":"ModifierDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"1469:2:9"},"src":"1447:72:9","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"1719:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1262,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"1729:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"1729:16:9"},{"id":1265,"nodeType":"PlaceholderStatement","src":"1755:1:9"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1525:167:9","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1267,"name":"whenPaused","nameLocation":"1706:10:9","nodeType":"ModifierDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"1716:2:9"},"src":"1697:66:9","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"1911:31:9","statements":[{"expression":{"id":1273,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1928:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1272,"id":1274,"nodeType":"Return","src":"1921:14:9"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"1769:84:9","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:9","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"1873:2:9"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"1905:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1270,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:9"},"scope":1337,"src":"1858:84:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"2061:55:9","statements":[{"expression":{"arguments":[{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:9","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1281,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2080:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":1280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"2071:38:9"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"1948:57:9","text":" @dev Throws if the contract is paused."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:9","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"2036:2:9"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"2061:0:9"},"scope":1337,"src":"2010:106:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"2236:58:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1293,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2254:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2254:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":1292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1297,"nodeType":"ExpressionStatement","src":"2246:41:9"}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"2122:61:9","text":" @dev Throws if the contract is not paused."},"id":1299,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:9","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"2211:2:9"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"2236:0:9"},"scope":1337,"src":"2188:106:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"2478:66:9","statements":[{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1305,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2488:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1308,"nodeType":"ExpressionStatement","src":"2488:14:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1310,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"2524:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1309,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"2517:6:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1313,"nodeType":"EmitStatement","src":"2512:25:9"}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"2300:124:9","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1315,"implemented":true,"kind":"function","modifiers":[{"id":1303,"kind":"modifierInvocation","modifierName":{"id":1302,"name":"whenNotPaused","nameLocations":["2464:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"2464:13:9"},"nodeType":"ModifierInvocation","src":"2464:13:9"}],"name":"_pause","nameLocation":"2438:6:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"2444:2:9"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[],"src":"2478:0:9"},"scope":1337,"src":"2429:115:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"2724:69:9","statements":[{"expression":{"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1321,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2734:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1324,"nodeType":"ExpressionStatement","src":"2734:15:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1326,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"2773:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2773:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1325,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2764:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"EmitStatement","src":"2759:27:9"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"2550:121:9","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1331,"implemented":true,"kind":"function","modifiers":[{"id":1319,"kind":"modifierInvocation","modifierName":{"id":1318,"name":"whenPaused","nameLocations":["2713:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1267,"src":"2713:10:9"},"nodeType":"ModifierInvocation","src":"2713:10:9"}],"name":"_unpause","nameLocation":"2685:8:9","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[],"src":"2693:2:9"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"2724:0:9"},"scope":1337,"src":"2676:117:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"2799:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1336,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:9","nodeType":"VariableDeclaration","scope":1337,"src":"3058:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"length":{"hexValue":"3439","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1338,"src":"656:2430:9","usedErrors":[]}],"src":"105:2982:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ContextUpgradeable":[2822],"ERC165Upgradeable":[3205],"ERC721Upgradeable":[2289],"IERC165Upgradeable":[3217],"IERC721MetadataUpgradeable":[2450],"IERC721ReceiverUpgradeable":[2307],"IERC721Upgradeable":[2423],"Initializable":[1074],"MathUpgradeable":[4083],"SignedMathUpgradeable":[4188],"StringsUpgradeable":[3161]},"id":2290,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1339,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"./IERC721Upgradeable.sol","id":1340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":2424,"src":"132:34:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","file":"./IERC721ReceiverUpgradeable.sol","id":1341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":2308,"src":"167:42:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","file":"./extensions/IERC721MetadataUpgradeable.sol","id":1342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":2451,"src":"210:53:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":2781,"src":"264:44:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":2823,"src":"309:44:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../../utils/StringsUpgradeable.sol","id":1345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":3162,"src":"354:44:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":1346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":3206,"src":"399:57:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2290,"sourceUnit":1075,"src":"457:45:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1349,"name":"Initializable","nameLocations":["781:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"781:13:10"},"id":1350,"nodeType":"InheritanceSpecifier","src":"781:13:10"},{"baseName":{"id":1351,"name":"ContextUpgradeable","nameLocations":["796:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":2822,"src":"796:18:10"},"id":1352,"nodeType":"InheritanceSpecifier","src":"796:18:10"},{"baseName":{"id":1353,"name":"ERC165Upgradeable","nameLocations":["816:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":3205,"src":"816:17:10"},"id":1354,"nodeType":"InheritanceSpecifier","src":"816:17:10"},{"baseName":{"id":1355,"name":"IERC721Upgradeable","nameLocations":["835:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":2423,"src":"835:18:10"},"id":1356,"nodeType":"InheritanceSpecifier","src":"835:18:10"},{"baseName":{"id":1357,"name":"IERC721MetadataUpgradeable","nameLocations":["855:26:10"],"nodeType":"IdentifierPath","referencedDeclaration":2450,"src":"855:26:10"},"id":1358,"nodeType":"InheritanceSpecifier","src":"855:26:10"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"504:246:10","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2289,"linearizedBaseContracts":[2289,2450,2423,3205,3217,2822,1074],"name":"ERC721Upgradeable","nameLocation":"760:17:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1361,"libraryName":{"id":1359,"name":"AddressUpgradeable","nameLocations":["894:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":2780,"src":"894:18:10"},"nodeType":"UsingForDirective","src":"888:37:10","typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":1364,"libraryName":{"id":1362,"name":"StringsUpgradeable","nameLocations":["936:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":3161,"src":"936:18:10"},"nodeType":"UsingForDirective","src":"930:37:10","typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1366,"mutability":"mutable","name":"_name","nameLocation":"1006:5:10","nodeType":"VariableDeclaration","scope":2289,"src":"991:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1365,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1368,"mutability":"mutable","name":"_symbol","nameLocation":"1053:7:10","nodeType":"VariableDeclaration","scope":2289,"src":"1038:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1367,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1372,"mutability":"mutable","name":"_owners","nameLocation":"1149:7:10","nodeType":"VariableDeclaration","scope":2289,"src":"1113:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1371,"keyType":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1113:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"1132:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1376,"mutability":"mutable","name":"_balances","nameLocation":"1243:9:10","nodeType":"VariableDeclaration","scope":2289,"src":"1207:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1375,"keyType":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1207:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1380,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1344:15:10","nodeType":"VariableDeclaration","scope":2289,"src":"1308:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1379,"keyType":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1308:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"1327:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1386,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1467:18:10","nodeType":"VariableDeclaration","scope":2289,"src":"1414:71:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1385,"keyType":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"1422:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1414:44:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1384,"keyType":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1433:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1383,"name":"bool","nodeType":"ElementaryTypeName","src":"1452:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1401,"nodeType":"Block","src":"1698:56:10","statements":[{"expression":{"arguments":[{"id":1397,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1732:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1398,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1739:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1396,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1708:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"1708:39:10"}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1492:108:10","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1402,"implemented":true,"kind":"function","modifiers":[{"id":1394,"kind":"modifierInvocation","modifierName":{"id":1393,"name":"onlyInitializing","nameLocations":["1681:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1681:16:10"},"nodeType":"ModifierInvocation","src":"1681:16:10"}],"name":"__ERC721_init","nameLocation":"1614:13:10","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"name_","nameLocation":"1642:5:10","nodeType":"VariableDeclaration","scope":1402,"src":"1628:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1388,"name":"string","nodeType":"ElementaryTypeName","src":"1628:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"symbol_","nameLocation":"1663:7:10","nodeType":"VariableDeclaration","scope":1402,"src":"1649:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1390,"name":"string","nodeType":"ElementaryTypeName","src":"1649:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1627:44:10"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"1698:0:10"},"scope":2289,"src":"1605:149:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1419,"nodeType":"Block","src":"1863:57:10","statements":[{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1873:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1412,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1881:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1873:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1414,"nodeType":"ExpressionStatement","src":"1873:13:10"},{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1415,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1896:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1416,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"1906:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1896:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1418,"nodeType":"ExpressionStatement","src":"1896:17:10"}]},"id":1420,"implemented":true,"kind":"function","modifiers":[{"id":1409,"kind":"modifierInvocation","modifierName":{"id":1408,"name":"onlyInitializing","nameLocations":["1846:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1846:16:10"},"nodeType":"ModifierInvocation","src":"1846:16:10"}],"name":"__ERC721_init_unchained","nameLocation":"1769:23:10","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"name_","nameLocation":"1807:5:10","nodeType":"VariableDeclaration","scope":1420,"src":"1793:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1403,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"symbol_","nameLocation":"1828:7:10","nodeType":"VariableDeclaration","scope":1420,"src":"1814:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1405,"name":"string","nodeType":"ElementaryTypeName","src":"1814:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1792:44:10"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"1863:0:10"},"scope":2289,"src":"1760:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3199,3216],"body":{"id":1450,"nodeType":"Block","src":"2117:214:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2146:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1433,"name":"IERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2166:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Upgradeable_$2423_$","typeString":"type(contract IERC721Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Upgradeable_$2423_$","typeString":"type(contract IERC721Upgradeable)"}],"id":1432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2161:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Upgradeable_$2423","typeString":"type(contract IERC721Upgradeable)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2186:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"2161:36:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2146:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2213:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1439,"name":"IERC721MetadataUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2233:26:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721MetadataUpgradeable_$2450_$","typeString":"type(contract IERC721MetadataUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721MetadataUpgradeable_$2450_$","typeString":"type(contract IERC721MetadataUpgradeable)"}],"id":1438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2228:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721MetadataUpgradeable_$2450","typeString":"type(contract IERC721MetadataUpgradeable)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2261:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"2228:44:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2213:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2146:126:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1446,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"2312:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1444,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2288:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$2289_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2294:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"2288:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2288:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2146:178:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1430,"id":1449,"nodeType":"Return","src":"2127:197:10"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"1926:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1996:17:10","nodeType":"FunctionDefinition","overrides":{"id":1427,"nodeType":"OverrideSpecifier","overrides":[{"id":1425,"name":"ERC165Upgradeable","nameLocations":["2063:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":3205,"src":"2063:17:10"},{"id":1426,"name":"IERC165Upgradeable","nameLocations":["2082:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":3217,"src":"2082:18:10"}],"src":"2054:47:10"},"parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"interfaceId","nameLocation":"2021:11:10","nodeType":"VariableDeclaration","scope":1451,"src":"2014:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1422,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2014:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2013:20:10"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"2111:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1428,"name":"bool","nodeType":"ElementaryTypeName","src":"2111:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2110:6:10"},"scope":2289,"src":"1987:344:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2348],"body":{"id":1474,"nodeType":"Block","src":"2471:123:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2489:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2498:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"2498:7:10","typeDescriptions":{}}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2489:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2510:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2481:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2481:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"ExpressionStatement","src":"2481:73:10"},{"expression":{"baseExpression":{"id":1470,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2571:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1472,"indexExpression":{"id":1471,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2581:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1459,"id":1473,"nodeType":"Return","src":"2564:23:10"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"2337:48:10","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2399:9:10","nodeType":"FunctionDefinition","overrides":{"id":1456,"nodeType":"OverrideSpecifier","overrides":[],"src":"2444:8:10"},"parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"owner","nameLocation":"2417:5:10","nodeType":"VariableDeclaration","scope":1475,"src":"2409:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2408:15:10"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1475,"src":"2462:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2462:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2461:9:10"},"scope":2289,"src":"2390:204:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2356],"body":{"id":1502,"nodeType":"Block","src":"2732:138:10","statements":[{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"owner","nameLocation":"2750:5:10","nodeType":"VariableDeclaration","scope":1502,"src":"2742:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"2742:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1489,"initialValue":{"arguments":[{"id":1487,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"2767:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"2758:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2758:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2742:33:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2793:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2802:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"2802:7:10","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2793:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2814:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2785:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"2785:56:10"},{"expression":{"id":1500,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2858:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1483,"id":1501,"nodeType":"Return","src":"2851:12:10"}]},"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"2600:46:10","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2660:7:10","nodeType":"FunctionDefinition","overrides":{"id":1480,"nodeType":"OverrideSpecifier","overrides":[],"src":"2705:8:10"},"parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"tokenId","nameLocation":"2676:7:10","nodeType":"VariableDeclaration","scope":1503,"src":"2668:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:17:10"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"2723:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2723:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2722:9:10"},"scope":2289,"src":"2651:219:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2435],"body":{"id":1512,"nodeType":"Block","src":"3001:29:10","statements":[{"expression":{"id":1510,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"3018:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1509,"id":1511,"nodeType":"Return","src":"3011:12:10"}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"2876:51:10","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1513,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2941:4:10","nodeType":"FunctionDefinition","overrides":{"id":1506,"nodeType":"OverrideSpecifier","overrides":[],"src":"2968:8:10"},"parameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"2945:2:10"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1513,"src":"2986:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1507,"name":"string","nodeType":"ElementaryTypeName","src":"2986:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2985:15:10"},"scope":2289,"src":"2932:98:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2441],"body":{"id":1522,"nodeType":"Block","src":"3165:31:10","statements":[{"expression":{"id":1520,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"3182:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1519,"id":1521,"nodeType":"Return","src":"3175:14:10"}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"3036:53:10","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3103:6:10","nodeType":"FunctionDefinition","overrides":{"id":1516,"nodeType":"OverrideSpecifier","overrides":[],"src":"3132:8:10"},"parameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"3109:2:10"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1523,"src":"3150:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1517,"name":"string","nodeType":"ElementaryTypeName","src":"3150:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3149:15:10"},"scope":2289,"src":"3094:102:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2449],"body":{"id":1561,"nodeType":"Block","src":"3350:188:10","statements":[{"expression":{"arguments":[{"id":1533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3375:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3360:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3360:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"3360:23:10"},{"assignments":[1537],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"baseURI","nameLocation":"3408:7:10","nodeType":"VariableDeclaration","scope":1561,"src":"3394:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1536,"name":"string","nodeType":"ElementaryTypeName","src":"3394:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1540,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1538,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3418:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3394:34:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1543,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"3451:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3445:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1541,"name":"bytes","nodeType":"ElementaryTypeName","src":"3445:5:10","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3460:6:10","memberName":"length","nodeType":"MemberAccess","src":"3445:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3469:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3445:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3529:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3445:86:10","trueExpression":{"arguments":[{"arguments":[{"id":1552,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"3497:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1553,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3514:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2991,"src":"3506:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3506:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1550,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3480:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3484:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"3480:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3480:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3473:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1548,"name":"string","nodeType":"ElementaryTypeName","src":"3473:6:10","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3473:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1531,"id":1560,"nodeType":"Return","src":"3438:93:10"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"3202:55:10","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3271:8:10","nodeType":"FunctionDefinition","overrides":{"id":1528,"nodeType":"OverrideSpecifier","overrides":[],"src":"3317:8:10"},"parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"tokenId","nameLocation":"3288:7:10","nodeType":"VariableDeclaration","scope":1562,"src":"3280:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:17:10"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1562,"src":"3335:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1529,"name":"string","nodeType":"ElementaryTypeName","src":"3335:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3334:15:10"},"scope":2289,"src":"3262:276:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1570,"nodeType":"Block","src":"3846:26:10","statements":[{"expression":{"hexValue":"","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3863:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1567,"id":1569,"nodeType":"Return","src":"3856:9:10"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"3544:231:10","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3789:8:10","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"3797:2:10"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"3831:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1565,"name":"string","nodeType":"ElementaryTypeName","src":"3831:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3830:15:10"},"scope":2289,"src":"3780:92:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2396],"body":{"id":1613,"nodeType":"Block","src":"3999:347:10","statements":[{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"owner","nameLocation":"4017:5:10","nodeType":"VariableDeclaration","scope":1613,"src":"4009:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"4009:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1586,"initialValue":{"arguments":[{"id":1584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"4051:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1582,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"4025:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4043:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"4025:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4009:50:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"4077:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1589,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4083:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4077:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4090:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4069:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"ExpressionStatement","src":"4069:57:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1595,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4158:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1597,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4174:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4158:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1600,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4200:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1601,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4207:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4207:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1599,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"4183:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4183:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4158:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4234:63:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4137:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4137:170:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"4137:170:10"},{"expression":{"arguments":[{"id":1609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"4327:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"4331:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1608,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"4318:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"4318:21:10"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"3878:46:10","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3938:7:10","nodeType":"FunctionDefinition","overrides":{"id":1578,"nodeType":"OverrideSpecifier","overrides":[],"src":"3990:8:10"},"parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"to","nameLocation":"3954:2:10","nodeType":"VariableDeclaration","scope":1614,"src":"3946:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"tokenId","nameLocation":"3966:7:10","nodeType":"VariableDeclaration","scope":1614,"src":"3958:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3945:29:10"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[],"src":"3999:0:10"},"scope":2289,"src":"3929:417:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2412],"body":{"id":1631,"nodeType":"Block","src":"4492:82:10","statements":[{"expression":{"arguments":[{"id":1624,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4517:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1623,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"4502:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"ExpressionStatement","src":"4502:23:10"},{"expression":{"baseExpression":{"id":1627,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"4543:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1629,"indexExpression":{"id":1628,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4559:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4543:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1622,"id":1630,"nodeType":"Return","src":"4536:31:10"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"4352:50:10","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4416:11:10","nodeType":"FunctionDefinition","overrides":{"id":1619,"nodeType":"OverrideSpecifier","overrides":[],"src":"4465:8:10"},"parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"tokenId","nameLocation":"4436:7:10","nodeType":"VariableDeclaration","scope":1632,"src":"4428:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4428:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4427:17:10"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1632,"src":"4483:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"4483:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4482:9:10"},"scope":2289,"src":"4407:167:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2404],"body":{"id":1648,"nodeType":"Block","src":"4725:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1642,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"4754:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4754:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1644,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4768:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1645,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4778:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1641,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"4735:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4735:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"4735:52:10"}]},"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"4580:56:10","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4650:17:10","nodeType":"FunctionDefinition","overrides":{"id":1639,"nodeType":"OverrideSpecifier","overrides":[],"src":"4716:8:10"},"parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"operator","nameLocation":"4676:8:10","nodeType":"VariableDeclaration","scope":1649,"src":"4668:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"approved","nameLocation":"4691:8:10","nodeType":"VariableDeclaration","scope":1649,"src":"4686:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1636,"name":"bool","nodeType":"ElementaryTypeName","src":"4686:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4667:33:10"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[],"src":"4725:0:10"},"scope":2289,"src":"4641:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2422],"body":{"id":1666,"nodeType":"Block","src":"4963:59:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1660,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4980:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1662,"indexExpression":{"id":1661,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4999:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4980:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1664,"indexExpression":{"id":1663,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5006:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4980:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1659,"id":1665,"nodeType":"Return","src":"4973:42:10"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"4800:55:10","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4869:16:10","nodeType":"FunctionDefinition","overrides":{"id":1656,"nodeType":"OverrideSpecifier","overrides":[],"src":"4939:8:10"},"parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"owner","nameLocation":"4894:5:10","nodeType":"VariableDeclaration","scope":1667,"src":"4886:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"4886:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"operator","nameLocation":"4909:8:10","nodeType":"VariableDeclaration","scope":1667,"src":"4901:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4885:33:10"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"4957:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"4957:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4956:6:10"},"scope":2289,"src":"4860:162:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2388],"body":{"id":1693,"nodeType":"Block","src":"5173:207:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1680,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"5262:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1682,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"5276:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1679,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"5243:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5243:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5286:47:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5235:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5235:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"ExpressionStatement","src":"5235:99:10"},{"expression":{"arguments":[{"id":1688,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"5355:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"5361:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"5365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1687,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5345:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"ExpressionStatement","src":"5345:28:10"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"5028:51:10","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5093:12:10","nodeType":"FunctionDefinition","overrides":{"id":1676,"nodeType":"OverrideSpecifier","overrides":[],"src":"5164:8:10"},"parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"from","nameLocation":"5114:4:10","nodeType":"VariableDeclaration","scope":1694,"src":"5106:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"5106:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"to","nameLocation":"5128:2:10","nodeType":"VariableDeclaration","scope":1694,"src":"5120:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"tokenId","nameLocation":"5140:7:10","nodeType":"VariableDeclaration","scope":1694,"src":"5132:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:43:10"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"5173:0:10"},"scope":2289,"src":"5084:296:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2378],"body":{"id":1712,"nodeType":"Block","src":"5539:56:10","statements":[{"expression":{"arguments":[{"id":1706,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"5566:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"5572:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"5576:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5585:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1705,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1713,1743],"referencedDeclaration":1743,"src":"5549:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5549:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"ExpressionStatement","src":"5549:39:10"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"5386:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5455:16:10","nodeType":"FunctionDefinition","overrides":{"id":1703,"nodeType":"OverrideSpecifier","overrides":[],"src":"5530:8:10"},"parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"from","nameLocation":"5480:4:10","nodeType":"VariableDeclaration","scope":1713,"src":"5472:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"5472:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"to","nameLocation":"5494:2:10","nodeType":"VariableDeclaration","scope":1713,"src":"5486:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"5486:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"tokenId","nameLocation":"5506:7:10","nodeType":"VariableDeclaration","scope":1713,"src":"5498:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"5498:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5471:43:10"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"5539:0:10"},"scope":2289,"src":"5446:149:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2368],"body":{"id":1742,"nodeType":"Block","src":"5773:164:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1728,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"5810:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5810:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"5824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1727,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"5791:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5791:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5834:47:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5783:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5783:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"5783:99:10"},{"expression":{"arguments":[{"id":1736,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"5906:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"5912:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"5916:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1739,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5925:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1735,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"5892:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5892:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"ExpressionStatement","src":"5892:38:10"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"5601:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5670:16:10","nodeType":"FunctionDefinition","overrides":{"id":1724,"nodeType":"OverrideSpecifier","overrides":[],"src":"5764:8:10"},"parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"from","nameLocation":"5695:4:10","nodeType":"VariableDeclaration","scope":1743,"src":"5687:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"to","nameLocation":"5709:2:10","nodeType":"VariableDeclaration","scope":1743,"src":"5701:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"tokenId","nameLocation":"5721:7:10","nodeType":"VariableDeclaration","scope":1743,"src":"5713:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"data","nameLocation":"5743:4:10","nodeType":"VariableDeclaration","scope":1743,"src":"5730:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1721,"name":"bytes","nodeType":"ElementaryTypeName","src":"5730:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5686:62:10"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[],"src":"5773:0:10"},"scope":2289,"src":"5661:276:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1771,"nodeType":"Block","src":"6900:165:10","statements":[{"expression":{"arguments":[{"id":1756,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6920:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1757,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6926:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1755,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"6910:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6910:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"ExpressionStatement","src":"6910:28:10"},{"expression":{"arguments":[{"arguments":[{"id":1763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6979:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6985:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6989:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1766,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6998:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1762,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"6956:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6956:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7005:52:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6948:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:110:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"6948:110:10"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"5943:850:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6807:13:10","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"from","nameLocation":"6829:4:10","nodeType":"VariableDeclaration","scope":1772,"src":"6821:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"6821:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"to","nameLocation":"6843:2:10","nodeType":"VariableDeclaration","scope":1772,"src":"6835:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"6835:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"tokenId","nameLocation":"6855:7:10","nodeType":"VariableDeclaration","scope":1772,"src":"6847:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6847:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"data","nameLocation":"6877:4:10","nodeType":"VariableDeclaration","scope":1772,"src":"6864:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1751,"name":"bytes","nodeType":"ElementaryTypeName","src":"6864:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6820:62:10"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"6900:0:10"},"scope":2289,"src":"6798:267:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"7249:40:10","statements":[{"expression":{"baseExpression":{"id":1780,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7266:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1782,"indexExpression":{"id":1781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"7274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7266:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1779,"id":1783,"nodeType":"Return","src":"7259:23:10"}]},"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"7071:98:10","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"7183:8:10","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"tokenId","nameLocation":"7200:7:10","nodeType":"VariableDeclaration","scope":1785,"src":"7192:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"7192:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7191:17:10"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1785,"src":"7240:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"7240:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7239:9:10"},"scope":2289,"src":"7174:115:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1802,"nodeType":"Block","src":"7663:55:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1794,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"7689:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1793,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7680:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7680:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7709:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7701:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"7701:7:10","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7680:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1792,"id":1801,"nodeType":"Return","src":"7673:38:10"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"7295:292:10","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7601:7:10","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"tokenId","nameLocation":"7617:7:10","nodeType":"VariableDeclaration","scope":1803,"src":"7609:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"7609:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7608:17:10"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"7657:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1790,"name":"bool","nodeType":"ElementaryTypeName","src":"7657:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7656:6:10"},"scope":2289,"src":"7592:126:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1836,"nodeType":"Block","src":"7975:173:10","statements":[{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"owner","nameLocation":"7993:5:10","nodeType":"VariableDeclaration","scope":1836,"src":"7985:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"7985:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1819,"initialValue":{"arguments":[{"id":1817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8027:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1815,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"8001:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8019:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"8001:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7985:50:10"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"8053:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1821,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"8064:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8053:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1824,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"8090:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1825,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"8097:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1823,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"8073:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8073:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8053:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1829,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1828,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"8109:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1831,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"8133:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8109:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8053:87:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8052:89:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1812,"id":1835,"nodeType":"Return","src":"8045:96:10"}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"7724:147:10","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1837,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7885:18:10","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"spender","nameLocation":"7912:7:10","nodeType":"VariableDeclaration","scope":1837,"src":"7904:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"7904:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"tokenId","nameLocation":"7929:7:10","nodeType":"VariableDeclaration","scope":1837,"src":"7921:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7921:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:34:10"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1837,"src":"7969:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1810,"name":"bool","nodeType":"ElementaryTypeName","src":"7969:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7968:6:10"},"scope":2289,"src":"7876:272:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1851,"nodeType":"Block","src":"8543:43:10","statements":[{"expression":{"arguments":[{"id":1846,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"8563:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1847,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"8567:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8576:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1845,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1852,1881],"referencedDeclaration":1881,"src":"8553:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"8553:26:10"}]},"documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"8154:319:10","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1852,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8487:9:10","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"to","nameLocation":"8505:2:10","nodeType":"VariableDeclaration","scope":1852,"src":"8497:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"8497:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"tokenId","nameLocation":"8517:7:10","nodeType":"VariableDeclaration","scope":1852,"src":"8509:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"8509:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8496:29:10"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"8543:0:10"},"scope":2289,"src":"8478:108:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1880,"nodeType":"Block","src":"8891:195:10","statements":[{"expression":{"arguments":[{"id":1863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8907:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"8911:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8901:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8901:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"8901:18:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8981:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8973:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"8973:7:10","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8973:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8985:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"8989:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1875,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"8998:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"8950:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8950:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9017:52:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8929:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:150:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"8929:150:10"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"8592:210:10","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1881,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8816:9:10","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"to","nameLocation":"8834:2:10","nodeType":"VariableDeclaration","scope":1881,"src":"8826:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"8826:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"tokenId","nameLocation":"8846:7:10","nodeType":"VariableDeclaration","scope":1881,"src":"8838:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"data","nameLocation":"8868:4:10","nodeType":"VariableDeclaration","scope":1881,"src":"8855:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1858,"name":"bytes","nodeType":"ElementaryTypeName","src":"8855:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8825:48:10"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[],"src":"8891:0:10"},"scope":2289,"src":"8807:279:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"9469:859:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"9487:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9501:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9493:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"9493:7:10","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9493:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9487:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9505:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9479:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9479:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"ExpressionStatement","src":"9479:61:10"},{"expression":{"arguments":[{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9558:17:10","subExpression":{"arguments":[{"id":1901,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"9567:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9559:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9559:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9577:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9550:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9550:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1906,"nodeType":"ExpressionStatement","src":"9550:58:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9648:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9640:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"9640:7:10","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"9652:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"9656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9665:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1907,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"9619:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9619:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"ExpressionStatement","src":"9619:48:10"},{"expression":{"arguments":[{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9762:17:10","subExpression":{"arguments":[{"id":1919,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"9771:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9763:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9763:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9781:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9754:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1924,"nodeType":"ExpressionStatement","src":"9754:58:10"},{"id":1931,"nodeType":"UncheckedBlock","src":"9823:360:10","statements":[{"expression":{"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1925,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10154:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1927,"indexExpression":{"id":1926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10164:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10154:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10154:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1930,"nodeType":"ExpressionStatement","src":"10154:18:10"}]},{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1932,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"10193:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1934,"indexExpression":{"id":1933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"10201:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10193:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10212:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10193:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1937,"nodeType":"ExpressionStatement","src":"10193:21:10"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10247:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"10239:7:10","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10239:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10251:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"10255:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10230:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10230:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"EmitStatement","src":"10225:38:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10302:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10294:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"10294:7:10","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10294:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10306:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"10310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1947,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10274:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10274:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"10274:47:10"}]},"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"9092:311:10","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9417:5:10","nodeType":"FunctionDefinition","parameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"to","nameLocation":"9431:2:10","nodeType":"VariableDeclaration","scope":1958,"src":"9423:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"9423:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"tokenId","nameLocation":"9443:7:10","nodeType":"VariableDeclaration","scope":1958,"src":"9435:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"9435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9422:29:10"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"9469:0:10"},"scope":2289,"src":"9408:920:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2024,"nodeType":"Block","src":"10703:735:10","statements":[{"assignments":[1965],"declarations":[{"constant":false,"id":1965,"mutability":"mutable","name":"owner","nameLocation":"10721:5:10","nodeType":"VariableDeclaration","scope":2024,"src":"10713:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"10713:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1970,"initialValue":{"arguments":[{"id":1968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"10755:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1966,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"10729:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10747:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"10729:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10713:50:10"},{"expression":{"arguments":[{"id":1972,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"10795:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10802:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"10802:7:10","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10802:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"10814:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1971,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"10774:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10774:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"10774:51:10"},{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"10927:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1984,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"10961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1982,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"10935:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10953:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"10935:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10935:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10927:42:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1987,"nodeType":"ExpressionStatement","src":"10927:42:10"},{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11007:31:10","subExpression":{"baseExpression":{"id":1988,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"11014:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1990,"indexExpression":{"id":1989,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"11030:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11014:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1992,"nodeType":"ExpressionStatement","src":"11007:31:10"},{"id":1999,"nodeType":"UncheckedBlock","src":"11049:237:10","statements":[{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1993,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"11254:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1995,"indexExpression":{"id":1994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"11264:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11254:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11254:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1998,"nodeType":"ExpressionStatement","src":"11254:21:10"}]},{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11295:23:10","subExpression":{"baseExpression":{"id":2000,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"11302:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2002,"indexExpression":{"id":2001,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"11310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11302:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2004,"nodeType":"ExpressionStatement","src":"11295:23:10"},{"eventCall":{"arguments":[{"id":2006,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"11343:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11358:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11350:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2007,"name":"address","nodeType":"ElementaryTypeName","src":"11350:7:10","typeDescriptions":{}}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11350:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"11362:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2005,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"11334:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11334:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2013,"nodeType":"EmitStatement","src":"11329:41:10"},{"expression":{"arguments":[{"id":2015,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"11401:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11416:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11408:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"11408:7:10","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11408:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"11420:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11429:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2014,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"11381:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11381:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"ExpressionStatement","src":"11381:50:10"}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"10334:315:10","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2025,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10663:5:10","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"tokenId","nameLocation":"10677:7:10","nodeType":"VariableDeclaration","scope":2025,"src":"10669:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"10669:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10668:17:10"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"10703:0:10"},"scope":2289,"src":"10654:784:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"11841:1146:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2038,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"11885:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2036,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"11859:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11877:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"11859:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11859:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"11897:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11859:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11903:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11851:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11851:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"11851:92:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"11961:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11975:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11967:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"11967:7:10","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11967:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11961:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11979:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11953:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11953:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2054,"nodeType":"ExpressionStatement","src":"11953:65:10"},{"expression":{"arguments":[{"id":2056,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"12050:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2057,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"12056:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2058,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"12060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2055,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"12029:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12029:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"ExpressionStatement","src":"12029:42:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"12197:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2063,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"12171:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12189:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"12171:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12171:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2067,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"12209:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12171:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12215:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12163:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12163:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2071,"nodeType":"ExpressionStatement","src":"12163:92:10"},{"expression":{"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12317:31:10","subExpression":{"baseExpression":{"id":2072,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"12324:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2074,"indexExpression":{"id":2073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"12340:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12324:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"12317:31:10"},{"id":2089,"nodeType":"UncheckedBlock","src":"12359:496:10","statements":[{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2077,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"12792:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2079,"indexExpression":{"id":2078,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"12802:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12792:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12811:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12792:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"12792:20:10"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2083,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"12826:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2085,"indexExpression":{"id":2084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"12836:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12826:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12843:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12826:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"12826:18:10"}]},{"expression":{"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2090,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"12864:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2092,"indexExpression":{"id":2091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"12872:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12864:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2093,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"12883:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12864:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2095,"nodeType":"ExpressionStatement","src":"12864:21:10"},{"eventCall":{"arguments":[{"id":2097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"12910:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"12916:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"12920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2096,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"12901:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12901:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"EmitStatement","src":"12896:32:10"},{"expression":{"arguments":[{"id":2103,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"12959:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"12965:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"12969:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12978:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2102,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"12939:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12939:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2108,"nodeType":"ExpressionStatement","src":"12939:41:10"}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"11444:313:10","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11771:9:10","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"from","nameLocation":"11789:4:10","nodeType":"VariableDeclaration","scope":2110,"src":"11781:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2027,"name":"address","nodeType":"ElementaryTypeName","src":"11781:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2030,"mutability":"mutable","name":"to","nameLocation":"11803:2:10","nodeType":"VariableDeclaration","scope":2110,"src":"11795:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"11795:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"tokenId","nameLocation":"11815:7:10","nodeType":"VariableDeclaration","scope":2110,"src":"11807:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"11807:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11780:43:10"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"11841:0:10"},"scope":2289,"src":"11762:1225:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"13163:118:10","statements":[{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2118,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"13173:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2120,"indexExpression":{"id":2119,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"13189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13173:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"13200:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13173:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2123,"nodeType":"ExpressionStatement","src":"13173:29:10"},{"eventCall":{"arguments":[{"arguments":[{"id":2127,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"13252:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2125,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"13226:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Upgradeable_$2289_$","typeString":"type(contract ERC721Upgradeable)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13244:7:10","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"13226:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13226:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"13262:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2130,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"13266:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"13217:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13217:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"EmitStatement","src":"13212:62:10"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"12993:101:10","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"13108:8:10","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"to","nameLocation":"13125:2:10","nodeType":"VariableDeclaration","scope":2134,"src":"13117:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2112,"name":"address","nodeType":"ElementaryTypeName","src":"13117:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"tokenId","nameLocation":"13137:7:10","nodeType":"VariableDeclaration","scope":2134,"src":"13129:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"13129:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13116:29:10"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[],"src":"13163:0:10"},"scope":2289,"src":"13099:182:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"13510:184:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"13528:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2146,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"13537:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13528:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13547:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13520:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13520:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"ExpressionStatement","src":"13520:55:10"},{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2151,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"13585:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2154,"indexExpression":{"id":2152,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"13604:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13585:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2155,"indexExpression":{"id":2153,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"13611:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13585:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2156,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"13623:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13585:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"nodeType":"ExpressionStatement","src":"13585:46:10"},{"eventCall":{"arguments":[{"id":2160,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"13661:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2161,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"13668:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2162,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"13678:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2159,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"13646:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13646:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2164,"nodeType":"EmitStatement","src":"13641:46:10"}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"13287:125:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13426:18:10","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"owner","nameLocation":"13453:5:10","nodeType":"VariableDeclaration","scope":2166,"src":"13445:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"13445:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"operator","nameLocation":"13468:8:10","nodeType":"VariableDeclaration","scope":2166,"src":"13460:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"13460:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"approved","nameLocation":"13483:8:10","nodeType":"VariableDeclaration","scope":2166,"src":"13478:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2140,"name":"bool","nodeType":"ElementaryTypeName","src":"13478:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13444:48:10"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"13510:0:10"},"scope":2289,"src":"13417:277:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"13841:70:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2174,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"13867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2173,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13859:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13859:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13877:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13851:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13851:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"13851:53:10"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"13700:73:10","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13787:14:10","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"tokenId","nameLocation":"13810:7:10","nodeType":"VariableDeclaration","scope":2180,"src":"13802:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"13802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13801:17:10"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[],"src":"13841:0:10"},"scope":2289,"src":"13778:133:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"14618:698:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2194,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"14632:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14635:10:10","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"14632:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14632:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2239,"nodeType":"Block","src":"15274:36:10","statements":[{"expression":{"hexValue":"74727565","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15295:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2193,"id":2238,"nodeType":"Return","src":"15288:11:10"}]},"id":2240,"nodeType":"IfStatement","src":"14628:682:10","trueBody":{"id":2236,"nodeType":"Block","src":"14649:619:10","statements":[{"clauses":[{"block":{"id":2216,"nodeType":"Block","src":"14774:102:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"14799:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2211,"name":"IERC721ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"14809:26:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721ReceiverUpgradeable_$2307_$","typeString":"type(contract IERC721ReceiverUpgradeable)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14836:16:10","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2306,"src":"14809:43:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721ReceiverUpgradeable.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14853:8:10","memberName":"selector","nodeType":"MemberAccess","src":"14809:52:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14799:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2193,"id":2215,"nodeType":"Return","src":"14792:69:10"}]},"errorName":"","id":2217,"nodeType":"TryCatchClause","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"retval","nameLocation":"14766:6:10","nodeType":"VariableDeclaration","scope":2217,"src":"14759:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2207,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14759:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14758:15:10"},"src":"14750:126:10"},{"block":{"id":2233,"nodeType":"Block","src":"14905:353:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2221,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"14927:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14934:6:10","memberName":"length","nodeType":"MemberAccess","src":"14927:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14927:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2231,"nodeType":"Block","src":"15054:190:10","statements":[{"AST":{"nodeType":"YulBlock","src":"15140:86:10","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15177:2:10","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"15181:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15173:3:10"},"nodeType":"YulFunctionCall","src":"15173:15:10"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"15196:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15190:5:10"},"nodeType":"YulFunctionCall","src":"15190:13:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15166:6:10"},"nodeType":"YulFunctionCall","src":"15166:38:10"},"nodeType":"YulExpressionStatement","src":"15166:38:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2219,"isOffset":false,"isSlot":false,"src":"15181:6:10","valueSize":1},{"declaration":2219,"isOffset":false,"isSlot":false,"src":"15196:6:10","valueSize":1}],"id":2230,"nodeType":"InlineAssembly","src":"15131:95:10"}]},"id":2232,"nodeType":"IfStatement","src":"14923:321:10","trueBody":{"id":2229,"nodeType":"Block","src":"14947:101:10","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14976:52:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2225,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14969:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14969:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"14969:60:10"}]}}]},"errorName":"","id":2234,"nodeType":"TryCatchClause","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"reason","nameLocation":"14897:6:10","nodeType":"VariableDeclaration","scope":2234,"src":"14884:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"14884:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14883:21:10"},"src":"14877:381:10"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"14715:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14715:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2203,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"14729:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2204,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"14735:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2205,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"14744:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"14694:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2197,"name":"IERC721ReceiverUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"14667:26:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721ReceiverUpgradeable_$2307_$","typeString":"type(contract IERC721ReceiverUpgradeable)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721ReceiverUpgradeable_$2307","typeString":"contract IERC721ReceiverUpgradeable"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14698:16:10","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2306,"src":"14667:47:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:82:10","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2235,"nodeType":"TryStatement","src":"14663:595:10"}]}}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"13917:541:10","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14472:22:10","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"from","nameLocation":"14512:4:10","nodeType":"VariableDeclaration","scope":2242,"src":"14504:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"14504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"to","nameLocation":"14534:2:10","nodeType":"VariableDeclaration","scope":2242,"src":"14526:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2184,"name":"address","nodeType":"ElementaryTypeName","src":"14526:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"tokenId","nameLocation":"14554:7:10","nodeType":"VariableDeclaration","scope":2242,"src":"14546:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"14546:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"data","nameLocation":"14584:4:10","nodeType":"VariableDeclaration","scope":2242,"src":"14571:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2188,"name":"bytes","nodeType":"ElementaryTypeName","src":"14571:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14494:100:10"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"14612:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"14612:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14611:6:10"},"scope":2289,"src":"14463:853:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2254,"nodeType":"Block","src":"16146:2:10","statements":[]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"15322:705:10","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"16041:20:10","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"from","nameLocation":"16070:4:10","nodeType":"VariableDeclaration","scope":2255,"src":"16062:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"16062:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"to","nameLocation":"16084:2:10","nodeType":"VariableDeclaration","scope":2255,"src":"16076:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"16076:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"firstTokenId","nameLocation":"16096:12:10","nodeType":"VariableDeclaration","scope":2255,"src":"16088:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"16088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"batchSize","nameLocation":"16118:9:10","nodeType":"VariableDeclaration","scope":2255,"src":"16110:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"16110:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16061:67:10"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[],"src":"16146:0:10"},"scope":2289,"src":"16032:116:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"16967:2:10","statements":[]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"16154:695:10","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16863:19:10","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"from","nameLocation":"16891:4:10","nodeType":"VariableDeclaration","scope":2268,"src":"16883:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"16883:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"to","nameLocation":"16905:2:10","nodeType":"VariableDeclaration","scope":2268,"src":"16897:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"16897:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"firstTokenId","nameLocation":"16917:12:10","nodeType":"VariableDeclaration","scope":2268,"src":"16909:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"16909:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"batchSize","nameLocation":"16939:9:10","nodeType":"VariableDeclaration","scope":2268,"src":"16931:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"16931:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16882:67:10"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[],"src":"16967:0:10"},"scope":2289,"src":"16854:115:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2282,"nodeType":"Block","src":"17518:45:10","statements":[{"expression":{"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2276,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"17528:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2278,"indexExpression":{"id":2277,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"17538:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17528:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2279,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"17550:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17528:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"nodeType":"ExpressionStatement","src":"17528:28:10"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"16975:409:10","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"17451:24:10","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"account","nameLocation":"17484:7:10","nodeType":"VariableDeclaration","scope":2283,"src":"17476:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"17476:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"amount","nameLocation":"17501:6:10","nodeType":"VariableDeclaration","scope":2283,"src":"17493:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"17493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17475:33:10"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[],"src":"17518:0:10"},"scope":2289,"src":"17442:121:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"17569:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2288,"mutability":"mutable","name":"__gap","nameLocation":"17848:5:10","nodeType":"VariableDeclaration","scope":2289,"src":"17828:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$44_storage","typeString":"uint256[44]"},"typeName":{"baseType":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"17828:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2287,"length":{"hexValue":"3434","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17836:2:10","typeDescriptions":{"typeIdentifier":"t_rational_44_by_1","typeString":"int_const 44"},"value":"44"},"nodeType":"ArrayTypeName","src":"17828:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$44_storage_ptr","typeString":"uint256[44]"}},"visibility":"private"}],"scope":2290,"src":"751:17105:10","usedErrors":[]}],"src":"107:17750:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol","exportedSymbols":{"IERC721ReceiverUpgradeable":[2307]},"id":2308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2291,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721ReceiverUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"141:152:11","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2307,"linearizedBaseContracts":[2307],"name":"IERC721ReceiverUpgradeable","nameLocation":"304:26:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"337:493:11","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2306,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"844:16:11","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"operator","nameLocation":"878:8:11","nodeType":"VariableDeclaration","scope":2306,"src":"870:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"from","nameLocation":"904:4:11","nodeType":"VariableDeclaration","scope":2306,"src":"896:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"tokenId","nameLocation":"926:7:11","nodeType":"VariableDeclaration","scope":2306,"src":"918:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"data","nameLocation":"958:4:11","nodeType":"VariableDeclaration","scope":2306,"src":"943:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2300,"name":"bytes","nodeType":"ElementaryTypeName","src":"943:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"860:108:11"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"987:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2303,"name":"bytes4","nodeType":"ElementaryTypeName","src":"987:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"986:8:11"},"scope":2307,"src":"835:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2308,"src":"294:703:11","usedErrors":[]}],"src":"116:882:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3217],"IERC721Upgradeable":[2423]},"id":2424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2309,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":2310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2424,"sourceUnit":3218,"src":"133:58:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2312,"name":"IERC165Upgradeable","nameLocations":["293:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":3217,"src":"293:18:12"},"id":2313,"nodeType":"InheritanceSpecifier","src":"293:18:12"}],"canonicalName":"IERC721Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"193:67:12","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2423,"linearizedBaseContracts":[2423,3217],"name":"IERC721Upgradeable","nameLocation":"271:18:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"318:88:12","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2322,"name":"Transfer","nameLocation":"417:8:12","nodeType":"EventDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"442:4:12","nodeType":"VariableDeclaration","scope":2322,"src":"426:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2318,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"464:2:12","nodeType":"VariableDeclaration","scope":2322,"src":"448:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2317,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2320,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"484:7:12","nodeType":"VariableDeclaration","scope":2322,"src":"468:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:67:12"},"src":"411:82:12"},{"anonymous":false,"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"499:94:12","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2331,"name":"Approval","nameLocation":"604:8:12","nodeType":"EventDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"629:5:12","nodeType":"VariableDeclaration","scope":2331,"src":"613:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2327,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"652:8:12","nodeType":"VariableDeclaration","scope":2331,"src":"636:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2329,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"678:7:12","nodeType":"VariableDeclaration","scope":2331,"src":"662:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"612:74:12"},"src":"598:89:12"},{"anonymous":false,"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"693:117:12","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2340,"name":"ApprovalForAll","nameLocation":"821:14:12","nodeType":"EventDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"852:5:12","nodeType":"VariableDeclaration","scope":2340,"src":"836:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"875:8:12","nodeType":"VariableDeclaration","scope":2340,"src":"859:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2338,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"890:8:12","nodeType":"VariableDeclaration","scope":2340,"src":"885:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2337,"name":"bool","nodeType":"ElementaryTypeName","src":"885:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"835:64:12"},"src":"815:85:12"},{"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"906:76:12","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2348,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"996:9:12","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"owner","nameLocation":"1014:5:12","nodeType":"VariableDeclaration","scope":2348,"src":"1006:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1005:15:12"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"balance","nameLocation":"1052:7:12","nodeType":"VariableDeclaration","scope":2348,"src":"1044:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:17:12"},"scope":2423,"src":"987:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"1067:131:12","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2356,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1212:7:12","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"tokenId","nameLocation":"1228:7:12","nodeType":"VariableDeclaration","scope":2356,"src":"1220:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:17:12"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"owner","nameLocation":"1268:5:12","nodeType":"VariableDeclaration","scope":2356,"src":"1260:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:15:12"},"scope":2423,"src":"1203:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2357,"nodeType":"StructuredDocumentation","src":"1281:556:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2368,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1851:16:12","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"from","nameLocation":"1876:4:12","nodeType":"VariableDeclaration","scope":2368,"src":"1868:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2358,"name":"address","nodeType":"ElementaryTypeName","src":"1868:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"to","nameLocation":"1890:2:12","nodeType":"VariableDeclaration","scope":2368,"src":"1882:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"tokenId","nameLocation":"1902:7:12","nodeType":"VariableDeclaration","scope":2368,"src":"1894:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1894:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"data","nameLocation":"1926:4:12","nodeType":"VariableDeclaration","scope":2368,"src":"1911:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2364,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1867:64:12"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"1940:0:12"},"scope":2423,"src":"1842:99:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"1947:687:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2378,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2648:16:12","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"from","nameLocation":"2673:4:12","nodeType":"VariableDeclaration","scope":2378,"src":"2665:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"2665:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"to","nameLocation":"2687:2:12","nodeType":"VariableDeclaration","scope":2378,"src":"2679:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2372,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"tokenId","nameLocation":"2699:7:12","nodeType":"VariableDeclaration","scope":2378,"src":"2691:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2691:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:43:12"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[],"src":"2716:0:12"},"scope":2423,"src":"2639:78:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"2723:732:12","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2388,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3469:12:12","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"from","nameLocation":"3490:4:12","nodeType":"VariableDeclaration","scope":2388,"src":"3482:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"3482:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"to","nameLocation":"3504:2:12","nodeType":"VariableDeclaration","scope":2388,"src":"3496:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"tokenId","nameLocation":"3516:7:12","nodeType":"VariableDeclaration","scope":2388,"src":"3508:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"3508:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:43:12"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"3533:0:12"},"scope":2423,"src":"3460:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"3540:452:12","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2396,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4006:7:12","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"to","nameLocation":"4022:2:12","nodeType":"VariableDeclaration","scope":2396,"src":"4014:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"tokenId","nameLocation":"4034:7:12","nodeType":"VariableDeclaration","scope":2396,"src":"4026:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4026:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4013:29:12"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[],"src":"4051:0:12"},"scope":2423,"src":"3997:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"4058:309:12","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2404,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4381:17:12","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"operator","nameLocation":"4407:8:12","nodeType":"VariableDeclaration","scope":2404,"src":"4399:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"4399:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"approved","nameLocation":"4422:8:12","nodeType":"VariableDeclaration","scope":2404,"src":"4417:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"4417:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4398:33:12"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"4440:0:12"},"scope":2423,"src":"4372:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"4447:139:12","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2412,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4600:11:12","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"tokenId","nameLocation":"4620:7:12","nodeType":"VariableDeclaration","scope":2412,"src":"4612:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4611:17:12"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"operator","nameLocation":"4660:8:12","nodeType":"VariableDeclaration","scope":2412,"src":"4652:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:12"},"scope":2423,"src":"4591:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"4676:138:12","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2422,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4828:16:12","nodeType":"FunctionDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"owner","nameLocation":"4853:5:12","nodeType":"VariableDeclaration","scope":2422,"src":"4845:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"4845:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"operator","nameLocation":"4868:8:12","nodeType":"VariableDeclaration","scope":2422,"src":"4860:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4844:33:12"},"returnParameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"4901:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2419,"name":"bool","nodeType":"ElementaryTypeName","src":"4901:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4900:6:12"},"scope":2423,"src":"4819:88:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2424,"src":"261:4648:12","usedErrors":[]}],"src":"108:4802:12"},"id":12},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3217],"IERC721MetadataUpgradeable":[2450],"IERC721Upgradeable":[2423]},"id":2451,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2425,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:13"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol","file":"../IERC721Upgradeable.sol","id":2426,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2451,"sourceUnit":2424,"src":"137:35:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2428,"name":"IERC721Upgradeable","nameLocations":["348:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":2423,"src":"348:18:13"},"id":2429,"nodeType":"InheritanceSpecifier","src":"348:18:13"}],"canonicalName":"IERC721MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"174:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2450,"linearizedBaseContracts":[2450,2423,3217],"name":"IERC721MetadataUpgradeable","nameLocation":"318:26:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"373:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2435,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"445:4:13","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[],"src":"449:2:13"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2435,"src":"475:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2432,"name":"string","nodeType":"ElementaryTypeName","src":"475:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"474:15:13"},"scope":2450,"src":"436:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"496:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2441,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"570:6:13","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[],"src":"576:2:13"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2441,"src":"602:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2438,"name":"string","nodeType":"ElementaryTypeName","src":"602:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"601:15:13"},"scope":2450,"src":"561:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"623:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2449,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"727:8:13","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"tokenId","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":2449,"src":"736:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:17:13"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2449,"src":"776:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2446,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"775:15:13"},"scope":2450,"src":"718:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2451,"src":"308:485:13","usedErrors":[]}],"src":"112:682:13"},"id":13},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780]},"id":2781,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2452,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2780,"linearizedBaseContracts":[2780],"name":"AddressUpgradeable","nameLocation":"202:18:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2467,"nodeType":"Block","src":"1489:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2461,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"1713:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:14","memberName":"code","nodeType":"MemberAccess","src":"1713:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:14","memberName":"length","nodeType":"MemberAccess","src":"1713:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2460,"id":2466,"nodeType":"Return","src":"1706:30:14"}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"227:1191:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:14","nodeType":"FunctionDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"account","nameLocation":"1451:7:14","nodeType":"VariableDeclaration","scope":2468,"src":"1443:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:14"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"1483:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2458,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:14"},"scope":2780,"src":"1423:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"2729:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2479,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2780","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2780","typeString":"library AddressUpgradeable"}],"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:14","typeDescriptions":{}}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:14","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"2772:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2476,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"ExpressionStatement","src":"2739:73:14"},{"assignments":[2488,null],"declarations":[{"constant":false,"id":2488,"mutability":"mutable","name":"success","nameLocation":"2829:7:14","nodeType":"VariableDeclaration","scope":2501,"src":"2824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2487,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2495,"initialValue":{"arguments":[{"hexValue":"","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2489,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"2842:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:14","memberName":"call","nodeType":"MemberAccess","src":"2842:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"2864:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:14"},{"expression":{"arguments":[{"id":2497,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2893:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"ExpressionStatement","src":"2885:78:14"}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"1749:904:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:14","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:14","nodeType":"VariableDeclaration","scope":2502,"src":"2677:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"amount","nameLocation":"2712:6:14","nodeType":"VariableDeclaration","scope":2502,"src":"2704:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:14"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[],"src":"2729:0:14"},"scope":2780,"src":"2658:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2519,"nodeType":"Block","src":"3801:96:14","statements":[{"expression":{"arguments":[{"id":2513,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"3840:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2514,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"3848:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2512,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2560,2604],"referencedDeclaration":2604,"src":"3818:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2511,"id":2518,"nodeType":"Return","src":"3811:79:14"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"2976:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:14","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"target","nameLocation":"3742:6:14","nodeType":"VariableDeclaration","scope":2520,"src":"3734:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"data","nameLocation":"3763:4:14","nodeType":"VariableDeclaration","scope":2520,"src":"3750:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2506,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:14"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2520,"src":"3787:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2509,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:14"},"scope":2780,"src":"3712:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2539,"nodeType":"Block","src":"4266:76:14","statements":[{"expression":{"arguments":[{"id":2533,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4305:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2534,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4313:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2536,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"4322:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2532,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2560,2604],"referencedDeclaration":2604,"src":"4283:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2531,"id":2538,"nodeType":"Return","src":"4276:59:14"}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"3903:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:14","nodeType":"FunctionDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"target","nameLocation":"4158:6:14","nodeType":"VariableDeclaration","scope":2540,"src":"4150:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"data","nameLocation":"4187:4:14","nodeType":"VariableDeclaration","scope":2540,"src":"4174:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:14","nodeType":"VariableDeclaration","scope":2540,"src":"4201:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2526,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:14"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2540,"src":"4252:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2529,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:14"},"scope":2780,"src":"4119:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"4817:111:14","statements":[{"expression":{"arguments":[{"id":2553,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"4856:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2554,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4864:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"4870:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2552,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2560,2604],"referencedDeclaration":2604,"src":"4834:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2551,"id":2558,"nodeType":"Return","src":"4827:94:14"}]},"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"4348:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:14","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"target","nameLocation":"4743:6:14","nodeType":"VariableDeclaration","scope":2560,"src":"4735:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"data","nameLocation":"4764:4:14","nodeType":"VariableDeclaration","scope":2560,"src":"4751:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2544,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"value","nameLocation":"4778:5:14","nodeType":"VariableDeclaration","scope":2560,"src":"4770:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:14"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"4803:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2549,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:14"},"scope":2780,"src":"4704:224:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2603,"nodeType":"Block","src":"5355:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2577,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2780","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2780","typeString":"library AddressUpgradeable"}],"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:14","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:14","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"ExpressionStatement","src":"5365:81:14"},{"assignments":[2586,2588],"declarations":[{"constant":false,"id":2586,"mutability":"mutable","name":"success","nameLocation":"5462:7:14","nodeType":"VariableDeclaration","scope":2603,"src":"5457:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2585,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:14","nodeType":"VariableDeclaration","scope":2603,"src":"5471:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2587,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2595,"initialValue":{"arguments":[{"id":2593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"5524:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2589,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"5498:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:14","memberName":"call","nodeType":"MemberAccess","src":"5498:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5517:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:14"},{"expression":{"arguments":[{"id":2597,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"5573:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2598,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"5581:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2599,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"5590:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2600,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"5602:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2596,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5546:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2573,"id":2602,"nodeType":"Return","src":"5539:76:14"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"4934:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:14","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"target","nameLocation":"5224:6:14","nodeType":"VariableDeclaration","scope":2604,"src":"5216:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"data","nameLocation":"5253:4:14","nodeType":"VariableDeclaration","scope":2604,"src":"5240:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2564,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"value","nameLocation":"5275:5:14","nodeType":"VariableDeclaration","scope":2604,"src":"5267:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:14","nodeType":"VariableDeclaration","scope":2604,"src":"5290:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2568,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:14"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"5341:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:14"},"scope":2780,"src":"5176:446:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"5899:97:14","statements":[{"expression":{"arguments":[{"id":2615,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"5935:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5943:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2614,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2621,2650],"referencedDeclaration":2650,"src":"5916:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2613,"id":2619,"nodeType":"Return","src":"5909:80:14"}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"5628:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:14","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"target","nameLocation":"5835:6:14","nodeType":"VariableDeclaration","scope":2621,"src":"5827:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"data","nameLocation":"5856:4:14","nodeType":"VariableDeclaration","scope":2621,"src":"5843:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2608,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:14"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2621,"src":"5885:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2611,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:14"},"scope":2780,"src":"5799:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"6338:168:14","statements":[{"assignments":[2634,2636],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"success","nameLocation":"6354:7:14","nodeType":"VariableDeclaration","scope":2649,"src":"6349:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2633,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:14","nodeType":"VariableDeclaration","scope":2649,"src":"6363:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2635,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2641,"initialValue":{"arguments":[{"id":2639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"6408:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2637,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"6390:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:14","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:14"},{"expression":{"arguments":[{"id":2643,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"6457:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2644,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"6465:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2645,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"6474:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2646,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"6486:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2642,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6430:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2632,"id":2648,"nodeType":"Return","src":"6423:76:14"}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"6002:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:14","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"target","nameLocation":"6225:6:14","nodeType":"VariableDeclaration","scope":2650,"src":"6217:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"data","nameLocation":"6254:4:14","nodeType":"VariableDeclaration","scope":2650,"src":"6241:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:14","nodeType":"VariableDeclaration","scope":2650,"src":"6268:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2627,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:14"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2650,"src":"6324:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2630,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:14"},"scope":2780,"src":"6180:326:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"6782:101:14","statements":[{"expression":{"arguments":[{"id":2661,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"6820:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2662,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"6828:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2660,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2667,2696],"referencedDeclaration":2696,"src":"6799:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2659,"id":2665,"nodeType":"Return","src":"6792:84:14"}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"6512:168:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:14","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"target","nameLocation":"6723:6:14","nodeType":"VariableDeclaration","scope":2667,"src":"6715:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"data","nameLocation":"6744:4:14","nodeType":"VariableDeclaration","scope":2667,"src":"6731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2654,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:14"},"returnParameters":{"id":2659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"6768:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2657,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:14"},"scope":2780,"src":"6685:198:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2695,"nodeType":"Block","src":"7224:170:14","statements":[{"assignments":[2680,2682],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"success","nameLocation":"7240:7:14","nodeType":"VariableDeclaration","scope":2695,"src":"7235:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2679,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:14","nodeType":"VariableDeclaration","scope":2695,"src":"7249:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2681,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2687,"initialValue":{"arguments":[{"id":2685,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"7296:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2683,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7276:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:14","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:14"},{"expression":{"arguments":[{"id":2689,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7345:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"7353:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2691,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"7362:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2692,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"7374:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2688,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"7318:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2678,"id":2694,"nodeType":"Return","src":"7311:76:14"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"6889:175:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:14","nodeType":"FunctionDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"target","nameLocation":"7116:6:14","nodeType":"VariableDeclaration","scope":2696,"src":"7108:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"data","nameLocation":"7145:4:14","nodeType":"VariableDeclaration","scope":2696,"src":"7132:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:14","nodeType":"VariableDeclaration","scope":2696,"src":"7159:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2673,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:14"},"returnParameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"7210:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:14"},"scope":2780,"src":"7069:325:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2734,"nodeType":"Block","src":"7876:434:14","statements":[{"condition":{"id":2710,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"7890:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2732,"nodeType":"Block","src":"8246:58:14","statements":[{"expression":{"arguments":[{"id":2728,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"8268:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2729,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"8280:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2727,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"8260:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2731,"nodeType":"ExpressionStatement","src":"8260:33:14"}]},"id":2733,"nodeType":"IfStatement","src":"7886:418:14","trueBody":{"id":2726,"nodeType":"Block","src":"7899:341:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2711,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"7917:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:14","memberName":"length","nodeType":"MemberAccess","src":"7917:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"7913:286:14","trueBody":{"id":2722,"nodeType":"Block","src":"7941:258:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2717,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"8143:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2716,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"8132:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"ExpressionStatement","src":"8124:60:14"}]}},{"expression":{"id":2724,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"8219:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2709,"id":2725,"nodeType":"Return","src":"8212:17:14"}]}}]},"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"7400:277:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2735,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:14","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"target","nameLocation":"7735:6:14","nodeType":"VariableDeclaration","scope":2735,"src":"7727:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"success","nameLocation":"7756:7:14","nodeType":"VariableDeclaration","scope":2735,"src":"7751:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2700,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:14","nodeType":"VariableDeclaration","scope":2735,"src":"7773:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2702,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:14","nodeType":"VariableDeclaration","scope":2735,"src":"7806:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2704,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:14"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2735,"src":"7862:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2707,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:14"},"scope":2780,"src":"7682:628:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"8691:135:14","statements":[{"condition":{"id":2747,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"8705:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2756,"nodeType":"Block","src":"8762:58:14","statements":[{"expression":{"arguments":[{"id":2752,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"8784:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2753,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"8796:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2751,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"8776:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2755,"nodeType":"ExpressionStatement","src":"8776:33:14"}]},"id":2757,"nodeType":"IfStatement","src":"8701:119:14","trueBody":{"id":2750,"nodeType":"Block","src":"8714:42:14","statements":[{"expression":{"id":2748,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"8735:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2746,"id":2749,"nodeType":"Return","src":"8728:17:14"}]}}]},"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"8316:210:14","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:14","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"success","nameLocation":"8571:7:14","nodeType":"VariableDeclaration","scope":2759,"src":"8566:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2737,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:14","nodeType":"VariableDeclaration","scope":2759,"src":"8588:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2739,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:14","nodeType":"VariableDeclaration","scope":2759,"src":"8621:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2741,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:14"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"8677:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2744,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:14"},"scope":2780,"src":"8531:295:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2778,"nodeType":"Block","src":"8915:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2766,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8991:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:14","memberName":"length","nodeType":"MemberAccess","src":"8991:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2776,"nodeType":"Block","src":"9321:45:14","statements":[{"expression":{"arguments":[{"id":2773,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"9342:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2772,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"9335:20:14"}]},"id":2777,"nodeType":"IfStatement","src":"8987:379:14","trueBody":{"id":2771,"nodeType":"Block","src":"9014:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:14"},"nodeType":"YulFunctionCall","src":"9213:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:14"},"nodeType":"YulFunctionCall","src":"9254:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:14"},"nodeType":"YulFunctionCall","src":"9247:44:14"},"nodeType":"YulExpressionStatement","src":"9247:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2761,"isOffset":false,"isSlot":false,"src":"9219:10:14","valueSize":1},{"declaration":2761,"isOffset":false,"isSlot":false,"src":"9262:10:14","valueSize":1}],"id":2770,"nodeType":"InlineAssembly","src":"9163:142:14"}]}}]},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:14","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:14","nodeType":"VariableDeclaration","scope":2779,"src":"8849:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2760,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:14","nodeType":"VariableDeclaration","scope":2779,"src":"8874:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2762,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:14"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"8915:0:14"},"scope":2780,"src":"8832:540:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2781,"src":"194:9180:14","usedErrors":[]}],"src":"101:9274:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ContextUpgradeable":[2822],"Initializable":[1074]},"id":2823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2782,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2783,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2823,"sourceUnit":1075,"src":"110:42:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2785,"name":"Initializable","nameLocations":["691:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"691:13:15"},"id":2786,"nodeType":"InheritanceSpecifier","src":"691:13:15"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"154:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2822,"linearizedBaseContracts":[2822,1074],"name":"ContextUpgradeable","nameLocation":"669:18:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2791,"nodeType":"Block","src":"763:7:15","statements":[]},"id":2792,"implemented":true,"kind":"function","modifiers":[{"id":2789,"kind":"modifierInvocation","modifierName":{"id":2788,"name":"onlyInitializing","nameLocations":["746:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"746:16:15"},"nodeType":"ModifierInvocation","src":"746:16:15"}],"name":"__Context_init","nameLocation":"720:14:15","nodeType":"FunctionDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[],"src":"734:2:15"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[],"src":"763:0:15"},"scope":2822,"src":"711:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2797,"nodeType":"Block","src":"838:7:15","statements":[]},"id":2798,"implemented":true,"kind":"function","modifiers":[{"id":2795,"kind":"modifierInvocation","modifierName":{"id":2794,"name":"onlyInitializing","nameLocations":["821:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"821:16:15"},"nodeType":"ModifierInvocation","src":"821:16:15"}],"name":"__Context_init_unchained","nameLocation":"785:24:15","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[],"src":"809:2:15"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[],"src":"838:0:15"},"scope":2822,"src":"776:69:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2806,"nodeType":"Block","src":"912:34:15","statements":[{"expression":{"expression":{"id":2803,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:15","memberName":"sender","nodeType":"MemberAccess","src":"929:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2802,"id":2805,"nodeType":"Return","src":"922:17:15"}]},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:15","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"869:2:15"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2807,"src":"903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:15"},"scope":2822,"src":"850:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"1019:32:15","statements":[{"expression":{"expression":{"id":2812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:15","memberName":"data","nodeType":"MemberAccess","src":"1036:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2811,"id":2814,"nodeType":"Return","src":"1029:15:15"}]},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:15","nodeType":"FunctionDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[],"src":"969:2:15"},"returnParameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"1003:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2809,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:15"},"scope":2822,"src":"952:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"1057:254:15","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2821,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:15","nodeType":"VariableDeclaration","scope":2822,"src":"1316:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"length":{"hexValue":"3530","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2823,"src":"651:693:15","usedErrors":[]}],"src":"86:1259:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[2932]},"id":2933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2824,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"218:1201:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2932,"linearizedBaseContracts":[2932],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":2828,"members":[{"constant":false,"id":2827,"mutability":"mutable","name":"value","nameLocation":"1494:5:16","nodeType":"VariableDeclaration","scope":2828,"src":"1486:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:16","nodeType":"StructDefinition","scope":2932,"src":"1457:49:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":2831,"members":[{"constant":false,"id":2830,"mutability":"mutable","name":"value","nameLocation":"1546:5:16","nodeType":"VariableDeclaration","scope":2831,"src":"1541:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2829,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:16","nodeType":"StructDefinition","scope":2932,"src":"1512:46:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":2834,"members":[{"constant":false,"id":2833,"mutability":"mutable","name":"value","nameLocation":"1601:5:16","nodeType":"VariableDeclaration","scope":2834,"src":"1593:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:16","nodeType":"StructDefinition","scope":2932,"src":"1564:49:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":2837,"members":[{"constant":false,"id":2836,"mutability":"mutable","name":"value","nameLocation":"1656:5:16","nodeType":"VariableDeclaration","scope":2837,"src":"1648:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:16","nodeType":"StructDefinition","scope":2932,"src":"1619:49:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":2840,"members":[{"constant":false,"id":2839,"mutability":"mutable","name":"value","nameLocation":"1709:5:16","nodeType":"VariableDeclaration","scope":2840,"src":"1702:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2838,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:16","nodeType":"StructDefinition","scope":2932,"src":"1674:47:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":2843,"members":[{"constant":false,"id":2842,"mutability":"mutable","name":"value","nameLocation":"1760:5:16","nodeType":"VariableDeclaration","scope":2843,"src":"1754:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2841,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:16","nodeType":"StructDefinition","scope":2932,"src":"1727:45:16","visibility":"public"},{"body":{"id":2853,"nodeType":"Block","src":"1954:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:16","statements":[{"nodeType":"YulAssignment","src":"2030:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2850,"isOffset":false,"isSlot":true,"src":"2030:6:16","suffix":"slot","valueSize":1},{"declaration":2846,"isOffset":false,"isSlot":false,"src":"2040:4:16","valueSize":1}],"id":2852,"nodeType":"InlineAssembly","src":"2007:47:16"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"1778:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:16","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"slot","nameLocation":"1902:4:16","nodeType":"VariableDeclaration","scope":2854,"src":"1894:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:16"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"r","nameLocation":"1951:1:16","nodeType":"VariableDeclaration","scope":2854,"src":"1931:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2849,"nodeType":"UserDefinedTypeName","pathNode":{"id":2848,"name":"AddressSlot","nameLocations":["1931:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2828,"src":"1931:11:16"},"referencedDeclaration":2828,"src":"1931:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2828_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:16"},"scope":2932,"src":"1870:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2864,"nodeType":"Block","src":"2242:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:16","statements":[{"nodeType":"YulAssignment","src":"2318:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2861,"isOffset":false,"isSlot":true,"src":"2318:6:16","suffix":"slot","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"2328:4:16","valueSize":1}],"id":2863,"nodeType":"InlineAssembly","src":"2295:47:16"}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"2066:87:16","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2865,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:16","nodeType":"FunctionDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"slot","nameLocation":"2190:4:16","nodeType":"VariableDeclaration","scope":2865,"src":"2182:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:16"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"r","nameLocation":"2239:1:16","nodeType":"VariableDeclaration","scope":2865,"src":"2219:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2831_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":2860,"nodeType":"UserDefinedTypeName","pathNode":{"id":2859,"name":"BooleanSlot","nameLocations":["2219:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2831,"src":"2219:11:16"},"referencedDeclaration":2831,"src":"2219:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2831_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:16"},"scope":2932,"src":"2158:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2875,"nodeType":"Block","src":"2530:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:16","statements":[{"nodeType":"YulAssignment","src":"2606:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2872,"isOffset":false,"isSlot":true,"src":"2606:6:16","suffix":"slot","valueSize":1},{"declaration":2868,"isOffset":false,"isSlot":false,"src":"2616:4:16","valueSize":1}],"id":2874,"nodeType":"InlineAssembly","src":"2583:47:16"}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"2354:87:16","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2876,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:16","nodeType":"FunctionDefinition","parameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"slot","nameLocation":"2478:4:16","nodeType":"VariableDeclaration","scope":2876,"src":"2470:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:16"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"r","nameLocation":"2527:1:16","nodeType":"VariableDeclaration","scope":2876,"src":"2507:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2834_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2871,"nodeType":"UserDefinedTypeName","pathNode":{"id":2870,"name":"Bytes32Slot","nameLocations":["2507:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2834,"src":"2507:11:16"},"referencedDeclaration":2834,"src":"2507:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2834_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:16"},"scope":2932,"src":"2446:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"2818:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:16","statements":[{"nodeType":"YulAssignment","src":"2894:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2883,"isOffset":false,"isSlot":true,"src":"2894:6:16","suffix":"slot","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"2904:4:16","valueSize":1}],"id":2885,"nodeType":"InlineAssembly","src":"2871:47:16"}]},"documentation":{"id":2877,"nodeType":"StructuredDocumentation","src":"2642:87:16","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:16","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"slot","nameLocation":"2766:4:16","nodeType":"VariableDeclaration","scope":2887,"src":"2758:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:16"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"r","nameLocation":"2815:1:16","nodeType":"VariableDeclaration","scope":2887,"src":"2795:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2837_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2882,"nodeType":"UserDefinedTypeName","pathNode":{"id":2881,"name":"Uint256Slot","nameLocations":["2795:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2837,"src":"2795:11:16"},"referencedDeclaration":2837,"src":"2795:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2837_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:16"},"scope":2932,"src":"2734:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"3103:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:16","statements":[{"nodeType":"YulAssignment","src":"3179:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2894,"isOffset":false,"isSlot":true,"src":"3179:6:16","suffix":"slot","valueSize":1},{"declaration":2890,"isOffset":false,"isSlot":false,"src":"3189:4:16","valueSize":1}],"id":2896,"nodeType":"InlineAssembly","src":"3156:47:16"}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"2930:86:16","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:16","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"slot","nameLocation":"3052:4:16","nodeType":"VariableDeclaration","scope":2898,"src":"3044:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:16"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"r","nameLocation":"3100:1:16","nodeType":"VariableDeclaration","scope":2898,"src":"3081:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2840_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2893,"nodeType":"UserDefinedTypeName","pathNode":{"id":2892,"name":"StringSlot","nameLocations":["3081:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"3081:10:16"},"referencedDeclaration":2840,"src":"3081:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2840_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:16"},"scope":2932,"src":"3021:188:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"3411:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:16","statements":[{"nodeType":"YulAssignment","src":"3487:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2905,"isOffset":false,"isSlot":true,"src":"3487:6:16","suffix":"slot","valueSize":1},{"declaration":2901,"isOffset":false,"isSlot":true,"src":"3497:10:16","suffix":"slot","valueSize":1}],"id":2907,"nodeType":"InlineAssembly","src":"3464:53:16"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"3215:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:16","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"store","nameLocation":"3359:5:16","nodeType":"VariableDeclaration","scope":2909,"src":"3344:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2900,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:16"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"r","nameLocation":"3408:1:16","nodeType":"VariableDeclaration","scope":2909,"src":"3389:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2840_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2904,"nodeType":"UserDefinedTypeName","pathNode":{"id":2903,"name":"StringSlot","nameLocations":["3389:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"3389:10:16"},"referencedDeclaration":2840,"src":"3389:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2840_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:16"},"scope":2932,"src":"3321:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"3699:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:16","statements":[{"nodeType":"YulAssignment","src":"3775:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2916,"isOffset":false,"isSlot":true,"src":"3775:6:16","suffix":"slot","valueSize":1},{"declaration":2912,"isOffset":false,"isSlot":false,"src":"3785:4:16","valueSize":1}],"id":2918,"nodeType":"InlineAssembly","src":"3752:47:16"}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"3529:85:16","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:16","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"slot","nameLocation":"3649:4:16","nodeType":"VariableDeclaration","scope":2920,"src":"3641:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:16"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"r","nameLocation":"3696:1:16","nodeType":"VariableDeclaration","scope":2920,"src":"3678:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2843_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2915,"nodeType":"UserDefinedTypeName","pathNode":{"id":2914,"name":"BytesSlot","nameLocations":["3678:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2843,"src":"3678:9:16"},"referencedDeclaration":2843,"src":"3678:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2843_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:16"},"scope":2932,"src":"3619:186:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"4002:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:16","statements":[{"nodeType":"YulAssignment","src":"4078:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2927,"isOffset":false,"isSlot":true,"src":"4078:6:16","suffix":"slot","valueSize":1},{"declaration":2923,"isOffset":false,"isSlot":true,"src":"4088:10:16","suffix":"slot","valueSize":1}],"id":2929,"nodeType":"InlineAssembly","src":"4055:53:16"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"3811:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:16","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"store","nameLocation":"3951:5:16","nodeType":"VariableDeclaration","scope":2931,"src":"3937:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2922,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:16"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"r","nameLocation":"3999:1:16","nodeType":"VariableDeclaration","scope":2931,"src":"3981:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2843_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2926,"nodeType":"UserDefinedTypeName","pathNode":{"id":2925,"name":"BytesSlot","nameLocations":["3981:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2843,"src":"3981:9:16"},"referencedDeclaration":2843,"src":"3981:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2843_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:16"},"scope":2932,"src":"3915:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2933,"src":"1420:2696:16","usedErrors":[]}],"src":"193:3924:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4083],"SignedMathUpgradeable":[4188],"StringsUpgradeable":[3161]},"id":3162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2934,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":2935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3162,"sourceUnit":4084,"src":"126:36:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":2936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3162,"sourceUnit":4189,"src":"163:42:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"207:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3161,"linearizedBaseContracts":[3161],"name":"StringsUpgradeable","nameLocation":"250:18:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2940,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:17","nodeType":"VariableDeclaration","scope":3161,"src":"275:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2938,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2943,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:17","nodeType":"VariableDeclaration","scope":3161,"src":"335:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2941,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2990,"nodeType":"Block","src":"551:636:17","statements":[{"id":2989,"nodeType":"UncheckedBlock","src":"561:620:17","statements":[{"assignments":[2952],"declarations":[{"constant":false,"id":2952,"mutability":"mutable","name":"length","nameLocation":"593:6:17","nodeType":"VariableDeclaration","scope":2989,"src":"585:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2959,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"624:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2953,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"602:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4083_$","typeString":"type(library MathUpgradeable)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"602:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:17"},{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"buffer","nameLocation":"662:6:17","nodeType":"VariableDeclaration","scope":2989,"src":"648:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2960,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2966,"initialValue":{"arguments":[{"id":2964,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"682:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2962,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:17"},{"assignments":[2968],"declarations":[{"constant":false,"id":2968,"mutability":"mutable","name":"ptr","nameLocation":"711:3:17","nodeType":"VariableDeclaration","scope":2989,"src":"703:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2969,"nodeType":"VariableDeclarationStatement","src":"703:11:17"},{"AST":{"nodeType":"YulBlock","src":"784:67:17","statements":[{"nodeType":"YulAssignment","src":"802:35:17","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:17","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:17"},"nodeType":"YulFunctionCall","src":"821:15:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:17"},"nodeType":"YulFunctionCall","src":"809:28:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2961,"isOffset":false,"isSlot":false,"src":"813:6:17","valueSize":1},{"declaration":2952,"isOffset":false,"isSlot":false,"src":"829:6:17","valueSize":1},{"declaration":2968,"isOffset":false,"isSlot":false,"src":"802:3:17","valueSize":1}],"id":2970,"nodeType":"InlineAssembly","src":"775:76:17"},{"body":{"id":2985,"nodeType":"Block","src":"877:267:17","statements":[{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:17","subExpression":{"id":2972,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"895:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2974,"nodeType":"ExpressionStatement","src":"895:5:17"},{"AST":{"nodeType":"YulBlock","src":"978:84:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:17"},"nodeType":"YulFunctionCall","src":"1018:14:17"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:17"},"nodeType":"YulFunctionCall","src":"1013:30:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:17"},"nodeType":"YulFunctionCall","src":"1000:44:17"},"nodeType":"YulExpressionStatement","src":"1000:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2940,"isOffset":false,"isSlot":false,"src":"1034:8:17","valueSize":1},{"declaration":2968,"isOffset":false,"isSlot":false,"src":"1008:3:17","valueSize":1},{"declaration":2946,"isOffset":false,"isSlot":false,"src":"1022:5:17","valueSize":1}],"id":2975,"nodeType":"InlineAssembly","src":"969:93:17"},{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"1079:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2979,"nodeType":"ExpressionStatement","src":"1079:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"1112:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2984,"nodeType":"IfStatement","src":"1108:21:17","trueBody":{"id":2983,"nodeType":"Break","src":"1124:5:17"}}]},"condition":{"hexValue":"74727565","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2986,"nodeType":"WhileStatement","src":"864:280:17"},{"expression":{"id":2987,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"1164:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2950,"id":2988,"nodeType":"Return","src":"1157:13:17"}]}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"385:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:17","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"value","nameLocation":"506:5:17","nodeType":"VariableDeclaration","scope":2991,"src":"498:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:17"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"536:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2948,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:17"},"scope":3161,"src":"480:707:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3018,"nodeType":"Block","src":"1357:114:17","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1398:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:17","trueExpression":{"hexValue":"2d","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3010,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"1429:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$4188_$","typeString":"type(library SignedMathUpgradeable)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4187,"src":"1429:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3009,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2991,3019],"referencedDeclaration":2991,"src":"1420:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3001,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2999,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:17","typeDescriptions":{}}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2998,"id":3017,"nodeType":"Return","src":"1367:97:17"}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"1193:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3019,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:17","nodeType":"FunctionDefinition","parameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"value","nameLocation":"1312:5:17","nodeType":"VariableDeclaration","scope":3019,"src":"1305:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2993,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:17"},"returnParameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3019,"src":"1342:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2996,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:17"},"scope":3161,"src":"1287:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3038,"nodeType":"Block","src":"1650:111:17","statements":[{"id":3037,"nodeType":"UncheckedBlock","src":"1660:95:17","statements":[{"expression":{"arguments":[{"id":3028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1703:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"1733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3029,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"1710:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$4083_$","typeString":"type(library MathUpgradeable)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4043,"src":"1710:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3027,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3039,3115,3135],"referencedDeclaration":3115,"src":"1691:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3026,"id":3036,"nodeType":"Return","src":"1684:60:17"}]}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"1477:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3039,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:17","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"value","nameLocation":"1605:5:17","nodeType":"VariableDeclaration","scope":3039,"src":"1597:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:17"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3039,"src":"1635:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3024,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:17"},"scope":3161,"src":"1576:185:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"1974:347:17","statements":[{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:17","nodeType":"VariableDeclaration","scope":3114,"src":"1984:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3049,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3059,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3054,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"2020:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3051,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:17"},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3060,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2041:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3062,"indexExpression":{"hexValue":"30","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3065,"nodeType":"ExpressionStatement","src":"2041:15:17"},{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3066,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2066:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3068,"indexExpression":{"hexValue":"31","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3071,"nodeType":"ExpressionStatement","src":"2066:15:17"},{"body":{"id":3100,"nodeType":"Block","src":"2136:83:17","statements":[{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3086,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2150:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3088,"indexExpression":{"id":3087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3089,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"2162:8:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3093,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2171:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3095,"nodeType":"ExpressionStatement","src":"2150:33:17"},{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2197:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"2197:11:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2124:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3101,"initializationExpression":{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"i","nameLocation":"2104:1:17","nodeType":"VariableDeclaration","scope":3101,"src":"2096:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3075,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"2112:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:17"},"loopExpression":{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:17","subExpression":{"id":3083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"2133:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"nodeType":"ExpressionStatement","src":"2131:3:17"},"nodeType":"ForStatement","src":"2091:128:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2236:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3108,"nodeType":"ExpressionStatement","src":"2228:55:17"},{"expression":{"arguments":[{"id":3111,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2307:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3109,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:17","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3048,"id":3113,"nodeType":"Return","src":"2293:21:17"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"1767:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:17","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"value","nameLocation":"1913:5:17","nodeType":"VariableDeclaration","scope":3115,"src":"1905:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"length","nameLocation":"1928:6:17","nodeType":"VariableDeclaration","scope":3115,"src":"1920:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:17"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"1959:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3046,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:17"},"scope":3161,"src":"1884:437:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"2546:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3128,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"2591:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3126,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:17","typeDescriptions":{}}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:17","typeDescriptions":{}}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3131,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2599:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3123,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3039,3115,3135],"referencedDeclaration":3115,"src":"2563:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3122,"id":3133,"nodeType":"Return","src":"2556:59:17"}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"2327:141:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:17","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"addr","nameLocation":"2502:4:17","nodeType":"VariableDeclaration","scope":3135,"src":"2494:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:17"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"2531:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3120,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:17"},"scope":3161,"src":"2473:149:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"2777:66:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"2810:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:17","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3145,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2833:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3152,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:17","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3151,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3144,"id":3158,"nodeType":"Return","src":"2787:49:17"}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"2628:66:17","text":" @dev Returns true if the two strings are equal."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:17","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"a","nameLocation":"2728:1:17","nodeType":"VariableDeclaration","scope":3160,"src":"2714:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3137,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"b","nameLocation":"2745:1:17","nodeType":"VariableDeclaration","scope":3160,"src":"2731:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3139,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:17"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"2771:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3142,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:17"},"scope":3161,"src":"2699:144:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3162,"src":"242:2603:17","usedErrors":[]}],"src":"101:2745:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2780],"ERC165Upgradeable":[3205],"IERC165Upgradeable":[3217],"Initializable":[1074]},"id":3206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3163,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":3164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3206,"sourceUnit":3218,"src":"124:34:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":3165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3206,"sourceUnit":1075,"src":"159:45:18","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3167,"name":"Initializable","nameLocations":["822:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"822:13:18"},"id":3168,"nodeType":"InheritanceSpecifier","src":"822:13:18"},{"baseName":{"id":3169,"name":"IERC165Upgradeable","nameLocations":["837:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":3217,"src":"837:18:18"},"id":3170,"nodeType":"InheritanceSpecifier","src":"837:18:18"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"206:576:18","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3205,"linearizedBaseContracts":[3205,3217,1074],"name":"ERC165Upgradeable","nameLocation":"801:17:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3175,"nodeType":"Block","src":"913:7:18","statements":[]},"id":3176,"implemented":true,"kind":"function","modifiers":[{"id":3173,"kind":"modifierInvocation","modifierName":{"id":3172,"name":"onlyInitializing","nameLocations":["896:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"896:16:18"},"nodeType":"ModifierInvocation","src":"896:16:18"}],"name":"__ERC165_init","nameLocation":"871:13:18","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[],"src":"884:2:18"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[],"src":"913:0:18"},"scope":3205,"src":"862:58:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"987:7:18","statements":[]},"id":3182,"implemented":true,"kind":"function","modifiers":[{"id":3179,"kind":"modifierInvocation","modifierName":{"id":3178,"name":"onlyInitializing","nameLocations":["970:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"970:16:18"},"nodeType":"ModifierInvocation","src":"970:16:18"}],"name":"__ERC165_init_unchained","nameLocation":"935:23:18","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[],"src":"958:2:18"},"returnParameters":{"id":3180,"nodeType":"ParameterList","parameters":[],"src":"987:0:18"},"scope":3205,"src":"926:68:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3216],"body":{"id":3198,"nodeType":"Block","src":"1151:75:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3191,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"1168:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3193,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"1188:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3217_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$3217_$","typeString":"type(contract IERC165Upgradeable)"}],"id":3192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1183:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$3217","typeString":"type(contract IERC165Upgradeable)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1208:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"1183:36:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1168:51:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3190,"id":3197,"nodeType":"Return","src":"1161:58:18"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"999:56:18","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3199,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1069:17:18","nodeType":"FunctionDefinition","overrides":{"id":3187,"nodeType":"OverrideSpecifier","overrides":[],"src":"1127:8:18"},"parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"interfaceId","nameLocation":"1094:11:18","nodeType":"VariableDeclaration","scope":3199,"src":"1087:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3184,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1087:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1086:20:18"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3199,"src":"1145:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3188,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:18"},"scope":3205,"src":"1060:166:18","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"1232:254:18","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":3204,"mutability":"mutable","name":"__gap","nameLocation":"1511:5:18","nodeType":"VariableDeclaration","scope":3205,"src":"1491:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3203,"length":{"hexValue":"3530","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:2:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1491:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":3206,"src":"783:736:18","usedErrors":[]}],"src":"99:1421:18"},"id":18},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[3217]},"id":3218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3207,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"125:279:19","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3217,"linearizedBaseContracts":[3217],"name":"IERC165Upgradeable","nameLocation":"415:18:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"440:340:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3216,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:19","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:19","nodeType":"VariableDeclaration","scope":3216,"src":"812:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3210,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:19"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"855:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3213,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:19"},"scope":3217,"src":"785:76:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3218,"src":"405:458:19","usedErrors":[]}],"src":"100:764:19"},"id":19},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[4083]},"id":4084,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3219,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"128:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4083,"linearizedBaseContracts":[4083],"name":"MathUpgradeable","nameLocation":"210:15:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":3224,"members":[{"id":3221,"name":"Down","nameLocation":"256:4:20","nodeType":"EnumValue","src":"256:4:20"},{"id":3222,"name":"Up","nameLocation":"298:2:20","nodeType":"EnumValue","src":"298:2:20"},{"id":3223,"name":"Zero","nameLocation":"329:4:20","nodeType":"EnumValue","src":"329:4:20"}],"name":"Rounding","nameLocation":"237:8:20","nodeType":"EnumDefinition","src":"232:122:20"},{"body":{"id":3241,"nodeType":"Block","src":"491:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"508:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"512:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"520:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:20","trueExpression":{"id":3237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"516:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3233,"id":3240,"nodeType":"Return","src":"501:20:20"}]},"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"360:59:20","text":" @dev Returns the largest of two numbers."},"id":3242,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:20","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"a","nameLocation":"445:1:20","nodeType":"VariableDeclaration","scope":3242,"src":"437:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"b","nameLocation":"456:1:20","nodeType":"VariableDeclaration","scope":3242,"src":"448:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:20"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3242,"src":"482:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:20"},"scope":4083,"src":"424:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"666:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"683:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"687:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"695:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:20","trueExpression":{"id":3255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"691:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3251,"id":3258,"nodeType":"Return","src":"676:20:20"}]},"documentation":{"id":3243,"nodeType":"StructuredDocumentation","src":"534:60:20","text":" @dev Returns the smallest of two numbers."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:20","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"a","nameLocation":"620:1:20","nodeType":"VariableDeclaration","scope":3260,"src":"612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"b","nameLocation":"631:1:20","nodeType":"VariableDeclaration","scope":3260,"src":"623:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:20"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"657:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:20"},"scope":4083,"src":"599:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"887:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"942:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"946:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"952:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"956:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3269,"id":3281,"nodeType":"Return","src":"934:28:20"}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"709:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:20","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"a","nameLocation":"841:1:20","nodeType":"VariableDeclaration","scope":3283,"src":"833:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"b","nameLocation":"852:1:20","nodeType":"VariableDeclaration","scope":3283,"src":"844:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:20"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3283,"src":"878:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:20"},"scope":4083,"src":"816:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3307,"nodeType":"Block","src":"1239:123:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"1327:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"1341:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1350:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:20","trueExpression":{"hexValue":"30","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3292,"id":3306,"nodeType":"Return","src":"1320:35:20"}]},"documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"975:188:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:20","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"a","nameLocation":"1193:1:20","nodeType":"VariableDeclaration","scope":3308,"src":"1185:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"b","nameLocation":"1204:1:20","nodeType":"VariableDeclaration","scope":3308,"src":"1196:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:20"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3308,"src":"1230:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:20"},"scope":4083,"src":"1168:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3430,"nodeType":"Block","src":"1776:4115:20","statements":[{"id":3429,"nodeType":"UncheckedBlock","src":"1786:4099:20","statements":[{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:20","nodeType":"VariableDeclaration","scope":3429,"src":"2107:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3322,"nodeType":"VariableDeclarationStatement","src":"2107:13:20"},{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:20","nodeType":"VariableDeclaration","scope":3429,"src":"2179:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3325,"nodeType":"VariableDeclarationStatement","src":"2179:13:20"},{"AST":{"nodeType":"YulBlock","src":"2259:157:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:20"},"nodeType":"YulFunctionCall","src":"2300:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:20"},"nodeType":"YulFunctionCall","src":"2287:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:20","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:20"},"nodeType":"YulFunctionCall","src":"2333:9:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:20"}]},{"nodeType":"YulAssignment","src":"2359:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:20"},"nodeType":"YulFunctionCall","src":"2372:14:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:20"},"nodeType":"YulFunctionCall","src":"2388:13:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:20"},"nodeType":"YulFunctionCall","src":"2368:34:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:20"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3321,"isOffset":false,"isSlot":false,"src":"2324:5:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"2380:5:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"2395:5:20","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"2359:5:20","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"2294:1:20","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"2337:1:20","valueSize":1},{"declaration":3313,"isOffset":false,"isSlot":false,"src":"2297:1:20","valueSize":1},{"declaration":3313,"isOffset":false,"isSlot":false,"src":"2340:1:20","valueSize":1}],"id":3326,"nodeType":"InlineAssembly","src":"2250:166:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2497:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3335,"nodeType":"IfStatement","src":"2493:368:20","trueBody":{"id":3334,"nodeType":"Block","src":"2509:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2827:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3331,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"2835:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3319,"id":3333,"nodeType":"Return","src":"2820:26:20"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"2971:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3338,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"2985:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3342,"nodeType":"ExpressionStatement","src":"2963:53:20"},{"assignments":[3344],"declarations":[{"constant":false,"id":3344,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:20","nodeType":"VariableDeclaration","scope":3429,"src":"3272:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3345,"nodeType":"VariableDeclarationStatement","src":"3272:17:20"},{"AST":{"nodeType":"YulBlock","src":"3312:291:20","statements":[{"nodeType":"YulAssignment","src":"3381:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:20"},"nodeType":"YulFunctionCall","src":"3394:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:20"}]},{"nodeType":"YulAssignment","src":"3501:41:20","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:20"},"nodeType":"YulFunctionCall","src":"3521:20:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:20"},"nodeType":"YulFunctionCall","src":"3510:32:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:20"}]},{"nodeType":"YulAssignment","src":"3559:30:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:20"},"nodeType":"YulFunctionCall","src":"3568:21:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:20"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3315,"isOffset":false,"isSlot":false,"src":"3407:11:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"3535:5:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"3559:5:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"3572:5:20","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"3501:5:20","valueSize":1},{"declaration":3324,"isOffset":false,"isSlot":false,"src":"3514:5:20","valueSize":1},{"declaration":3344,"isOffset":false,"isSlot":false,"src":"3381:9:20","valueSize":1},{"declaration":3344,"isOffset":false,"isSlot":false,"src":"3524:9:20","valueSize":1},{"declaration":3344,"isOffset":false,"isSlot":false,"src":"3579:9:20","valueSize":1},{"declaration":3311,"isOffset":false,"isSlot":false,"src":"3401:1:20","valueSize":1},{"declaration":3313,"isOffset":false,"isSlot":false,"src":"3404:1:20","valueSize":1}],"id":3346,"nodeType":"InlineAssembly","src":"3303:300:20"},{"assignments":[3348],"declarations":[{"constant":false,"id":3348,"mutability":"mutable","name":"twos","nameLocation":"3918:4:20","nodeType":"VariableDeclaration","scope":3429,"src":"3910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3356,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3925:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:20","subExpression":{"id":3350,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3941:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:20"},{"AST":{"nodeType":"YulBlock","src":"3980:362:20","statements":[{"nodeType":"YulAssignment","src":"4045:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:20"},"nodeType":"YulFunctionCall","src":"4060:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:20"}]},{"nodeType":"YulAssignment","src":"4149:25:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:20"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:20"},"nodeType":"YulFunctionCall","src":"4158:16:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:20"}]},{"nodeType":"YulAssignment","src":"4289:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:20"},"nodeType":"YulFunctionCall","src":"4305:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:20"},"nodeType":"YulFunctionCall","src":"4301:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:20"},"nodeType":"YulFunctionCall","src":"4297:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:20"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3315,"isOffset":false,"isSlot":false,"src":"4045:11:20","valueSize":1},{"declaration":3315,"isOffset":false,"isSlot":false,"src":"4064:11:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"4149:5:20","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"4162:5:20","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"4077:4:20","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"4169:4:20","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"4289:4:20","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"4312:4:20","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"4319:4:20","valueSize":1}],"id":3357,"nodeType":"InlineAssembly","src":"3971:371:20"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"4408:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4417:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3360,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4425:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"4408:21:20"},{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:20","nodeType":"VariableDeclaration","scope":3429,"src":"4747:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3372,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3367,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"4770:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:20"},{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5003:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5018:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3376,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5032:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3380,"nodeType":"ExpressionStatement","src":"5003:36:20"},{"expression":{"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3381,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5072:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5087:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3384,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5101:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3388,"nodeType":"ExpressionStatement","src":"5072:36:20"},{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3389,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5142:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5157:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3392,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"5142:36:20"},{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5212:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5227:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3400,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5241:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3404,"nodeType":"ExpressionStatement","src":"5212:36:20"},{"expression":{"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3405,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5282:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5297:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3408,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5311:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3412,"nodeType":"ExpressionStatement","src":"5282:36:20"},{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3413,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5353:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"5368:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3416,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5382:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3420,"nodeType":"ExpressionStatement","src":"5353:36:20"},{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"5823:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"5832:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3423,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"5840:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"nodeType":"ExpressionStatement","src":"5823:24:20"},{"expression":{"id":3427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"5868:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3319,"id":3428,"nodeType":"Return","src":"5861:13:20"}]}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"1368:305:20","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:20","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"x","nameLocation":"1702:1:20","nodeType":"VariableDeclaration","scope":3431,"src":"1694:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"y","nameLocation":"1713:1:20","nodeType":"VariableDeclaration","scope":3431,"src":"1705:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:20","nodeType":"VariableDeclaration","scope":3431,"src":"1716:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:20"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"result","nameLocation":"1768:6:20","nodeType":"VariableDeclaration","scope":3431,"src":"1760:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:20"},"scope":4083,"src":"1678:4213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"6133:189:20","statements":[{"assignments":[3447],"declarations":[{"constant":false,"id":3447,"mutability":"mutable","name":"result","nameLocation":"6151:6:20","nodeType":"VariableDeclaration","scope":3474,"src":"6143:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3453,"initialValue":{"arguments":[{"id":3449,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"6167:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3450,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"6170:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3451,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6173:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3448,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3431,3475],"referencedDeclaration":3431,"src":"6160:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"6199:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3455,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"6211:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3224_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"6211:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3459,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"6233:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3460,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"6236:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3461,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"6239:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3458,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"6195:98:20","trueBody":{"id":3470,"nodeType":"Block","src":"6257:36:20","statements":[{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"6271:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"6271:11:20"}]}},{"expression":{"id":3472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"6309:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3445,"id":3473,"nodeType":"Return","src":"6302:13:20"}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"5897:121:20","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:20","nodeType":"FunctionDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"x","nameLocation":"6047:1:20","nodeType":"VariableDeclaration","scope":3475,"src":"6039:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"y","nameLocation":"6058:1:20","nodeType":"VariableDeclaration","scope":3475,"src":"6050:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:20","nodeType":"VariableDeclaration","scope":3475,"src":"6061:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:20","nodeType":"VariableDeclaration","scope":3475,"src":"6082:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3440,"nodeType":"UserDefinedTypeName","pathNode":{"id":3439,"name":"Rounding","nameLocations":["6082:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3224,"src":"6082:8:20"},"referencedDeclaration":3224,"src":"6082:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:20"},"returnParameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"6124:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:20"},"scope":4083,"src":"6023:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"6598:1585:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6612:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"nodeType":"IfStatement","src":"6608:45:20","trueBody":{"id":3488,"nodeType":"Block","src":"6620:33:20","statements":[{"expression":{"hexValue":"30","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3482,"id":3487,"nodeType":"Return","src":"6634:8:20"}]}},{"assignments":[3491],"declarations":[{"constant":false,"id":3491,"mutability":"mutable","name":"result","nameLocation":"7340:6:20","nodeType":"VariableDeclaration","scope":3586,"src":"7332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7360:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3755,3791],"referencedDeclaration":3755,"src":"7355:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:20"},{"id":3585,"nodeType":"UncheckedBlock","src":"7769:408:20","statements":[{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7793:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7803:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7812:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7816:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ExpressionStatement","src":"7793:35:20"},{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7842:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7852:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7861:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7865:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"7842:35:20"},{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7891:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7901:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7910:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7914:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"7891:35:20"},{"expression":{"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7940:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7950:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7959:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7963:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3544,"nodeType":"ExpressionStatement","src":"7940:35:20"},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7989:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"7999:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"8008:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8012:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ExpressionStatement","src":"7989:35:20"},{"expression":{"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8038:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8048:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"8057:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8061:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3566,"nodeType":"ExpressionStatement","src":"8038:35:20"},{"expression":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8087:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8097:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"8106:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8110:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3577,"nodeType":"ExpressionStatement","src":"8087:35:20"},{"expression":{"arguments":[{"id":3579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8147:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"8155:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3581,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"8159:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3578,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"8143:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3482,"id":3584,"nodeType":"Return","src":"8136:30:20"}]}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"6328:208:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:20","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"a","nameLocation":"6563:1:20","nodeType":"VariableDeclaration","scope":3587,"src":"6555:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:20"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"6589:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:20"},"scope":4083,"src":"6541:1642:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3622,"nodeType":"Block","src":"8359:161:20","statements":[{"id":3621,"nodeType":"UncheckedBlock","src":"8369:145:20","statements":[{"assignments":[3599],"declarations":[{"constant":false,"id":3599,"mutability":"mutable","name":"result","nameLocation":"8401:6:20","nodeType":"VariableDeclaration","scope":3621,"src":"8393:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3603,"initialValue":{"arguments":[{"id":3601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"8415:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3600,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3587,3623],"referencedDeclaration":3587,"src":"8410:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"8438:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"8448:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3606,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"8460:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3224_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"8460:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"8475:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"8484:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"8493:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:20","trueExpression":{"hexValue":"31","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3597,"id":3620,"nodeType":"Return","src":"8431:72:20"}]}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"8189:89:20","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3623,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:20","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"a","nameLocation":"8305:1:20","nodeType":"VariableDeclaration","scope":3623,"src":"8297:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:20","nodeType":"VariableDeclaration","scope":3623,"src":"8308:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3592,"nodeType":"UserDefinedTypeName","pathNode":{"id":3591,"name":"Rounding","nameLocations":["8308:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3224,"src":"8308:8:20"},"referencedDeclaration":3224,"src":"8308:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:20"},"returnParameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3623,"src":"8350:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:20"},"scope":4083,"src":"8283:237:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3754,"nodeType":"Block","src":"8705:922:20","statements":[{"assignments":[3632],"declarations":[{"constant":false,"id":3632,"mutability":"mutable","name":"result","nameLocation":"8723:6:20","nodeType":"VariableDeclaration","scope":3754,"src":"8715:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3634,"initialValue":{"hexValue":"30","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:20"},{"id":3751,"nodeType":"UncheckedBlock","src":"8743:855:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"8771:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3649,"nodeType":"IfStatement","src":"8767:99:20","trueBody":{"id":3648,"nodeType":"Block","src":"8789:77:20","statements":[{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"8807:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3643,"nodeType":"ExpressionStatement","src":"8807:13:20"},{"expression":{"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"8838:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3647,"nodeType":"ExpressionStatement","src":"8838:13:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"8883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3664,"nodeType":"IfStatement","src":"8879:96:20","trueBody":{"id":3663,"nodeType":"Block","src":"8900:75:20","statements":[{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"8918:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"8918:12:20"},{"expression":{"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"8948:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3662,"nodeType":"ExpressionStatement","src":"8948:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"8992:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3679,"nodeType":"IfStatement","src":"8988:96:20","trueBody":{"id":3678,"nodeType":"Block","src":"9009:75:20","statements":[{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9027:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ExpressionStatement","src":"9027:12:20"},{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ExpressionStatement","src":"9057:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9101:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3694,"nodeType":"IfStatement","src":"9097:96:20","trueBody":{"id":3693,"nodeType":"Block","src":"9118:75:20","statements":[{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9136:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ExpressionStatement","src":"9136:12:20"},{"expression":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9166:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3692,"nodeType":"ExpressionStatement","src":"9166:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9210:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"nodeType":"IfStatement","src":"9206:93:20","trueBody":{"id":3708,"nodeType":"Block","src":"9226:73:20","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9244:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3703,"nodeType":"ExpressionStatement","src":"9244:11:20"},{"expression":{"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9273:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ExpressionStatement","src":"9273:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9316:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"9312:93:20","trueBody":{"id":3723,"nodeType":"Block","src":"9332:73:20","statements":[{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9350:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"9350:11:20"},{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9379:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ExpressionStatement","src":"9379:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9422:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3739,"nodeType":"IfStatement","src":"9418:93:20","trueBody":{"id":3738,"nodeType":"Block","src":"9438:73:20","statements":[{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"9456:11:20"},{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9485:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3737,"nodeType":"ExpressionStatement","src":"9485:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"9528:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"nodeType":"IfStatement","src":"9524:64:20","trueBody":{"id":3749,"nodeType":"Block","src":"9544:44:20","statements":[{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9562:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"9562:11:20"}]}}]},{"expression":{"id":3752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"9614:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3630,"id":3753,"nodeType":"Return","src":"9607:13:20"}]},"documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"8526:113:20","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:20","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"value","nameLocation":"8666:5:20","nodeType":"VariableDeclaration","scope":3755,"src":"8658:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:20"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"8696:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:20"},"scope":4083,"src":"8644:983:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3790,"nodeType":"Block","src":"9860:165:20","statements":[{"id":3789,"nodeType":"UncheckedBlock","src":"9870:149:20","statements":[{"assignments":[3767],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"result","nameLocation":"9902:6:20","nodeType":"VariableDeclaration","scope":3789,"src":"9894:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3771,"initialValue":{"arguments":[{"id":3769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9916:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3768,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3755,3791],"referencedDeclaration":3755,"src":"9911:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9943:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"9953:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3774,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"9965:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3224_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"9965:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9985:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9994:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:20","trueExpression":{"hexValue":"31","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3765,"id":3788,"nodeType":"Return","src":"9936:72:20"}]}]},"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"9633:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:20","nodeType":"FunctionDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"value","nameLocation":"9802:5:20","nodeType":"VariableDeclaration","scope":3791,"src":"9794:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:20","nodeType":"VariableDeclaration","scope":3791,"src":"9809:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3760,"nodeType":"UserDefinedTypeName","pathNode":{"id":3759,"name":"Rounding","nameLocations":["9809:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3224,"src":"9809:8:20"},"referencedDeclaration":3224,"src":"9809:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:20"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3791,"src":"9851:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:20"},"scope":4083,"src":"9780:245:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3919,"nodeType":"Block","src":"10212:854:20","statements":[{"assignments":[3800],"declarations":[{"constant":false,"id":3800,"mutability":"mutable","name":"result","nameLocation":"10230:6:20","nodeType":"VariableDeclaration","scope":3919,"src":"10222:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3802,"initialValue":{"hexValue":"30","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:20"},{"id":3916,"nodeType":"UncheckedBlock","src":"10250:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10278:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3819,"nodeType":"IfStatement","src":"10274:103:20","trueBody":{"id":3818,"nodeType":"Block","src":"10297:80:20","statements":[{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10315:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ExpressionStatement","src":"10315:17:20"},{"expression":{"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10350:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"nodeType":"ExpressionStatement","src":"10350:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10394:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"nodeType":"IfStatement","src":"10390:103:20","trueBody":{"id":3835,"nodeType":"Block","src":"10413:80:20","statements":[{"expression":{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10431:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"nodeType":"ExpressionStatement","src":"10431:17:20"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10466:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ExpressionStatement","src":"10466:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10510:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3853,"nodeType":"IfStatement","src":"10506:103:20","trueBody":{"id":3852,"nodeType":"Block","src":"10529:80:20","statements":[{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10547:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"10547:17:20"},{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10582:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"10582:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10626:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3870,"nodeType":"IfStatement","src":"10622:100:20","trueBody":{"id":3869,"nodeType":"Block","src":"10644:78:20","statements":[{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10662:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"10662:16:20"},{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10696:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"10696:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10739:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3887,"nodeType":"IfStatement","src":"10735:100:20","trueBody":{"id":3886,"nodeType":"Block","src":"10757:78:20","statements":[{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10775:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"10775:16:20"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10809:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"10809:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3904,"nodeType":"IfStatement","src":"10848:100:20","trueBody":{"id":3903,"nodeType":"Block","src":"10870:78:20","statements":[{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"10888:16:20"},{"expression":{"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10922:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3902,"nodeType":"ExpressionStatement","src":"10922:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"10965:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"10961:66:20","trueBody":{"id":3914,"nodeType":"Block","src":"10983:44:20","statements":[{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"11001:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3913,"nodeType":"ExpressionStatement","src":"11001:11:20"}]}}]},{"expression":{"id":3917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"11053:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3798,"id":3918,"nodeType":"Return","src":"11046:13:20"}]},"documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"10031:114:20","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:20","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"value","nameLocation":"10173:5:20","nodeType":"VariableDeclaration","scope":3920,"src":"10165:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:20"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3920,"src":"10203:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:20"},"scope":4083,"src":"10150:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3955,"nodeType":"Block","src":"11301:167:20","statements":[{"id":3954,"nodeType":"UncheckedBlock","src":"11311:151:20","statements":[{"assignments":[3932],"declarations":[{"constant":false,"id":3932,"mutability":"mutable","name":"result","nameLocation":"11343:6:20","nodeType":"VariableDeclaration","scope":3954,"src":"11335:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3936,"initialValue":{"arguments":[{"id":3934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"11358:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3933,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3920,3956],"referencedDeclaration":3920,"src":"11352:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"11385:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11395:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3939,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"11407:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3224_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"11407:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"11428:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"11437:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:20","trueExpression":{"hexValue":"31","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3930,"id":3953,"nodeType":"Return","src":"11378:73:20"}]}]},"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"11072:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3956,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:20","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"value","nameLocation":"11243:5:20","nodeType":"VariableDeclaration","scope":3956,"src":"11235:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:20","nodeType":"VariableDeclaration","scope":3956,"src":"11250:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3925,"nodeType":"UserDefinedTypeName","pathNode":{"id":3924,"name":"Rounding","nameLocations":["11250:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3224,"src":"11250:8:20"},"referencedDeclaration":3224,"src":"11250:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:20"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3956,"src":"11292:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:20"},"scope":4083,"src":"11220:248:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4042,"nodeType":"Block","src":"11782:600:20","statements":[{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"result","nameLocation":"11800:6:20","nodeType":"VariableDeclaration","scope":4042,"src":"11792:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3967,"initialValue":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:20"},{"id":4039,"nodeType":"UncheckedBlock","src":"11820:533:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"11848:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3982,"nodeType":"IfStatement","src":"11844:98:20","trueBody":{"id":3981,"nodeType":"Block","src":"11866:76:20","statements":[{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"11884:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"11884:13:20"},{"expression":{"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"11915:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3980,"nodeType":"ExpressionStatement","src":"11915:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"11959:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3997,"nodeType":"IfStatement","src":"11955:95:20","trueBody":{"id":3996,"nodeType":"Block","src":"11976:74:20","statements":[{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"11994:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ExpressionStatement","src":"11994:12:20"},{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12024:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3995,"nodeType":"ExpressionStatement","src":"12024:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"12067:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4012,"nodeType":"IfStatement","src":"12063:95:20","trueBody":{"id":4011,"nodeType":"Block","src":"12084:74:20","statements":[{"expression":{"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"12102:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4006,"nodeType":"ExpressionStatement","src":"12102:12:20"},{"expression":{"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12132:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4010,"nodeType":"ExpressionStatement","src":"12132:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"12175:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"IfStatement","src":"12171:95:20","trueBody":{"id":4026,"nodeType":"Block","src":"12192:74:20","statements":[{"expression":{"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"12210:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"nodeType":"ExpressionStatement","src":"12210:12:20"},{"expression":{"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12240:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4025,"nodeType":"ExpressionStatement","src":"12240:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"12283:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4038,"nodeType":"IfStatement","src":"12279:64:20","trueBody":{"id":4037,"nodeType":"Block","src":"12299:44:20","statements":[{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12317:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"12317:11:20"}]}}]},{"expression":{"id":4040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"12369:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3963,"id":4041,"nodeType":"Return","src":"12362:13:20"}]},"documentation":{"id":3957,"nodeType":"StructuredDocumentation","src":"11474:240:20","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4043,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:20","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"value","nameLocation":"11743:5:20","nodeType":"VariableDeclaration","scope":4043,"src":"11735:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:20"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4043,"src":"11773:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:20"},"scope":4083,"src":"11719:663:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4081,"nodeType":"Block","src":"12619:174:20","statements":[{"id":4080,"nodeType":"UncheckedBlock","src":"12629:158:20","statements":[{"assignments":[4055],"declarations":[{"constant":false,"id":4055,"mutability":"mutable","name":"result","nameLocation":"12661:6:20","nodeType":"VariableDeclaration","scope":4080,"src":"12653:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4059,"initialValue":{"arguments":[{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"12677:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4043,4082],"referencedDeclaration":4043,"src":"12670:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12704:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12714:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4062,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"12726:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3224_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"12726:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"12747:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"12762:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:20","trueExpression":{"hexValue":"31","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4053,"id":4079,"nodeType":"Return","src":"12697:79:20"}]}]},"documentation":{"id":4044,"nodeType":"StructuredDocumentation","src":"12388:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4082,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:20","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"value","nameLocation":"12561:5:20","nodeType":"VariableDeclaration","scope":4082,"src":"12553:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:20","nodeType":"VariableDeclaration","scope":4082,"src":"12568:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":4048,"nodeType":"UserDefinedTypeName","pathNode":{"id":4047,"name":"Rounding","nameLocations":["12568:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3224,"src":"12568:8:20"},"referencedDeclaration":3224,"src":"12568:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3224","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:20"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4082,"src":"12610:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:20"},"scope":4083,"src":"12537:256:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4084,"src":"202:12593:20","usedErrors":[]}],"src":"103:12693:20"},"id":20},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[4188]},"id":4189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4085,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":4086,"nodeType":"StructuredDocumentation","src":"134:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4188,"linearizedBaseContracts":[4188],"name":"SignedMathUpgradeable","nameLocation":"223:21:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4103,"nodeType":"Block","src":"386:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"403:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4097,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"407:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"415:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:21","trueExpression":{"id":4099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"411:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4095,"id":4102,"nodeType":"Return","src":"396:20:21"}]},"documentation":{"id":4087,"nodeType":"StructuredDocumentation","src":"251:66:21","text":" @dev Returns the largest of two signed numbers."},"id":4104,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:21","nodeType":"FunctionDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"a","nameLocation":"342:1:21","nodeType":"VariableDeclaration","scope":4104,"src":"335:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4088,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4091,"mutability":"mutable","name":"b","nameLocation":"352:1:21","nodeType":"VariableDeclaration","scope":4104,"src":"345:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4090,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:21"},"returnParameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4104,"src":"378:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4093,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:21"},"scope":4188,"src":"322:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4121,"nodeType":"Block","src":"565:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"582:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4115,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"586:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"594:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:21","trueExpression":{"id":4117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"590:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4113,"id":4120,"nodeType":"Return","src":"575:20:21"}]},"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"429:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:21","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"a","nameLocation":"521:1:21","nodeType":"VariableDeclaration","scope":4122,"src":"514:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4106,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"b","nameLocation":"531:1:21","nodeType":"VariableDeclaration","scope":4122,"src":"524:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4108,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:21"},"returnParameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4122,"src":"557:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4111,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:21"},"scope":4188,"src":"501:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4165,"nodeType":"Block","src":"807:162:21","statements":[{"assignments":[4133],"declarations":[{"constant":false,"id":4133,"mutability":"mutable","name":"x","nameLocation":"876:1:21","nodeType":"VariableDeclaration","scope":4165,"src":"869:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4132,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4146,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"881:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4135,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"885:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"892:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"896:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"921:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4152,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"941:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:21","typeDescriptions":{}}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4148,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:21","typeDescriptions":{}}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"955:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"959:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4131,"id":4164,"nodeType":"Return","src":"914:48:21"}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"608:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:21","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"a","nameLocation":"763:1:21","nodeType":"VariableDeclaration","scope":4166,"src":"756:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4124,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"b","nameLocation":"773:1:21","nodeType":"VariableDeclaration","scope":4166,"src":"766:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4126,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:21"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"799:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4129,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:21"},"scope":4188,"src":"739:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"1113:158:21","statements":[{"id":4185,"nodeType":"UncheckedBlock","src":"1123:142:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"1238:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:21","subExpression":{"id":4180,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"1252:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:21","trueExpression":{"id":4179,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"1247:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:21","typeDescriptions":{}}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4173,"id":4184,"nodeType":"Return","src":"1223:31:21"}]}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"975:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:21","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"n","nameLocation":"1078:1:21","nodeType":"VariableDeclaration","scope":4187,"src":"1071:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4168,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:21"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4187,"src":"1104:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:21"},"scope":4188,"src":"1058:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4189,"src":"215:1058:21","usedErrors":[]}],"src":"109:1165:21"},"id":21},"contracts/MocaPoints/MocaPoints.sol":{"ast":{"absolutePath":"contracts/MocaPoints/MocaPoints.sol","exportedSymbols":{"AccessControlUpgradeable":[335],"IRealmId":[5277],"Initializable":[1074],"MocaPoints":[5177],"PausableUpgradeable":[1337],"UUPSUpgradeable":[1210]},"id":5178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4190,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"contracts/MocaPoints/interface/IRealmId.sol","file":"./interface/IRealmId.sol","id":4192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5178,"sourceUnit":5278,"src":"57:50:22","symbolAliases":[{"foreign":{"id":4191,"name":"IRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"65:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":4194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5178,"sourceUnit":1338,"src":"108:105:22","symbolAliases":[{"foreign":{"id":4193,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"116:19:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":4196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5178,"sourceUnit":336,"src":"214:113:22","symbolAliases":[{"foreign":{"id":4195,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"222:24:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5178,"sourceUnit":1075,"src":"328:96:22","symbolAliases":[{"foreign":{"id":4197,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"336:13:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5178,"sourceUnit":1211,"src":"425:100:22","symbolAliases":[{"foreign":{"id":4199,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"433:15:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4201,"name":"Initializable","nameLocations":["550:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"550:13:22"},"id":4202,"nodeType":"InheritanceSpecifier","src":"550:13:22"},{"baseName":{"id":4203,"name":"PausableUpgradeable","nameLocations":["565:19:22"],"nodeType":"IdentifierPath","referencedDeclaration":1337,"src":"565:19:22"},"id":4204,"nodeType":"InheritanceSpecifier","src":"565:19:22"},{"baseName":{"id":4205,"name":"AccessControlUpgradeable","nameLocations":["586:24:22"],"nodeType":"IdentifierPath","referencedDeclaration":335,"src":"586:24:22"},"id":4206,"nodeType":"InheritanceSpecifier","src":"586:24:22"},{"baseName":{"id":4207,"name":"UUPSUpgradeable","nameLocations":["612:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"612:15:22"},"id":4208,"nodeType":"InheritanceSpecifier","src":"612:15:22"}],"canonicalName":"MocaPoints","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5177,"linearizedBaseContracts":[5177,1210,895,561,571,335,3205,3217,408,1337,2822,1074],"name":"MocaPoints","nameLocation":"536:10:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":4213,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"658:11:22","nodeType":"VariableDeclaration","scope":5177,"src":"634:62:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"634:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"682:13:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":4210,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"672:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f72c0d8b","id":4218,"mutability":"constant","name":"UPGRADER_ROLE","nameLocation":"726:13:22","nodeType":"VariableDeclaration","scope":5177,"src":"702:66:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"702:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"55504752414445525f524f4c45","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"752:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""},"value":"UPGRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3","typeString":"literal_string \"UPGRADER_ROLE\""}],"id":4215,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"742:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"742:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":4223,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"811:10:22","nodeType":"VariableDeclaration","scope":5177,"src":"787:60:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"787:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"834:12:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":4220,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"824:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"824:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a3b0b5a3","id":4228,"mutability":"constant","name":"DEPOSITOR_ROLE","nameLocation":"877:14:22","nodeType":"VariableDeclaration","scope":5177,"src":"853:68:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"853:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4445504f5349544f525f524f4c45","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"904:16:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""},"value":"DEPOSITOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""}],"id":4225,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"894:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"894:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"bcb39621","id":4230,"mutability":"mutable","name":"currentSeason","nameLocation":"969:13:22","nodeType":"VariableDeclaration","scope":5177,"src":"954:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"954:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"4529cc1b","id":4234,"mutability":"mutable","name":"seasons","nameLocation":"1020:7:22","nodeType":"VariableDeclaration","scope":5177,"src":"988:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":4233,"keyType":{"id":4231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"996:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"988:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":4232,"name":"bool","nodeType":"ElementaryTypeName","src":"1007:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"2b48dc72","id":4237,"mutability":"mutable","name":"realmIdContract","nameLocation":"1089:15:22","nodeType":"VariableDeclaration","scope":5177,"src":"1073:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"},"typeName":{"id":4236,"nodeType":"UserDefinedTypeName","pathNode":{"id":4235,"name":"IRealmId","nameLocations":["1073:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":5277,"src":"1073:8:22"},"referencedDeclaration":5277,"src":"1073:8:22","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"visibility":"public"},{"constant":false,"functionSelector":"fc6f9468","id":4239,"mutability":"mutable","name":"adminAddress","nameLocation":"1147:12:22","nodeType":"VariableDeclaration","scope":5177,"src":"1132:27:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4238,"name":"address","nodeType":"ElementaryTypeName","src":"1132:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4247,"mutability":"mutable","name":"balances","nameLocation":"1266:8:22","nodeType":"VariableDeclaration","scope":5177,"src":"1190:84:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"},"typeName":{"id":4246,"keyType":{"id":4240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1198:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1190:67:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"},"valueType":{"id":4245,"keyType":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1217:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1209:47:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueType":{"id":4244,"keyType":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1236:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1228:27:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"visibility":"private"},{"constant":false,"functionSelector":"141a468c","id":4251,"mutability":"mutable","name":"nonces","nameLocation":"1387:6:22","nodeType":"VariableDeclaration","scope":5177,"src":"1352:41:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":4250,"keyType":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1352:27:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":4255,"mutability":"mutable","name":"allowedConsumeReasonCodes","nameLocation":"1497:25:22","nodeType":"VariableDeclaration","scope":5177,"src":"1464:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":4254,"keyType":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1472:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1464:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":4253,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef31","id":4259,"name":"SetCurrentSeason","nameLocation":"1535:16:22","nodeType":"EventDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"indexed":false,"mutability":"mutable","name":"season","nameLocation":"1560:6:22","nodeType":"VariableDeclaration","scope":4259,"src":"1552:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1552:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1551:16:22"},"src":"1529:39:22"},{"anonymous":false,"eventSelector":"0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e","id":4264,"name":"BatchAddedConsumeReasonCode","nameLocation":"1579:27:22","nodeType":"EventDefinition","parameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"indexed":false,"mutability":"mutable","name":"reasonCodes","nameLocation":"1617:11:22","nodeType":"VariableDeclaration","scope":4264,"src":"1607:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1607:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4261,"nodeType":"ArrayTypeName","src":"1607:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1606:23:22"},"src":"1573:57:22"},{"anonymous":false,"eventSelector":"5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff9","id":4269,"name":"BatchRemovedConsumeReasonCode","nameLocation":"1641:29:22","nodeType":"EventDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"indexed":false,"mutability":"mutable","name":"reasonCodes","nameLocation":"1681:11:22","nodeType":"VariableDeclaration","scope":4269,"src":"1671:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1671:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4266,"nodeType":"ArrayTypeName","src":"1671:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1670:23:22"},"src":"1635:59:22"},{"anonymous":false,"eventSelector":"9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad82","id":4283,"name":"Deposited","nameLocation":"1705:9:22","nodeType":"EventDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1740:6:22","nodeType":"VariableDeclaration","scope":4283,"src":"1724:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4270,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4273,"indexed":true,"mutability":"mutable","name":"season","nameLocation":"1772:6:22","nodeType":"VariableDeclaration","scope":4283,"src":"1756:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1756:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4275,"indexed":true,"mutability":"mutable","name":"reasonCode","nameLocation":"1804:10:22","nodeType":"VariableDeclaration","scope":4283,"src":"1788:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4277,"indexed":false,"mutability":"mutable","name":"realmId","nameLocation":"1832:7:22","nodeType":"VariableDeclaration","scope":4283,"src":"1824:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4279,"indexed":false,"mutability":"mutable","name":"realmIdVersion","nameLocation":"1857:14:22","nodeType":"VariableDeclaration","scope":4283,"src":"1849:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1849:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4281,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1889:6:22","nodeType":"VariableDeclaration","scope":4283,"src":"1881:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:187:22"},"src":"1699:203:22"},{"anonymous":false,"eventSelector":"d1255d580f215da0d3a191d00a885ae4716fac76b5813a6c309919fff6078bd1","id":4301,"name":"Consumed","nameLocation":"1914:8:22","nodeType":"EventDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"indexed":true,"mutability":"mutable","name":"realmId","nameLocation":"1948:7:22","nodeType":"VariableDeclaration","scope":4301,"src":"1932:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4287,"indexed":true,"mutability":"mutable","name":"season","nameLocation":"1981:6:22","nodeType":"VariableDeclaration","scope":4301,"src":"1965:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1965:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4289,"indexed":true,"mutability":"mutable","name":"reasonCode","nameLocation":"2013:10:22","nodeType":"VariableDeclaration","scope":4301,"src":"1997:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1997:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4291,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"2041:8:22","nodeType":"VariableDeclaration","scope":4301,"src":"2033:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4290,"name":"address","nodeType":"ElementaryTypeName","src":"2033:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4293,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2067:5:22","nodeType":"VariableDeclaration","scope":4301,"src":"2059:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4295,"indexed":false,"mutability":"mutable","name":"realmIdVersion","nameLocation":"2090:14:22","nodeType":"VariableDeclaration","scope":4301,"src":"2082:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2082:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4297,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2122:6:22","nodeType":"VariableDeclaration","scope":4301,"src":"2114:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4299,"indexed":false,"mutability":"mutable","name":"realmIdOwner","nameLocation":"2146:12:22","nodeType":"VariableDeclaration","scope":4301,"src":"2138:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1922:242:22"},"src":"1908:257:22"},{"body":{"id":4308,"nodeType":"Block","src":"2238:39:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4305,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2248:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4307,"nodeType":"ExpressionStatement","src":"2248:22:22"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"2171:48:22","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":4309,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[],"src":"2235:2:22"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[],"src":"2238:0:22"},"scope":5177,"src":"2224:53:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4384,"nodeType":"Block","src":"2371:581:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4318,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"2381:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4320,"nodeType":"ExpressionStatement","src":"2381:17:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4321,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"2408:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4323,"nodeType":"ExpressionStatement","src":"2408:22:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4324,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2440:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4326,"nodeType":"ExpressionStatement","src":"2440:24:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4330,"name":"_realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2491:16:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2483:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4328,"name":"address","nodeType":"ElementaryTypeName","src":"2483:7:22","typeDescriptions":{}}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2520:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4332,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:22","typeDescriptions":{}}},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2483:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c696420436f6e74726163742041646472657373","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2524:30:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f","typeString":"literal_string \"Not a valid Contract Address\""},"value":"Not a valid Contract Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f","typeString":"literal_string \"Not a valid Contract Address\""}],"id":4327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2475:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2475:80:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4339,"nodeType":"ExpressionStatement","src":"2475:80:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4343,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2581:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2573:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4341,"name":"address","nodeType":"ElementaryTypeName","src":"2573:7:22","typeDescriptions":{}}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2607:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2599:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4345,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:22","typeDescriptions":{}}},"id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2573:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c69642041646d696e2041646472657373","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2611:27:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f","typeString":"literal_string \"Not a valid Admin Address\""},"value":"Not a valid Admin Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f","typeString":"literal_string \"Not a valid Admin Address\""}],"id":4340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2565:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2565:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4352,"nodeType":"ExpressionStatement","src":"2565:74:22"},{"expression":{"arguments":[{"id":4354,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"2661:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4355,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2681:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4353,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2650:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4357,"nodeType":"ExpressionStatement","src":"2650:45:22"},{"expression":{"arguments":[{"id":4359,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"2716:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4360,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2729:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4358,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2705:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2705:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4362,"nodeType":"ExpressionStatement","src":"2705:38:22"},{"expression":{"arguments":[{"id":4364,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"2764:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4365,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2779:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4363,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2753:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4367,"nodeType":"ExpressionStatement","src":"2753:40:22"},{"expression":{"arguments":[{"id":4369,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"2814:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4370,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2826:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4368,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2803:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4372,"nodeType":"ExpressionStatement","src":"2803:37:22"},{"expression":{"arguments":[{"id":4374,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"2861:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4375,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2877:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4373,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2850:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4377,"nodeType":"ExpressionStatement","src":"2850:41:22"},{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4378,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"2901:15:22","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4380,"name":"_realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2928:16:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4379,"name":"IRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"2919:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRealmId_$5277_$","typeString":"type(contract IRealmId)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"src":"2901:44:22","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"id":4383,"nodeType":"ExpressionStatement","src":"2901:44:22"}]},"functionSelector":"485cc955","id":4385,"implemented":true,"kind":"function","modifiers":[{"id":4316,"kind":"modifierInvocation","modifierName":{"id":4315,"name":"initializer","nameLocations":["2359:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"2359:11:22"},"nodeType":"ModifierInvocation","src":"2359:11:22"}],"name":"initialize","nameLocation":"2292:10:22","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"_realmIdContract","nameLocation":"2311:16:22","nodeType":"VariableDeclaration","scope":4385,"src":"2303:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4310,"name":"address","nodeType":"ElementaryTypeName","src":"2303:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"_adminAddress","nameLocation":"2337:13:22","nodeType":"VariableDeclaration","scope":4385,"src":"2329:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4312,"name":"address","nodeType":"ElementaryTypeName","src":"2329:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2302:49:22"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[],"src":"2371:0:22"},"scope":5177,"src":"2283:669:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1204],"body":{"id":4394,"nodeType":"Block","src":"3054:2:22","statements":[]},"id":4395,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4391,"name":"UPGRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"3039:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4392,"kind":"modifierInvocation","modifierName":{"id":4390,"name":"onlyRole","nameLocations":["3030:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"3030:8:22"},"nodeType":"ModifierInvocation","src":"3030:23:22"}],"name":"_authorizeUpgrade","nameLocation":"2967:17:22","nodeType":"FunctionDefinition","overrides":{"id":4389,"nodeType":"OverrideSpecifier","overrides":[],"src":"3021:8:22"},"parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"newImplementation","nameLocation":"2993:17:22","nodeType":"VariableDeclaration","scope":4395,"src":"2985:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2984:27:22"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[],"src":"3054:0:22"},"scope":5177,"src":"2958:98:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"3083:84:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":4399,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"3109:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3121:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3125:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3121:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4398,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3101:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3101:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616e2061646d696e","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3134:14:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","typeString":"literal_string \"Not an admin\""},"value":"Not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","typeString":"literal_string \"Not an admin\""}],"id":4397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3093:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4405,"nodeType":"ExpressionStatement","src":"3093:56:22"},{"id":4406,"nodeType":"PlaceholderStatement","src":"3159:1:22"}]},"id":4408,"name":"onlyAdmin","nameLocation":"3071:9:22","nodeType":"ModifierDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[],"src":"3080:2:22"},"src":"3062:105:22","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"3198:91:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":4412,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"3224:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3240:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3244:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3240:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4411,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"3216:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061206465706f7369746f72","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3253:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""},"value":"Not a depositor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""}],"id":4410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3208:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4418,"nodeType":"ExpressionStatement","src":"3208:63:22"},{"id":4419,"nodeType":"PlaceholderStatement","src":"3281:1:22"}]},"id":4421,"name":"onlyDepositor","nameLocation":"3182:13:22","nodeType":"ModifierDefinition","parameters":{"id":4409,"nodeType":"ParameterList","parameters":[],"src":"3195:2:22"},"src":"3173:116:22","virtual":false,"visibility":"internal"},{"body":{"id":4430,"nodeType":"Block","src":"3341:25:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4427,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3351:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3351:8:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4429,"nodeType":"ExpressionStatement","src":"3351:8:22"}]},"functionSelector":"8456cb59","id":4431,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4424,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"3328:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4425,"kind":"modifierInvocation","modifierName":{"id":4423,"name":"onlyRole","nameLocations":["3319:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"3319:8:22"},"nodeType":"ModifierInvocation","src":"3319:21:22"}],"name":"pause","nameLocation":"3304:5:22","nodeType":"FunctionDefinition","parameters":{"id":4422,"nodeType":"ParameterList","parameters":[],"src":"3309:2:22"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[],"src":"3341:0:22"},"scope":5177,"src":"3295:71:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4440,"nodeType":"Block","src":"3420:27:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4437,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"3430:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4439,"nodeType":"ExpressionStatement","src":"3430:10:22"}]},"functionSelector":"3f4ba83a","id":4441,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4434,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"3407:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4435,"kind":"modifierInvocation","modifierName":{"id":4433,"name":"onlyRole","nameLocations":["3398:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":53,"src":"3398:8:22"},"nodeType":"ModifierInvocation","src":"3398:21:22"}],"name":"unpause","nameLocation":"3381:7:22","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[],"src":"3388:2:22"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[],"src":"3420:0:22"},"scope":5177,"src":"3372:75:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4470,"nodeType":"Block","src":"3515:171:22","statements":[{"expression":{"arguments":[{"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3533:17:22","subExpression":{"baseExpression":{"id":4449,"name":"seasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"3534:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4451,"indexExpression":{"id":4450,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"3542:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3534:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536561736f6e20616c726561647920736574","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3552:20:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892","typeString":"literal_string \"Season already set\""},"value":"Season already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892","typeString":"literal_string \"Season already set\""}],"id":4448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3525:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3525:48:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4455,"nodeType":"ExpressionStatement","src":"3525:48:22"},{"expression":{"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"3583:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4457,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"3599:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3583:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4459,"nodeType":"ExpressionStatement","src":"3583:23:22"},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4460,"name":"seasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"3616:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4462,"indexExpression":{"id":4461,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"3624:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3616:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3635:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3616:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4465,"nodeType":"ExpressionStatement","src":"3616:23:22"},{"eventCall":{"arguments":[{"id":4467,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"3671:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4466,"name":"SetCurrentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"3654:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3654:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4469,"nodeType":"EmitStatement","src":"3649:30:22"}]},"functionSelector":"86a8e98a","id":4471,"implemented":true,"kind":"function","modifiers":[{"id":4446,"kind":"modifierInvocation","modifierName":{"id":4445,"name":"onlyAdmin","nameLocations":["3505:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":4408,"src":"3505:9:22"},"nodeType":"ModifierInvocation","src":"3505:9:22"}],"name":"setCurrentSeason","nameLocation":"3462:16:22","nodeType":"FunctionDefinition","parameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"_season","nameLocation":"3487:7:22","nodeType":"VariableDeclaration","scope":4471,"src":"3479:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3479:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3478:17:22"},"returnParameters":{"id":4447,"nodeType":"ParameterList","parameters":[],"src":"3515:0:22"},"scope":5177,"src":"3453:233:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4483,"nodeType":"Block","src":"3837:59:22","statements":[{"expression":{"arguments":[{"id":4480,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"3881:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4478,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"3854:15:22","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:22","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":5221,"src":"3854:26:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4477,"id":4482,"nodeType":"Return","src":"3847:42:22"}]},"id":4484,"implemented":true,"kind":"function","modifiers":[],"name":"_getRealmIdVersion","nameLocation":"3769:18:22","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"realmId","nameLocation":"3796:7:22","nodeType":"VariableDeclaration","scope":4484,"src":"3788:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3788:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3787:17:22"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4484,"src":"3828:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3828:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3827:9:22"},"scope":5177,"src":"3760:136:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4495,"nodeType":"Block","src":"3980:61:22","statements":[{"expression":{"baseExpression":{"id":4491,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"3997:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4493,"indexExpression":{"id":4492,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"4023:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3997:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4490,"id":4494,"nodeType":"Return","src":"3990:44:22"}]},"functionSelector":"c0542cfa","id":4496,"implemented":true,"kind":"function","modifiers":[],"name":"isReasonCodeAllowed","nameLocation":"3911:19:22","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"reasonCode","nameLocation":"3939:10:22","nodeType":"VariableDeclaration","scope":4496,"src":"3931:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3931:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3930:20:22"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4496,"src":"3974:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4488,"name":"bool","nodeType":"ElementaryTypeName","src":"3974:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3973:6:22"},"scope":5177,"src":"3902:139:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4511,"nodeType":"Block","src":"4145:69:22","statements":[{"expression":{"arguments":[{"id":4507,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"4189:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4508,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4196:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4505,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"4162:15:22","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4178:10:22","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":5230,"src":"4162:26:22","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4162:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4504,"id":4510,"nodeType":"Return","src":"4155:52:22"}]},"id":4512,"implemented":true,"kind":"function","modifiers":[],"name":"_prepareRealmId","nameLocation":"4056:15:22","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"parentNode","nameLocation":"4080:10:22","nodeType":"VariableDeclaration","scope":4512,"src":"4072:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4072:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"_name","nameLocation":"4106:5:22","nodeType":"VariableDeclaration","scope":4512,"src":"4092:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4499,"name":"string","nodeType":"ElementaryTypeName","src":"4092:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4071:41:22"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4512,"src":"4136:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4136:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4135:9:22"},"scope":5177,"src":"4047:167:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4528,"nodeType":"Block","src":"4356:89:22","statements":[{"assignments":[4520],"declarations":[{"constant":false,"id":4520,"mutability":"mutable","name":"_owner","nameLocation":"4374:6:22","nodeType":"VariableDeclaration","scope":4528,"src":"4366:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4519,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4525,"initialValue":{"arguments":[{"id":4523,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"4407:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4521,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"4383:15:22","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$5277","typeString":"contract IRealmId"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4399:7:22","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":5237,"src":"4383:23:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4366:49:22"},{"expression":{"id":4526,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"4432:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4518,"id":4527,"nodeType":"Return","src":"4425:13:22"}]},"id":4529,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"4301:5:22","nodeType":"FunctionDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"realmId","nameLocation":"4315:7:22","nodeType":"VariableDeclaration","scope":4529,"src":"4307:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4306:17:22"},"returnParameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4529,"src":"4347:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4516,"name":"address","nodeType":"ElementaryTypeName","src":"4347:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4346:9:22"},"scope":5177,"src":"4292:153:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4572,"nodeType":"Block","src":"4537:438:22","statements":[{"body":{"id":4566,"nodeType":"Block","src":"4671:170:22","statements":[{"expression":{"arguments":[{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4693:43:22","subExpression":{"baseExpression":{"id":4549,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"4694:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4553,"indexExpression":{"baseExpression":{"id":4550,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4720:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4552,"indexExpression":{"id":4551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"4733:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4720:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4694:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526561736f6e20636f646520616c726561647920657869737473","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4738:28:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a","typeString":"literal_string \"Reason code already exists\""},"value":"Reason code already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a","typeString":"literal_string \"Reason code already exists\""}],"id":4548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4685:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:82:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4557,"nodeType":"ExpressionStatement","src":"4685:82:22"},{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4558,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"4781:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4562,"indexExpression":{"baseExpression":{"id":4559,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4807:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4561,"indexExpression":{"id":4560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"4820:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4807:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4781:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4826:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4781:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4565,"nodeType":"ExpressionStatement","src":"4781:49:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"4641:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4542,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4645:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4658:6:22","memberName":"length","nodeType":"MemberAccess","src":"4645:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4641:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4567,"initializationExpression":{"assignments":[4538],"declarations":[{"constant":false,"id":4538,"mutability":"mutable","name":"i","nameLocation":"4634:1:22","nodeType":"VariableDeclaration","scope":4567,"src":"4626:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"4626:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4540,"initialValue":{"hexValue":"30","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4638:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4626:13:22"},"loopExpression":{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4666:3:22","subExpression":{"id":4545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"4666:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"4666:3:22"},"nodeType":"ForStatement","src":"4621:220:22"},{"eventCall":{"arguments":[{"id":4569,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"4955:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4568,"name":"BatchAddedConsumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"4927:27:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4927:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4571,"nodeType":"EmitStatement","src":"4922:46:22"}]},"functionSelector":"3f30b00f","id":4573,"implemented":true,"kind":"function","modifiers":[{"id":4535,"kind":"modifierInvocation","modifierName":{"id":4534,"name":"onlyAdmin","nameLocations":["4527:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":4408,"src":"4527:9:22"},"nodeType":"ModifierInvocation","src":"4527:9:22"}],"name":"batchAddConsumeReasonCodes","nameLocation":"4460:26:22","nodeType":"FunctionDefinition","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"_reasonCodes","nameLocation":"4504:12:22","nodeType":"VariableDeclaration","scope":4573,"src":"4487:29:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4487:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4531,"nodeType":"ArrayTypeName","src":"4487:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4486:31:22"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[],"src":"4537:0:22"},"scope":5177,"src":"4451:524:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4605,"nodeType":"Block","src":"5070:488:22","statements":[{"body":{"id":4599,"nodeType":"Block","src":"5193:227:22","statements":[{"expression":{"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5360:49:22","subExpression":{"baseExpression":{"id":4592,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"5367:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4596,"indexExpression":{"baseExpression":{"id":4593,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"5393:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4595,"indexExpression":{"id":4594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"5406:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5393:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5367:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4598,"nodeType":"ExpressionStatement","src":"5360:49:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"5163:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4586,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"5167:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5180:6:22","memberName":"length","nodeType":"MemberAccess","src":"5167:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5163:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4600,"initializationExpression":{"assignments":[4582],"declarations":[{"constant":false,"id":4582,"mutability":"mutable","name":"i","nameLocation":"5156:1:22","nodeType":"VariableDeclaration","scope":4600,"src":"5148:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4584,"initialValue":{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5160:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5148:13:22"},"loopExpression":{"expression":{"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5188:3:22","subExpression":{"id":4589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"5188:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ExpressionStatement","src":"5188:3:22"},"nodeType":"ForStatement","src":"5143:277:22"},{"eventCall":{"arguments":[{"id":4602,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"5538:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4601,"name":"BatchRemovedConsumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"5508:29:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5508:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"EmitStatement","src":"5503:48:22"}]},"functionSelector":"906405a3","id":4606,"implemented":true,"kind":"function","modifiers":[{"id":4579,"kind":"modifierInvocation","modifierName":{"id":4578,"name":"onlyAdmin","nameLocations":["5060:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":4408,"src":"5060:9:22"},"nodeType":"ModifierInvocation","src":"5060:9:22"}],"name":"batchRemoveConsumeReasonCodes","nameLocation":"4990:29:22","nodeType":"FunctionDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4576,"mutability":"mutable","name":"_reasonCodes","nameLocation":"5037:12:22","nodeType":"VariableDeclaration","scope":4606,"src":"5020:29:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5020:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4575,"nodeType":"ArrayTypeName","src":"5020:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5019:31:22"},"returnParameters":{"id":4580,"nodeType":"ParameterList","parameters":[],"src":"5070:0:22"},"scope":5177,"src":"4981:577:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4639,"nodeType":"Block","src":"5691:240:22","statements":[{"expression":{"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4619,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"5742:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":4623,"indexExpression":{"id":4620,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"5751:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5742:16:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":4624,"indexExpression":{"id":4621,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5759:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5742:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4625,"indexExpression":{"id":4622,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5768:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5742:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4626,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"5787:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5742:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4628,"nodeType":"ExpressionStatement","src":"5742:51:22"},{"eventCall":{"arguments":[{"expression":{"id":4630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5853:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5857:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5853:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4632,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"5865:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4633,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"5873:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4634,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5892:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4635,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5901:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"5917:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4629,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"5843:9:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,uint256,uint256,uint256)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5843:81:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4638,"nodeType":"EmitStatement","src":"5838:86:22"}]},"id":4640,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"5573:8:22","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"season","nameLocation":"5590:6:22","nodeType":"VariableDeclaration","scope":4640,"src":"5582:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5582:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"realmId","nameLocation":"5606:7:22","nodeType":"VariableDeclaration","scope":4640,"src":"5598:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5598:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"realmIdVersion","nameLocation":"5623:14:22","nodeType":"VariableDeclaration","scope":4640,"src":"5615:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"5615:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"amount","nameLocation":"5647:6:22","nodeType":"VariableDeclaration","scope":4640,"src":"5639:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"5639:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"depositReasonCode","nameLocation":"5663:17:22","nodeType":"VariableDeclaration","scope":4640,"src":"5655:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5655:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5581:100:22"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[],"src":"5691:0:22"},"scope":5177,"src":"5564:367:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4672,"nodeType":"Block","src":"6077:293:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":4657,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"6157:14:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6173:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6177:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6173:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4656,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"6149:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061206465706f7369746f72","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6186:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""},"value":"Not a depositor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""}],"id":4655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6141:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4663,"nodeType":"ExpressionStatement","src":"6141:63:22"},{"expression":{"arguments":[{"id":4665,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"6304:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4666,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"6312:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4667,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"6321:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"6337:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4669,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"6345:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4664,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"6295:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,bytes32)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4671,"nodeType":"ExpressionStatement","src":"6295:68:22"}]},"functionSelector":"18ee89f0","id":4673,"implemented":true,"kind":"function","modifiers":[{"id":4653,"kind":"modifierInvocation","modifierName":{"id":4652,"name":"onlyDepositor","nameLocations":["6063:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":4421,"src":"6063:13:22"},"nodeType":"ModifierInvocation","src":"6063:13:22"}],"name":"deposit","nameLocation":"5946:7:22","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"season","nameLocation":"5962:6:22","nodeType":"VariableDeclaration","scope":4673,"src":"5954:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5954:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4644,"mutability":"mutable","name":"realmId","nameLocation":"5978:7:22","nodeType":"VariableDeclaration","scope":4673,"src":"5970:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5970:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4646,"mutability":"mutable","name":"realmIdVersion","nameLocation":"5995:14:22","nodeType":"VariableDeclaration","scope":4673,"src":"5987:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"5987:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"amount","nameLocation":"6019:6:22","nodeType":"VariableDeclaration","scope":4673,"src":"6011:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"6011:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"depositReasonCode","nameLocation":"6035:17:22","nodeType":"VariableDeclaration","scope":4673,"src":"6027:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6027:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5953:100:22"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[],"src":"6077:0:22"},"scope":5177,"src":"5937:433:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4705,"nodeType":"Block","src":"6607:283:22","statements":[{"assignments":[4691],"declarations":[{"constant":false,"id":4691,"mutability":"mutable","name":"realmId","nameLocation":"6681:7:22","nodeType":"VariableDeclaration","scope":4705,"src":"6673:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6673:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4696,"initialValue":{"arguments":[{"id":4693,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"6707:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4694,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"6719:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4692,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6691:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6691:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6673:51:22"},{"expression":{"arguments":[{"id":4698,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6824:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4699,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"6832:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4700,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"6841:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"6857:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4702,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"6865:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4697,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"6815:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,bytes32)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4704,"nodeType":"ExpressionStatement","src":"6815:68:22"}]},"functionSelector":"3b17f056","id":4706,"implemented":true,"kind":"function","modifiers":[{"id":4688,"kind":"modifierInvocation","modifierName":{"id":4687,"name":"onlyDepositor","nameLocations":["6593:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":4421,"src":"6593:13:22"},"nodeType":"ModifierInvocation","src":"6593:13:22"}],"name":"depositWithParentnode","nameLocation":"6385:21:22","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"season","nameLocation":"6424:6:22","nodeType":"VariableDeclaration","scope":4706,"src":"6416:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6416:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"parentNode","nameLocation":"6448:10:22","nodeType":"VariableDeclaration","scope":4706,"src":"6440:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6440:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"name","nameLocation":"6482:4:22","nodeType":"VariableDeclaration","scope":4706,"src":"6468:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4678,"name":"string","nodeType":"ElementaryTypeName","src":"6468:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"realmIdVersion","nameLocation":"6504:14:22","nodeType":"VariableDeclaration","scope":4706,"src":"6496:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6496:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"amount","nameLocation":"6536:6:22","nodeType":"VariableDeclaration","scope":4706,"src":"6528:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"6528:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"depositReasonCode","nameLocation":"6560:17:22","nodeType":"VariableDeclaration","scope":4706,"src":"6552:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6552:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6406:177:22"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[],"src":"6607:0:22"},"scope":5177,"src":"6376:514:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4744,"nodeType":"Block","src":"7148:161:22","statements":[{"assignments":[4728],"declarations":[{"constant":false,"id":4728,"mutability":"mutable","name":"messageHash","nameLocation":"7166:11:22","nodeType":"VariableDeclaration","scope":4744,"src":"7158:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7158:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4736,"initialValue":{"arguments":[{"id":4730,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"7196:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4731,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"7205:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"7221:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4733,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"7229:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4734,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"7236:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4729,"name":"_preparePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"7180:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256,uint256,bytes32) view returns (bytes32)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7180:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7158:96:22"},{"expression":{"arguments":[{"id":4738,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"7281:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4739,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"7294:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4740,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"7297:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4741,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"7300:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4737,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"7271:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7271:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4726,"id":4743,"nodeType":"Return","src":"7264:38:22"}]},"id":4745,"implemented":true,"kind":"function","modifiers":[],"name":"_getSigner","nameLocation":"6905:10:22","nodeType":"FunctionDefinition","parameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"realmId","nameLocation":"6933:7:22","nodeType":"VariableDeclaration","scope":4745,"src":"6925:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"6925:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4710,"mutability":"mutable","name":"realmIdVersion","nameLocation":"6958:14:22","nodeType":"VariableDeclaration","scope":4745,"src":"6950:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"6950:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4712,"mutability":"mutable","name":"amount","nameLocation":"6990:6:22","nodeType":"VariableDeclaration","scope":4745,"src":"6982:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"6982:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"nonce","nameLocation":"7014:5:22","nodeType":"VariableDeclaration","scope":4745,"src":"7006:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"7006:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4716,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"7037:17:22","nodeType":"VariableDeclaration","scope":4745,"src":"7029:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7029:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"v","nameLocation":"7070:1:22","nodeType":"VariableDeclaration","scope":4745,"src":"7064:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4717,"name":"uint8","nodeType":"ElementaryTypeName","src":"7064:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"r","nameLocation":"7089:1:22","nodeType":"VariableDeclaration","scope":4745,"src":"7081:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7081:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"s","nameLocation":"7108:1:22","nodeType":"VariableDeclaration","scope":4745,"src":"7100:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7100:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6915:200:22"},"returnParameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4745,"src":"7139:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4724,"name":"address","nodeType":"ElementaryTypeName","src":"7139:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7138:9:22"},"scope":5177,"src":"6896:413:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"7446:369:22","statements":[{"assignments":[4761],"declarations":[{"constant":false,"id":4761,"mutability":"mutable","name":"realmIdVersion","nameLocation":"7464:14:22","nodeType":"VariableDeclaration","scope":4802,"src":"7456:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4765,"initialValue":{"arguments":[{"id":4763,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"7500:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4762,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"7481:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7456:52:22"},{"assignments":[4767],"declarations":[{"constant":false,"id":4767,"mutability":"mutable","name":"signer","nameLocation":"7526:6:22","nodeType":"VariableDeclaration","scope":4802,"src":"7518:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4766,"name":"address","nodeType":"ElementaryTypeName","src":"7518:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4780,"initialValue":{"arguments":[{"id":4769,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"7546:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4770,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"7555:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4771,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"7571:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4772,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"7579:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4774,"indexExpression":{"id":4773,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"7586:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7579:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4775,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"7596:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4776,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"7615:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4777,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"7618:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4778,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"7621:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4768,"name":"_getSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"7535:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (uint256,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32) view returns (address)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:88:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7518:105:22"},{"assignments":[4782],"declarations":[{"constant":false,"id":4782,"mutability":"mutable","name":"owner_","nameLocation":"7641:6:22","nodeType":"VariableDeclaration","scope":4802,"src":"7633:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4781,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4786,"initialValue":{"arguments":[{"id":4784,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"7656:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4783,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"7650:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7650:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7633:31:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"7682:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4789,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"7692:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7682:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6572206e6f74206f776e6572206f66207265616c6d4964","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7700:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""},"value":"Signer not owner of realmId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""}],"id":4787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7674:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4793,"nodeType":"ExpressionStatement","src":"7674:56:22"},{"expression":{"arguments":[{"id":4795,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"7749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4796,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"7758:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4797,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"7774:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4798,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"7782:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4799,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"7801:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4794,"name":"_consume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"7740:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,bytes32,address)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7740:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4801,"nodeType":"ExpressionStatement","src":"7740:68:22"}]},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"_consumeWithSignature","nameLocation":"7324:21:22","nodeType":"FunctionDefinition","parameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"realmId","nameLocation":"7354:7:22","nodeType":"VariableDeclaration","scope":4803,"src":"7346:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"7346:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"amount","nameLocation":"7371:6:22","nodeType":"VariableDeclaration","scope":4803,"src":"7363:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"7387:17:22","nodeType":"VariableDeclaration","scope":4803,"src":"7379:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7379:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4753,"mutability":"mutable","name":"v","nameLocation":"7412:1:22","nodeType":"VariableDeclaration","scope":4803,"src":"7406:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4752,"name":"uint8","nodeType":"ElementaryTypeName","src":"7406:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4755,"mutability":"mutable","name":"r","nameLocation":"7423:1:22","nodeType":"VariableDeclaration","scope":4803,"src":"7415:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7415:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4757,"mutability":"mutable","name":"s","nameLocation":"7434:1:22","nodeType":"VariableDeclaration","scope":4803,"src":"7426:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7426:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7345:91:22"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[],"src":"7446:0:22"},"scope":5177,"src":"7315:500:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4865,"nodeType":"Block","src":"7948:676:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4817,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"8016:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":4819,"indexExpression":{"id":4818,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"8025:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8016:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":4821,"indexExpression":{"id":4820,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"8040:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8016:32:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4823,"indexExpression":{"id":4822,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8049:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8016:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4824,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8068:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8016:58:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8076:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8008:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:91:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4828,"nodeType":"ExpressionStatement","src":"8008:91:22"},{"expression":{"arguments":[{"baseExpression":{"id":4830,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"8194:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":4832,"indexExpression":{"id":4831,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"8220:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8194:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e73756d6520726561736f6e20636f6465","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8240:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b","typeString":"literal_string \"Invalid consume reason code\""},"value":"Invalid consume reason code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b","typeString":"literal_string \"Invalid consume reason code\""}],"id":4829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8186:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8186:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"8186:84:22"},{"expression":{"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4836,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"8322:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":4840,"indexExpression":{"id":4837,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"8331:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8322:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":4841,"indexExpression":{"id":4838,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"8346:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8322:32:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4842,"indexExpression":{"id":4839,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8355:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8322:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8322:58:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4845,"nodeType":"ExpressionStatement","src":"8322:58:22"},{"eventCall":{"arguments":[{"id":4847,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"8440:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4848,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"8449:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4849,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"8464:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8483:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8487:6:22","memberName":"sender","nodeType":"MemberAccess","src":"8483:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4852,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"8495:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4854,"indexExpression":{"id":4853,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"8502:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8495:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4855,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"8512:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8528:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4857,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"8536:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4846,"name":"Consumed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"8431:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,bytes32,address,uint256,uint256,uint256,address)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:112:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4859,"nodeType":"EmitStatement","src":"8426:117:22"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8600:17:22","subExpression":{"baseExpression":{"id":4860,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"8600:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4862,"indexExpression":{"id":4861,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"8607:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8600:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"8600:17:22"}]},"id":4866,"implemented":true,"kind":"function","modifiers":[],"name":"_consume","nameLocation":"7830:8:22","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"realmId","nameLocation":"7847:7:22","nodeType":"VariableDeclaration","scope":4866,"src":"7839:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"7839:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"realmIdVersion","nameLocation":"7864:14:22","nodeType":"VariableDeclaration","scope":4866,"src":"7856:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"7856:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"amount","nameLocation":"7888:6:22","nodeType":"VariableDeclaration","scope":4866,"src":"7880:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7880:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"7904:17:22","nodeType":"VariableDeclaration","scope":4866,"src":"7896:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7896:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4813,"mutability":"mutable","name":"owner_","nameLocation":"7931:6:22","nodeType":"VariableDeclaration","scope":4866,"src":"7923:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4812,"name":"address","nodeType":"ElementaryTypeName","src":"7923:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7838:100:22"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[],"src":"7948:0:22"},"scope":5177,"src":"7821:803:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"8850:199:22","statements":[{"assignments":[4884],"declarations":[{"constant":false,"id":4884,"mutability":"mutable","name":"realmId","nameLocation":"8921:7:22","nodeType":"VariableDeclaration","scope":4899,"src":"8913:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"8913:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4889,"initialValue":{"arguments":[{"id":4886,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8947:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4887,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"8959:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4885,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"8931:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8931:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8913:52:22"},{"expression":{"arguments":[{"id":4891,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"8998:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4892,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"9007:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4893,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"9015:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4894,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"9034:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4895,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"9037:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4896,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"9040:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4890,"name":"_consumeWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"8976:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32,uint8,bytes32,bytes32)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4898,"nodeType":"ExpressionStatement","src":"8976:66:22"}]},"functionSelector":"275e79ff","id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"consumeWithParentnodeVRS","nameLocation":"8639:24:22","nodeType":"FunctionDefinition","parameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"parentNode","nameLocation":"8681:10:22","nodeType":"VariableDeclaration","scope":4900,"src":"8673:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8673:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"_name","nameLocation":"8715:5:22","nodeType":"VariableDeclaration","scope":4900,"src":"8701:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4869,"name":"string","nodeType":"ElementaryTypeName","src":"8701:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4872,"mutability":"mutable","name":"amount","nameLocation":"8738:6:22","nodeType":"VariableDeclaration","scope":4900,"src":"8730:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"8730:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"8762:17:22","nodeType":"VariableDeclaration","scope":4900,"src":"8754:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8754:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4876,"mutability":"mutable","name":"v","nameLocation":"8795:1:22","nodeType":"VariableDeclaration","scope":4900,"src":"8789:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4875,"name":"uint8","nodeType":"ElementaryTypeName","src":"8789:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4878,"mutability":"mutable","name":"r","nameLocation":"8814:1:22","nodeType":"VariableDeclaration","scope":4900,"src":"8806:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8806:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"s","nameLocation":"8833:1:22","nodeType":"VariableDeclaration","scope":4900,"src":"8825:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8825:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8663:177:22"},"returnParameters":{"id":4882,"nodeType":"ParameterList","parameters":[],"src":"8850:0:22"},"scope":5177,"src":"8630:419:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4924,"nodeType":"Block","src":"9186:83:22","statements":[{"expression":{"arguments":[{"id":4916,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"9218:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4917,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"9227:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4918,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"9235:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4919,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"9254:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4920,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"9257:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4921,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"9260:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4915,"name":"_consumeWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"9196:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32,uint8,bytes32,bytes32)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9196:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4923,"nodeType":"ExpressionStatement","src":"9196:66:22"}]},"functionSelector":"ffd39e84","id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"consumeWithRealmIdVRS","nameLocation":"9064:21:22","nodeType":"FunctionDefinition","parameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"realmId","nameLocation":"9094:7:22","nodeType":"VariableDeclaration","scope":4925,"src":"9086:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9086:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"amount","nameLocation":"9111:6:22","nodeType":"VariableDeclaration","scope":4925,"src":"9103:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"9103:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4906,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"9127:17:22","nodeType":"VariableDeclaration","scope":4925,"src":"9119:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9119:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4908,"mutability":"mutable","name":"v","nameLocation":"9152:1:22","nodeType":"VariableDeclaration","scope":4925,"src":"9146:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4907,"name":"uint8","nodeType":"ElementaryTypeName","src":"9146:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4910,"mutability":"mutable","name":"r","nameLocation":"9163:1:22","nodeType":"VariableDeclaration","scope":4925,"src":"9155:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9155:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4912,"mutability":"mutable","name":"s","nameLocation":"9174:1:22","nodeType":"VariableDeclaration","scope":4925,"src":"9166:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9166:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9085:91:22"},"returnParameters":{"id":4914,"nodeType":"ParameterList","parameters":[],"src":"9186:0:22"},"scope":5177,"src":"9055:214:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4963,"nodeType":"Block","src":"9378:339:22","statements":[{"assignments":[4935],"declarations":[{"constant":false,"id":4935,"mutability":"mutable","name":"owner_","nameLocation":"9396:6:22","nodeType":"VariableDeclaration","scope":4963,"src":"9388:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4934,"name":"address","nodeType":"ElementaryTypeName","src":"9388:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4939,"initialValue":{"arguments":[{"id":4937,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"9411:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"9405:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9405:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9388:31:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9437:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9441:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9437:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4943,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"9451:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9437:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6572206e6f74206f776e6572206f66207265616c6d4964","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9459:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""},"value":"Signer not owner of realmId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""}],"id":4940,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9429:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4947,"nodeType":"ExpressionStatement","src":"9429:60:22"},{"assignments":[4949],"declarations":[{"constant":false,"id":4949,"mutability":"mutable","name":"realmIdVersion","nameLocation":"9584:14:22","nodeType":"VariableDeclaration","scope":4963,"src":"9576:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9576:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4953,"initialValue":{"arguments":[{"id":4951,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"9620:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4950,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"9601:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9601:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9576:52:22"},{"expression":{"arguments":[{"id":4955,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"9647:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4956,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"9656:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4957,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"9672:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4958,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"9680:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9699:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9703:6:22","memberName":"sender","nodeType":"MemberAccess","src":"9699:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4954,"name":"_consume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"9638:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,bytes32,address)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9638:72:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4962,"nodeType":"ExpressionStatement","src":"9638:72:22"}]},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"_consumeWithoutSignature","nameLocation":"9284:24:22","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"realmId","nameLocation":"9317:7:22","nodeType":"VariableDeclaration","scope":4964,"src":"9309:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"9309:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4929,"mutability":"mutable","name":"amount","nameLocation":"9334:6:22","nodeType":"VariableDeclaration","scope":4964,"src":"9326:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"9326:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4931,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"9350:17:22","nodeType":"VariableDeclaration","scope":4964,"src":"9342:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9342:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9308:60:22"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[],"src":"9378:0:22"},"scope":5177,"src":"9275:442:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"9847:210:22","statements":[{"assignments":[4976],"declarations":[{"constant":false,"id":4976,"mutability":"mutable","name":"realmId","nameLocation":"9935:7:22","nodeType":"VariableDeclaration","scope":4988,"src":"9927:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"9927:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4981,"initialValue":{"arguments":[{"id":4978,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"9961:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4979,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"9973:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4977,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"9945:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9945:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9927:52:22"},{"expression":{"arguments":[{"id":4983,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"10015:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4984,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"10024:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4985,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"10032:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4982,"name":"_consumeWithoutSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"9990:24:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9990:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4987,"nodeType":"ExpressionStatement","src":"9990:60:22"}]},"functionSelector":"56209ab9","id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"consumeWithParentnode","nameLocation":"9732:21:22","nodeType":"FunctionDefinition","parameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"parentNode","nameLocation":"9762:10:22","nodeType":"VariableDeclaration","scope":4989,"src":"9754:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9754:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4968,"mutability":"mutable","name":"_name","nameLocation":"9788:5:22","nodeType":"VariableDeclaration","scope":4989,"src":"9774:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4967,"name":"string","nodeType":"ElementaryTypeName","src":"9774:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4970,"mutability":"mutable","name":"amount","nameLocation":"9803:6:22","nodeType":"VariableDeclaration","scope":4989,"src":"9795:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"9795:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4972,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"9819:17:22","nodeType":"VariableDeclaration","scope":4989,"src":"9811:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9811:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9753:84:22"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[],"src":"9847:0:22"},"scope":5177,"src":"9723:334:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5004,"nodeType":"Block","src":"10160:77:22","statements":[{"expression":{"arguments":[{"id":4999,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"10195:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5000,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"10204:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5001,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10212:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4998,"name":"_consumeWithoutSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"10170:24:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32)"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5003,"nodeType":"ExpressionStatement","src":"10170:60:22"}]},"functionSelector":"7f6232e7","id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"consumeWithRealmId","nameLocation":"10072:18:22","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"realmId","nameLocation":"10099:7:22","nodeType":"VariableDeclaration","scope":5005,"src":"10091:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"10091:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"amount","nameLocation":"10116:6:22","nodeType":"VariableDeclaration","scope":5005,"src":"10108:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"10108:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"10132:17:22","nodeType":"VariableDeclaration","scope":5005,"src":"10124:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10124:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10090:60:22"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[],"src":"10160:0:22"},"scope":5177,"src":"10063:174:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5028,"nodeType":"Block","src":"10344:184:22","statements":[{"assignments":[5015],"declarations":[{"constant":false,"id":5015,"mutability":"mutable","name":"realmIdVersion","nameLocation":"10418:14:22","nodeType":"VariableDeclaration","scope":5028,"src":"10410:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10410:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5019,"initialValue":{"arguments":[{"id":5017,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"10454:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"10435:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10435:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10410:52:22"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5020,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"10480:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":5022,"indexExpression":{"id":5021,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"10489:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10480:16:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":5024,"indexExpression":{"id":5023,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"10497:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10480:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5026,"indexExpression":{"id":5025,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"10506:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10480:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5013,"id":5027,"nodeType":"Return","src":"10473:48:22"}]},"functionSelector":"7cfd2458","id":5029,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfWithSeasonRealmId","nameLocation":"10252:26:22","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"season","nameLocation":"10287:6:22","nodeType":"VariableDeclaration","scope":5029,"src":"10279:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10279:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5009,"mutability":"mutable","name":"realmId","nameLocation":"10303:7:22","nodeType":"VariableDeclaration","scope":5029,"src":"10295:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"10295:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10278:33:22"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5029,"src":"10335:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10335:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10334:9:22"},"scope":5177,"src":"10243:285:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5061,"nodeType":"Block","src":"10652:387:22","statements":[{"assignments":[5041],"declarations":[{"constant":false,"id":5041,"mutability":"mutable","name":"realmId","nameLocation":"10740:7:22","nodeType":"VariableDeclaration","scope":5061,"src":"10732:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"10732:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5046,"initialValue":{"arguments":[{"id":5043,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"10766:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5044,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10778:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5042,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"10750:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10750:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10732:52:22"},{"assignments":[5048],"declarations":[{"constant":false,"id":5048,"mutability":"mutable","name":"realmIdVersion","nameLocation":"10859:14:22","nodeType":"VariableDeclaration","scope":5061,"src":"10851:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5047,"name":"uint256","nodeType":"ElementaryTypeName","src":"10851:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5052,"initialValue":{"arguments":[{"id":5050,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"10895:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5049,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"10876:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10851:52:22"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5053,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"10991:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":5055,"indexExpression":{"id":5054,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"11000:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10991:16:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":5057,"indexExpression":{"id":5056,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"11008:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10991:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5059,"indexExpression":{"id":5058,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"11017:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10991:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5039,"id":5060,"nodeType":"Return","src":"10984:48:22"}]},"functionSelector":"b2c0638f","id":5062,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfWithSeason","nameLocation":"10543:19:22","nodeType":"FunctionDefinition","parameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"season","nameLocation":"10571:6:22","nodeType":"VariableDeclaration","scope":5062,"src":"10563:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10563:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5033,"mutability":"mutable","name":"parentNode","nameLocation":"10587:10:22","nodeType":"VariableDeclaration","scope":5062,"src":"10579:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10579:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5035,"mutability":"mutable","name":"_name","nameLocation":"10613:5:22","nodeType":"VariableDeclaration","scope":5062,"src":"10599:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5034,"name":"string","nodeType":"ElementaryTypeName","src":"10599:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10562:57:22"},"returnParameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5062,"src":"10643:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"10643:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10642:9:22"},"scope":5177,"src":"10534:505:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5083,"nodeType":"Block","src":"11124:278:22","statements":[{"assignments":[5070],"declarations":[{"constant":false,"id":5070,"mutability":"mutable","name":"realmIdVersion","nameLocation":"11198:14:22","nodeType":"VariableDeclaration","scope":5083,"src":"11190:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"11190:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5074,"initialValue":{"arguments":[{"id":5072,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11234:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5071,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"11215:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11215:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11190:52:22"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5075,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"11347:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":5077,"indexExpression":{"id":5076,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"11356:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11347:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":5079,"indexExpression":{"id":5078,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11371:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11347:32:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5081,"indexExpression":{"id":5080,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"11380:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11347:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5068,"id":5082,"nodeType":"Return","src":"11340:55:22"}]},"functionSelector":"4fc7ec0d","id":5084,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfWithRealmId","nameLocation":"11054:20:22","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"realmId","nameLocation":"11083:7:22","nodeType":"VariableDeclaration","scope":5084,"src":"11075:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11075:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11074:17:22"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5084,"src":"11115:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11115:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11114:9:22"},"scope":5177,"src":"11045:357:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5114,"nodeType":"Block","src":"11518:411:22","statements":[{"assignments":[5094],"declarations":[{"constant":false,"id":5094,"mutability":"mutable","name":"realmId","nameLocation":"11606:7:22","nodeType":"VariableDeclaration","scope":5114,"src":"11598:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"11598:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5099,"initialValue":{"arguments":[{"id":5096,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"11632:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5097,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"11644:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5095,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"11616:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11616:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11598:52:22"},{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"realmIdVersion","nameLocation":"11725:14:22","nodeType":"VariableDeclaration","scope":5114,"src":"11717:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11717:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5105,"initialValue":{"arguments":[{"id":5103,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"11761:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5102,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"11742:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11742:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11717:52:22"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5106,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"11874:8:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":5108,"indexExpression":{"id":5107,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"11883:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11874:23:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":5110,"indexExpression":{"id":5109,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"11898:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11874:32:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5112,"indexExpression":{"id":5111,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"11907:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11874:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5092,"id":5113,"nodeType":"Return","src":"11867:55:22"}]},"functionSelector":"2162671f","id":5115,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfWithParentNodeName","nameLocation":"11417:27:22","nodeType":"FunctionDefinition","parameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"parentNode","nameLocation":"11453:10:22","nodeType":"VariableDeclaration","scope":5115,"src":"11445:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11445:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"_name","nameLocation":"11479:5:22","nodeType":"VariableDeclaration","scope":5115,"src":"11465:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5087,"name":"string","nodeType":"ElementaryTypeName","src":"11465:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11444:41:22"},"returnParameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5115,"src":"11509:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"11509:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11508:9:22"},"scope":5177,"src":"11408:521:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5146,"nodeType":"Block","src":"12234:153:22","statements":[{"assignments":[5131],"declarations":[{"constant":false,"id":5131,"mutability":"mutable","name":"payload","nameLocation":"12252:7:22","nodeType":"VariableDeclaration","scope":5146,"src":"12244:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12244:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5143,"initialValue":{"arguments":[{"arguments":[{"id":5135,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"12289:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5136,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"12298:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5137,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"12314:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5138,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"12322:13:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5139,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"12337:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5140,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"12349:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12272:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12276:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"12272:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12272:83:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5132,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12262:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:94:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12244:112:22"},{"expression":{"id":5144,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"12373:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5129,"id":5145,"nodeType":"Return","src":"12366:14:22"}]},"id":5147,"implemented":true,"kind":"function","modifiers":[],"name":"_preparePayload","nameLocation":"12048:15:22","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"realmId","nameLocation":"12081:7:22","nodeType":"VariableDeclaration","scope":5147,"src":"12073:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"12073:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5119,"mutability":"mutable","name":"realmIdVersion","nameLocation":"12106:14:22","nodeType":"VariableDeclaration","scope":5147,"src":"12098:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"12098:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5121,"mutability":"mutable","name":"amount","nameLocation":"12138:6:22","nodeType":"VariableDeclaration","scope":5147,"src":"12130:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"12130:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5123,"mutability":"mutable","name":"nonce","nameLocation":"12162:5:22","nodeType":"VariableDeclaration","scope":5147,"src":"12154:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"12154:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"reasonCode","nameLocation":"12185:10:22","nodeType":"VariableDeclaration","scope":5147,"src":"12177:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12177:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12063:138:22"},"returnParameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5147,"src":"12225:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12225:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12224:9:22"},"scope":5177,"src":"12039:348:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"12623:222:22","statements":[{"assignments":[5159],"declarations":[{"constant":false,"id":5159,"mutability":"mutable","name":"realmIdVersion","nameLocation":"12697:14:22","nodeType":"VariableDeclaration","scope":5175,"src":"12689:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"12689:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5163,"initialValue":{"arguments":[{"id":5161,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"12733:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5160,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"12714:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12714:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12689:52:22"},{"expression":{"components":[{"arguments":[{"id":5165,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"12776:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5166,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5159,"src":"12785:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5167,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"12801:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":5168,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"12809:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5170,"indexExpression":{"id":5169,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"12816:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12809:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5171,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"12826:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5164,"name":"_preparePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"12760:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256,uint256,bytes32) view returns (bytes32)"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12760:77:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12759:79:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5157,"id":5174,"nodeType":"Return","src":"12752:86:22"}]},"functionSelector":"df00bb24","id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"preparePayload","nameLocation":"12523:14:22","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"realmId","nameLocation":"12546:7:22","nodeType":"VariableDeclaration","scope":5176,"src":"12538:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12538:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5151,"mutability":"mutable","name":"amount","nameLocation":"12563:6:22","nodeType":"VariableDeclaration","scope":5176,"src":"12555:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5153,"mutability":"mutable","name":"reasonCode","nameLocation":"12579:10:22","nodeType":"VariableDeclaration","scope":5176,"src":"12571:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12571:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12537:53:22"},"returnParameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5176,"src":"12614:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12614:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12613:9:22"},"scope":5177,"src":"12514:331:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5178,"src":"527:12320:22","usedErrors":[]}],"src":"32:12816:22"},"id":22},"contracts/MocaPoints/interface/IMiddleware.sol":{"ast":{"absolutePath":"contracts/MocaPoints/interface/IMiddleware.sol","exportedSymbols":{"DataTypes":[5328],"IMiddleware":[5205]},"id":5206,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5179,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"46:24:23"},{"absolutePath":"contracts/MocaPoints/realmIdContract/DataTypes.sol","file":"../realmIdContract/DataTypes.sol","id":5181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5206,"sourceUnit":5329,"src":"72:59:23","symbolAliases":[{"foreign":{"id":5180,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"80:9:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IMiddleware","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5205,"linearizedBaseContracts":[5205],"name":"IMiddleware","nameLocation":"143:11:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"161:97:23","text":" @notice Sets data for middleware.\n @param data Extra data to set."},"functionSelector":"42a0d9b4","id":5187,"implemented":false,"kind":"function","modifiers":[],"name":"setMwData","nameLocation":"272:9:23","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"data","nameLocation":"297:4:23","nodeType":"VariableDeclaration","scope":5187,"src":"282:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5183,"name":"bytes","nodeType":"ElementaryTypeName","src":"282:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"281:21:23"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[],"src":"311:0:23"},"scope":5205,"src":"263:49:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"318:178:23","text":" @notice Process that runs before the name creation happens.\n @param params The params for creating name.\n @param data Extra data to process."},"functionSelector":"cab80ede","id":5196,"implemented":false,"kind":"function","modifiers":[],"name":"preProcess","nameLocation":"510:10:23","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"params","nameLocation":"559:6:23","nodeType":"VariableDeclaration","scope":5196,"src":"521:44:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_calldata_ptr","typeString":"struct DataTypes.RegisterNameParams"},"typeName":{"id":5190,"nodeType":"UserDefinedTypeName","pathNode":{"id":5189,"name":"DataTypes.RegisterNameParams","nameLocations":["521:9:23","531:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":5302,"src":"521:28:23"},"referencedDeclaration":5302,"src":"521:28:23","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_storage_ptr","typeString":"struct DataTypes.RegisterNameParams"}},"visibility":"internal"},{"constant":false,"id":5193,"mutability":"mutable","name":"data","nameLocation":"582:4:23","nodeType":"VariableDeclaration","scope":5196,"src":"567:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5192,"name":"bytes","nodeType":"ElementaryTypeName","src":"567:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"520:67:23"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[],"src":"604:0:23"},"scope":5205,"src":"501:104:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5197,"nodeType":"StructuredDocumentation","src":"611:102:23","text":" @notice Validates the name pattern.\n @param name The name to validate."},"functionSelector":"7ac3e6ea","id":5204,"implemented":false,"kind":"function","modifiers":[],"name":"namePatternValid","nameLocation":"727:16:23","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"name","nameLocation":"760:4:23","nodeType":"VariableDeclaration","scope":5204,"src":"744:20:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5198,"name":"string","nodeType":"ElementaryTypeName","src":"744:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"743:22:23"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5204,"src":"789:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5201,"name":"bool","nodeType":"ElementaryTypeName","src":"789:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"788:6:23"},"scope":5205,"src":"718:77:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5206,"src":"133:664:23","usedErrors":[]}],"src":"46:752:23"},"id":23},"contracts/MocaPoints/interface/IRealmId.sol":{"ast":{"absolutePath":"contracts/MocaPoints/interface/IRealmId.sol","exportedSymbols":{"IRealmId":[5277]},"id":5278,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5207,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"45:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IRealmId","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5277,"linearizedBaseContracts":[5277],"name":"IRealmId","nameLocation":"140:8:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"16404d01","id":5214,"implemented":false,"kind":"function","modifiers":[],"name":"allowedParentNodes","nameLocation":"164:18:24","nodeType":"FunctionDefinition","parameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"parentNode","nameLocation":"191:10:24","nodeType":"VariableDeclaration","scope":5214,"src":"183:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"183:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"182:20:24"},"returnParameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5214,"src":"226:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5211,"name":"bool","nodeType":"ElementaryTypeName","src":"226:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"225:6:24"},"scope":5277,"src":"155:77:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9735f94","id":5221,"implemented":false,"kind":"function","modifiers":[],"name":"burnCounts","nameLocation":"247:10:24","nodeType":"FunctionDefinition","parameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"realmId","nameLocation":"266:7:24","nodeType":"VariableDeclaration","scope":5221,"src":"258:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"257:17:24"},"returnParameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5221,"src":"298:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"297:9:24"},"scope":5277,"src":"238:69:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cad6b901","id":5230,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"322:10:24","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"name","nameLocation":"349:4:24","nodeType":"VariableDeclaration","scope":5230,"src":"333:20:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5222,"name":"string","nodeType":"ElementaryTypeName","src":"333:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5225,"mutability":"mutable","name":"parentNode","nameLocation":"363:10:24","nodeType":"VariableDeclaration","scope":5230,"src":"355:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"355:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"332:42:24"},"returnParameters":{"id":5229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5230,"src":"398:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"397:9:24"},"scope":5277,"src":"313:94:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"6352211e","id":5237,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"422:7:24","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"realmId","nameLocation":"438:7:24","nodeType":"VariableDeclaration","scope":5237,"src":"430:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"429:17:24"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5237,"src":"470:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5234,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:9:24"},"scope":5277,"src":"413:66:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c7efe6b","id":5250,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"494:8:24","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"_name","nameLocation":"519:5:24","nodeType":"VariableDeclaration","scope":5250,"src":"503:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5238,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5241,"mutability":"mutable","name":"parentNode","nameLocation":"534:10:24","nodeType":"VariableDeclaration","scope":5250,"src":"526:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"526:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5243,"mutability":"mutable","name":"to","nameLocation":"554:2:24","nodeType":"VariableDeclaration","scope":5250,"src":"546:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5242,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5245,"mutability":"mutable","name":"preData","nameLocation":"573:7:24","nodeType":"VariableDeclaration","scope":5250,"src":"558:22:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5244,"name":"bytes","nodeType":"ElementaryTypeName","src":"558:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"502:79:24"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5250,"src":"600:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"600:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"599:9:24"},"scope":5277,"src":"485:124:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d619cee5","id":5267,"implemented":false,"kind":"function","modifiers":[],"name":"allowNode","nameLocation":"624:9:24","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"label","nameLocation":"659:5:24","nodeType":"VariableDeclaration","scope":5267,"src":"643:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5251,"name":"string","nodeType":"ElementaryTypeName","src":"643:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5254,"mutability":"mutable","name":"parentNode","nameLocation":"682:10:24","nodeType":"VariableDeclaration","scope":5267,"src":"674:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"674:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"allow","nameLocation":"707:5:24","nodeType":"VariableDeclaration","scope":5267,"src":"702:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5255,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"baseTokenURI","nameLocation":"738:12:24","nodeType":"VariableDeclaration","scope":5267,"src":"722:28:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5257,"name":"string","nodeType":"ElementaryTypeName","src":"722:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"middleware","nameLocation":"768:10:24","nodeType":"VariableDeclaration","scope":5267,"src":"760:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5259,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"middlewareData","nameLocation":"803:14:24","nodeType":"VariableDeclaration","scope":5267,"src":"788:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5261,"name":"bytes","nodeType":"ElementaryTypeName","src":"788:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"633:190:24"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"allowedNode","nameLocation":"850:11:24","nodeType":"VariableDeclaration","scope":5267,"src":"842:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"842:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"841:21:24"},"scope":5277,"src":"615:248:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2595eacb","id":5276,"implemented":false,"kind":"function","modifiers":[],"name":"available","nameLocation":"878:9:24","nodeType":"FunctionDefinition","parameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"_name","nameLocation":"904:5:24","nodeType":"VariableDeclaration","scope":5276,"src":"888:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5268,"name":"string","nodeType":"ElementaryTypeName","src":"888:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5271,"mutability":"mutable","name":"parentNode","nameLocation":"919:10:24","nodeType":"VariableDeclaration","scope":5276,"src":"911:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"911:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"887:43:24"},"returnParameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5276,"src":"954:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5273,"name":"bool","nodeType":"ElementaryTypeName","src":"954:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"953:6:24"},"scope":5277,"src":"869:91:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5278,"src":"130:832:24","usedErrors":[]}],"src":"45:918:24"},"id":24},"contracts/MocaPoints/realmIdContract/DataTypes.sol":{"ast":{"absolutePath":"contracts/MocaPoints/realmIdContract/DataTypes.sol","exportedSymbols":{"DataTypes":[5328]},"id":5329,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5279,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"46:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"DataTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5328,"linearizedBaseContracts":[5328],"name":"DataTypes","nameLocation":"80:9:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.EIP712Signature","id":5288,"members":[{"constant":false,"id":5281,"mutability":"mutable","name":"v","nameLocation":"135:1:25","nodeType":"VariableDeclaration","scope":5288,"src":"129:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5280,"name":"uint8","nodeType":"ElementaryTypeName","src":"129:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5283,"mutability":"mutable","name":"r","nameLocation":"154:1:25","nodeType":"VariableDeclaration","scope":5288,"src":"146:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"146:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5285,"mutability":"mutable","name":"s","nameLocation":"173:1:25","nodeType":"VariableDeclaration","scope":5288,"src":"165:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"165:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"deadline","nameLocation":"192:8:25","nodeType":"VariableDeclaration","scope":5288,"src":"184:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"184:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"EIP712Signature","nameLocation":"103:15:25","nodeType":"StructDefinition","scope":5328,"src":"96:111:25","visibility":"public"},{"canonicalName":"DataTypes.MetadataPair","id":5293,"members":[{"constant":false,"id":5290,"mutability":"mutable","name":"key","nameLocation":"250:3:25","nodeType":"VariableDeclaration","scope":5293,"src":"243:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5289,"name":"string","nodeType":"ElementaryTypeName","src":"243:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"value","nameLocation":"270:5:25","nodeType":"VariableDeclaration","scope":5293,"src":"263:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5291,"name":"string","nodeType":"ElementaryTypeName","src":"263:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"MetadataPair","nameLocation":"220:12:25","nodeType":"StructDefinition","scope":5328,"src":"213:69:25","visibility":"public"},{"canonicalName":"DataTypes.RegisterNameParams","id":5302,"members":[{"constant":false,"id":5295,"mutability":"mutable","name":"msgSender","nameLocation":"332:9:25","nodeType":"VariableDeclaration","scope":5302,"src":"324:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5294,"name":"address","nodeType":"ElementaryTypeName","src":"324:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5297,"mutability":"mutable","name":"name","nameLocation":"358:4:25","nodeType":"VariableDeclaration","scope":5302,"src":"351:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5296,"name":"string","nodeType":"ElementaryTypeName","src":"351:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5299,"mutability":"mutable","name":"parentNode","nameLocation":"380:10:25","nodeType":"VariableDeclaration","scope":5302,"src":"372:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"372:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5301,"mutability":"mutable","name":"to","nameLocation":"408:2:25","nodeType":"VariableDeclaration","scope":5302,"src":"400:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5300,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RegisterNameParams","nameLocation":"295:18:25","nodeType":"StructDefinition","scope":5328,"src":"288:129:25","visibility":"public"},{"canonicalName":"DataTypes.RegisterCyberIdParams","id":5311,"members":[{"constant":false,"id":5304,"mutability":"mutable","name":"msgSender","nameLocation":"470:9:25","nodeType":"VariableDeclaration","scope":5311,"src":"462:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5303,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"cid","nameLocation":"496:3:25","nodeType":"VariableDeclaration","scope":5311,"src":"489:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5305,"name":"string","nodeType":"ElementaryTypeName","src":"489:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5308,"mutability":"mutable","name":"to","nameLocation":"517:2:25","nodeType":"VariableDeclaration","scope":5311,"src":"509:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5307,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5310,"mutability":"mutable","name":"durationYear","nameLocation":"537:12:25","nodeType":"VariableDeclaration","scope":5311,"src":"529:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RegisterCyberIdParams","nameLocation":"430:21:25","nodeType":"StructDefinition","scope":5328,"src":"423:133:25","visibility":"public"},{"canonicalName":"DataTypes.RenewCyberIdParams","id":5318,"members":[{"constant":false,"id":5313,"mutability":"mutable","name":"msgSender","nameLocation":"606:9:25","nodeType":"VariableDeclaration","scope":5318,"src":"598:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5312,"name":"address","nodeType":"ElementaryTypeName","src":"598:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5315,"mutability":"mutable","name":"cid","nameLocation":"632:3:25","nodeType":"VariableDeclaration","scope":5318,"src":"625:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5314,"name":"string","nodeType":"ElementaryTypeName","src":"625:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5317,"mutability":"mutable","name":"durationYear","nameLocation":"653:12:25","nodeType":"VariableDeclaration","scope":5318,"src":"645:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RenewCyberIdParams","nameLocation":"569:18:25","nodeType":"StructDefinition","scope":5328,"src":"562:110:25","visibility":"public"},{"canonicalName":"DataTypes.BidCyberIdParams","id":5327,"members":[{"constant":false,"id":5320,"mutability":"mutable","name":"msgSender","nameLocation":"720:9:25","nodeType":"VariableDeclaration","scope":5327,"src":"712:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5322,"mutability":"mutable","name":"cid","nameLocation":"746:3:25","nodeType":"VariableDeclaration","scope":5327,"src":"739:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5321,"name":"string","nodeType":"ElementaryTypeName","src":"739:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5324,"mutability":"mutable","name":"to","nameLocation":"767:2:25","nodeType":"VariableDeclaration","scope":5327,"src":"759:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5323,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5326,"mutability":"mutable","name":"auctionStartTimestamp","nameLocation":"787:21:25","nodeType":"VariableDeclaration","scope":5327,"src":"779:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"779:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BidCyberIdParams","nameLocation":"685:16:25","nodeType":"StructDefinition","scope":5328,"src":"678:137:25","visibility":"public"}],"scope":5329,"src":"72:745:25","usedErrors":[]}],"src":"46:772:25"},"id":25},"contracts/MocaPoints/realmIdContract/LibString.sol":{"ast":{"absolutePath":"contracts/MocaPoints/realmIdContract/LibString.sol","exportedSymbols":{"LibString":[5694]},"id":5695,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5330,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"46:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"LibString","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5694,"linearizedBaseContracts":[5694],"name":"LibString","nameLocation":"111:9:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":5339,"nodeType":"Block","src":"297:1841:26","statements":[{"AST":{"nodeType":"YulBlock","src":"316:1816:26","statements":[{"nodeType":"YulAssignment","src":"667:28:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"684:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"678:5:26"},"nodeType":"YulFunctionCall","src":"678:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"691:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"674:3:26"},"nodeType":"YulFunctionCall","src":"674:21:26"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"667:3:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"774:4:26","type":"","value":"0x40"},{"name":"ptr","nodeType":"YulIdentifier","src":"780:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"767:6:26"},"nodeType":"YulFunctionCall","src":"767:17:26"},"nodeType":"YulExpressionStatement","src":"767:17:26"},{"nodeType":"YulVariableDeclaration","src":"871:14:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:26"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"875:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1761:144:26","statements":[{"nodeType":"YulAssignment","src":"1820:18:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1831:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1836:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1827:3:26"},"nodeType":"YulFunctionCall","src":"1827:11:26"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1820:3:26"}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1863:3:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1872:2:26","type":"","value":"48"},{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"1880:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:26","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1876:3:26"},"nodeType":"YulFunctionCall","src":"1876:13:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:26"},"nodeType":"YulFunctionCall","src":"1868:22:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1855:7:26"},"nodeType":"YulFunctionCall","src":"1855:36:26"},"nodeType":"YulExpressionStatement","src":"1855:36:26"}]},"condition":{"name":"temp","nodeType":"YulIdentifier","src":"1650:4:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1655:105:26","statements":[{"nodeType":"YulAssignment","src":"1725:21:26","value":{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"1737:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1743:2:26","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1733:3:26"},"nodeType":"YulFunctionCall","src":"1733:13:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"1725:4:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1227:422:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1317:17:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1329:5:26"},"variables":[{"name":"temp","nodeType":"YulTypedName","src":"1321:4:26","type":""}]},{"nodeType":"YulAssignment","src":"1441:18:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1452:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1457:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1448:3:26"},"nodeType":"YulFunctionCall","src":"1448:11:26"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1441:3:26"}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1569:3:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1578:2:26","type":"","value":"48"},{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"1586:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1592:2:26","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1582:3:26"},"nodeType":"YulFunctionCall","src":"1582:13:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1574:3:26"},"nodeType":"YulFunctionCall","src":"1574:22:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1561:7:26"},"nodeType":"YulFunctionCall","src":"1561:36:26"},"nodeType":"YulExpressionStatement","src":"1561:36:26"},{"nodeType":"YulAssignment","src":"1614:21:26","value":{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"1626:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1632:2:26","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1622:3:26"},"nodeType":"YulFunctionCall","src":"1622:13:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"1614:4:26"}]}]},"src":"1223:682:26"},{"nodeType":"YulVariableDeclaration","src":"1918:27:26","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"1936:3:26"},{"name":"ptr","nodeType":"YulIdentifier","src":"1941:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1932:3:26"},"nodeType":"YulFunctionCall","src":"1932:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1922:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2038:19:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2049:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2054:2:26","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2045:3:26"},"nodeType":"YulFunctionCall","src":"2045:12:26"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"2038:3:26"}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2110:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2115:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2103:6:26"},"nodeType":"YulFunctionCall","src":"2103:19:26"},"nodeType":"YulExpressionStatement","src":"2103:19:26"}]},"evmVersion":"london","externalReferences":[{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1441:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1452:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1569:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1820:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1831:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1863:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"1941:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"2038:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"2049:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"2110:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"667:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"780:3:26","valueSize":1},{"declaration":5336,"isOffset":false,"isSlot":false,"src":"882:3:26","valueSize":1},{"declaration":5333,"isOffset":false,"isSlot":false,"src":"1329:5:26","valueSize":1}],"id":5338,"nodeType":"InlineAssembly","src":"307:1825:26"}]},"documentation":{"id":5331,"nodeType":"StructuredDocumentation","src":"127:90:26","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":5340,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"231:8:26","nodeType":"FunctionDefinition","parameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"value","nameLocation":"248:5:26","nodeType":"VariableDeclaration","scope":5340,"src":"240:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"240:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"239:15:26"},"returnParameters":{"id":5337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"mutability":"mutable","name":"ptr","nameLocation":"292:3:26","nodeType":"VariableDeclaration","scope":5340,"src":"278:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5335,"name":"string","nodeType":"ElementaryTypeName","src":"278:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"277:19:26"},"scope":5694,"src":"222:1916:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5350,"nodeType":"Block","src":"2238:2135:26","statements":[{"AST":{"nodeType":"YulBlock","src":"2257:2110:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2271:24:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2290:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2284:5:26"},"nodeType":"YulFunctionCall","src":"2284:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2275:5:26","type":""}]},{"nodeType":"YulAssignment","src":"2526:56:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2537:5:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2556:1:26","type":"","value":"1"},{"name":"length","nodeType":"YulIdentifier","src":"2559:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2552:3:26"},"nodeType":"YulFunctionCall","src":"2552:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:26","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:26"},"nodeType":"YulFunctionCall","src":"2548:23:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2577:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2573:3:26"},"nodeType":"YulFunctionCall","src":"2573:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2544:3:26"},"nodeType":"YulFunctionCall","src":"2544:37:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2533:3:26"},"nodeType":"YulFunctionCall","src":"2533:49:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"2526:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"2656:14:26","value":{"name":"str","nodeType":"YulIdentifier","src":"2667:3:26"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"2660:3:26","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2727:4:26","type":"","value":"0x40"},{"name":"str","nodeType":"YulIdentifier","src":"2733:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2720:6:26"},"nodeType":"YulFunctionCall","src":"2720:17:26"},"nodeType":"YulExpressionStatement","src":"2720:17:26"},{"nodeType":"YulVariableDeclaration","src":"2751:17:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2763:5:26"},"variables":[{"name":"temp","nodeType":"YulTypedName","src":"2755:4:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3374:243:26","statements":[{"nodeType":"YulAssignment","src":"3392:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"3403:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3408:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3399:3:26"},"nodeType":"YulFunctionCall","src":"3399:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"3392:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"3439:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3444:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3435:3:26"},"nodeType":"YulFunctionCall","src":"3435:11:26"},{"arguments":[{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"3457:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"3463:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3453:3:26"},"nodeType":"YulFunctionCall","src":"3453:13:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"3468:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3448:4:26"},"nodeType":"YulFunctionCall","src":"3448:39:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3427:7:26"},"nodeType":"YulFunctionCall","src":"3427:61:26"},"nodeType":"YulExpressionStatement","src":"3427:61:26"},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"3513:3:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:1:26","type":"","value":"4"},{"name":"temp","nodeType":"YulIdentifier","src":"3534:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3527:3:26"},"nodeType":"YulFunctionCall","src":"3527:12:26"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3523:3:26"},"nodeType":"YulFunctionCall","src":"3523:21:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"3546:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3518:4:26"},"nodeType":"YulFunctionCall","src":"3518:47:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3505:7:26"},"nodeType":"YulFunctionCall","src":"3505:61:26"},"nodeType":"YulExpressionStatement","src":"3505:61:26"},{"nodeType":"YulAssignment","src":"3583:20:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3595:1:26","type":"","value":"8"},{"name":"temp","nodeType":"YulIdentifier","src":"3598:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3591:3:26"},"nodeType":"YulFunctionCall","src":"3591:12:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"3583:4:26"}]}]},"condition":{"name":"length","nodeType":"YulIdentifier","src":"3310:6:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3317:56:26","statements":[{"nodeType":"YulAssignment","src":"3335:24:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3349:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3357:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3345:3:26"},"nodeType":"YulFunctionCall","src":"3345:14:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3335:6:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2953:356:26","statements":[{"nodeType":"YulAssignment","src":"3043:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"3054:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3059:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3050:3:26"},"nodeType":"YulFunctionCall","src":"3050:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"3043:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"3090:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3095:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3086:3:26"},"nodeType":"YulFunctionCall","src":"3086:11:26"},{"arguments":[{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"3108:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"3114:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3104:3:26"},"nodeType":"YulFunctionCall","src":"3104:13:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"3119:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3099:4:26"},"nodeType":"YulFunctionCall","src":"3099:39:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3078:7:26"},"nodeType":"YulFunctionCall","src":"3078:61:26"},"nodeType":"YulExpressionStatement","src":"3078:61:26"},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"3164:3:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3182:1:26","type":"","value":"4"},{"name":"temp","nodeType":"YulIdentifier","src":"3185:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3178:3:26"},"nodeType":"YulFunctionCall","src":"3178:12:26"},{"kind":"number","nodeType":"YulLiteral","src":"3192:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3174:3:26"},"nodeType":"YulFunctionCall","src":"3174:21:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"3197:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3169:4:26"},"nodeType":"YulFunctionCall","src":"3169:47:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3156:7:26"},"nodeType":"YulFunctionCall","src":"3156:61:26"},"nodeType":"YulExpressionStatement","src":"3156:61:26"},{"nodeType":"YulAssignment","src":"3234:20:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3246:1:26","type":"","value":"8"},{"name":"temp","nodeType":"YulIdentifier","src":"3249:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3242:3:26"},"nodeType":"YulFunctionCall","src":"3242:12:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"3234:4:26"}]},{"nodeType":"YulAssignment","src":"3271:24:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3285:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3281:3:26"},"nodeType":"YulFunctionCall","src":"3281:14:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3271:6:26"}]}]},"src":"2949:668:26"},{"body":{"nodeType":"YulBlock","src":"3639:379:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3664:4:26","type":"","value":"0x00"},{"hexValue":"08c379a0","kind":"string","nodeType":"YulLiteral","src":"3670:18:26","type":""}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3657:6:26"},"nodeType":"YulFunctionCall","src":"3657:32:26"},"nodeType":"YulExpressionStatement","src":"3657:32:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3755:4:26","type":"","value":"0x04"},{"kind":"number","nodeType":"YulLiteral","src":"3761:4:26","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3748:6:26"},"nodeType":"YulFunctionCall","src":"3748:18:26"},"nodeType":"YulExpressionStatement","src":"3748:18:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3821:4:26","type":"","value":"0x24"},{"kind":"number","nodeType":"YulLiteral","src":"3827:2:26","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3814:6:26"},"nodeType":"YulFunctionCall","src":"3814:16:26"},"nodeType":"YulExpressionStatement","src":"3814:16:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3885:4:26","type":"","value":"0x44"},{"hexValue":"4845585f4c454e4754485f494e53554646494349454e54","kind":"string","nodeType":"YulLiteral","src":"3891:25:26","type":"","value":"HEX_LENGTH_INSUFFICIENT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3878:6:26"},"nodeType":"YulFunctionCall","src":"3878:39:26"},"nodeType":"YulExpressionStatement","src":"3878:39:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3962:4:26","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3968:4:26","type":"","value":"0x64"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3955:6:26"},"nodeType":"YulFunctionCall","src":"3955:18:26"},"nodeType":"YulExpressionStatement","src":"3955:18:26"}]},"condition":{"name":"temp","nodeType":"YulIdentifier","src":"3634:4:26"},"nodeType":"YulIf","src":"3631:387:26"},{"nodeType":"YulVariableDeclaration","src":"4076:38:26","value":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4101:3:26"},{"name":"str","nodeType":"YulIdentifier","src":"4106:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4097:3:26"},"nodeType":"YulFunctionCall","src":"4097:13:26"},{"kind":"number","nodeType":"YulLiteral","src":"4112:1:26","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4093:3:26"},"nodeType":"YulFunctionCall","src":"4093:21:26"},"variables":[{"name":"strLength","nodeType":"YulTypedName","src":"4080:9:26","type":""}]},{"nodeType":"YulAssignment","src":"4186:19:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"4197:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4202:2:26","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4193:3:26"},"nodeType":"YulFunctionCall","src":"4193:12:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"4186:3:26"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"4225:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4230:6:26","type":"","value":"0x3078"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4218:6:26"},"nodeType":"YulFunctionCall","src":"4218:19:26"},"nodeType":"YulExpressionStatement","src":"4218:19:26"},{"nodeType":"YulAssignment","src":"4304:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"4315:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"4320:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4311:3:26"},"nodeType":"YulFunctionCall","src":"4311:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"4304:3:26"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"4342:3:26"},{"name":"strLength","nodeType":"YulIdentifier","src":"4347:9:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4335:6:26"},"nodeType":"YulFunctionCall","src":"4335:22:26"},"nodeType":"YulExpressionStatement","src":"4335:22:26"}]},"evmVersion":"london","externalReferences":[{"declaration":5344,"isOffset":false,"isSlot":false,"src":"2559:6:26","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"3271:6:26","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"3285:6:26","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"3310:6:26","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"3335:6:26","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"3349:6:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"2526:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"2667:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"2733:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3043:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3054:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3090:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3164:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3392:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3403:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3439:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"3513:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4106:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4186:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4197:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4225:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4304:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4315:3:26","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"4342:3:26","valueSize":1},{"declaration":5342,"isOffset":false,"isSlot":false,"src":"2763:5:26","valueSize":1}],"id":5349,"nodeType":"InlineAssembly","src":"2248:2119:26"}]},"id":5351,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2153:11:26","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"value","nameLocation":"2173:5:26","nodeType":"VariableDeclaration","scope":5351,"src":"2165:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5344,"mutability":"mutable","name":"length","nameLocation":"2188:6:26","nodeType":"VariableDeclaration","scope":5351,"src":"2180:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2164:31:26"},"returnParameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"str","nameLocation":"2233:3:26","nodeType":"VariableDeclaration","scope":5351,"src":"2219:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5346,"name":"string","nodeType":"ElementaryTypeName","src":"2219:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2218:19:26"},"scope":5694,"src":"2144:2229:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5359,"nodeType":"Block","src":"4457:1620:26","statements":[{"AST":{"nodeType":"YulBlock","src":"4476:1595:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4490:24:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4509:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4503:5:26"},"nodeType":"YulFunctionCall","src":"4503:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4494:5:26","type":""}]},{"nodeType":"YulAssignment","src":"4710:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4721:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4728:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4717:3:26"},"nodeType":"YulFunctionCall","src":"4717:15:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"4710:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"4806:14:26","value":{"name":"str","nodeType":"YulIdentifier","src":"4817:3:26"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4810:3:26","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4877:4:26","type":"","value":"0x40"},{"name":"str","nodeType":"YulIdentifier","src":"4883:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4870:6:26"},"nodeType":"YulFunctionCall","src":"4870:17:26"},"nodeType":"YulExpressionStatement","src":"4870:17:26"},{"body":{"nodeType":"YulBlock","src":"5479:243:26","statements":[{"nodeType":"YulAssignment","src":"5497:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5508:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5513:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5504:3:26"},"nodeType":"YulFunctionCall","src":"5504:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"5497:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5544:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5549:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5540:3:26"},"nodeType":"YulFunctionCall","src":"5540:11:26"},{"arguments":[{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"5562:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"5568:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5558:3:26"},"nodeType":"YulFunctionCall","src":"5558:13:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"5573:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"5553:4:26"},"nodeType":"YulFunctionCall","src":"5553:39:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5532:7:26"},"nodeType":"YulFunctionCall","src":"5532:61:26"},"nodeType":"YulExpressionStatement","src":"5532:61:26"},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5618:3:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5636:1:26","type":"","value":"4"},{"name":"temp","nodeType":"YulIdentifier","src":"5639:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5632:3:26"},"nodeType":"YulFunctionCall","src":"5632:12:26"},{"kind":"number","nodeType":"YulLiteral","src":"5646:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5628:3:26"},"nodeType":"YulFunctionCall","src":"5628:21:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"5651:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"5623:4:26"},"nodeType":"YulFunctionCall","src":"5623:47:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5610:7:26"},"nodeType":"YulFunctionCall","src":"5610:61:26"},"nodeType":"YulExpressionStatement","src":"5610:61:26"},{"nodeType":"YulAssignment","src":"5688:20:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5700:1:26","type":"","value":"8"},{"name":"temp","nodeType":"YulIdentifier","src":"5703:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5696:3:26"},"nodeType":"YulFunctionCall","src":"5696:12:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"5688:4:26"}]}]},"condition":{"name":"temp","nodeType":"YulIdentifier","src":"5423:4:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5428:50:26","statements":[]},"pre":{"nodeType":"YulBlock","src":"5073:349:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5163:17:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5175:5:26"},"variables":[{"name":"temp","nodeType":"YulTypedName","src":"5167:4:26","type":""}]},{"nodeType":"YulAssignment","src":"5197:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5208:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5213:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5204:3:26"},"nodeType":"YulFunctionCall","src":"5204:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"5197:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5244:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5249:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:26"},"nodeType":"YulFunctionCall","src":"5240:11:26"},{"arguments":[{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"5262:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"5268:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5258:3:26"},"nodeType":"YulFunctionCall","src":"5258:13:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"5273:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"5253:4:26"},"nodeType":"YulFunctionCall","src":"5253:39:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5232:7:26"},"nodeType":"YulFunctionCall","src":"5232:61:26"},"nodeType":"YulExpressionStatement","src":"5232:61:26"},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5318:3:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5336:1:26","type":"","value":"4"},{"name":"temp","nodeType":"YulIdentifier","src":"5339:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5332:3:26"},"nodeType":"YulFunctionCall","src":"5332:12:26"},{"kind":"number","nodeType":"YulLiteral","src":"5346:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5328:3:26"},"nodeType":"YulFunctionCall","src":"5328:21:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"5351:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"5323:4:26"},"nodeType":"YulFunctionCall","src":"5323:47:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"5310:7:26"},"nodeType":"YulFunctionCall","src":"5310:61:26"},"nodeType":"YulExpressionStatement","src":"5310:61:26"},{"nodeType":"YulAssignment","src":"5388:20:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5400:1:26","type":"","value":"8"},{"name":"temp","nodeType":"YulIdentifier","src":"5403:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5396:3:26"},"nodeType":"YulFunctionCall","src":"5396:12:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"5388:4:26"}]}]},"src":"5069:653:26"},{"nodeType":"YulVariableDeclaration","src":"5780:38:26","value":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5805:3:26"},{"name":"str","nodeType":"YulIdentifier","src":"5810:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5801:3:26"},"nodeType":"YulFunctionCall","src":"5801:13:26"},{"kind":"number","nodeType":"YulLiteral","src":"5816:1:26","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5797:3:26"},"nodeType":"YulFunctionCall","src":"5797:21:26"},"variables":[{"name":"strLength","nodeType":"YulTypedName","src":"5784:9:26","type":""}]},{"nodeType":"YulAssignment","src":"5890:19:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5901:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5906:2:26","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5897:3:26"},"nodeType":"YulFunctionCall","src":"5897:12:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"5890:3:26"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"5929:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5934:6:26","type":"","value":"0x3078"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5922:6:26"},"nodeType":"YulFunctionCall","src":"5922:19:26"},"nodeType":"YulExpressionStatement","src":"5922:19:26"},{"nodeType":"YulAssignment","src":"6008:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"6019:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6024:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6015:3:26"},"nodeType":"YulFunctionCall","src":"6015:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"6008:3:26"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"6046:3:26"},{"name":"strLength","nodeType":"YulIdentifier","src":"6051:9:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6039:6:26"},"nodeType":"YulFunctionCall","src":"6039:22:26"},"nodeType":"YulExpressionStatement","src":"6039:22:26"}]},"evmVersion":"london","externalReferences":[{"declaration":5356,"isOffset":false,"isSlot":false,"src":"4710:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"4817:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"4883:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5197:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5208:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5244:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5318:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5497:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5508:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5544:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5618:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5810:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5890:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5901:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"5929:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"6008:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"6019:3:26","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"6046:3:26","valueSize":1},{"declaration":5353,"isOffset":false,"isSlot":false,"src":"5175:5:26","valueSize":1}],"id":5358,"nodeType":"InlineAssembly","src":"4467:1604:26"}]},"id":5360,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"4388:11:26","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5353,"mutability":"mutable","name":"value","nameLocation":"4408:5:26","nodeType":"VariableDeclaration","scope":5360,"src":"4400:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4400:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4399:15:26"},"returnParameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"str","nameLocation":"4452:3:26","nodeType":"VariableDeclaration","scope":5360,"src":"4438:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5355,"name":"string","nodeType":"ElementaryTypeName","src":"4438:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4437:19:26"},"scope":5694,"src":"4379:1698:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5368,"nodeType":"Block","src":"6161:1510:26","statements":[{"AST":{"nodeType":"YulBlock","src":"6180:1485:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6194:24:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6213:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6207:5:26"},"nodeType":"YulFunctionCall","src":"6207:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"6198:5:26","type":""}]},{"nodeType":"YulAssignment","src":"6413:21:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6424:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6431:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6420:3:26"},"nodeType":"YulFunctionCall","src":"6420:14:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"6413:3:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6491:4:26","type":"","value":"0x40"},{"name":"str","nodeType":"YulIdentifier","src":"6497:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6484:6:26"},"nodeType":"YulFunctionCall","src":"6484:17:26"},"nodeType":"YulExpressionStatement","src":"6484:17:26"},{"body":{"nodeType":"YulBlock","src":"7175:243:26","statements":[{"nodeType":"YulAssignment","src":"7193:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7204:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7209:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7200:3:26"},"nodeType":"YulFunctionCall","src":"7200:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"7193:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7240:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7245:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7236:3:26"},"nodeType":"YulFunctionCall","src":"7236:11:26"},{"arguments":[{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"7258:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7264:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7254:3:26"},"nodeType":"YulFunctionCall","src":"7254:13:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"7269:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"7249:4:26"},"nodeType":"YulFunctionCall","src":"7249:39:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"7228:7:26"},"nodeType":"YulFunctionCall","src":"7228:61:26"},"nodeType":"YulExpressionStatement","src":"7228:61:26"},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7314:3:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7332:1:26","type":"","value":"4"},{"name":"temp","nodeType":"YulIdentifier","src":"7335:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7328:3:26"},"nodeType":"YulFunctionCall","src":"7328:12:26"},{"kind":"number","nodeType":"YulLiteral","src":"7342:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7324:3:26"},"nodeType":"YulFunctionCall","src":"7324:21:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"7347:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"7319:4:26"},"nodeType":"YulFunctionCall","src":"7319:47:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"7306:7:26"},"nodeType":"YulFunctionCall","src":"7306:61:26"},"nodeType":"YulExpressionStatement","src":"7306:61:26"},{"nodeType":"YulAssignment","src":"7384:20:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7396:1:26","type":"","value":"8"},{"name":"temp","nodeType":"YulIdentifier","src":"7399:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7392:3:26"},"nodeType":"YulFunctionCall","src":"7392:12:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"7384:4:26"}]}]},"condition":{"name":"length","nodeType":"YulIdentifier","src":"7111:6:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7118:56:26","statements":[{"nodeType":"YulAssignment","src":"7136:24:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7150:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7158:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7146:3:26"},"nodeType":"YulFunctionCall","src":"7146:14:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7136:6:26"}]}]},"pre":{"nodeType":"YulBlock","src":"6687:423:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6777:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6791:2:26","type":"","value":"20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6781:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6810:17:26","value":{"name":"value","nodeType":"YulIdentifier","src":"6822:5:26"},"variables":[{"name":"temp","nodeType":"YulTypedName","src":"6814:4:26","type":""}]},{"nodeType":"YulAssignment","src":"6844:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"6855:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6860:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6851:3:26"},"nodeType":"YulFunctionCall","src":"6851:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"6844:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"6891:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6896:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6887:3:26"},"nodeType":"YulFunctionCall","src":"6887:11:26"},{"arguments":[{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"6909:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"6915:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6905:3:26"},"nodeType":"YulFunctionCall","src":"6905:13:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"6920:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"6900:4:26"},"nodeType":"YulFunctionCall","src":"6900:39:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"6879:7:26"},"nodeType":"YulFunctionCall","src":"6879:61:26"},"nodeType":"YulExpressionStatement","src":"6879:61:26"},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"6965:3:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6983:1:26","type":"","value":"4"},{"name":"temp","nodeType":"YulIdentifier","src":"6986:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6979:3:26"},"nodeType":"YulFunctionCall","src":"6979:12:26"},{"kind":"number","nodeType":"YulLiteral","src":"6993:2:26","type":"","value":"15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6975:3:26"},"nodeType":"YulFunctionCall","src":"6975:21:26"},{"hexValue":"30313233343536373839616263646566","kind":"string","nodeType":"YulLiteral","src":"6998:18:26","type":"","value":"0123456789abcdef"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"6970:4:26"},"nodeType":"YulFunctionCall","src":"6970:47:26"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"6957:7:26"},"nodeType":"YulFunctionCall","src":"6957:61:26"},"nodeType":"YulExpressionStatement","src":"6957:61:26"},{"nodeType":"YulAssignment","src":"7035:20:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7047:1:26","type":"","value":"8"},{"name":"temp","nodeType":"YulIdentifier","src":"7050:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7043:3:26"},"nodeType":"YulFunctionCall","src":"7043:12:26"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"7035:4:26"}]},{"nodeType":"YulAssignment","src":"7072:24:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7086:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7082:3:26"},"nodeType":"YulFunctionCall","src":"7082:14:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7072:6:26"}]}]},"src":"6683:735:26"},{"nodeType":"YulAssignment","src":"7491:19:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7502:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7507:2:26","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7498:3:26"},"nodeType":"YulFunctionCall","src":"7498:12:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"7491:3:26"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7530:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7535:6:26","type":"","value":"0x3078"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7523:6:26"},"nodeType":"YulFunctionCall","src":"7523:19:26"},"nodeType":"YulExpressionStatement","src":"7523:19:26"},{"nodeType":"YulAssignment","src":"7609:18:26","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7620:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7625:1:26","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7616:3:26"},"nodeType":"YulFunctionCall","src":"7616:11:26"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"7609:3:26"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"7647:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"7652:2:26","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7640:6:26"},"nodeType":"YulFunctionCall","src":"7640:15:26"},"nodeType":"YulExpressionStatement","src":"7640:15:26"}]},"evmVersion":"london","externalReferences":[{"declaration":5365,"isOffset":false,"isSlot":false,"src":"6413:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"6497:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"6844:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"6855:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"6891:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"6965:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7193:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7204:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7240:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7314:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7491:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7502:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7530:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7609:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7620:3:26","valueSize":1},{"declaration":5365,"isOffset":false,"isSlot":false,"src":"7647:3:26","valueSize":1},{"declaration":5362,"isOffset":false,"isSlot":false,"src":"6822:5:26","valueSize":1}],"id":5367,"nodeType":"InlineAssembly","src":"6171:1494:26"}]},"id":5369,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"6092:11:26","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"6112:5:26","nodeType":"VariableDeclaration","scope":5369,"src":"6104:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5361,"name":"address","nodeType":"ElementaryTypeName","src":"6104:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6103:15:26"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"str","nameLocation":"6156:3:26","nodeType":"VariableDeclaration","scope":5369,"src":"6142:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5364,"name":"string","nodeType":"ElementaryTypeName","src":"6142:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6141:19:26"},"scope":5694,"src":"6083:1588:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5449,"nodeType":"Block","src":"7751:379:26","statements":[{"assignments":[5377],"declarations":[{"constant":false,"id":5377,"mutability":"mutable","name":"bStr","nameLocation":"7774:4:26","nodeType":"VariableDeclaration","scope":5449,"src":"7761:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5376,"name":"bytes","nodeType":"ElementaryTypeName","src":"7761:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5382,"initialValue":{"arguments":[{"id":5380,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"7787:3:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7781:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5378,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:26","typeDescriptions":{}}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7781:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7761:30:26"},{"assignments":[5384],"declarations":[{"constant":false,"id":5384,"mutability":"mutable","name":"bLower","nameLocation":"7814:6:26","nodeType":"VariableDeclaration","scope":5449,"src":"7801:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5383,"name":"bytes","nodeType":"ElementaryTypeName","src":"7801:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5390,"initialValue":{"arguments":[{"expression":{"id":5387,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"7833:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7838:6:26","memberName":"length","nodeType":"MemberAccess","src":"7833:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7823:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5385,"name":"bytes","nodeType":"ElementaryTypeName","src":"7827:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7823:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7801:44:26"},{"body":{"id":5442,"nodeType":"Block","src":"7897:196:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5402,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"7916:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5404,"indexExpression":{"id":5403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"7921:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7916:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"41","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7927:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_03783fac2efed8fbc9ad443e592ee30e61d65f471140c10ca155e937b435b760","typeString":"literal_string \"A\""},"value":"A"},"src":"7916:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7915:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5408,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"7936:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5410,"indexExpression":{"id":5409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"7941:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7936:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"5a","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7947:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5","typeString":"literal_string \"Z\""},"value":"Z"},"src":"7936:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7935:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7915:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5440,"nodeType":"Block","src":"8031:52:26","statements":[{"expression":{"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5432,"name":"bLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"8049:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5434,"indexExpression":{"id":5433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"8056:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8049:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5435,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"8061:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5437,"indexExpression":{"id":5436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"8066:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8061:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"8049:19:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5439,"nodeType":"ExpressionStatement","src":"8049:19:26"}]},"id":5441,"nodeType":"IfStatement","src":"7911:172:26","trueBody":{"id":5431,"nodeType":"Block","src":"7953:72:26","statements":[{"expression":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5415,"name":"bLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"7971:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5417,"indexExpression":{"id":5416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"7978:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7971:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5422,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"7996:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5424,"indexExpression":{"id":5423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"8001:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7996:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7990:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5420,"name":"uint8","nodeType":"ElementaryTypeName","src":"7990:5:26","typeDescriptions":{}}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7990:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8007:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7990:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7983:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5418,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7983:6:26","typeDescriptions":{}}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7983:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"7971:39:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5430,"nodeType":"ExpressionStatement","src":"7971:39:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"7875:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5396,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"7879:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7884:6:26","memberName":"length","nodeType":"MemberAccess","src":"7879:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7875:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5443,"initializationExpression":{"assignments":[5392],"declarations":[{"constant":false,"id":5392,"mutability":"mutable","name":"i","nameLocation":"7868:1:26","nodeType":"VariableDeclaration","scope":5443,"src":"7860:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5391,"name":"uint256","nodeType":"ElementaryTypeName","src":"7860:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5394,"initialValue":{"hexValue":"30","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7860:13:26"},"loopExpression":{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7892:3:26","subExpression":{"id":5399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"7892:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"7892:3:26"},"nodeType":"ForStatement","src":"7855:238:26"},{"expression":{"arguments":[{"id":5446,"name":"bLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"8116:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8109:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5444,"name":"string","nodeType":"ElementaryTypeName","src":"8109:6:26","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5375,"id":5448,"nodeType":"Return","src":"8102:21:26"}]},"id":5450,"implemented":true,"kind":"function","modifiers":[],"name":"toLower","nameLocation":"7686:7:26","nodeType":"FunctionDefinition","parameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"str","nameLocation":"7708:3:26","nodeType":"VariableDeclaration","scope":5450,"src":"7694:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5370,"name":"string","nodeType":"ElementaryTypeName","src":"7694:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7693:19:26"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5450,"src":"7736:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5373,"name":"string","nodeType":"ElementaryTypeName","src":"7736:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7735:15:26"},"scope":5694,"src":"7677:453:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5530,"nodeType":"Block","src":"8210:379:26","statements":[{"assignments":[5458],"declarations":[{"constant":false,"id":5458,"mutability":"mutable","name":"bStr","nameLocation":"8233:4:26","nodeType":"VariableDeclaration","scope":5530,"src":"8220:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5457,"name":"bytes","nodeType":"ElementaryTypeName","src":"8220:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5463,"initialValue":{"arguments":[{"id":5461,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"8246:3:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8240:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5459,"name":"bytes","nodeType":"ElementaryTypeName","src":"8240:5:26","typeDescriptions":{}}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8240:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8220:30:26"},{"assignments":[5465],"declarations":[{"constant":false,"id":5465,"mutability":"mutable","name":"bLower","nameLocation":"8273:6:26","nodeType":"VariableDeclaration","scope":5530,"src":"8260:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5464,"name":"bytes","nodeType":"ElementaryTypeName","src":"8260:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5471,"initialValue":{"arguments":[{"expression":{"id":5468,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8292:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8297:6:26","memberName":"length","nodeType":"MemberAccess","src":"8292:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8282:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5466,"name":"bytes","nodeType":"ElementaryTypeName","src":"8286:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8282:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8260:44:26"},{"body":{"id":5523,"nodeType":"Block","src":"8356:196:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5483,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8375:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5485,"indexExpression":{"id":5484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8380:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8375:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"61","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8386:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},"value":"a"},"src":"8375:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8374:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5489,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8395:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5491,"indexExpression":{"id":5490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8400:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8395:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"7a","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8406:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_41e406698d040bb44cf693b3dc50c37cf3c854c422d2645b1101662741fbaa88","typeString":"literal_string \"z\""},"value":"z"},"src":"8395:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8394:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8374:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5521,"nodeType":"Block","src":"8490:52:26","statements":[{"expression":{"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5513,"name":"bLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"8508:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5515,"indexExpression":{"id":5514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8515:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8508:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5516,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8520:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5518,"indexExpression":{"id":5517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8525:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8520:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"8508:19:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5520,"nodeType":"ExpressionStatement","src":"8508:19:26"}]},"id":5522,"nodeType":"IfStatement","src":"8370:172:26","trueBody":{"id":5512,"nodeType":"Block","src":"8412:72:26","statements":[{"expression":{"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5496,"name":"bLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"8430:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5498,"indexExpression":{"id":5497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8437:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8430:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5503,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8455:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5505,"indexExpression":{"id":5504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8460:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8455:7:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8449:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5501,"name":"uint8","nodeType":"ElementaryTypeName","src":"8449:5:26","typeDescriptions":{}}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8449:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":5507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8466:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8449:19:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5499,"name":"bytes1","nodeType":"ElementaryTypeName","src":"8442:6:26","typeDescriptions":{}}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"8430:39:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5511,"nodeType":"ExpressionStatement","src":"8430:39:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8334:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5477,"name":"bStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8338:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:6:26","memberName":"length","nodeType":"MemberAccess","src":"8338:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8334:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5524,"initializationExpression":{"assignments":[5473],"declarations":[{"constant":false,"id":5473,"mutability":"mutable","name":"i","nameLocation":"8327:1:26","nodeType":"VariableDeclaration","scope":5524,"src":"8319:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"8319:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5475,"initialValue":{"hexValue":"30","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8331:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8319:13:26"},"loopExpression":{"expression":{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8351:3:26","subExpression":{"id":5480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"8351:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5482,"nodeType":"ExpressionStatement","src":"8351:3:26"},"nodeType":"ForStatement","src":"8314:238:26"},{"expression":{"arguments":[{"id":5527,"name":"bLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"8575:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8568:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5525,"name":"string","nodeType":"ElementaryTypeName","src":"8568:6:26","typeDescriptions":{}}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8568:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5456,"id":5529,"nodeType":"Return","src":"8561:21:26"}]},"id":5531,"implemented":true,"kind":"function","modifiers":[],"name":"toUpper","nameLocation":"8145:7:26","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"str","nameLocation":"8167:3:26","nodeType":"VariableDeclaration","scope":5531,"src":"8153:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5451,"name":"string","nodeType":"ElementaryTypeName","src":"8153:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8152:19:26"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5531,"src":"8195:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5454,"name":"string","nodeType":"ElementaryTypeName","src":"8195:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8194:15:26"},"scope":5694,"src":"8136:453:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"8827:548:26","statements":[{"assignments":[5540],"declarations":[{"constant":false,"id":5540,"mutability":"mutable","name":"len","nameLocation":"8842:3:26","nodeType":"VariableDeclaration","scope":5627,"src":"8837:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint","nodeType":"ElementaryTypeName","src":"8837:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5541,"nodeType":"VariableDeclarationStatement","src":"8837:8:26"},{"assignments":[5543],"declarations":[{"constant":false,"id":5543,"mutability":"mutable","name":"i","nameLocation":"8860:1:26","nodeType":"VariableDeclaration","scope":5627,"src":"8855:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint","nodeType":"ElementaryTypeName","src":"8855:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5545,"initialValue":{"hexValue":"30","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8864:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8855:10:26"},{"assignments":[5547],"declarations":[{"constant":false,"id":5547,"mutability":"mutable","name":"bytelength","nameLocation":"8880:10:26","nodeType":"VariableDeclaration","scope":5627,"src":"8875:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5546,"name":"uint","nodeType":"ElementaryTypeName","src":"8875:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5553,"initialValue":{"expression":{"arguments":[{"id":5550,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"8899:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8893:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5548,"name":"bytes","nodeType":"ElementaryTypeName","src":"8893:5:26","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8893:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8902:6:26","memberName":"length","nodeType":"MemberAccess","src":"8893:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8875:33:26"},{"body":{"id":5623,"nodeType":"Block","src":"8955:394:26","statements":[{"assignments":[5565],"declarations":[{"constant":false,"id":5565,"mutability":"mutable","name":"b","nameLocation":"8976:1:26","nodeType":"VariableDeclaration","scope":5623,"src":"8969:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5564,"name":"bytes1","nodeType":"ElementaryTypeName","src":"8969:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5572,"initialValue":{"baseExpression":{"arguments":[{"id":5568,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"8986:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8980:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5566,"name":"bytes","nodeType":"ElementaryTypeName","src":"8980:5:26","typeDescriptions":{}}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8980:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5571,"indexExpression":{"id":5570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"8989:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8980:11:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"8969:22:26"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"9009:1:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783830","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9013:4:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"9009:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"9068:1:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30784530","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9072:4:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"0xE0"},"src":"9068:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"9127:1:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30784630","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:4:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"0xF0"},"src":"9127:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"9186:1:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30784638","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9190:4:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"0xF8"},"src":"9186:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"9245:1:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30784643","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9249:4:26","typeDescriptions":{"typeIdentifier":"t_rational_252_by_1","typeString":"int_const 252"},"value":"0xFC"},"src":"9245:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5617,"nodeType":"Block","src":"9300:39:26","statements":[{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"9318:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"36","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9323:1:26","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"9318:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5616,"nodeType":"ExpressionStatement","src":"9318:6:26"}]},"id":5618,"nodeType":"IfStatement","src":"9241:98:26","trueBody":{"id":5612,"nodeType":"Block","src":"9255:39:26","statements":[{"expression":{"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"9273:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"35","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9278:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9273:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5611,"nodeType":"ExpressionStatement","src":"9273:6:26"}]}},"id":5619,"nodeType":"IfStatement","src":"9182:157:26","trueBody":{"id":5604,"nodeType":"Block","src":"9196:39:26","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"9214:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9214:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ExpressionStatement","src":"9214:6:26"}]}},"id":5620,"nodeType":"IfStatement","src":"9123:216:26","trueBody":{"id":5596,"nodeType":"Block","src":"9137:39:26","statements":[{"expression":{"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"9155:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9160:1:26","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"9155:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5595,"nodeType":"ExpressionStatement","src":"9155:6:26"}]}},"id":5621,"nodeType":"IfStatement","src":"9064:275:26","trueBody":{"id":5588,"nodeType":"Block","src":"9078:39:26","statements":[{"expression":{"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"9096:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9101:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9096:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5587,"nodeType":"ExpressionStatement","src":"9096:6:26"}]}},"id":5622,"nodeType":"IfStatement","src":"9005:334:26","trueBody":{"id":5580,"nodeType":"Block","src":"9019:39:26","statements":[{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"9037:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5579,"nodeType":"ExpressionStatement","src":"9037:6:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"8932:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5559,"name":"bytelength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"8936:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5624,"initializationExpression":{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"8923:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8929:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8923:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"8923:7:26"},"loopExpression":{"expression":{"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8948:5:26","subExpression":{"id":5561,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"8948:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5563,"nodeType":"ExpressionStatement","src":"8948:5:26"},"nodeType":"ForStatement","src":"8918:431:26"},{"expression":{"id":5625,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"9365:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5538,"id":5626,"nodeType":"Return","src":"9358:10:26"}]},"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"8595:165:26","text":" @dev Returns the length of a given string\n @param s The string to measure the length of\n @return The length of the input string"},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"strlen","nameLocation":"8774:6:26","nodeType":"FunctionDefinition","parameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"s","nameLocation":"8795:1:26","nodeType":"VariableDeclaration","scope":5628,"src":"8781:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5533,"name":"string","nodeType":"ElementaryTypeName","src":"8781:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8780:17:26"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5628,"src":"8821:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint","nodeType":"ElementaryTypeName","src":"8821:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8820:6:26"},"scope":5694,"src":"8765:610:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"9455:297:26","statements":[{"assignments":[5636],"declarations":[{"constant":false,"id":5636,"mutability":"mutable","name":"b","nameLocation":"9478:1:26","nodeType":"VariableDeclaration","scope":5692,"src":"9465:14:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5635,"name":"bytes","nodeType":"ElementaryTypeName","src":"9465:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5641,"initialValue":{"arguments":[{"id":5639,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"9488:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9482:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5637,"name":"bytes","nodeType":"ElementaryTypeName","src":"9482:5:26","typeDescriptions":{}}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9482:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9465:25:26"},{"assignments":[5643],"declarations":[{"constant":false,"id":5643,"mutability":"mutable","name":"result","nameLocation":"9508:6:26","nodeType":"VariableDeclaration","scope":5692,"src":"9500:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5642,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5645,"initialValue":{"hexValue":"30","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9517:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9500:18:26"},{"body":{"id":5688,"nodeType":"Block","src":"9567:156:26","statements":[{"assignments":[5658],"declarations":[{"constant":false,"id":5658,"mutability":"mutable","name":"c","nameLocation":"9589:1:26","nodeType":"VariableDeclaration","scope":5688,"src":"9581:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5657,"name":"uint256","nodeType":"ElementaryTypeName","src":"9581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5668,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":5663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"9607:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5665,"indexExpression":{"id":5664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"9609:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9607:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9601:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5661,"name":"uint8","nodeType":"ElementaryTypeName","src":"9601:5:26","typeDescriptions":{}}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9601:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9593:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"9593:7:26","typeDescriptions":{}}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9593:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9581:32:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"9631:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3438","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9636:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"9631:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"9642:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3537","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9647:2:26","typeDescriptions":{"typeIdentifier":"t_rational_57_by_1","typeString":"int_const 57"},"value":"57"},"src":"9642:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9631:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5687,"nodeType":"IfStatement","src":"9627:86:26","trueBody":{"id":5686,"nodeType":"Block","src":"9651:62:26","statements":[{"expression":{"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"9669:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"9678:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9687:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9678:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5680,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"9692:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9678:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3438","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9696:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"9678:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9669:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5685,"nodeType":"ExpressionStatement","src":"9669:29:26"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"9548:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"9552:1:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9554:6:26","memberName":"length","nodeType":"MemberAccess","src":"9552:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9548:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5689,"initializationExpression":{"assignments":[5647],"declarations":[{"constant":false,"id":5647,"mutability":"mutable","name":"i","nameLocation":"9541:1:26","nodeType":"VariableDeclaration","scope":5689,"src":"9533:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5646,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5649,"initialValue":{"hexValue":"30","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9545:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9533:13:26"},"loopExpression":{"expression":{"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9562:3:26","subExpression":{"id":5654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"9562:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5656,"nodeType":"ExpressionStatement","src":"9562:3:26"},"nodeType":"ForStatement","src":"9528:195:26"},{"expression":{"id":5690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"9739:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5634,"id":5691,"nodeType":"Return","src":"9732:13:26"}]},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"stringToUint256","nameLocation":"9390:15:26","nodeType":"FunctionDefinition","parameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"s","nameLocation":"9420:1:26","nodeType":"VariableDeclaration","scope":5693,"src":"9406:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5629,"name":"string","nodeType":"ElementaryTypeName","src":"9406:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9405:17:26"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5693,"src":"9446:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5632,"name":"uint256","nodeType":"ElementaryTypeName","src":"9446:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:9:26"},"scope":5694,"src":"9381:371:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5695,"src":"103:9651:26","usedErrors":[]}],"src":"46:9709:26"},"id":26},"contracts/MocaPoints/realmIdContract/MetadataResolver.sol":{"ast":{"absolutePath":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol","exportedSymbols":{"DataTypes":[5328],"Initializable":[1074],"MetadataResolver":[6022]},"id":6023,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5696,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"46:24:27"},{"absolutePath":"contracts/MocaPoints/realmIdContract/DataTypes.sol","file":"./DataTypes.sol","id":5698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6023,"sourceUnit":5329,"src":"72:42:27","symbolAliases":[{"foreign":{"id":5697,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"80:9:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6023,"sourceUnit":1075,"src":"115:96:27","symbolAliases":[{"foreign":{"id":5699,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"123:13:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5701,"name":"Initializable","nameLocations":["251:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"251:13:27"},"id":5702,"nodeType":"InheritanceSpecifier","src":"251:13:27"}],"canonicalName":"MetadataResolver","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":6022,"linearizedBaseContracts":[6022,1074],"name":"MetadataResolver","nameLocation":"231:16:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5710,"mutability":"mutable","name":"_metadatas","nameLocation":"511:10:27","nodeType":"VariableDeclaration","scope":6022,"src":"446:75:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string => string)))"},"typeName":{"id":5709,"keyType":{"id":5703,"name":"uint64","nodeType":"ElementaryTypeName","src":"454:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"446:64:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string => string)))"},"valueType":{"id":5708,"keyType":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"464:45:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(string => string))"},"valueType":{"id":5707,"keyType":{"id":5705,"name":"string","nodeType":"ElementaryTypeName","src":"491:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"483:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueType":{"id":5706,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}}}},"visibility":"internal"},{"constant":false,"functionSelector":"d9a9eb24","id":5714,"mutability":"mutable","name":"metadataVersions","nameLocation":"561:16:27","nodeType":"VariableDeclaration","scope":6022,"src":"527:50:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"},"typeName":{"id":5713,"keyType":{"id":5711,"name":"uint256","nodeType":"ElementaryTypeName","src":"535:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"527:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"},"valueType":{"id":5712,"name":"uint64","nodeType":"ElementaryTypeName","src":"546:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},"visibility":"public"},{"constant":false,"id":5722,"mutability":"mutable","name":"_gatedMetadatas","nameLocation":"649:15:27","nodeType":"VariableDeclaration","scope":6022,"src":"584:80:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string => string)))"},"typeName":{"id":5721,"keyType":{"id":5715,"name":"uint64","nodeType":"ElementaryTypeName","src":"592:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"584:64:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string => string)))"},"valueType":{"id":5720,"keyType":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"602:45:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(string => string))"},"valueType":{"id":5719,"keyType":{"id":5717,"name":"string","nodeType":"ElementaryTypeName","src":"629:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"621:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueType":{"id":5718,"name":"string","nodeType":"ElementaryTypeName","src":"639:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}}}},"visibility":"internal"},{"constant":false,"functionSelector":"0ae16e53","id":5726,"mutability":"mutable","name":"gatedMetadataVersions","nameLocation":"704:21:27","nodeType":"VariableDeclaration","scope":6022,"src":"670:55:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"},"typeName":{"id":5725,"keyType":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"670:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"},"valueType":{"id":5724,"name":"uint64","nodeType":"ElementaryTypeName","src":"689:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}},"visibility":"public"},{"constant":false,"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"732:201:27","text":" @dev Added to allow future versions to add new variables in case this contract becomes\n      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":5731,"mutability":"mutable","name":"__gap","nameLocation":"958:5:27","nodeType":"VariableDeclaration","scope":6022,"src":"938:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$40_storage","typeString":"uint256[40]"},"typeName":{"baseType":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"938:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5730,"length":{"hexValue":"3430","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"946:2:27","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"ArrayTypeName","src":"938:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$40_storage_ptr","typeString":"uint256[40]"}},"visibility":"private"},{"anonymous":false,"eventSelector":"3773c27b7f05829d86b67403e26562fb9d776452b918d74b238bfdc1203bf0ed","id":5737,"name":"MetadataVersionChanged","nameLocation":"1402:22:27","nodeType":"EventDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1441:7:27","nodeType":"VariableDeclaration","scope":5737,"src":"1425:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5735,"indexed":false,"mutability":"mutable","name":"newVersion","nameLocation":"1457:10:27","nodeType":"VariableDeclaration","scope":5737,"src":"1450:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5734,"name":"uint64","nodeType":"ElementaryTypeName","src":"1450:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1424:44:27"},"src":"1396:73:27"},{"anonymous":false,"eventSelector":"601d4b2f0f06545c0f60d4f70e3bc5d78db246f7b66aaeb1ea23a56aa854c670","id":5745,"name":"MetadataChanged","nameLocation":"1481:15:27","nodeType":"EventDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1513:7:27","nodeType":"VariableDeclaration","scope":5745,"src":"1497:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5741,"indexed":false,"mutability":"mutable","name":"key","nameLocation":"1529:3:27","nodeType":"VariableDeclaration","scope":5745,"src":"1522:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5740,"name":"string","nodeType":"ElementaryTypeName","src":"1522:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5743,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1541:5:27","nodeType":"VariableDeclaration","scope":5745,"src":"1534:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5742,"name":"string","nodeType":"ElementaryTypeName","src":"1534:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1496:51:27"},"src":"1475:73:27"},{"anonymous":false,"eventSelector":"c87757beabcc5d61e477f4ffafb24461a0eb17e06d5bbf82354b4df70f3580c3","id":5751,"name":"GatedMetadataVersionChanged","nameLocation":"1560:27:27","nodeType":"EventDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1604:7:27","nodeType":"VariableDeclaration","scope":5751,"src":"1588:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1588:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5749,"indexed":false,"mutability":"mutable","name":"newVersion","nameLocation":"1620:10:27","nodeType":"VariableDeclaration","scope":5751,"src":"1613:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5748,"name":"uint64","nodeType":"ElementaryTypeName","src":"1613:6:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1587:44:27"},"src":"1554:78:27"},{"anonymous":false,"eventSelector":"29d4cd326b134d55e630ceb2871cea5e243b89bc9667e0c840b5da53b26ffd6a","id":5759,"name":"GatedMetadataChanged","nameLocation":"1644:20:27","nodeType":"EventDefinition","parameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1681:7:27","nodeType":"VariableDeclaration","scope":5759,"src":"1665:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5755,"indexed":false,"mutability":"mutable","name":"key","nameLocation":"1697:3:27","nodeType":"VariableDeclaration","scope":5759,"src":"1690:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5754,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5757,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1709:5:27","nodeType":"VariableDeclaration","scope":5759,"src":"1702:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5756,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1664:51:27"},"src":"1638:78:27"},{"body":{"id":5771,"nodeType":"Block","src":"1935:92:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":5765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"1975:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5764,"name":"_isMetadataAuthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"1953:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1953:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d455441444154415f554e415554484f5249534544","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1985:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_132cade136e5864ed6f6f60db47cb872f3bd8363cd38183a10b735188ba5ff5c","typeString":"literal_string \"METADATA_UNAUTHORISED\""},"value":"METADATA_UNAUTHORISED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_132cade136e5864ed6f6f60db47cb872f3bd8363cd38183a10b735188ba5ff5c","typeString":"literal_string \"METADATA_UNAUTHORISED\""}],"id":5763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1945:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5769,"nodeType":"ExpressionStatement","src":"1945:64:27"},{"id":5770,"nodeType":"PlaceholderStatement","src":"2019:1:27"}]},"id":5772,"name":"authorised","nameLocation":"1907:10:27","nodeType":"ModifierDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"tokenId","nameLocation":"1926:7:27","nodeType":"VariableDeclaration","scope":5772,"src":"1918:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1917:17:27"},"src":"1898:129:27","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"2075:103:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":5778,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"2120:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5777,"name":"_isGatedMetadataAuthorised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"2093:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47415445445f4d455441444154415f554e415554484f5249534544","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2130:29:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_690d813f825dd4dd92907e1429f9e9d01f0cb6239eb289ec82623ae817686b0d","typeString":"literal_string \"GATED_METADATA_UNAUTHORISED\""},"value":"GATED_METADATA_UNAUTHORISED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_690d813f825dd4dd92907e1429f9e9d01f0cb6239eb289ec82623ae817686b0d","typeString":"literal_string \"GATED_METADATA_UNAUTHORISED\""}],"id":5776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2085:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5782,"nodeType":"ExpressionStatement","src":"2085:75:27"},{"id":5783,"nodeType":"PlaceholderStatement","src":"2170:1:27"}]},"id":5785,"name":"gatedAuthorised","nameLocation":"2042:15:27","nodeType":"ModifierDefinition","parameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"mutability":"mutable","name":"tokenId","nameLocation":"2066:7:27","nodeType":"VariableDeclaration","scope":5785,"src":"2058:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2057:17:27"},"src":"2033:145:27","virtual":false,"visibility":"internal"},{"body":{"id":5798,"nodeType":"Block","src":"2552:41:27","statements":[{"expression":{"arguments":[{"id":5795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2578:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"_clearMetadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"2562:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2562:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5797,"nodeType":"ExpressionStatement","src":"2562:24:27"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"2360:109:27","text":" @notice  Clears all metadata on a token.\n @param   tokenId  token to clear metadata."},"functionSelector":"07b472c4","id":5799,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"2543:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5792,"kind":"modifierInvocation","modifierName":{"id":5790,"name":"authorised","nameLocations":["2532:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":5772,"src":"2532:10:27"},"nodeType":"ModifierInvocation","src":"2532:19:27"}],"name":"clearMetadatas","nameLocation":"2483:14:27","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"tokenId","nameLocation":"2506:7:27","nodeType":"VariableDeclaration","scope":5799,"src":"2498:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2498:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2497:17:27"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[],"src":"2552:0:27"},"scope":6022,"src":"2474:119:27","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":5812,"nodeType":"Block","src":"2807:46:27","statements":[{"expression":{"arguments":[{"id":5809,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"2838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"name":"_clearGatedMetadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"2817:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5811,"nodeType":"ExpressionStatement","src":"2817:29:27"}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"2599:115:27","text":" @notice  Clears all gated metadata on a token.\n @param   tokenId  token to clear metadata."},"functionSelector":"8e73361e","id":5813,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5805,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"2798:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5806,"kind":"modifierInvocation","modifierName":{"id":5804,"name":"gatedAuthorised","nameLocations":["2782:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":5785,"src":"2782:15:27"},"nodeType":"ModifierInvocation","src":"2782:24:27"}],"name":"clearGatedMetadatas","nameLocation":"2728:19:27","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"tokenId","nameLocation":"2756:7:27","nodeType":"VariableDeclaration","scope":5813,"src":"2748:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2748:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2747:17:27"},"returnParameters":{"id":5807,"nodeType":"ParameterList","parameters":[],"src":"2807:0:27"},"scope":6022,"src":"2719:134:27","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":5870,"nodeType":"Block","src":"3218:277:27","statements":[{"body":{"id":5868,"nodeType":"Block","src":"3271:218:27","statements":[{"assignments":[5841],"declarations":[{"constant":false,"id":5841,"mutability":"mutable","name":"pair","nameLocation":"3315:4:27","nodeType":"VariableDeclaration","scope":5868,"src":"3285:34:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair"},"typeName":{"id":5840,"nodeType":"UserDefinedTypeName","pathNode":{"id":5839,"name":"DataTypes.MetadataPair","nameLocations":["3285:9:27","3295:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5293,"src":"3285:22:27"},"referencedDeclaration":5293,"src":"3285:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_storage_ptr","typeString":"struct DataTypes.MetadataPair"}},"visibility":"internal"}],"id":5845,"initialValue":{"baseExpression":{"id":5842,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"3322:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DataTypes.MetadataPair calldata[] calldata"}},"id":5844,"indexExpression":{"id":5843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"3328:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3322:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_calldata_ptr","typeString":"struct DataTypes.MetadataPair calldata"}},"nodeType":"VariableDeclarationStatement","src":"3285:45:27"},{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5846,"name":"_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"3344:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string memory => string storage ref)))"}},"id":5853,"indexExpression":{"baseExpression":{"id":5847,"name":"metadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"3355:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":5849,"indexExpression":{"id":5848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3372:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:25:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3344:37:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(string memory => string storage ref))"}},"id":5854,"indexExpression":{"id":5850,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3382:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3344:46:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5855,"indexExpression":{"expression":{"id":5851,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"3391:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3396:3:27","memberName":"key","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"3391:8:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3344:56:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5856,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"3403:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3408:5:27","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5292,"src":"3403:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3344:69:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5859,"nodeType":"ExpressionStatement","src":"3344:69:27"},{"eventCall":{"arguments":[{"id":5861,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5862,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"3457:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3462:3:27","memberName":"key","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"3457:8:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5864,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"3467:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3472:5:27","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5292,"src":"3467:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5860,"name":"MetadataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"3432:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,string memory)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3432:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5867,"nodeType":"EmitStatement","src":"3427:51:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"3248:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5831,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"3252:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DataTypes.MetadataPair calldata[] calldata"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3258:6:27","memberName":"length","nodeType":"MemberAccess","src":"3252:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3248:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"initializationExpression":{"assignments":[5827],"declarations":[{"constant":false,"id":5827,"mutability":"mutable","name":"i","nameLocation":"3241:1:27","nodeType":"VariableDeclaration","scope":5869,"src":"3233:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5826,"name":"uint256","nodeType":"ElementaryTypeName","src":"3233:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5829,"initialValue":{"hexValue":"30","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3233:13:27"},"loopExpression":{"expression":{"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3266:3:27","subExpression":{"id":5834,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"3266:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5836,"nodeType":"ExpressionStatement","src":"3266:3:27"},"nodeType":"ForStatement","src":"3228:261:27"}]},"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"2859:240:27","text":" @notice Sets the metadatas associated with an token and keys.\n Only can be called by the owner or approved operators of that token.\n @param tokenId The token to update.\n @param pairs The kv pairs to set."},"functionSelector":"26ec9ad8","id":5871,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"3209:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5824,"kind":"modifierInvocation","modifierName":{"id":5822,"name":"authorised","nameLocations":["3198:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":5772,"src":"3198:10:27"},"nodeType":"ModifierInvocation","src":"3198:19:27"}],"name":"batchSetMetadatas","nameLocation":"3113:17:27","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"tokenId","nameLocation":"3139:7:27","nodeType":"VariableDeclaration","scope":5871,"src":"3131:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5820,"mutability":"mutable","name":"pairs","nameLocation":"3182:5:27","nodeType":"VariableDeclaration","scope":5871,"src":"3148:39:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_calldata_ptr_$dyn_calldata_ptr","typeString":"struct DataTypes.MetadataPair[]"},"typeName":{"baseType":{"id":5818,"nodeType":"UserDefinedTypeName","pathNode":{"id":5817,"name":"DataTypes.MetadataPair","nameLocations":["3148:9:27","3158:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5293,"src":"3148:22:27"},"referencedDeclaration":5293,"src":"3148:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_storage_ptr","typeString":"struct DataTypes.MetadataPair"}},"id":5819,"nodeType":"ArrayTypeName","src":"3148:24:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_storage_$dyn_storage_ptr","typeString":"struct DataTypes.MetadataPair[]"}},"visibility":"internal"}],"src":"3130:58:27"},"returnParameters":{"id":5825,"nodeType":"ParameterList","parameters":[],"src":"3218:0:27"},"scope":6022,"src":"3104:391:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5928,"nodeType":"Block","src":"3796:292:27","statements":[{"body":{"id":5926,"nodeType":"Block","src":"3849:233:27","statements":[{"assignments":[5899],"declarations":[{"constant":false,"id":5899,"mutability":"mutable","name":"pair","nameLocation":"3893:4:27","nodeType":"VariableDeclaration","scope":5926,"src":"3863:34:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair"},"typeName":{"id":5898,"nodeType":"UserDefinedTypeName","pathNode":{"id":5897,"name":"DataTypes.MetadataPair","nameLocations":["3863:9:27","3873:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5293,"src":"3863:22:27"},"referencedDeclaration":5293,"src":"3863:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_storage_ptr","typeString":"struct DataTypes.MetadataPair"}},"visibility":"internal"}],"id":5903,"initialValue":{"baseExpression":{"id":5900,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"3900:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_memory_ptr_$dyn_memory_ptr","typeString":"struct DataTypes.MetadataPair memory[] memory"}},"id":5902,"indexExpression":{"id":5901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"3906:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3900:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"nodeType":"VariableDeclarationStatement","src":"3863:45:27"},{"expression":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5904,"name":"_gatedMetadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"3922:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string memory => string storage ref)))"}},"id":5911,"indexExpression":{"baseExpression":{"id":5905,"name":"gatedMetadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"3938:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":5907,"indexExpression":{"id":5906,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"3960:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3938:30:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3922:47:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(string memory => string storage ref))"}},"id":5912,"indexExpression":{"id":5908,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"3970:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3922:56:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5913,"indexExpression":{"expression":{"id":5909,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3979:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3984:3:27","memberName":"key","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"3979:8:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3922:66:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5914,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3991:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3996:5:27","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5292,"src":"3991:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3922:79:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5917,"nodeType":"ExpressionStatement","src":"3922:79:27"},{"eventCall":{"arguments":[{"id":5919,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"4041:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5920,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4050:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4055:3:27","memberName":"key","nodeType":"MemberAccess","referencedDeclaration":5290,"src":"4050:8:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5922,"name":"pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4060:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_memory_ptr","typeString":"struct DataTypes.MetadataPair memory"}},"id":5923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4065:5:27","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5292,"src":"4060:10:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5918,"name":"GatedMetadataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"4020:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,string memory)"}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5925,"nodeType":"EmitStatement","src":"4015:56:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"3826:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5889,"name":"pairs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"3830:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_memory_ptr_$dyn_memory_ptr","typeString":"struct DataTypes.MetadataPair memory[] memory"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3836:6:27","memberName":"length","nodeType":"MemberAccess","src":"3830:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3826:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5927,"initializationExpression":{"assignments":[5885],"declarations":[{"constant":false,"id":5885,"mutability":"mutable","name":"i","nameLocation":"3819:1:27","nodeType":"VariableDeclaration","scope":5927,"src":"3811:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3811:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5887,"initialValue":{"hexValue":"30","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3823:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3811:13:27"},"loopExpression":{"expression":{"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3844:3:27","subExpression":{"id":5892,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"3844:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5894,"nodeType":"ExpressionStatement","src":"3844:3:27"},"nodeType":"ForStatement","src":"3806:276:27"}]},"documentation":{"id":5872,"nodeType":"StructuredDocumentation","src":"3501:170:27","text":" @notice Sets the gated metadatas associated with an token and keys.\n @param tokenId The token to update.\n @param pairs The kv pairs to set."},"functionSelector":"b33dab09","id":5929,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"3787:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5882,"kind":"modifierInvocation","modifierName":{"id":5880,"name":"gatedAuthorised","nameLocations":["3771:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":5785,"src":"3771:15:27"},"nodeType":"ModifierInvocation","src":"3771:24:27"}],"name":"batchSetGatedMetadatas","nameLocation":"3685:22:27","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"tokenId","nameLocation":"3716:7:27","nodeType":"VariableDeclaration","scope":5929,"src":"3708:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3708:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5878,"mutability":"mutable","name":"pairs","nameLocation":"3757:5:27","nodeType":"VariableDeclaration","scope":5929,"src":"3725:37:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_memory_ptr_$dyn_memory_ptr","typeString":"struct DataTypes.MetadataPair[]"},"typeName":{"baseType":{"id":5876,"nodeType":"UserDefinedTypeName","pathNode":{"id":5875,"name":"DataTypes.MetadataPair","nameLocations":["3725:9:27","3735:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5293,"src":"3725:22:27"},"referencedDeclaration":5293,"src":"3725:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_MetadataPair_$5293_storage_ptr","typeString":"struct DataTypes.MetadataPair"}},"id":5877,"nodeType":"ArrayTypeName","src":"3725:24:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MetadataPair_$5293_storage_$dyn_storage_ptr","typeString":"struct DataTypes.MetadataPair[]"}},"visibility":"internal"}],"src":"3707:56:27"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[],"src":"3796:0:27"},"scope":6022,"src":"3676:412:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5949,"nodeType":"Block","src":"4404:75:27","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5939,"name":"_metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"4421:10:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string memory => string storage ref)))"}},"id":5943,"indexExpression":{"baseExpression":{"id":5940,"name":"metadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"4432:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":5942,"indexExpression":{"id":5941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"4449:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4432:25:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4421:37:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(string memory => string storage ref))"}},"id":5945,"indexExpression":{"id":5944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"4459:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4421:46:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5947,"indexExpression":{"id":5946,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"4468:3:27","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4421:51:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":5938,"id":5948,"nodeType":"Return","src":"4414:58:27"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"4094:208:27","text":" @notice Returns the metadata associated with an token and key.\n @param tokenId The token to query.\n @param key The metadata key to query.\n @return The associated metadata."},"functionSelector":"cb4799f2","id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"getMetadata","nameLocation":"4316:11:27","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"tokenId","nameLocation":"4336:7:27","nodeType":"VariableDeclaration","scope":5950,"src":"4328:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint256","nodeType":"ElementaryTypeName","src":"4328:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5934,"mutability":"mutable","name":"key","nameLocation":"4361:3:27","nodeType":"VariableDeclaration","scope":5950,"src":"4345:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5933,"name":"string","nodeType":"ElementaryTypeName","src":"4345:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4327:38:27"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5950,"src":"4389:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5936,"name":"string","nodeType":"ElementaryTypeName","src":"4389:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4388:15:27"},"scope":6022,"src":"4307:172:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5970,"nodeType":"Block","src":"4802:85:27","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5960,"name":"_gatedMetadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"4819:15:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$_$","typeString":"mapping(uint64 => mapping(uint256 => mapping(string memory => string storage ref)))"}},"id":5964,"indexExpression":{"baseExpression":{"id":5961,"name":"gatedMetadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"4835:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":5963,"indexExpression":{"id":5962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"4857:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4835:30:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4819:47:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(string memory => string storage ref))"}},"id":5966,"indexExpression":{"id":5965,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"4867:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4819:56:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5968,"indexExpression":{"id":5967,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"4876:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4819:61:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":5959,"id":5969,"nodeType":"Return","src":"4812:68:27"}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"4485:214:27","text":" @notice Returns the gated metadata associated with an token and key.\n @param tokenId The token to query.\n @param key The metadata key to query.\n @return The associated metadata."},"functionSelector":"0739d191","id":5971,"implemented":true,"kind":"function","modifiers":[],"name":"getGatedMetadata","nameLocation":"4713:16:27","nodeType":"FunctionDefinition","parameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"tokenId","nameLocation":"4738:7:27","nodeType":"VariableDeclaration","scope":5971,"src":"4730:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"4730:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5955,"mutability":"mutable","name":"key","nameLocation":"4761:3:27","nodeType":"VariableDeclaration","scope":5971,"src":"4747:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5954,"name":"string","nodeType":"ElementaryTypeName","src":"4747:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4729:36:27"},"returnParameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5971,"src":"4787:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5957,"name":"string","nodeType":"ElementaryTypeName","src":"4787:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4786:15:27"},"scope":6022,"src":"4704:183:27","stateMutability":"view","virtual":false,"visibility":"public"},{"id":5978,"implemented":false,"kind":"function","modifiers":[],"name":"_isMetadataAuthorised","nameLocation":"5078:21:27","nodeType":"FunctionDefinition","parameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"tokenId","nameLocation":"5108:7:27","nodeType":"VariableDeclaration","scope":5978,"src":"5100:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"5100:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5099:17:27"},"returnParameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"5148:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5975,"name":"bool","nodeType":"ElementaryTypeName","src":"5148:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5147:6:27"},"scope":6022,"src":"5069:85:27","stateMutability":"view","virtual":true,"visibility":"internal"},{"id":5985,"implemented":false,"kind":"function","modifiers":[],"name":"_isGatedMetadataAuthorised","nameLocation":"5169:26:27","nodeType":"FunctionDefinition","parameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"tokenId","nameLocation":"5204:7:27","nodeType":"VariableDeclaration","scope":5985,"src":"5196:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5979,"name":"uint256","nodeType":"ElementaryTypeName","src":"5196:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5195:17:27"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5985,"src":"5244:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5982,"name":"bool","nodeType":"ElementaryTypeName","src":"5244:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5243:6:27"},"scope":6022,"src":"5160:90:27","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"5315:117:27","statements":[{"expression":{"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5325:27:27","subExpression":{"baseExpression":{"id":5990,"name":"metadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"5325:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":5992,"indexExpression":{"id":5991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"5342:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5325:25:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":5994,"nodeType":"ExpressionStatement","src":"5325:27:27"},{"eventCall":{"arguments":[{"id":5996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"5390:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":5997,"name":"metadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"5399:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":5999,"indexExpression":{"id":5998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"5416:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5399:25:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":5995,"name":"MetadataVersionChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"5367:22:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$returns$__$","typeString":"function (uint256,uint64)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5367:58:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6001,"nodeType":"EmitStatement","src":"5362:63:27"}]},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"_clearMetadatas","nameLocation":"5265:15:27","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"tokenId","nameLocation":"5289:7:27","nodeType":"VariableDeclaration","scope":6003,"src":"5281:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"5281:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5280:17:27"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[],"src":"5315:0:27"},"scope":6022,"src":"5256:176:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6020,"nodeType":"Block","src":"5502:132:27","statements":[{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5512:32:27","subExpression":{"baseExpression":{"id":6008,"name":"gatedMetadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"5512:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":6010,"indexExpression":{"id":6009,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"5534:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5512:30:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":6012,"nodeType":"ExpressionStatement","src":"5512:32:27"},{"eventCall":{"arguments":[{"id":6014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"5587:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":6015,"name":"gatedMetadataVersions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"5596:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint64_$","typeString":"mapping(uint256 => uint64)"}},"id":6017,"indexExpression":{"id":6016,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"5618:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5596:30:27","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6013,"name":"GatedMetadataVersionChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"5559:27:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint64_$returns$__$","typeString":"function (uint256,uint64)"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5559:68:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6019,"nodeType":"EmitStatement","src":"5554:73:27"}]},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"_clearGatedMetadatas","nameLocation":"5447:20:27","nodeType":"FunctionDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"tokenId","nameLocation":"5476:7:27","nodeType":"VariableDeclaration","scope":6021,"src":"5468:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5468:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5467:17:27"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[],"src":"5502:0:27"},"scope":6022,"src":"5438:196:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":6023,"src":"213:5423:27","usedErrors":[]}],"src":"46:5591:27"},"id":27},"contracts/MocaPoints/realmIdContract/RealmId.sol":{"ast":{"absolutePath":"contracts/MocaPoints/realmIdContract/RealmId.sol","exportedSymbols":{"DataTypes":[5328],"ERC721Upgradeable":[2289],"IMiddleware":[5205],"Initializable":[1074],"LibString":[5694],"MetadataResolver":[6022],"OwnableUpgradeable":[540],"PausableUpgradeable":[1337],"RealmId":[6730],"UUPSUpgradeable":[1210]},"id":6731,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6024,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:28"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":6026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":2290,"src":"57:105:28","symbolAliases":[{"foreign":{"id":6025,"name":"ERC721Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"65:17:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":6028,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":1338,"src":"163:105:28","symbolAliases":[{"foreign":{"id":6027,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"171:19:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":6030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":541,"src":"269:101:28","symbolAliases":[{"foreign":{"id":6029,"name":"OwnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"277:18:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":6032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":1075,"src":"371:96:28","symbolAliases":[{"foreign":{"id":6031,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"379:13:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":6034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":1211,"src":"468:100:28","symbolAliases":[{"foreign":{"id":6033,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"476:15:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/MocaPoints/interface/IMiddleware.sol","file":"../interface/IMiddleware.sol","id":6036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":5206,"src":"570:57:28","symbolAliases":[{"foreign":{"id":6035,"name":"IMiddleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"578:11:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/MocaPoints/realmIdContract/LibString.sol","file":"./LibString.sol","id":6038,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":5695,"src":"628:42:28","symbolAliases":[{"foreign":{"id":6037,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5694,"src":"636:9:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/MocaPoints/realmIdContract/DataTypes.sol","file":"./DataTypes.sol","id":6040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":5329,"src":"671:42:28","symbolAliases":[{"foreign":{"id":6039,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"679:9:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol","file":"./MetadataResolver.sol","id":6042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6731,"sourceUnit":6023,"src":"714:56:28","symbolAliases":[{"foreign":{"id":6041,"name":"MetadataResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"722:16:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6043,"name":"Initializable","nameLocations":["792:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1074,"src":"792:13:28"},"id":6044,"nodeType":"InheritanceSpecifier","src":"792:13:28"},{"baseName":{"id":6045,"name":"ERC721Upgradeable","nameLocations":["807:17:28"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"807:17:28"},"id":6046,"nodeType":"InheritanceSpecifier","src":"807:17:28"},{"baseName":{"id":6047,"name":"OwnableUpgradeable","nameLocations":["826:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":540,"src":"826:18:28"},"id":6048,"nodeType":"InheritanceSpecifier","src":"826:18:28"},{"baseName":{"id":6049,"name":"UUPSUpgradeable","nameLocations":["846:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"846:15:28"},"id":6050,"nodeType":"InheritanceSpecifier","src":"846:15:28"},{"baseName":{"id":6051,"name":"PausableUpgradeable","nameLocations":["863:19:28"],"nodeType":"IdentifierPath","referencedDeclaration":1337,"src":"863:19:28"},"id":6052,"nodeType":"InheritanceSpecifier","src":"863:19:28"},{"baseName":{"id":6053,"name":"MetadataResolver","nameLocations":["884:16:28"],"nodeType":"IdentifierPath","referencedDeclaration":6022,"src":"884:16:28"},"id":6054,"nodeType":"InheritanceSpecifier","src":"884:16:28"}],"canonicalName":"RealmId","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6730,"linearizedBaseContracts":[6730,6022,1337,1210,895,561,571,540,2289,2450,2423,3205,3217,2822,1074],"name":"RealmId","nameLocation":"781:7:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6056,"libraryName":{"id":6055,"name":"LibString","nameLocations":["913:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":5694,"src":"913:9:28"},"nodeType":"UsingForDirective","src":"907:22:28"},{"constant":false,"documentation":{"id":6057,"nodeType":"StructuredDocumentation","src":"1110:44:28","text":" @notice Token URI prefix."},"functionSelector":"96977c1b","id":6061,"mutability":"mutable","name":"baseTokenURIs","nameLocation":"1193:13:28","nodeType":"VariableDeclaration","scope":6730,"src":"1159:47:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string)"},"typeName":{"id":6060,"keyType":{"id":6058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1167:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1159:26:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string)"},"valueType":{"id":6059,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6062,"nodeType":"StructuredDocumentation","src":"1213:96:28","text":" @notice Middleware contract that processes before and after the registration."},"functionSelector":"57ad9c90","id":6066,"mutability":"mutable","name":"middlewares","nameLocation":"1349:11:28","nodeType":"VariableDeclaration","scope":6730,"src":"1314:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":6065,"keyType":{"id":6063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1322:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1314:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":6064,"name":"address","nodeType":"ElementaryTypeName","src":"1333:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6067,"nodeType":"StructuredDocumentation","src":"1367:161:28","text":" @notice The allowed parent nodes of the realmId.\n e.g. namehash('moca'), namehash('music')\n https://eips.ethereum.org/EIPS/eip-137"},"functionSelector":"16404d01","id":6071,"mutability":"mutable","name":"allowedParentNodes","nameLocation":"1565:18:28","nodeType":"VariableDeclaration","scope":6730,"src":"1533:50:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":6070,"keyType":{"id":6068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1541:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1533:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":6069,"name":"bool","nodeType":"ElementaryTypeName","src":"1552:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"1590:58:28","text":" @notice The parent node of the tokenId."},"functionSelector":"898572a6","id":6076,"mutability":"mutable","name":"parents","nameLocation":"1688:7:28","nodeType":"VariableDeclaration","scope":6730,"src":"1653:42:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":6075,"keyType":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1653:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueType":{"id":6074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1672:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6077,"nodeType":"StructuredDocumentation","src":"1702:57:28","text":" @notice The number of realmIds minted."},"id":6079,"mutability":"mutable","name":"_mintCount","nameLocation":"1781:10:28","nodeType":"VariableDeclaration","scope":6730,"src":"1764:27:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"1798:63:28","text":" @notice The number of burning for a tokenId."},"functionSelector":"a9735f94","id":6084,"mutability":"mutable","name":"burnCounts","nameLocation":"1901:10:28","nodeType":"VariableDeclaration","scope":6730,"src":"1866:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6083,"keyType":{"id":6081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1874:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1866:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1885:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":6085,"nodeType":"StructuredDocumentation","src":"2097:412:28","text":" @dev Emit an event when a realmId is registered.\n For example, when \"user.realm\" is registered, the name is \"user\" and the parent node is namehash(\"realm\").\n @param name         The name of the realmId\n @param parentNode   The parent node of the realmId\n @param tokenId      The tokenId of the realmId\n @param to           The address that owns the realmId"},"eventSelector":"fe530e3b4b61411a7dd546adc0e6736d4255abefc6b610401d26068e02dd495e","id":6095,"name":"Register","nameLocation":"2520:8:28","nodeType":"EventDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2536:4:28","nodeType":"VariableDeclaration","scope":6095,"src":"2529:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6086,"name":"string","nodeType":"ElementaryTypeName","src":"2529:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6089,"indexed":false,"mutability":"mutable","name":"parentNode","nameLocation":"2550:10:28","nodeType":"VariableDeclaration","scope":6095,"src":"2542:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2542:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6091,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2578:7:28","nodeType":"VariableDeclaration","scope":6095,"src":"2562:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2562:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2603:2:28","nodeType":"VariableDeclaration","scope":6095,"src":"2587:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6092,"name":"address","nodeType":"ElementaryTypeName","src":"2587:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2528:78:28"},"src":"2514:93:28"},{"anonymous":false,"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"2613:181:28","text":" @dev Emit an event when a realmId is burned.\n @param tokenId The tokenId of the realmId\n @param burnCount The number of burning for the tokenId"},"eventSelector":"410c5c259085cde81fedf70c1aa308ec839373c26e9b7ada6560a2aca0254eb6","id":6102,"name":"Burn","nameLocation":"2805:4:28","nodeType":"EventDefinition","parameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:28","nodeType":"VariableDeclaration","scope":6102,"src":"2810:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2810:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6100,"indexed":false,"mutability":"mutable","name":"burnCount","nameLocation":"2843:9:28","nodeType":"VariableDeclaration","scope":6102,"src":"2835:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2835:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2809:44:28"},"src":"2799:55:28"},{"anonymous":false,"documentation":{"id":6103,"nodeType":"StructuredDocumentation","src":"2860:239:28","text":" @dev Emit an event when a middleware is set.\n @param node       The node to set the middleware for\n @param middleware The middleware contract address\n @param data       The data of the middleware"},"eventSelector":"057da1406f81e1f47cda5874100d33118bf695f202882aacc5ca6d45ca917449","id":6111,"name":"MiddlewareSet","nameLocation":"3110:13:28","nodeType":"EventDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"indexed":false,"mutability":"mutable","name":"node","nameLocation":"3132:4:28","nodeType":"VariableDeclaration","scope":6111,"src":"3124:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3124:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6107,"indexed":true,"mutability":"mutable","name":"middleware","nameLocation":"3154:10:28","nodeType":"VariableDeclaration","scope":6111,"src":"3138:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6106,"name":"address","nodeType":"ElementaryTypeName","src":"3138:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6109,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"3172:4:28","nodeType":"VariableDeclaration","scope":6111,"src":"3166:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6108,"name":"bytes","nodeType":"ElementaryTypeName","src":"3166:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3123:54:28"},"src":"3104:74:28"},{"anonymous":false,"documentation":{"id":6112,"nodeType":"StructuredDocumentation","src":"3184:169:28","text":" @dev Emit an event when a base token URI is set.\n @param node The node to set the base token URI for\n @param uri The base token URI"},"eventSelector":"e091ab4d07f328dfaf2dcd8b50b82e02d05cf20d71197646ac6b2611395947b7","id":6118,"name":"BaseTokenURISet","nameLocation":"3364:15:28","nodeType":"EventDefinition","parameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"indexed":false,"mutability":"mutable","name":"node","nameLocation":"3388:4:28","nodeType":"VariableDeclaration","scope":6118,"src":"3380:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3380:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6116,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"3401:3:28","nodeType":"VariableDeclaration","scope":6118,"src":"3394:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6115,"name":"string","nodeType":"ElementaryTypeName","src":"3394:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3379:26:28"},"src":"3358:48:28"},{"anonymous":false,"documentation":{"id":6119,"nodeType":"StructuredDocumentation","src":"3412:261:28","text":" @dev Emit an event when a node allowance changed.\n @param node       The node\n @param label      The label of the node\n @param parentNode The parent node of the node\n @param allowed    The new state of allowance"},"eventSelector":"fbbc4187cf8cd340d071ee02e4e44eb8e04903a03649ef31a26e38798390351d","id":6129,"name":"NodeAllowanceChanged","nameLocation":"3684:20:28","nodeType":"EventDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"indexed":true,"mutability":"mutable","name":"node","nameLocation":"3721:4:28","nodeType":"VariableDeclaration","scope":6129,"src":"3705:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3705:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6123,"indexed":false,"mutability":"mutable","name":"label","nameLocation":"3734:5:28","nodeType":"VariableDeclaration","scope":6129,"src":"3727:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6122,"name":"string","nodeType":"ElementaryTypeName","src":"3727:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6125,"indexed":false,"mutability":"mutable","name":"parentNode","nameLocation":"3749:10:28","nodeType":"VariableDeclaration","scope":6129,"src":"3741:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3741:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6127,"indexed":false,"mutability":"mutable","name":"allowed","nameLocation":"3766:7:28","nodeType":"VariableDeclaration","scope":6129,"src":"3761:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6126,"name":"bool","nodeType":"ElementaryTypeName","src":"3761:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3704:70:28"},"src":"3678:97:28"},{"body":{"id":6162,"nodeType":"Block","src":"4556:242:28","statements":[{"expression":{"arguments":[{"id":6142,"name":"_tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"4625:10:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6143,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"4637:12:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6141,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"4611:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4611:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6145,"nodeType":"ExpressionStatement","src":"4611:39:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6146,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4660:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4660:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6148,"nodeType":"ExpressionStatement","src":"4660:24:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6149,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4694:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4694:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6151,"nodeType":"ExpressionStatement","src":"4694:16:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6152,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4720:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6154,"nodeType":"ExpressionStatement","src":"4720:17:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6155,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4747:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6157,"nodeType":"ExpressionStatement","src":"4747:8:28"},{"expression":{"arguments":[{"id":6159,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"4784:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6158,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"4765:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4765:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6161,"nodeType":"ExpressionStatement","src":"4765:26:28"}]},"documentation":{"id":6130,"nodeType":"StructuredDocumentation","src":"4120:316:28","text":" @notice Initialize default storage values and inherited contracts. This should be called\n         once after the contract is deployed via the ERC1967 proxy.\n @param _tokenName   The ERC-721 name of the fname token\n @param _tokenSymbol The ERC-721 symbol of the fname token"},"functionSelector":"077f224a","id":6163,"implemented":true,"kind":"function","modifiers":[{"id":6139,"kind":"modifierInvocation","modifierName":{"id":6138,"name":"initializer","nameLocations":["4544:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"4544:11:28"},"nodeType":"ModifierInvocation","src":"4544:11:28"}],"name":"initialize","nameLocation":"4450:10:28","nodeType":"FunctionDefinition","parameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"_tokenName","nameLocation":"4477:10:28","nodeType":"VariableDeclaration","scope":6163,"src":"4461:26:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6131,"name":"string","nodeType":"ElementaryTypeName","src":"4461:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6134,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"4505:12:28","nodeType":"VariableDeclaration","scope":6163,"src":"4489:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6133,"name":"string","nodeType":"ElementaryTypeName","src":"4489:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6136,"mutability":"mutable","name":"_owner","nameLocation":"4527:6:28","nodeType":"VariableDeclaration","scope":6163,"src":"4519:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6135,"name":"address","nodeType":"ElementaryTypeName","src":"4519:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4460:74:28"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[],"src":"4556:0:28"},"scope":6730,"src":"4441:357:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6219,"nodeType":"Block","src":"5268:436:28","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6174,"name":"allowedParentNodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"5286:18:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6176,"indexExpression":{"id":6175,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"5305:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5286:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f44455f4e4f545f414c4c4f574544","id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5318:18:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b57486942432b5ec89eaefbe7911ae2e63f871808daa7bd2261d2d6bdfa6e7e9","typeString":"literal_string \"NODE_NOT_ALLOWED\""},"value":"NODE_NOT_ALLOWED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b57486942432b5ec89eaefbe7911ae2e63f871808daa7bd2261d2d6bdfa6e7e9","typeString":"literal_string \"NODE_NOT_ALLOWED\""}],"id":6173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5278:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5278:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6179,"nodeType":"ExpressionStatement","src":"5278:59:28"},{"assignments":[6181],"declarations":[{"constant":false,"id":6181,"mutability":"mutable","name":"tokenId","nameLocation":"5355:7:28","nodeType":"VariableDeclaration","scope":6219,"src":"5347:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"5347:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6186,"initialValue":{"arguments":[{"id":6183,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"5376:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6184,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"5383:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6182,"name":"getTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"5365:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string calldata,bytes32) pure returns (uint256)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5347:47:28"},{"condition":{"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5408:17:28","subExpression":{"arguments":[{"id":6188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"5417:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6187,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"5409:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5409:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6216,"nodeType":"IfStatement","src":"5404:272:28","trueBody":{"id":6215,"nodeType":"Block","src":"5427:249:28","statements":[{"assignments":[6192],"declarations":[{"constant":false,"id":6192,"mutability":"mutable","name":"middleware","nameLocation":"5449:10:28","nodeType":"VariableDeclaration","scope":6215,"src":"5441:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6191,"name":"address","nodeType":"ElementaryTypeName","src":"5441:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6196,"initialValue":{"baseExpression":{"id":6193,"name":"middlewares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"5462:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":6195,"indexExpression":{"id":6194,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"5474:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5462:23:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5441:44:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"5503:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6198,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:28","typeDescriptions":{}}},"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5503:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6213,"nodeType":"Block","src":"5622:44:28","statements":[{"expression":{"hexValue":"74727565","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5647:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6172,"id":6212,"nodeType":"Return","src":"5640:11:28"}]},"id":6214,"nodeType":"IfStatement","src":"5499:167:28","trueBody":{"id":6210,"nodeType":"Block","src":"5529:87:28","statements":[{"expression":{"arguments":[{"id":6207,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"5595:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"arguments":[{"id":6204,"name":"middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"5566:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6203,"name":"IMiddleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"5554:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMiddleware_$5205_$","typeString":"type(contract IMiddleware)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5554:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMiddleware_$5205","typeString":"contract IMiddleware"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5578:16:28","memberName":"namePatternValid","nodeType":"MemberAccess","referencedDeclaration":5204,"src":"5554:40:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory) view external returns (bool)"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5554:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6172,"id":6209,"nodeType":"Return","src":"5547:54:28"}]}}]}},{"expression":{"hexValue":"66616c7365","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5692:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6172,"id":6218,"nodeType":"Return","src":"5685:12:28"}]},"documentation":{"id":6164,"nodeType":"StructuredDocumentation","src":"4990:184:28","text":" @notice Checks if a realmId is available for registration.\n @param _name       The name to check\n @param parentNode The parent node of the realmId"},"functionSelector":"2595eacb","id":6220,"implemented":true,"kind":"function","modifiers":[],"name":"available","nameLocation":"5188:9:28","nodeType":"FunctionDefinition","parameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"_name","nameLocation":"5214:5:28","nodeType":"VariableDeclaration","scope":6220,"src":"5198:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6165,"name":"string","nodeType":"ElementaryTypeName","src":"5198:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6168,"mutability":"mutable","name":"parentNode","nameLocation":"5229:10:28","nodeType":"VariableDeclaration","scope":6220,"src":"5221:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5221:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5197:43:28"},"returnParameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6220,"src":"5262:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6170,"name":"bool","nodeType":"ElementaryTypeName","src":"5262:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5261:6:28"},"scope":6730,"src":"5179:525:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6276,"nodeType":"Block","src":"6158:347:28","statements":[{"assignments":[6235],"declarations":[{"constant":false,"id":6235,"mutability":"mutable","name":"middleware","nameLocation":"6176:10:28","nodeType":"VariableDeclaration","scope":6276,"src":"6168:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6234,"name":"address","nodeType":"ElementaryTypeName","src":"6168:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6239,"initialValue":{"baseExpression":{"id":6236,"name":"middlewares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"6189:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":6238,"indexExpression":{"id":6237,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6201:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6189:23:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6168:44:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"6226:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6248:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6240:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6241,"name":"address","nodeType":"ElementaryTypeName","src":"6240:7:28","typeDescriptions":{}}},"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6240:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6226:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"6222:228:28","trueBody":{"id":6268,"nodeType":"Block","src":"6252:198:28","statements":[{"assignments":[6250],"declarations":[{"constant":false,"id":6250,"mutability":"mutable","name":"params","nameLocation":"6302:6:28","nodeType":"VariableDeclaration","scope":6268,"src":"6266:42:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_memory_ptr","typeString":"struct DataTypes.RegisterNameParams"},"typeName":{"id":6249,"nodeType":"UserDefinedTypeName","pathNode":{"id":6248,"name":"DataTypes.RegisterNameParams","nameLocations":["6266:9:28","6276:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":5302,"src":"6266:28:28"},"referencedDeclaration":5302,"src":"6266:28:28","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_storage_ptr","typeString":"struct DataTypes.RegisterNameParams"}},"visibility":"internal"}],"id":6259,"initialValue":{"arguments":[{"expression":{"id":6253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6340:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6344:6:28","memberName":"sender","nodeType":"MemberAccess","src":"6340:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6255,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"6352:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6256,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6359:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"6371:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6251,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"6311:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DataTypes_$5328_$","typeString":"type(library DataTypes)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6321:18:28","memberName":"RegisterNameParams","nodeType":"MemberAccess","referencedDeclaration":5302,"src":"6311:28:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RegisterNameParams_$5302_storage_ptr_$","typeString":"type(struct DataTypes.RegisterNameParams storage pointer)"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6311:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_memory_ptr","typeString":"struct DataTypes.RegisterNameParams memory"}},"nodeType":"VariableDeclarationStatement","src":"6266:108:28"},{"expression":{"arguments":[{"id":6264,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"6423:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_memory_ptr","typeString":"struct DataTypes.RegisterNameParams memory"}},{"id":6265,"name":"preData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"6431:7:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RegisterNameParams_$5302_memory_ptr","typeString":"struct DataTypes.RegisterNameParams memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":6261,"name":"middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"6400:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6260,"name":"IMiddleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"6388:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMiddleware_$5205_$","typeString":"type(contract IMiddleware)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMiddleware_$5205","typeString":"contract IMiddleware"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6412:10:28","memberName":"preProcess","nodeType":"MemberAccess","referencedDeclaration":5196,"src":"6388:34:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_RegisterNameParams_$5302_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct DataTypes.RegisterNameParams memory,bytes memory) payable external"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6267,"nodeType":"ExpressionStatement","src":"6388:51:28"}]}},{"expression":{"arguments":[{"id":6271,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"6476:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6272,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6483:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6273,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"6495:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6270,"name":"_register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"6466:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_bytes32_$_t_address_$returns$_t_uint256_$","typeString":"function (string calldata,bytes32,address) returns (uint256)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6466:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6233,"id":6275,"nodeType":"Return","src":"6459:39:28"}]},"documentation":{"id":6221,"nodeType":"StructuredDocumentation","src":"5710:319:28","text":" @notice Mints a new realmId.\n @param _name       The name to register\n @param parentNode The parent node of the realmId\n @param to         The address that will own the realmId\n @param preData    The register data for preprocess.\n @return uint256   Minted tokenId"},"functionSelector":"7c7efe6b","id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"register","nameLocation":"6043:8:28","nodeType":"FunctionDefinition","parameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6223,"mutability":"mutable","name":"_name","nameLocation":"6068:5:28","nodeType":"VariableDeclaration","scope":6277,"src":"6052:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6222,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6225,"mutability":"mutable","name":"parentNode","nameLocation":"6083:10:28","nodeType":"VariableDeclaration","scope":6277,"src":"6075:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6075:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6227,"mutability":"mutable","name":"to","nameLocation":"6103:2:28","nodeType":"VariableDeclaration","scope":6277,"src":"6095:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6226,"name":"address","nodeType":"ElementaryTypeName","src":"6095:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6229,"mutability":"mutable","name":"preData","nameLocation":"6122:7:28","nodeType":"VariableDeclaration","scope":6277,"src":"6107:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6228,"name":"bytes","nodeType":"ElementaryTypeName","src":"6107:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6051:79:28"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6277,"src":"6149:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"6149:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6148:9:28"},"scope":6730,"src":"6034:471:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6322,"nodeType":"Block","src":"6648:290:28","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6285,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6685:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6689:6:28","memberName":"sender","nodeType":"MemberAccess","src":"6685:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6287,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6697:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6284,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"6666:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"554e415554484f52495a4544","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6707:14:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","typeString":"literal_string \"UNAUTHORIZED\""},"value":"UNAUTHORIZED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","typeString":"literal_string \"UNAUTHORIZED\""}],"id":6283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6658:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6658:64:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6291,"nodeType":"ExpressionStatement","src":"6658:64:28"},{"expression":{"arguments":[{"id":6293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6748:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6292,"name":"_clearMetadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"6732:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6732:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6295,"nodeType":"ExpressionStatement","src":"6732:24:28"},{"expression":{"arguments":[{"id":6297,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6787:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6296,"name":"_clearGatedMetadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"6766:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6299,"nodeType":"ExpressionStatement","src":"6766:29:28"},{"expression":{"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6805:23:28","subExpression":{"baseExpression":{"id":6300,"name":"parents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"6812:7:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":6302,"indexExpression":{"id":6301,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6820:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6812:16:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"ExpressionStatement","src":"6805:23:28"},{"expression":{"arguments":[{"id":6308,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6850:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6305,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6838:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RealmId_$6730_$","typeString":"type(contract super RealmId)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6844:5:28","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2025,"src":"6838:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6838:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"ExpressionStatement","src":"6838:20:28"},{"expression":{"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"6868:12:28","subExpression":{"id":6311,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"6870:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6313,"nodeType":"ExpressionStatement","src":"6868:12:28"},{"eventCall":{"arguments":[{"id":6315,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6900:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6909:21:28","subExpression":{"baseExpression":{"id":6316,"name":"burnCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"6911:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6318,"indexExpression":{"id":6317,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"6922:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6911:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6314,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"6895:4:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6895:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6321,"nodeType":"EmitStatement","src":"6890:41:28"}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"6511:92:28","text":" @notice Burns a token.\n @param tokenId The token id to burn."},"functionSelector":"42966c68","id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"6617:4:28","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"tokenId","nameLocation":"6630:7:28","nodeType":"VariableDeclaration","scope":6323,"src":"6622:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6622:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6621:17:28"},"returnParameters":{"id":6282,"nodeType":"ParameterList","parameters":[],"src":"6648:0:28"},"scope":6730,"src":"6608:330:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1694],"body":{"id":6349,"nodeType":"Block","src":"7248:106:28","statements":[{"expression":{"arguments":[{"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7266:9:28","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6335,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7267:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7267:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5452414e534645525f4e4f545f414c4c4f574544","id":6338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7277:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61","typeString":"literal_string \"TRANSFER_NOT_ALLOWED\""},"value":"TRANSFER_NOT_ALLOWED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61","typeString":"literal_string \"TRANSFER_NOT_ALLOWED\""}],"id":6334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7258:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7258:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6340,"nodeType":"ExpressionStatement","src":"7258:42:28"},{"expression":{"arguments":[{"id":6344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"7329:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6345,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"7335:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6346,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"7339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6341,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7310:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RealmId_$6730_$","typeString":"type(contract super RealmId)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7316:12:28","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1694,"src":"7310:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7310:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6348,"nodeType":"ExpressionStatement","src":"7310:37:28"}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"7129:33:28","text":"@inheritdoc ERC721Upgradeable"},"functionSelector":"23b872dd","id":6350,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"7176:12:28","nodeType":"FunctionDefinition","overrides":{"id":6332,"nodeType":"OverrideSpecifier","overrides":[],"src":"7239:8:28"},"parameters":{"id":6331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"from","nameLocation":"7197:4:28","nodeType":"VariableDeclaration","scope":6350,"src":"7189:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6325,"name":"address","nodeType":"ElementaryTypeName","src":"7189:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6328,"mutability":"mutable","name":"to","nameLocation":"7211:2:28","nodeType":"VariableDeclaration","scope":6350,"src":"7203:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6327,"name":"address","nodeType":"ElementaryTypeName","src":"7203:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6330,"mutability":"mutable","name":"tokenId","nameLocation":"7223:7:28","nodeType":"VariableDeclaration","scope":6350,"src":"7215:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6329,"name":"uint256","nodeType":"ElementaryTypeName","src":"7215:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7188:43:28"},"returnParameters":{"id":6333,"nodeType":"ParameterList","parameters":[],"src":"7248:0:28"},"scope":6730,"src":"7167:187:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1713],"body":{"id":6376,"nodeType":"Block","src":"7483:110:28","statements":[{"expression":{"arguments":[{"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7501:9:28","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6362,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7502:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7502:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5452414e534645525f4e4f545f414c4c4f574544","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7512:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61","typeString":"literal_string \"TRANSFER_NOT_ALLOWED\""},"value":"TRANSFER_NOT_ALLOWED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61","typeString":"literal_string \"TRANSFER_NOT_ALLOWED\""}],"id":6361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7493:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7493:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"ExpressionStatement","src":"7493:42:28"},{"expression":{"arguments":[{"id":6371,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"7568:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6372,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"7574:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6373,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"7578:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6368,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7545:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RealmId_$6730_$","typeString":"type(contract super RealmId)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7551:16:28","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"7545:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7545:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6375,"nodeType":"ExpressionStatement","src":"7545:41:28"}]},"documentation":{"id":6351,"nodeType":"StructuredDocumentation","src":"7360:33:28","text":"@inheritdoc ERC721Upgradeable"},"functionSelector":"42842e0e","id":6377,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"7407:16:28","nodeType":"FunctionDefinition","overrides":{"id":6359,"nodeType":"OverrideSpecifier","overrides":[],"src":"7474:8:28"},"parameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"from","nameLocation":"7432:4:28","nodeType":"VariableDeclaration","scope":6377,"src":"7424:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6352,"name":"address","nodeType":"ElementaryTypeName","src":"7424:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6355,"mutability":"mutable","name":"to","nameLocation":"7446:2:28","nodeType":"VariableDeclaration","scope":6377,"src":"7438:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6354,"name":"address","nodeType":"ElementaryTypeName","src":"7438:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6357,"mutability":"mutable","name":"tokenId","nameLocation":"7458:7:28","nodeType":"VariableDeclaration","scope":6377,"src":"7450:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6356,"name":"uint256","nodeType":"ElementaryTypeName","src":"7450:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7423:43:28"},"returnParameters":{"id":6360,"nodeType":"ParameterList","parameters":[],"src":"7483:0:28"},"scope":6730,"src":"7398:195:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1743],"body":{"id":6406,"nodeType":"Block","src":"7741:116:28","statements":[{"expression":{"arguments":[{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7759:9:28","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6391,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"7760:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7760:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5452414e534645525f4e4f545f414c4c4f574544","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7770:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61","typeString":"literal_string \"TRANSFER_NOT_ALLOWED\""},"value":"TRANSFER_NOT_ALLOWED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61","typeString":"literal_string \"TRANSFER_NOT_ALLOWED\""}],"id":6390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7751:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7751:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6396,"nodeType":"ExpressionStatement","src":"7751:42:28"},{"expression":{"arguments":[{"id":6400,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"7826:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6382,"src":"7832:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6402,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"7836:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6403,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"7845:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6397,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7803:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RealmId_$6730_$","typeString":"type(contract super RealmId)"}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7809:16:28","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"7803:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7803:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"ExpressionStatement","src":"7803:47:28"}]},"documentation":{"id":6378,"nodeType":"StructuredDocumentation","src":"7599:33:28","text":"@inheritdoc ERC721Upgradeable"},"functionSelector":"b88d4fde","id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"7646:16:28","nodeType":"FunctionDefinition","overrides":{"id":6388,"nodeType":"OverrideSpecifier","overrides":[],"src":"7732:8:28"},"parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"from","nameLocation":"7671:4:28","nodeType":"VariableDeclaration","scope":6407,"src":"7663:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6379,"name":"address","nodeType":"ElementaryTypeName","src":"7663:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6382,"mutability":"mutable","name":"to","nameLocation":"7685:2:28","nodeType":"VariableDeclaration","scope":6407,"src":"7677:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6381,"name":"address","nodeType":"ElementaryTypeName","src":"7677:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6384,"mutability":"mutable","name":"tokenId","nameLocation":"7697:7:28","nodeType":"VariableDeclaration","scope":6407,"src":"7689:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6383,"name":"uint256","nodeType":"ElementaryTypeName","src":"7689:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6386,"mutability":"mutable","name":"data","nameLocation":"7719:4:28","nodeType":"VariableDeclaration","scope":6407,"src":"7706:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6385,"name":"bytes","nodeType":"ElementaryTypeName","src":"7706:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7662:62:28"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[],"src":"7741:0:28"},"scope":6730,"src":"7637:220:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1562],"body":{"id":6438,"nodeType":"Block","src":"8075:156:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":6418,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"8101:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6417,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"8093:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f544f4b454e5f4944","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8111:18:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_806fc2f0c528614f6371ca4d5621d8076cd90c51a2211198fdc62e3aba768436","typeString":"literal_string \"INVALID_TOKEN_ID\""},"value":"INVALID_TOKEN_ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_806fc2f0c528614f6371ca4d5621d8076cd90c51a2211198fdc62e3aba768436","typeString":"literal_string \"INVALID_TOKEN_ID\""}],"id":6416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8085:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"ExpressionStatement","src":"8085:45:28"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":6427,"name":"baseTokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"8171:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":6431,"indexExpression":{"baseExpression":{"id":6428,"name":"parents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"8185:7:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":6430,"indexExpression":{"id":6429,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"8193:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8185:16:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8171:31:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6432,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"8204:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8212:8:28","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":5340,"src":"8204:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8204:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8154:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8158:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"8154:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8154:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8147:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6423,"name":"string","nodeType":"ElementaryTypeName","src":"8147:6:28","typeDescriptions":{}}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:77:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6415,"id":6437,"nodeType":"Return","src":"8140:84:28"}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"7863:127:28","text":" @notice Returns a distinct URI for a tokenId\n @param tokenId The uint256 tokenId of the realmId"},"functionSelector":"c87b56dd","id":6439,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8004:8:28","nodeType":"FunctionDefinition","overrides":{"id":6412,"nodeType":"OverrideSpecifier","overrides":[],"src":"8042:8:28"},"parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"tokenId","nameLocation":"8021:7:28","nodeType":"VariableDeclaration","scope":6439,"src":"8013:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6409,"name":"uint256","nodeType":"ElementaryTypeName","src":"8013:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8012:17:28"},"returnParameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6439,"src":"8060:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6413,"name":"string","nodeType":"ElementaryTypeName","src":"8060:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8059:15:28"},"scope":6730,"src":"7995:236:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6469,"nodeType":"Block","src":"8635:134:28","statements":[{"assignments":[6450],"declarations":[{"constant":false,"id":6450,"mutability":"mutable","name":"nodehash","nameLocation":"8653:8:28","nodeType":"VariableDeclaration","scope":6469,"src":"8645:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8645:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6463,"initialValue":{"arguments":[{"arguments":[{"id":6454,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"8691:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6458,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"8719:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8713:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6456,"name":"bytes","nodeType":"ElementaryTypeName","src":"8713:5:28","typeDescriptions":{}}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8713:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6455,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8703:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8703:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6452,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8674:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8678:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"8674:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6451,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8664:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8664:64:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8645:83:28"},{"expression":{"arguments":[{"id":6466,"name":"nodehash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"8753:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8745:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8745:7:28","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8745:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6448,"id":6468,"nodeType":"Return","src":"8738:24:28"}]},"documentation":{"id":6440,"nodeType":"StructuredDocumentation","src":"8418:119:28","text":" @notice Gets token id of the gievn name and parent node.\n @return uint256 The token id."},"functionSelector":"cad6b901","id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"8551:10:28","nodeType":"FunctionDefinition","parameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"_name","nameLocation":"8578:5:28","nodeType":"VariableDeclaration","scope":6470,"src":"8562:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6441,"name":"string","nodeType":"ElementaryTypeName","src":"8562:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"parentNode","nameLocation":"8593:10:28","nodeType":"VariableDeclaration","scope":6470,"src":"8585:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8585:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8561:43:28"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"8626:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"8626:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8625:9:28"},"scope":6730,"src":"8542:227:28","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":6478,"nodeType":"Block","src":"8996:34:28","statements":[{"expression":{"id":6476,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"9013:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6475,"id":6477,"nodeType":"Return","src":"9006:17:28"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"8775:153:28","text":" @notice Gets total number of tokens in existence, burned tokens will reduce the count.\n @return uint256 The total supply."},"functionSelector":"18160ddd","id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"8942:11:28","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[],"src":"8953:2:28"},"returnParameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6479,"src":"8987:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6473,"name":"uint256","nodeType":"ElementaryTypeName","src":"8987:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8986:9:28"},"scope":6730,"src":"8933:97:28","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":6500,"nodeType":"Block","src":"9347:83:28","statements":[{"expression":{"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6489,"name":"baseTokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"9357:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_string_storage_$","typeString":"mapping(bytes32 => string storage ref)"}},"id":6491,"indexExpression":{"id":6490,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"9371:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9357:19:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6492,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"9379:3:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"9357:25:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6494,"nodeType":"ExpressionStatement","src":"9357:25:28"},{"eventCall":{"arguments":[{"id":6496,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"9413:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6497,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"9419:3:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6495,"name":"BaseTokenURISet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"9397:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,string memory)"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9397:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6499,"nodeType":"EmitStatement","src":"9392:31:28"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"9214:51:28","text":" @notice Sets the base token uri."},"functionSelector":"1f0509e0","id":6501,"implemented":true,"kind":"function","modifiers":[{"id":6487,"kind":"modifierInvocation","modifierName":{"id":6486,"name":"onlyOwner","nameLocations":["9337:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"9337:9:28"},"nodeType":"ModifierInvocation","src":"9337:9:28"}],"name":"setBaseTokenURI","nameLocation":"9279:15:28","nodeType":"FunctionDefinition","parameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"node","nameLocation":"9303:4:28","nodeType":"VariableDeclaration","scope":6501,"src":"9295:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9295:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6484,"mutability":"mutable","name":"uri","nameLocation":"9325:3:28","nodeType":"VariableDeclaration","scope":6501,"src":"9309:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6483,"name":"string","nodeType":"ElementaryTypeName","src":"9309:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9294:35:28"},"returnParameters":{"id":6488,"nodeType":"ParameterList","parameters":[],"src":"9347:0:28"},"scope":6730,"src":"9270:160:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6540,"nodeType":"Block","src":"9593:206:28","statements":[{"expression":{"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6513,"name":"middlewares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"9603:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":6515,"indexExpression":{"id":6514,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"9615:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9603:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6516,"name":"_middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"9623:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9603:31:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6518,"nodeType":"ExpressionStatement","src":"9603:31:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6519,"name":"_middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"9648:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9671:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6520,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:28","typeDescriptions":{}}},"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9648:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6533,"nodeType":"IfStatement","src":"9644:96:28","trueBody":{"id":6532,"nodeType":"Block","src":"9675:65:28","statements":[{"expression":{"arguments":[{"id":6529,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"9724:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":6526,"name":"_middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"9701:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6525,"name":"IMiddleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"9689:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMiddleware_$5205_$","typeString":"type(contract IMiddleware)"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9689:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMiddleware_$5205","typeString":"contract IMiddleware"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9714:9:28","memberName":"setMwData","nodeType":"MemberAccess","referencedDeclaration":5187,"src":"9689:34:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) external"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9689:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6531,"nodeType":"ExpressionStatement","src":"9689:40:28"}]}},{"eventCall":{"arguments":[{"id":6535,"name":"node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"9768:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6536,"name":"_middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"9774:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"9787:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6534,"name":"MiddlewareSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"9754:13:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,address,bytes memory)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9754:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"EmitStatement","src":"9749:43:28"}]},"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"9436:56:28","text":" @notice Sets the middleware and data."},"functionSelector":"f97c6dae","id":6541,"implemented":true,"kind":"function","modifiers":[{"id":6511,"kind":"modifierInvocation","modifierName":{"id":6510,"name":"onlyOwner","nameLocations":["9583:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"9583:9:28"},"nodeType":"ModifierInvocation","src":"9583:9:28"}],"name":"setMiddleware","nameLocation":"9506:13:28","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"node","nameLocation":"9528:4:28","nodeType":"VariableDeclaration","scope":6541,"src":"9520:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9520:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"_middleware","nameLocation":"9542:11:28","nodeType":"VariableDeclaration","scope":6541,"src":"9534:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6505,"name":"address","nodeType":"ElementaryTypeName","src":"9534:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6508,"mutability":"mutable","name":"data","nameLocation":"9570:4:28","nodeType":"VariableDeclaration","scope":6541,"src":"9555:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6507,"name":"bytes","nodeType":"ElementaryTypeName","src":"9555:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9519:56:28"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[],"src":"9593:0:28"},"scope":6730,"src":"9497:302:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6550,"nodeType":"Block","src":"9900:25:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6547,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"9910:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6549,"nodeType":"ExpressionStatement","src":"9910:8:28"}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"9805:54:28","text":" @notice Pauses all token transfers."},"functionSelector":"8456cb59","id":6551,"implemented":true,"kind":"function","modifiers":[{"id":6545,"kind":"modifierInvocation","modifierName":{"id":6544,"name":"onlyOwner","nameLocations":["9890:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"9890:9:28"},"nodeType":"ModifierInvocation","src":"9890:9:28"}],"name":"pause","nameLocation":"9873:5:28","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[],"src":"9878:2:28"},"returnParameters":{"id":6546,"nodeType":"ParameterList","parameters":[],"src":"9900:0:28"},"scope":6730,"src":"9864:61:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6560,"nodeType":"Block","src":"10030:27:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6557,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10040:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10040:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6559,"nodeType":"ExpressionStatement","src":"10040:10:28"}]},"documentation":{"id":6552,"nodeType":"StructuredDocumentation","src":"9931:56:28","text":" @notice Unpauses all token transfers."},"functionSelector":"3f4ba83a","id":6561,"implemented":true,"kind":"function","modifiers":[{"id":6555,"kind":"modifierInvocation","modifierName":{"id":6554,"name":"onlyOwner","nameLocations":["10020:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"10020:9:28"},"nodeType":"ModifierInvocation","src":"10020:9:28"}],"name":"unpause","nameLocation":"10001:7:28","nodeType":"FunctionDefinition","parameters":{"id":6553,"nodeType":"ParameterList","parameters":[],"src":"10008:2:28"},"returnParameters":{"id":6556,"nodeType":"ParameterList","parameters":[],"src":"10030:0:28"},"scope":6730,"src":"9992:65:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6622,"nodeType":"Block","src":"10520:362:28","statements":[{"expression":{"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6581,"name":"allowedNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10530:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6585,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"10571:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6589,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"10599:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10593:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6587,"name":"bytes","nodeType":"ElementaryTypeName","src":"10593:5:28","typeDescriptions":{}}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10593:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6586,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10583:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10583:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6583,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10554:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10558:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"10554:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10554:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10544:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10544:64:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10530:78:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6595,"nodeType":"ExpressionStatement","src":"10530:78:28"},{"expression":{"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6596,"name":"allowedParentNodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"10618:18:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6598,"indexExpression":{"id":6597,"name":"allowedNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10637:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10618:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6599,"name":"allow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"10652:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10618:39:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6601,"nodeType":"ExpressionStatement","src":"10618:39:28"},{"eventCall":{"arguments":[{"id":6603,"name":"allowedNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10693:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6604,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6564,"src":"10706:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6605,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"10713:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6606,"name":"allow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"10725:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6602,"name":"NodeAllowanceChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"10672:20:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes32_$_t_bool_$returns$__$","typeString":"function (bytes32,string memory,bytes32,bool)"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10672:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6608,"nodeType":"EmitStatement","src":"10667:64:28"},{"expression":{"arguments":[{"id":6610,"name":"allowedNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10757:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6611,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"10770:12:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6609,"name":"setBaseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"10741:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_string_calldata_ptr_$returns$__$","typeString":"function (bytes32,string calldata)"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10741:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6613,"nodeType":"ExpressionStatement","src":"10741:42:28"},{"expression":{"arguments":[{"id":6615,"name":"allowedNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10807:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6616,"name":"middleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"10820:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6617,"name":"middlewareData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"10832:14:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6614,"name":"setMiddleware","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"10793:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes32,address,bytes calldata)"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6619,"nodeType":"ExpressionStatement","src":"10793:54:28"},{"expression":{"id":6620,"name":"allowedNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10864:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6580,"id":6621,"nodeType":"Return","src":"10857:18:28"}]},"documentation":{"id":6562,"nodeType":"StructuredDocumentation","src":"10063:194:28","text":" @notice allows node. E.g. '.moca', '.music'.\n So that users can register realmId like 'abc.moca', 'abc.music'.\n @dev allowNode(\"moca\", bytes32(0)) to allow \".moca\""},"functionSelector":"d619cee5","id":6623,"implemented":true,"kind":"function","modifiers":[{"id":6577,"kind":"modifierInvocation","modifierName":{"id":6576,"name":"onlyOwner","nameLocations":["10480:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"10480:9:28"},"nodeType":"ModifierInvocation","src":"10480:9:28"}],"name":"allowNode","nameLocation":"10271:9:28","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6564,"mutability":"mutable","name":"label","nameLocation":"10306:5:28","nodeType":"VariableDeclaration","scope":6623,"src":"10290:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6563,"name":"string","nodeType":"ElementaryTypeName","src":"10290:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6566,"mutability":"mutable","name":"parentNode","nameLocation":"10329:10:28","nodeType":"VariableDeclaration","scope":6623,"src":"10321:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10321:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6568,"mutability":"mutable","name":"allow","nameLocation":"10354:5:28","nodeType":"VariableDeclaration","scope":6623,"src":"10349:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6567,"name":"bool","nodeType":"ElementaryTypeName","src":"10349:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6570,"mutability":"mutable","name":"baseTokenURI","nameLocation":"10385:12:28","nodeType":"VariableDeclaration","scope":6623,"src":"10369:28:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6569,"name":"string","nodeType":"ElementaryTypeName","src":"10369:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6572,"mutability":"mutable","name":"middleware","nameLocation":"10415:10:28","nodeType":"VariableDeclaration","scope":6623,"src":"10407:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6571,"name":"address","nodeType":"ElementaryTypeName","src":"10407:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6574,"mutability":"mutable","name":"middlewareData","nameLocation":"10450:14:28","nodeType":"VariableDeclaration","scope":6623,"src":"10435:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6573,"name":"bytes","nodeType":"ElementaryTypeName","src":"10435:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10280:190:28"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"allowedNode","nameLocation":"10507:11:28","nodeType":"VariableDeclaration","scope":6623,"src":"10499:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10499:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10498:21:28"},"scope":6730,"src":"10262:620:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1204],"body":{"id":6638,"nodeType":"Block","src":"11130:60:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6630,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"11148:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11148:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11159:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11163:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11159:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11148:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f545f4f574e4552","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11171:11:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4d6719c9f6bf1f398a61e7ceb8dff26d48346602421236409d0fb0b222f65b2","typeString":"literal_string \"NOT_OWNER\""},"value":"NOT_OWNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4d6719c9f6bf1f398a61e7ceb8dff26d48346602421236409d0fb0b222f65b2","typeString":"literal_string \"NOT_OWNER\""}],"id":6629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11140:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6637,"nodeType":"ExpressionStatement","src":"11140:43:28"}]},"id":6639,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"11080:17:28","nodeType":"FunctionDefinition","overrides":{"id":6627,"nodeType":"OverrideSpecifier","overrides":[],"src":"11121:8:28"},"parameters":{"id":6626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6639,"src":"11098:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6624,"name":"address","nodeType":"ElementaryTypeName","src":"11098:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11097:9:28"},"returnParameters":{"id":6628,"nodeType":"ParameterList","parameters":[],"src":"11130:0:28"},"scope":6730,"src":"11071:119:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6690,"nodeType":"Block","src":"11297:311:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":6652,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"11325:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6653,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"11332:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6651,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"11315:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_calldata_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (string calldata,bytes32) view returns (bool)"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11315:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e414d455f4e4f545f415641494c41424c45","id":6655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11345:20:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebd31dcb44615cb17d73824c7a1cd3c2bb0eba2c267afdbb3e21263895a0cab2","typeString":"literal_string \"NAME_NOT_AVAILABLE\""},"value":"NAME_NOT_AVAILABLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebd31dcb44615cb17d73824c7a1cd3c2bb0eba2c267afdbb3e21263895a0cab2","typeString":"literal_string \"NAME_NOT_AVAILABLE\""}],"id":6650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11307:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11307:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6657,"nodeType":"ExpressionStatement","src":"11307:59:28"},{"assignments":[6659],"declarations":[{"constant":false,"id":6659,"mutability":"mutable","name":"tokenId","nameLocation":"11384:7:28","nodeType":"VariableDeclaration","scope":6690,"src":"11376:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6658,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6664,"initialValue":{"arguments":[{"id":6661,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"11405:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6662,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"11412:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6660,"name":"getTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"11394:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string calldata,bytes32) pure returns (uint256)"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11394:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11376:47:28"},{"expression":{"arguments":[{"id":6668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"11449:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6669,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"11453:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6665,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11433:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RealmId_$6730_$","typeString":"type(contract super RealmId)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11439:9:28","memberName":"_safeMint","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"11433:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11433:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6671,"nodeType":"ExpressionStatement","src":"11433:28:28"},{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11471:12:28","subExpression":{"id":6672,"name":"_mintCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"11473:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6674,"nodeType":"ExpressionStatement","src":"11471:12:28"},{"expression":{"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6675,"name":"parents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"11493:7:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":6677,"indexExpression":{"id":6676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"11501:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11493:16:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6678,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"11512:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11493:29:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6680,"nodeType":"ExpressionStatement","src":"11493:29:28"},{"eventCall":{"arguments":[{"id":6682,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"11546:5:28","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6683,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"11553:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"11565:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6685,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"11574:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6681,"name":"Register","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"11537:8:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (string memory,bytes32,uint256,address)"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6687,"nodeType":"EmitStatement","src":"11532:45:28"},{"expression":{"id":6688,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"11594:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6649,"id":6689,"nodeType":"Return","src":"11587:14:28"}]},"id":6691,"implemented":true,"kind":"function","modifiers":[],"name":"_register","nameLocation":"11205:9:28","nodeType":"FunctionDefinition","parameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"_name","nameLocation":"11231:5:28","nodeType":"VariableDeclaration","scope":6691,"src":"11215:21:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6640,"name":"string","nodeType":"ElementaryTypeName","src":"11215:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6643,"mutability":"mutable","name":"parentNode","nameLocation":"11246:10:28","nodeType":"VariableDeclaration","scope":6691,"src":"11238:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11238:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6645,"mutability":"mutable","name":"to","nameLocation":"11266:2:28","nodeType":"VariableDeclaration","scope":6691,"src":"11258:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6644,"name":"address","nodeType":"ElementaryTypeName","src":"11258:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11214:55:28"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6691,"src":"11288:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"11288:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11287:9:28"},"scope":6730,"src":"11196:412:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5978],"body":{"id":6706,"nodeType":"Block","src":"11700:69:28","statements":[{"expression":{"arguments":[{"expression":{"id":6701,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11742:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11746:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11742:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"11754:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6699,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11717:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RealmId_$6730_$","typeString":"type(contract super RealmId)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11723:18:28","memberName":"_isApprovedOrOwner","nodeType":"MemberAccess","referencedDeclaration":1837,"src":"11717:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11717:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6698,"id":6705,"nodeType":"Return","src":"11710:52:28"}]},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"_isMetadataAuthorised","nameLocation":"11623:21:28","nodeType":"FunctionDefinition","overrides":{"id":6695,"nodeType":"OverrideSpecifier","overrides":[],"src":"11676:8:28"},"parameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"tokenId","nameLocation":"11653:7:28","nodeType":"VariableDeclaration","scope":6707,"src":"11645:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11645:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11644:17:28"},"returnParameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6707,"src":"11694:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6696,"name":"bool","nodeType":"ElementaryTypeName","src":"11694:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11693:6:28"},"scope":6730,"src":"11614:155:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[5985],"body":{"id":6728,"nodeType":"Block","src":"11866:100:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":6717,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"11892:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6716,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"11884:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11884:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"544f4b454e5f4e4f545f4d494e544544","id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11902:18:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c16e8dd559ff445903b31b38ace05f162c07cc8b27da39dd23f80f3dba5b68b1","typeString":"literal_string \"TOKEN_NOT_MINTED\""},"value":"TOKEN_NOT_MINTED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c16e8dd559ff445903b31b38ace05f162c07cc8b27da39dd23f80f3dba5b68b1","typeString":"literal_string \"TOKEN_NOT_MINTED\""}],"id":6715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11876:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11876:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6721,"nodeType":"ExpressionStatement","src":"11876:45:28"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"11938:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11938:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11949:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11953:6:28","memberName":"sender","nodeType":"MemberAccess","src":"11949:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11938:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6714,"id":6727,"nodeType":"Return","src":"11931:28:28"}]},"id":6729,"implemented":true,"kind":"function","modifiers":[],"name":"_isGatedMetadataAuthorised","nameLocation":"11784:26:28","nodeType":"FunctionDefinition","overrides":{"id":6711,"nodeType":"OverrideSpecifier","overrides":[],"src":"11842:8:28"},"parameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"tokenId","nameLocation":"11819:7:28","nodeType":"VariableDeclaration","scope":6729,"src":"11811:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6708,"name":"uint256","nodeType":"ElementaryTypeName","src":"11811:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11810:17:28"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6729,"src":"11860:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6712,"name":"bool","nodeType":"ElementaryTypeName","src":"11860:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11859:6:28"},"scope":6730,"src":"11775:191:28","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6731,"src":"772:11196:28","usedErrors":[]}],"src":"32:11937:28"},"id":28}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControl_init_unchained() internal onlyInitializing {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\nimport \\\"./math/SignedMathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMathUpgradeable.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3204,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":39,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"_roles","offset":0,"slot":"101","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":31,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":419,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":539,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":894,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":894,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1209,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1231,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":1336,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061176f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d0578063b88d4fde146101e3578063c87b56dd146101f6578063e985e9c51461020957600080fd5b80636352211e1461019457806370a08231146101a757806395d89b41146101c857600080fd5b8063095ea7b3116100bd578063095ea7b31461015957806323b872dd1461016e57806342842e0e1461018157600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f2366004611358565b610252565b60405190151581526020015b60405180910390f35b610114610337565b60405161010391906113e3565b61013461012f3660046113f6565b6103c9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b61016c610167366004611438565b6103fd565b005b61016c61017c366004611462565b61058e565b61016c61018f366004611462565b61062f565b6101346101a23660046113f6565b61064a565b6101ba6101b536600461149e565b6106d6565b604051908152602001610103565b6101146107a4565b61016c6101de3660046114b9565b6107b3565b61016c6101f1366004611524565b6107c2565b6101146102043660046113f6565b61086a565b6100f761021736600461161e565b73ffffffffffffffffffffffffffffffffffffffff9182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102e557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061033157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606065805461034690611651565b80601f016020809104026020016040519081016040528092919081815260200182805461037290611651565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b60006103d4826108de565b5060009081526069602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006104088261064a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821614806104f357506104f38133610217565b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104c1565b610589838361096c565b505050565b6105983382610a0c565b610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104c1565b610589838383610acc565b610589838383604051806020016040528060008152506107c2565b60008181526067602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104c1565b600073ffffffffffffffffffffffffffffffffffffffff821661077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104c1565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526068602052604090205490565b60606066805461034690611651565b6107be338383610dc7565b5050565b6107cc3383610a0c565b610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104c1565b61086484848484610ef4565b50505050565b6060610875826108de565b600061088c60408051602081019091526000815290565b905060008151116108ac57604051806020016040528060008152506108d7565b806108b684610f97565b6040516020016108c79291906116a4565b6040516020818303038152906040525b9392505050565b60008181526067602052604090205473ffffffffffffffffffffffffffffffffffffffff16610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104c1565b50565b600081815260696020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841690811790915581906109c68261064a565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a188361064a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610a86575073ffffffffffffffffffffffffffffffffffffffff8082166000908152606a602090815260408083209388168352929052205460ff165b80610ac457508373ffffffffffffffffffffffffffffffffffffffff16610aac846103c9565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610aec8261064a565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104c1565b73ffffffffffffffffffffffffffffffffffffffff8216610c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104c1565b8273ffffffffffffffffffffffffffffffffffffffff16610c518261064a565b73ffffffffffffffffffffffffffffffffffffffff1614610cf4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104c1565b600081815260696020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526068855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104c1565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152606a602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eff848484610acc565b610f0b84848484611055565b610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104c1565b60606000610fa483611248565b600101905060008167ffffffffffffffff811115610fc457610fc46114f5565b6040519080825280601f01601f191660200182016040528015610fee576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610ff857509392505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b1561123d576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a02906110cc9033908990889088906004016116d3565b6020604051808303816000875af1925050508015611125575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526111229181019061171c565b60015b6111f2573d808015611153576040519150601f19603f3d011682016040523d82523d6000602084013e611158565b606091505b5080516000036111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104c1565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610ac4565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611291577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106112bd576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112db57662386f26fc10000830492506010015b6305f5e10083106112f3576305f5e100830492506008015b612710831061130757612710830492506004015b60648310611319576064830492506002015b600a83106103315760010192915050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461096957600080fd5b60006020828403121561136a57600080fd5b81356108d78161132a565b60005b83811015611390578181015183820152602001611378565b50506000910152565b600081518084526113b1816020860160208601611375565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108d76020830184611399565b60006020828403121561140857600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461143357600080fd5b919050565b6000806040838503121561144b57600080fd5b6114548361140f565b946020939093013593505050565b60008060006060848603121561147757600080fd5b6114808461140f565b925061148e6020850161140f565b9150604084013590509250925092565b6000602082840312156114b057600080fd5b6108d78261140f565b600080604083850312156114cc57600080fd5b6114d58361140f565b9150602083013580151581146114ea57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561153a57600080fd5b6115438561140f565b93506115516020860161140f565b925060408501359150606085013567ffffffffffffffff8082111561157557600080fd5b818701915087601f83011261158957600080fd5b81358181111561159b5761159b6114f5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156115e1576115e16114f5565b816040528281528a60208487010111156115fa57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561163157600080fd5b61163a8361140f565b91506116486020840161140f565b90509250929050565b600181811c9082168061166557607f821691505b60208210810361169e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600083516116b6818460208801611375565b8351908301906116ca818360208801611375565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526117126080830184611399565b9695505050505050565b60006020828403121561172e57600080fd5b81516108d78161132a56fea26469706673582212208f4a093d99ee67b43e60e3aa5d8f59040b5a1aca143d3cf209a90a24cfa5477464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x16C PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x161E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2E5 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x331 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x1651 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1651 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x394 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 PUSH2 0x8DE JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP3 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x4F3 JUMPI POP PUSH2 0x4F3 DUP2 CALLER PUSH2 0x217 JUMP JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0x96C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x598 CALLER DUP3 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 DUP4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x7BE CALLER DUP4 DUP4 PUSH2 0xDC7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7CC CALLER DUP4 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x864 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEF4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x875 DUP3 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88C PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8D7 JUMP JUMPDEST DUP1 PUSH2 0x8B6 DUP5 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C7 SWAP3 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x9C6 DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA18 DUP4 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA86 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xAC4 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAC DUP5 PUSH2 0x3C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEC DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC51 DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xEFF DUP5 DUP5 DUP5 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xF0B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFA4 DUP4 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC4 PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFEE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xFF8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x10CC SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1125 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1122 SWAP2 DUP2 ADD SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0xAC4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1291 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x12BD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x12DB JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x12F3 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1307 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1319 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x331 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D7 DUP2 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1390 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1378 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x13B1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8D7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1454 DUP4 PUSH2 0x140F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1480 DUP5 PUSH2 0x140F JUMP JUMPDEST SWAP3 POP PUSH2 0x148E PUSH1 0x20 DUP6 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D7 DUP3 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D5 DUP4 PUSH2 0x140F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1543 DUP6 PUSH2 0x140F JUMP JUMPDEST SWAP4 POP PUSH2 0x1551 PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x159B JUMPI PUSH2 0x159B PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E1 PUSH2 0x14F5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x163A DUP4 PUSH2 0x140F JUMP JUMPDEST SWAP2 POP PUSH2 0x1648 PUSH1 0x20 DUP5 ADD PUSH2 0x140F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1665 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x169E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x16B6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1375 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x16CA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1375 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1712 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1399 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8D7 DUP2 PUSH2 0x132A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4A MULMOD RETURNDATASIZE SWAP10 0xEE PUSH8 0xB43E60E3AA5D8F59 DIV SIGNEXTEND GAS BYTE 0xCA EQ RETURNDATASIZE EXTCODECOPY CALLCODE MULMOD 0xA9 EXP 0x24 0xCF 0xA5 SELFBALANCE PUSH21 0x64736F6C6343000811003300000000000000000000 ","sourceMap":"751:17105:10:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2268":{"entryPoint":null,"id":2268,"parameterSlots":4,"returnSlots":0},"@_approve_2134":{"entryPoint":2412,"id":2134,"parameterSlots":2,"returnSlots":0},"@_baseURI_1571":{"entryPoint":null,"id":1571,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2255":{"entryPoint":null,"id":2255,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2242":{"entryPoint":4181,"id":2242,"parameterSlots":4,"returnSlots":1},"@_exists_1803":{"entryPoint":null,"id":1803,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1837":{"entryPoint":2572,"id":1837,"parameterSlots":2,"returnSlots":1},"@_msgSender_2807":{"entryPoint":null,"id":2807,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1785":{"entryPoint":null,"id":1785,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2180":{"entryPoint":2270,"id":2180,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1772":{"entryPoint":3828,"id":1772,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2166":{"entryPoint":3527,"id":2166,"parameterSlots":3,"returnSlots":0},"@_transfer_2110":{"entryPoint":2764,"id":2110,"parameterSlots":3,"returnSlots":0},"@approve_1614":{"entryPoint":1021,"id":1614,"parameterSlots":2,"returnSlots":0},"@balanceOf_1475":{"entryPoint":1750,"id":1475,"parameterSlots":1,"returnSlots":1},"@getApproved_1632":{"entryPoint":969,"id":1632,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1667":{"entryPoint":null,"id":1667,"parameterSlots":2,"returnSlots":1},"@isContract_2468":{"entryPoint":null,"id":2468,"parameterSlots":1,"returnSlots":1},"@log10_3920":{"entryPoint":4680,"id":3920,"parameterSlots":1,"returnSlots":1},"@name_1513":{"entryPoint":823,"id":1513,"parameterSlots":0,"returnSlots":1},"@ownerOf_1503":{"entryPoint":1610,"id":1503,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1713":{"entryPoint":1583,"id":1713,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1743":{"entryPoint":1986,"id":1743,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1649":{"entryPoint":1971,"id":1649,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1451":{"entryPoint":594,"id":1451,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3199":{"entryPoint":null,"id":3199,"parameterSlots":1,"returnSlots":1},"@symbol_1523":{"entryPoint":1956,"id":1523,"parameterSlots":0,"returnSlots":1},"@toString_2991":{"entryPoint":3991,"id":2991,"parameterSlots":1,"returnSlots":1},"@tokenURI_1562":{"entryPoint":2154,"id":1562,"parameterSlots":1,"returnSlots":1},"@transferFrom_1694":{"entryPoint":1422,"id":1694,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":5135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5218,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5412,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5305,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5176,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":4952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5796,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5843,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5091,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4981,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5713,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5365,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10536:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:133:29","statements":[{"body":{"nodeType":"YulBlock","src":"169:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:29"},"nodeType":"YulFunctionCall","src":"171:12:29"},"nodeType":"YulExpressionStatement","src":"171:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"99:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:29"},"nodeType":"YulFunctionCall","src":"88:78:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:29"},"nodeType":"YulFunctionCall","src":"78:89:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:29"},"nodeType":"YulFunctionCall","src":"71:97:29"},"nodeType":"YulIf","src":"68:117:29"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:29","type":""}],"src":"14:177:29"},{"body":{"nodeType":"YulBlock","src":"265:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"311:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"323:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"313:6:29"},"nodeType":"YulFunctionCall","src":"313:12:29"},"nodeType":"YulExpressionStatement","src":"313:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"286:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"295:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"282:3:29"},"nodeType":"YulFunctionCall","src":"282:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"307:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"278:3:29"},"nodeType":"YulFunctionCall","src":"278:32:29"},"nodeType":"YulIf","src":"275:52:29"},{"nodeType":"YulVariableDeclaration","src":"336:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"349:12:29"},"nodeType":"YulFunctionCall","src":"349:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"340:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"405:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"381:23:29"},"nodeType":"YulFunctionCall","src":"381:30:29"},"nodeType":"YulExpressionStatement","src":"381:30:29"},{"nodeType":"YulAssignment","src":"420:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"430:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"420:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"231:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"242:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"254:6:29","type":""}],"src":"196:245:29"},{"body":{"nodeType":"YulBlock","src":"541:92:29","statements":[{"nodeType":"YulAssignment","src":"551:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"574:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:29"},"nodeType":"YulFunctionCall","src":"559:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"551:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"618:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"611:6:29"},"nodeType":"YulFunctionCall","src":"611:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"604:6:29"},"nodeType":"YulFunctionCall","src":"604:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"586:6:29"},"nodeType":"YulFunctionCall","src":"586:41:29"},"nodeType":"YulExpressionStatement","src":"586:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"510:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"521:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"532:4:29","type":""}],"src":"446:187:29"},{"body":{"nodeType":"YulBlock","src":"704:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"714:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"723:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"718:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"783:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"808:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"813:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:29"},"nodeType":"YulFunctionCall","src":"804:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"827:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"832:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"823:3:29"},"nodeType":"YulFunctionCall","src":"823:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"817:5:29"},"nodeType":"YulFunctionCall","src":"817:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"797:6:29"},"nodeType":"YulFunctionCall","src":"797:39:29"},"nodeType":"YulExpressionStatement","src":"797:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"744:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"747:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"741:2:29"},"nodeType":"YulFunctionCall","src":"741:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"755:19:29","statements":[{"nodeType":"YulAssignment","src":"757:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"766:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:29"},"nodeType":"YulFunctionCall","src":"762:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"757:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"737:3:29","statements":[]},"src":"733:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"866:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"871:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"862:3:29"},"nodeType":"YulFunctionCall","src":"862:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"880:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"855:6:29"},"nodeType":"YulFunctionCall","src":"855:27:29"},"nodeType":"YulExpressionStatement","src":"855:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"682:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"687:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"692:6:29","type":""}],"src":"638:250:29"},{"body":{"nodeType":"YulBlock","src":"943:280:29","statements":[{"nodeType":"YulVariableDeclaration","src":"953:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"973:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"967:5:29"},"nodeType":"YulFunctionCall","src":"967:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"957:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"995:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1000:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"988:6:29"},"nodeType":"YulFunctionCall","src":"988:19:29"},"nodeType":"YulExpressionStatement","src":"988:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1055:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1062:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:29"},"nodeType":"YulFunctionCall","src":"1051:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1073:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1078:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1069:3:29"},"nodeType":"YulFunctionCall","src":"1069:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"1085:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1016:34:29"},"nodeType":"YulFunctionCall","src":"1016:76:29"},"nodeType":"YulExpressionStatement","src":"1016:76:29"},{"nodeType":"YulAssignment","src":"1101:116:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1116:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1129:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1137:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1125:3:29"},"nodeType":"YulFunctionCall","src":"1125:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"1142:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1121:3:29"},"nodeType":"YulFunctionCall","src":"1121:88:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1112:3:29"},"nodeType":"YulFunctionCall","src":"1112:98:29"},{"kind":"number","nodeType":"YulLiteral","src":"1212:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1108:3:29"},"nodeType":"YulFunctionCall","src":"1108:109:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1101:3:29"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"920:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"927:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"935:3:29","type":""}],"src":"893:330:29"},{"body":{"nodeType":"YulBlock","src":"1349:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1366:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1377:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1359:6:29"},"nodeType":"YulFunctionCall","src":"1359:21:29"},"nodeType":"YulExpressionStatement","src":"1359:21:29"},{"nodeType":"YulAssignment","src":"1389:53:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1415:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1427:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1438:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1423:3:29"},"nodeType":"YulFunctionCall","src":"1423:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1397:17:29"},"nodeType":"YulFunctionCall","src":"1397:45:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1389:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1318:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1329:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1340:4:29","type":""}],"src":"1228:220:29"},{"body":{"nodeType":"YulBlock","src":"1523:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"1569:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1578:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1581:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1571:6:29"},"nodeType":"YulFunctionCall","src":"1571:12:29"},"nodeType":"YulExpressionStatement","src":"1571:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1544:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1553:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1540:3:29"},"nodeType":"YulFunctionCall","src":"1540:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1565:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1536:3:29"},"nodeType":"YulFunctionCall","src":"1536:32:29"},"nodeType":"YulIf","src":"1533:52:29"},{"nodeType":"YulAssignment","src":"1594:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1604:12:29"},"nodeType":"YulFunctionCall","src":"1604:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1594:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1489:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1500:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1512:6:29","type":""}],"src":"1453:180:29"},{"body":{"nodeType":"YulBlock","src":"1739:125:29","statements":[{"nodeType":"YulAssignment","src":"1749:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1761:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1772:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1757:3:29"},"nodeType":"YulFunctionCall","src":"1757:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1749:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1791:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1806:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1814:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1802:3:29"},"nodeType":"YulFunctionCall","src":"1802:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1784:6:29"},"nodeType":"YulFunctionCall","src":"1784:74:29"},"nodeType":"YulExpressionStatement","src":"1784:74:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1708:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1719:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1730:4:29","type":""}],"src":"1638:226:29"},{"body":{"nodeType":"YulBlock","src":"1918:147:29","statements":[{"nodeType":"YulAssignment","src":"1928:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1950:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1937:12:29"},"nodeType":"YulFunctionCall","src":"1937:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1928:5:29"}]},{"body":{"nodeType":"YulBlock","src":"2043:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2052:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2055:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2045:6:29"},"nodeType":"YulFunctionCall","src":"2045:12:29"},"nodeType":"YulExpressionStatement","src":"2045:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1979:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1990:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1997:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1986:3:29"},"nodeType":"YulFunctionCall","src":"1986:54:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1976:2:29"},"nodeType":"YulFunctionCall","src":"1976:65:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1969:6:29"},"nodeType":"YulFunctionCall","src":"1969:73:29"},"nodeType":"YulIf","src":"1966:93:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1897:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1908:5:29","type":""}],"src":"1869:196:29"},{"body":{"nodeType":"YulBlock","src":"2157:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"2203:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2212:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2215:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2205:6:29"},"nodeType":"YulFunctionCall","src":"2205:12:29"},"nodeType":"YulExpressionStatement","src":"2205:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2187:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2174:3:29"},"nodeType":"YulFunctionCall","src":"2174:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2199:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2170:3:29"},"nodeType":"YulFunctionCall","src":"2170:32:29"},"nodeType":"YulIf","src":"2167:52:29"},{"nodeType":"YulAssignment","src":"2228:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2238:18:29"},"nodeType":"YulFunctionCall","src":"2238:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2228:6:29"}]},{"nodeType":"YulAssignment","src":"2276:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2303:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2314:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2299:3:29"},"nodeType":"YulFunctionCall","src":"2299:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2286:12:29"},"nodeType":"YulFunctionCall","src":"2286:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2276:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2115:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2126:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2138:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2146:6:29","type":""}],"src":"2070:254:29"},{"body":{"nodeType":"YulBlock","src":"2433:224:29","statements":[{"body":{"nodeType":"YulBlock","src":"2479:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2488:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2491:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2481:6:29"},"nodeType":"YulFunctionCall","src":"2481:12:29"},"nodeType":"YulExpressionStatement","src":"2481:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2454:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2450:3:29"},"nodeType":"YulFunctionCall","src":"2450:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2475:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2446:3:29"},"nodeType":"YulFunctionCall","src":"2446:32:29"},"nodeType":"YulIf","src":"2443:52:29"},{"nodeType":"YulAssignment","src":"2504:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2533:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2514:18:29"},"nodeType":"YulFunctionCall","src":"2514:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2504:6:29"}]},{"nodeType":"YulAssignment","src":"2552:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2585:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2596:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2581:3:29"},"nodeType":"YulFunctionCall","src":"2581:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2562:18:29"},"nodeType":"YulFunctionCall","src":"2562:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2552:6:29"}]},{"nodeType":"YulAssignment","src":"2609:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2636:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2647:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2632:3:29"},"nodeType":"YulFunctionCall","src":"2632:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2619:12:29"},"nodeType":"YulFunctionCall","src":"2619:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2609:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2383:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2394:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2406:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2414:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2422:6:29","type":""}],"src":"2329:328:29"},{"body":{"nodeType":"YulBlock","src":"2732:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"2778:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2787:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2790:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2780:6:29"},"nodeType":"YulFunctionCall","src":"2780:12:29"},"nodeType":"YulExpressionStatement","src":"2780:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2753:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2762:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2749:3:29"},"nodeType":"YulFunctionCall","src":"2749:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2774:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2745:3:29"},"nodeType":"YulFunctionCall","src":"2745:32:29"},"nodeType":"YulIf","src":"2742:52:29"},{"nodeType":"YulAssignment","src":"2803:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2832:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2813:18:29"},"nodeType":"YulFunctionCall","src":"2813:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2803:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2698:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2709:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2721:6:29","type":""}],"src":"2662:186:29"},{"body":{"nodeType":"YulBlock","src":"2954:76:29","statements":[{"nodeType":"YulAssignment","src":"2964:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2976:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2987:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:29"},"nodeType":"YulFunctionCall","src":"2972:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2964:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3006:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3017:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2999:6:29"},"nodeType":"YulFunctionCall","src":"2999:25:29"},"nodeType":"YulExpressionStatement","src":"2999:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2923:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2934:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2945:4:29","type":""}],"src":"2853:177:29"},{"body":{"nodeType":"YulBlock","src":"3119:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"3165:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3174:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3177:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3167:6:29"},"nodeType":"YulFunctionCall","src":"3167:12:29"},"nodeType":"YulExpressionStatement","src":"3167:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3140:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3149:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3136:3:29"},"nodeType":"YulFunctionCall","src":"3136:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3161:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3132:3:29"},"nodeType":"YulFunctionCall","src":"3132:32:29"},"nodeType":"YulIf","src":"3129:52:29"},{"nodeType":"YulAssignment","src":"3190:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3219:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3200:18:29"},"nodeType":"YulFunctionCall","src":"3200:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3190:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3238:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3268:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3279:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3264:3:29"},"nodeType":"YulFunctionCall","src":"3264:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3251:12:29"},"nodeType":"YulFunctionCall","src":"3251:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3242:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3336:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3345:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3348:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3338:6:29"},"nodeType":"YulFunctionCall","src":"3338:12:29"},"nodeType":"YulExpressionStatement","src":"3338:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3305:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3326:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3319:6:29"},"nodeType":"YulFunctionCall","src":"3319:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3312:6:29"},"nodeType":"YulFunctionCall","src":"3312:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3302:2:29"},"nodeType":"YulFunctionCall","src":"3302:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3295:6:29"},"nodeType":"YulFunctionCall","src":"3295:40:29"},"nodeType":"YulIf","src":"3292:60:29"},{"nodeType":"YulAssignment","src":"3361:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3371:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3361:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3077:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3088:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3100:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3108:6:29","type":""}],"src":"3035:347:29"},{"body":{"nodeType":"YulBlock","src":"3419:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3436:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3439:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3429:6:29"},"nodeType":"YulFunctionCall","src":"3429:88:29"},"nodeType":"YulExpressionStatement","src":"3429:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3533:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3536:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3526:6:29"},"nodeType":"YulFunctionCall","src":"3526:15:29"},"nodeType":"YulExpressionStatement","src":"3526:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3557:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3560:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3550:6:29"},"nodeType":"YulFunctionCall","src":"3550:15:29"},"nodeType":"YulExpressionStatement","src":"3550:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3387:184:29"},{"body":{"nodeType":"YulBlock","src":"3706:1067:29","statements":[{"body":{"nodeType":"YulBlock","src":"3753:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3762:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3765:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3755:6:29"},"nodeType":"YulFunctionCall","src":"3755:12:29"},"nodeType":"YulExpressionStatement","src":"3755:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3727:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3736:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3723:3:29"},"nodeType":"YulFunctionCall","src":"3723:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3748:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3719:3:29"},"nodeType":"YulFunctionCall","src":"3719:33:29"},"nodeType":"YulIf","src":"3716:53:29"},{"nodeType":"YulAssignment","src":"3778:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3807:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3788:18:29"},"nodeType":"YulFunctionCall","src":"3788:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3778:6:29"}]},{"nodeType":"YulAssignment","src":"3826:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3859:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3870:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3855:3:29"},"nodeType":"YulFunctionCall","src":"3855:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3836:18:29"},"nodeType":"YulFunctionCall","src":"3836:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3826:6:29"}]},{"nodeType":"YulAssignment","src":"3883:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3910:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3921:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3906:3:29"},"nodeType":"YulFunctionCall","src":"3906:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3893:12:29"},"nodeType":"YulFunctionCall","src":"3893:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3883:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3934:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3965:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3976:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3961:3:29"},"nodeType":"YulFunctionCall","src":"3961:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3948:12:29"},"nodeType":"YulFunctionCall","src":"3948:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3938:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3989:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3999:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3993:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4044:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4053:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4056:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4046:6:29"},"nodeType":"YulFunctionCall","src":"4046:12:29"},"nodeType":"YulExpressionStatement","src":"4046:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4032:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4040:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4029:2:29"},"nodeType":"YulFunctionCall","src":"4029:14:29"},"nodeType":"YulIf","src":"4026:34:29"},{"nodeType":"YulVariableDeclaration","src":"4069:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4094:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:29"},"nodeType":"YulFunctionCall","src":"4079:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4073:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4149:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4158:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4161:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4151:6:29"},"nodeType":"YulFunctionCall","src":"4151:12:29"},"nodeType":"YulExpressionStatement","src":"4151:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4128:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4132:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4124:3:29"},"nodeType":"YulFunctionCall","src":"4124:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4139:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4120:3:29"},"nodeType":"YulFunctionCall","src":"4120:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4113:6:29"},"nodeType":"YulFunctionCall","src":"4113:35:29"},"nodeType":"YulIf","src":"4110:55:29"},{"nodeType":"YulVariableDeclaration","src":"4174:26:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4197:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4184:12:29"},"nodeType":"YulFunctionCall","src":"4184:16:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4178:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4223:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4225:16:29"},"nodeType":"YulFunctionCall","src":"4225:18:29"},"nodeType":"YulExpressionStatement","src":"4225:18:29"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4215:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4219:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4212:2:29"},"nodeType":"YulFunctionCall","src":"4212:10:29"},"nodeType":"YulIf","src":"4209:36:29"},{"nodeType":"YulVariableDeclaration","src":"4254:76:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4264:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4258:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4339:23:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4353:5:29"},"nodeType":"YulFunctionCall","src":"4353:9:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4343:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4371:71:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4393:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4417:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4421:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4413:3:29"},"nodeType":"YulFunctionCall","src":"4413:13:29"},{"name":"_4","nodeType":"YulIdentifier","src":"4428:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4409:3:29"},"nodeType":"YulFunctionCall","src":"4409:22:29"},{"kind":"number","nodeType":"YulLiteral","src":"4433:2:29","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4405:3:29"},"nodeType":"YulFunctionCall","src":"4405:31:29"},{"name":"_4","nodeType":"YulIdentifier","src":"4438:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:29"},"nodeType":"YulFunctionCall","src":"4401:40:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4389:3:29"},"nodeType":"YulFunctionCall","src":"4389:53:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4375:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4501:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4503:16:29"},"nodeType":"YulFunctionCall","src":"4503:18:29"},"nodeType":"YulExpressionStatement","src":"4503:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4460:10:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4472:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4457:2:29"},"nodeType":"YulFunctionCall","src":"4457:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4480:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4492:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4477:2:29"},"nodeType":"YulFunctionCall","src":"4477:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4454:2:29"},"nodeType":"YulFunctionCall","src":"4454:46:29"},"nodeType":"YulIf","src":"4451:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4539:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4543:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4532:6:29"},"nodeType":"YulFunctionCall","src":"4532:22:29"},"nodeType":"YulExpressionStatement","src":"4532:22:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4570:6:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4578:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4563:6:29"},"nodeType":"YulFunctionCall","src":"4563:18:29"},"nodeType":"YulExpressionStatement","src":"4563:18:29"},{"body":{"nodeType":"YulBlock","src":"4627:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4629:6:29"},"nodeType":"YulFunctionCall","src":"4629:12:29"},"nodeType":"YulExpressionStatement","src":"4629:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4604:2:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4608:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4600:3:29"},"nodeType":"YulFunctionCall","src":"4600:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"4613:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4596:3:29"},"nodeType":"YulFunctionCall","src":"4596:20:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4618:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4593:2:29"},"nodeType":"YulFunctionCall","src":"4593:33:29"},"nodeType":"YulIf","src":"4590:53:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4669:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4677:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4665:3:29"},"nodeType":"YulFunctionCall","src":"4665:15:29"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4686:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4682:3:29"},"nodeType":"YulFunctionCall","src":"4682:11:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4695:2:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4652:12:29"},"nodeType":"YulFunctionCall","src":"4652:46:29"},"nodeType":"YulExpressionStatement","src":"4652:46:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4722:6:29"},{"name":"_3","nodeType":"YulIdentifier","src":"4730:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4718:3:29"},"nodeType":"YulFunctionCall","src":"4718:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"4735:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4714:3:29"},"nodeType":"YulFunctionCall","src":"4714:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"4740:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4707:6:29"},"nodeType":"YulFunctionCall","src":"4707:35:29"},"nodeType":"YulExpressionStatement","src":"4707:35:29"},{"nodeType":"YulAssignment","src":"4751:16:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4761:6:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4751:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3648:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3659:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3671:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3679:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3687:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3695:6:29","type":""}],"src":"3576:1197:29"},{"body":{"nodeType":"YulBlock","src":"4865:173:29","statements":[{"body":{"nodeType":"YulBlock","src":"4911:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4920:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4923:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4913:6:29"},"nodeType":"YulFunctionCall","src":"4913:12:29"},"nodeType":"YulExpressionStatement","src":"4913:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4886:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4895:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4882:3:29"},"nodeType":"YulFunctionCall","src":"4882:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4907:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4878:3:29"},"nodeType":"YulFunctionCall","src":"4878:32:29"},"nodeType":"YulIf","src":"4875:52:29"},{"nodeType":"YulAssignment","src":"4936:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4965:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4946:18:29"},"nodeType":"YulFunctionCall","src":"4946:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4936:6:29"}]},{"nodeType":"YulAssignment","src":"4984:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5017:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5028:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5013:3:29"},"nodeType":"YulFunctionCall","src":"5013:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4994:18:29"},"nodeType":"YulFunctionCall","src":"4994:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4984:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4823:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4834:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4846:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4854:6:29","type":""}],"src":"4778:260:29"},{"body":{"nodeType":"YulBlock","src":"5098:382:29","statements":[{"nodeType":"YulAssignment","src":"5108:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5122:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5125:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5118:3:29"},"nodeType":"YulFunctionCall","src":"5118:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5108:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"5139:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5169:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"5175:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5165:3:29"},"nodeType":"YulFunctionCall","src":"5165:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5143:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5216:31:29","statements":[{"nodeType":"YulAssignment","src":"5218:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5232:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5240:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5228:3:29"},"nodeType":"YulFunctionCall","src":"5228:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5218:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5196:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5189:6:29"},"nodeType":"YulFunctionCall","src":"5189:26:29"},"nodeType":"YulIf","src":"5186:61:29"},{"body":{"nodeType":"YulBlock","src":"5306:168:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5327:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5330:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5320:6:29"},"nodeType":"YulFunctionCall","src":"5320:88:29"},"nodeType":"YulExpressionStatement","src":"5320:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5428:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5431:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5421:6:29"},"nodeType":"YulFunctionCall","src":"5421:15:29"},"nodeType":"YulExpressionStatement","src":"5421:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5456:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5459:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5449:6:29"},"nodeType":"YulFunctionCall","src":"5449:15:29"},"nodeType":"YulExpressionStatement","src":"5449:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5262:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5285:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5282:2:29"},"nodeType":"YulFunctionCall","src":"5282:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5259:2:29"},"nodeType":"YulFunctionCall","src":"5259:38:29"},"nodeType":"YulIf","src":"5256:218:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5078:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5087:6:29","type":""}],"src":"5043:437:29"},{"body":{"nodeType":"YulBlock","src":"5659:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5676:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5687:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5669:6:29"},"nodeType":"YulFunctionCall","src":"5669:21:29"},"nodeType":"YulExpressionStatement","src":"5669:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5710:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5721:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5706:3:29"},"nodeType":"YulFunctionCall","src":"5706:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"5726:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5699:6:29"},"nodeType":"YulFunctionCall","src":"5699:30:29"},"nodeType":"YulExpressionStatement","src":"5699:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5749:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5760:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5745:3:29"},"nodeType":"YulFunctionCall","src":"5745:18:29"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"5765:34:29","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5738:6:29"},"nodeType":"YulFunctionCall","src":"5738:62:29"},"nodeType":"YulExpressionStatement","src":"5738:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5831:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:29"},"nodeType":"YulFunctionCall","src":"5816:18:29"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"5836:3:29","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5809:6:29"},"nodeType":"YulFunctionCall","src":"5809:31:29"},"nodeType":"YulExpressionStatement","src":"5809:31:29"},{"nodeType":"YulAssignment","src":"5849:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5861:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5872:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5857:3:29"},"nodeType":"YulFunctionCall","src":"5857:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5849:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5636:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5650:4:29","type":""}],"src":"5485:397:29"},{"body":{"nodeType":"YulBlock","src":"6061:251:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6078:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6089:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6071:6:29"},"nodeType":"YulFunctionCall","src":"6071:21:29"},"nodeType":"YulExpressionStatement","src":"6071:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6112:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6123:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6108:3:29"},"nodeType":"YulFunctionCall","src":"6108:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6128:2:29","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6101:6:29"},"nodeType":"YulFunctionCall","src":"6101:30:29"},"nodeType":"YulExpressionStatement","src":"6101:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6151:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6162:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6147:3:29"},"nodeType":"YulFunctionCall","src":"6147:18:29"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"6167:34:29","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6140:6:29"},"nodeType":"YulFunctionCall","src":"6140:62:29"},"nodeType":"YulExpressionStatement","src":"6140:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6222:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6233:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6218:3:29"},"nodeType":"YulFunctionCall","src":"6218:18:29"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"6238:31:29","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6211:6:29"},"nodeType":"YulFunctionCall","src":"6211:59:29"},"nodeType":"YulExpressionStatement","src":"6211:59:29"},{"nodeType":"YulAssignment","src":"6279:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6291:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6302:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6287:3:29"},"nodeType":"YulFunctionCall","src":"6287:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6279:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6038:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6052:4:29","type":""}],"src":"5887:425:29"},{"body":{"nodeType":"YulBlock","src":"6491:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6508:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6519:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6501:6:29"},"nodeType":"YulFunctionCall","src":"6501:21:29"},"nodeType":"YulExpressionStatement","src":"6501:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6542:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6553:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6538:3:29"},"nodeType":"YulFunctionCall","src":"6538:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6558:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6531:6:29"},"nodeType":"YulFunctionCall","src":"6531:30:29"},"nodeType":"YulExpressionStatement","src":"6531:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6581:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6592:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6577:3:29"},"nodeType":"YulFunctionCall","src":"6577:18:29"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"6597:34:29","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6570:6:29"},"nodeType":"YulFunctionCall","src":"6570:62:29"},"nodeType":"YulExpressionStatement","src":"6570:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6663:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:29"},"nodeType":"YulFunctionCall","src":"6648:18:29"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"6668:15:29","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6641:6:29"},"nodeType":"YulFunctionCall","src":"6641:43:29"},"nodeType":"YulExpressionStatement","src":"6641:43:29"},{"nodeType":"YulAssignment","src":"6693:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6705:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6716:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6701:3:29"},"nodeType":"YulFunctionCall","src":"6701:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6693:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6468:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6482:4:29","type":""}],"src":"6317:409:29"},{"body":{"nodeType":"YulBlock","src":"6905:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6922:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6933:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6915:6:29"},"nodeType":"YulFunctionCall","src":"6915:21:29"},"nodeType":"YulExpressionStatement","src":"6915:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6956:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6967:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6952:3:29"},"nodeType":"YulFunctionCall","src":"6952:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"6972:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6945:6:29"},"nodeType":"YulFunctionCall","src":"6945:30:29"},"nodeType":"YulExpressionStatement","src":"6945:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6995:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7006:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:29"},"nodeType":"YulFunctionCall","src":"6991:18:29"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"7011:26:29","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6984:6:29"},"nodeType":"YulFunctionCall","src":"6984:54:29"},"nodeType":"YulExpressionStatement","src":"6984:54:29"},{"nodeType":"YulAssignment","src":"7047:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7059:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7070:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7055:3:29"},"nodeType":"YulFunctionCall","src":"7055:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7047:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6882:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6896:4:29","type":""}],"src":"6731:348:29"},{"body":{"nodeType":"YulBlock","src":"7258:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7275:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7286:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7268:6:29"},"nodeType":"YulFunctionCall","src":"7268:21:29"},"nodeType":"YulExpressionStatement","src":"7268:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7309:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7320:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7305:3:29"},"nodeType":"YulFunctionCall","src":"7305:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"7325:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7298:6:29"},"nodeType":"YulFunctionCall","src":"7298:30:29"},"nodeType":"YulExpressionStatement","src":"7298:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7348:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7359:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7344:3:29"},"nodeType":"YulFunctionCall","src":"7344:18:29"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7364:34:29","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7337:6:29"},"nodeType":"YulFunctionCall","src":"7337:62:29"},"nodeType":"YulExpressionStatement","src":"7337:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7419:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7430:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7415:3:29"},"nodeType":"YulFunctionCall","src":"7415:18:29"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7435:11:29","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7408:6:29"},"nodeType":"YulFunctionCall","src":"7408:39:29"},"nodeType":"YulExpressionStatement","src":"7408:39:29"},{"nodeType":"YulAssignment","src":"7456:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7468:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7479:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:29"},"nodeType":"YulFunctionCall","src":"7464:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7456:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7235:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7249:4:29","type":""}],"src":"7084:405:29"},{"body":{"nodeType":"YulBlock","src":"7681:309:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7691:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7711:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7705:5:29"},"nodeType":"YulFunctionCall","src":"7705:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7695:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7766:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7774:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7762:3:29"},"nodeType":"YulFunctionCall","src":"7762:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7781:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7786:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7727:34:29"},"nodeType":"YulFunctionCall","src":"7727:66:29"},"nodeType":"YulExpressionStatement","src":"7727:66:29"},{"nodeType":"YulVariableDeclaration","src":"7802:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7819:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7824:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7815:3:29"},"nodeType":"YulFunctionCall","src":"7815:16:29"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"7806:5:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7840:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7862:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7856:5:29"},"nodeType":"YulFunctionCall","src":"7856:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"7844:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7917:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7925:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7913:3:29"},"nodeType":"YulFunctionCall","src":"7913:17:29"},{"name":"end_1","nodeType":"YulIdentifier","src":"7932:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7939:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7878:34:29"},"nodeType":"YulFunctionCall","src":"7878:70:29"},"nodeType":"YulExpressionStatement","src":"7878:70:29"},{"nodeType":"YulAssignment","src":"7957:27:29","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"7968:5:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"7975:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:29"},"nodeType":"YulFunctionCall","src":"7964:20:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7957:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7649:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7654:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7662:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7673:3:29","type":""}],"src":"7494:496:29"},{"body":{"nodeType":"YulBlock","src":"8169:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8186:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8197:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8179:6:29"},"nodeType":"YulFunctionCall","src":"8179:21:29"},"nodeType":"YulExpressionStatement","src":"8179:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8220:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8216:3:29"},"nodeType":"YulFunctionCall","src":"8216:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8236:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8209:6:29"},"nodeType":"YulFunctionCall","src":"8209:30:29"},"nodeType":"YulExpressionStatement","src":"8209:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8259:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8270:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:29"},"nodeType":"YulFunctionCall","src":"8255:18:29"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"8275:34:29","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8248:6:29"},"nodeType":"YulFunctionCall","src":"8248:62:29"},"nodeType":"YulExpressionStatement","src":"8248:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8330:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8341:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8326:3:29"},"nodeType":"YulFunctionCall","src":"8326:18:29"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"8346:7:29","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8319:6:29"},"nodeType":"YulFunctionCall","src":"8319:35:29"},"nodeType":"YulExpressionStatement","src":"8319:35:29"},{"nodeType":"YulAssignment","src":"8363:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8375:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8386:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8371:3:29"},"nodeType":"YulFunctionCall","src":"8371:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8363:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8146:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8160:4:29","type":""}],"src":"7995:401:29"},{"body":{"nodeType":"YulBlock","src":"8575:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8592:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8603:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8585:6:29"},"nodeType":"YulFunctionCall","src":"8585:21:29"},"nodeType":"YulExpressionStatement","src":"8585:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8626:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8637:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8622:3:29"},"nodeType":"YulFunctionCall","src":"8622:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"8642:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8615:6:29"},"nodeType":"YulFunctionCall","src":"8615:30:29"},"nodeType":"YulExpressionStatement","src":"8615:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8665:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8676:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8661:3:29"},"nodeType":"YulFunctionCall","src":"8661:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8681:34:29","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8654:6:29"},"nodeType":"YulFunctionCall","src":"8654:62:29"},"nodeType":"YulExpressionStatement","src":"8654:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8736:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8747:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8732:3:29"},"nodeType":"YulFunctionCall","src":"8732:18:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8752:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8725:6:29"},"nodeType":"YulFunctionCall","src":"8725:34:29"},"nodeType":"YulExpressionStatement","src":"8725:34:29"},{"nodeType":"YulAssignment","src":"8768:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8780:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8791:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8776:3:29"},"nodeType":"YulFunctionCall","src":"8776:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8768:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8552:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8566:4:29","type":""}],"src":"8401:400:29"},{"body":{"nodeType":"YulBlock","src":"8980:175:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8997:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8990:6:29"},"nodeType":"YulFunctionCall","src":"8990:21:29"},"nodeType":"YulExpressionStatement","src":"8990:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9031:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9042:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9027:3:29"},"nodeType":"YulFunctionCall","src":"9027:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"9047:2:29","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9020:6:29"},"nodeType":"YulFunctionCall","src":"9020:30:29"},"nodeType":"YulExpressionStatement","src":"9020:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9070:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9081:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9066:3:29"},"nodeType":"YulFunctionCall","src":"9066:18:29"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"9086:27:29","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9059:6:29"},"nodeType":"YulFunctionCall","src":"9059:55:29"},"nodeType":"YulExpressionStatement","src":"9059:55:29"},{"nodeType":"YulAssignment","src":"9123:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9135:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9146:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9131:3:29"},"nodeType":"YulFunctionCall","src":"9131:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9123:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8957:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8971:4:29","type":""}],"src":"8806:349:29"},{"body":{"nodeType":"YulBlock","src":"9334:240:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9351:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9344:6:29"},"nodeType":"YulFunctionCall","src":"9344:21:29"},"nodeType":"YulExpressionStatement","src":"9344:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9385:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9396:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9381:3:29"},"nodeType":"YulFunctionCall","src":"9381:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"9401:2:29","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9374:6:29"},"nodeType":"YulFunctionCall","src":"9374:30:29"},"nodeType":"YulExpressionStatement","src":"9374:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9424:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9435:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:29"},"nodeType":"YulFunctionCall","src":"9420:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"9440:34:29","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9413:6:29"},"nodeType":"YulFunctionCall","src":"9413:62:29"},"nodeType":"YulExpressionStatement","src":"9413:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9495:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9506:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9491:3:29"},"nodeType":"YulFunctionCall","src":"9491:18:29"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"9511:20:29","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9484:6:29"},"nodeType":"YulFunctionCall","src":"9484:48:29"},"nodeType":"YulExpressionStatement","src":"9484:48:29"},{"nodeType":"YulAssignment","src":"9541:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9564:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:29"},"nodeType":"YulFunctionCall","src":"9549:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9541:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9311:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9325:4:29","type":""}],"src":"9160:414:29"},{"body":{"nodeType":"YulBlock","src":"9611:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9628:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9631:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9621:6:29"},"nodeType":"YulFunctionCall","src":"9621:88:29"},"nodeType":"YulExpressionStatement","src":"9621:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9725:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9728:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9718:6:29"},"nodeType":"YulFunctionCall","src":"9718:15:29"},"nodeType":"YulExpressionStatement","src":"9718:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9749:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9752:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9742:6:29"},"nodeType":"YulFunctionCall","src":"9742:15:29"},"nodeType":"YulExpressionStatement","src":"9742:15:29"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9579:184:29"},{"body":{"nodeType":"YulBlock","src":"9971:309:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9981:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9991:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9985:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10049:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10064:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10072:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10060:3:29"},"nodeType":"YulFunctionCall","src":"10060:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10042:6:29"},"nodeType":"YulFunctionCall","src":"10042:34:29"},"nodeType":"YulExpressionStatement","src":"10042:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10096:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10107:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10092:3:29"},"nodeType":"YulFunctionCall","src":"10092:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10116:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10124:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10112:3:29"},"nodeType":"YulFunctionCall","src":"10112:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10085:6:29"},"nodeType":"YulFunctionCall","src":"10085:43:29"},"nodeType":"YulExpressionStatement","src":"10085:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10148:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10144:3:29"},"nodeType":"YulFunctionCall","src":"10144:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"10164:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10137:6:29"},"nodeType":"YulFunctionCall","src":"10137:34:29"},"nodeType":"YulExpressionStatement","src":"10137:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10191:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10202:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10187:3:29"},"nodeType":"YulFunctionCall","src":"10187:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"10207:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10180:6:29"},"nodeType":"YulFunctionCall","src":"10180:31:29"},"nodeType":"YulExpressionStatement","src":"10180:31:29"},{"nodeType":"YulAssignment","src":"10220:54:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10246:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10258:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10269:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10254:3:29"},"nodeType":"YulFunctionCall","src":"10254:19:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10228:17:29"},"nodeType":"YulFunctionCall","src":"10228:46:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10220:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9916:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9927:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9935:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9943:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9951:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9962:4:29","type":""}],"src":"9768:512:29"},{"body":{"nodeType":"YulBlock","src":"10365:169:29","statements":[{"body":{"nodeType":"YulBlock","src":"10411:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10420:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10423:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10413:6:29"},"nodeType":"YulFunctionCall","src":"10413:12:29"},"nodeType":"YulExpressionStatement","src":"10413:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10386:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10395:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10382:3:29"},"nodeType":"YulFunctionCall","src":"10382:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10407:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10378:3:29"},"nodeType":"YulFunctionCall","src":"10378:32:29"},"nodeType":"YulIf","src":"10375:52:29"},{"nodeType":"YulVariableDeclaration","src":"10436:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10455:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10449:5:29"},"nodeType":"YulFunctionCall","src":"10449:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10440:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10498:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"10474:23:29"},"nodeType":"YulFunctionCall","src":"10474:30:29"},"nodeType":"YulExpressionStatement","src":"10474:30:29"},{"nodeType":"YulAssignment","src":"10513:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"10523:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10513:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10331:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10342:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10354:6:29","type":""}],"src":"10285:249:29"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d0578063b88d4fde146101e3578063c87b56dd146101f6578063e985e9c51461020957600080fd5b80636352211e1461019457806370a08231146101a757806395d89b41146101c857600080fd5b8063095ea7b3116100bd578063095ea7b31461015957806323b872dd1461016e57806342842e0e1461018157600080fd5b806301ffc9a7146100e457806306fdde031461010c578063081812fc14610121575b600080fd5b6100f76100f2366004611358565b610252565b60405190151581526020015b60405180910390f35b610114610337565b60405161010391906113e3565b61013461012f3660046113f6565b6103c9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610103565b61016c610167366004611438565b6103fd565b005b61016c61017c366004611462565b61058e565b61016c61018f366004611462565b61062f565b6101346101a23660046113f6565b61064a565b6101ba6101b536600461149e565b6106d6565b604051908152602001610103565b6101146107a4565b61016c6101de3660046114b9565b6107b3565b61016c6101f1366004611524565b6107c2565b6101146102043660046113f6565b61086a565b6100f761021736600461161e565b73ffffffffffffffffffffffffffffffffffffffff9182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102e557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061033157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606065805461034690611651565b80601f016020809104026020016040519081016040528092919081815260200182805461037290611651565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b5050505050905090565b60006103d4826108de565b5060009081526069602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006104088261064a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff821614806104f357506104f38133610217565b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104c1565b610589838361096c565b505050565b6105983382610a0c565b610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104c1565b610589838383610acc565b610589838383604051806020016040528060008152506107c2565b60008181526067602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104c1565b600073ffffffffffffffffffffffffffffffffffffffff821661077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016104c1565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526068602052604090205490565b60606066805461034690611651565b6107be338383610dc7565b5050565b6107cc3383610a0c565b610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f7665640000000000000000000000000000000000000060648201526084016104c1565b61086484848484610ef4565b50505050565b6060610875826108de565b600061088c60408051602081019091526000815290565b905060008151116108ac57604051806020016040528060008152506108d7565b806108b684610f97565b6040516020016108c79291906116a4565b6040516020818303038152906040525b9392505050565b60008181526067602052604090205473ffffffffffffffffffffffffffffffffffffffff16610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016104c1565b50565b600081815260696020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841690811790915581906109c68261064a565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a188361064a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610a86575073ffffffffffffffffffffffffffffffffffffffff8082166000908152606a602090815260408083209388168352929052205460ff165b80610ac457508373ffffffffffffffffffffffffffffffffffffffff16610aac846103c9565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610aec8261064a565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104c1565b73ffffffffffffffffffffffffffffffffffffffff8216610c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104c1565b8273ffffffffffffffffffffffffffffffffffffffff16610c518261064a565b73ffffffffffffffffffffffffffffffffffffffff1614610cf4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104c1565b600081815260696020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526068855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104c1565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152606a602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eff848484610acc565b610f0b84848484611055565b610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104c1565b60606000610fa483611248565b600101905060008167ffffffffffffffff811115610fc457610fc46114f5565b6040519080825280601f01601f191660200182016040528015610fee576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610ff857509392505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b1561123d576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a02906110cc9033908990889088906004016116d3565b6020604051808303816000875af1925050508015611125575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526111229181019061171c565b60015b6111f2573d808015611153576040519150601f19603f3d011682016040523d82523d6000602084013e611158565b606091505b5080516000036111ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016104c1565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610ac4565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611291577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106112bd576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112db57662386f26fc10000830492506010015b6305f5e10083106112f3576305f5e100830492506008015b612710831061130757612710830492506004015b60648310611319576064830492506002015b600a83106103315760010192915050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461096957600080fd5b60006020828403121561136a57600080fd5b81356108d78161132a565b60005b83811015611390578181015183820152602001611378565b50506000910152565b600081518084526113b1816020860160208601611375565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108d76020830184611399565b60006020828403121561140857600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461143357600080fd5b919050565b6000806040838503121561144b57600080fd5b6114548361140f565b946020939093013593505050565b60008060006060848603121561147757600080fd5b6114808461140f565b925061148e6020850161140f565b9150604084013590509250925092565b6000602082840312156114b057600080fd5b6108d78261140f565b600080604083850312156114cc57600080fd5b6114d58361140f565b9150602083013580151581146114ea57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561153a57600080fd5b6115438561140f565b93506115516020860161140f565b925060408501359150606085013567ffffffffffffffff8082111561157557600080fd5b818701915087601f83011261158957600080fd5b81358181111561159b5761159b6114f5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156115e1576115e16114f5565b816040528281528a60208487010111156115fa57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561163157600080fd5b61163a8361140f565b91506116486020840161140f565b90509250929050565b600181811c9082168061166557607f821691505b60208210810361169e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600083516116b6818460208801611375565b8351908301906116ca818360208801611375565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526117126080830184611399565b9695505050505050565b60006020828403121561172e57600080fd5b81516108d78161132a56fea26469706673582212208f4a093d99ee67b43e60e3aa5d8f59040b5a1aca143d3cf209a90a24cfa5477464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x16C PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x103 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x161E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2E5 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x331 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x1651 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1651 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x394 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 PUSH2 0x8DE JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x408 DUP3 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0x4F3 JUMPI POP PUSH2 0x4F3 DUP2 CALLER PUSH2 0x217 JUMP JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0x96C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x598 CALLER DUP3 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 DUP4 PUSH2 0xACC JUMP JUMPDEST PUSH2 0x589 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x346 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x7BE CALLER DUP4 DUP4 PUSH2 0xDC7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7CC CALLER DUP4 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x864 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEF4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x875 DUP3 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88C PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8D7 JUMP JUMPDEST DUP1 PUSH2 0x8B6 DUP5 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C7 SWAP3 SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x9C6 DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA18 DUP4 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA86 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xAC4 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAC DUP5 PUSH2 0x3C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAEC DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC51 DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xEFF DUP5 DUP5 DUP5 PUSH2 0xACC JUMP JUMPDEST PUSH2 0xF0B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFA4 DUP4 PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC4 PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFEE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xFF8 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x10CC SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1125 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1122 SWAP2 DUP2 ADD SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1153 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x11EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0xAC4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1291 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x12BD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x12DB JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x12F3 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1307 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1319 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x331 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D7 DUP2 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1390 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1378 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x13B1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8D7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1454 DUP4 PUSH2 0x140F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1480 DUP5 PUSH2 0x140F JUMP JUMPDEST SWAP3 POP PUSH2 0x148E PUSH1 0x20 DUP6 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D7 DUP3 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D5 DUP4 PUSH2 0x140F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1543 DUP6 PUSH2 0x140F JUMP JUMPDEST SWAP4 POP PUSH2 0x1551 PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x159B JUMPI PUSH2 0x159B PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E1 PUSH2 0x14F5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x15FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x163A DUP4 PUSH2 0x140F JUMP JUMPDEST SWAP2 POP PUSH2 0x1648 PUSH1 0x20 DUP5 ADD PUSH2 0x140F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1665 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x169E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x16B6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1375 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x16CA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1375 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1712 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1399 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8D7 DUP2 PUSH2 0x132A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x4A MULMOD RETURNDATASIZE SWAP10 0xEE PUSH8 0xB43E60E3AA5D8F59 DIV SIGNEXTEND GAS BYTE 0xCA EQ RETURNDATASIZE EXTCODECOPY CALLCODE MULMOD 0xA9 EXP 0x24 0xCF 0xA5 SELFBALANCE PUSH21 0x64736F6C6343000811003300000000000000000000 ","sourceMap":"751:17105:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:344;;;;;;:::i;:::-;;:::i;:::-;;;611:14:29;;604:22;586:41;;574:2;559:18;1987:344:10;;;;;;;;2932:98;;;:::i;:::-;;;;;;;:::i;4407:167::-;;;;;;:::i;:::-;;:::i;:::-;;;1814:42:29;1802:55;;;1784:74;;1772:2;1757:18;4407:167:10;1638:226:29;3929:417:10;;;;;;:::i;:::-;;:::i;:::-;;5084:296;;;;;;:::i;:::-;;:::i;5446:149::-;;;;;;:::i;:::-;;:::i;2651:219::-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2999:25:29;;;2987:2;2972:18;2390:204:10;2853:177:29;3094:102:10;;;:::i;4641:153::-;;;;;;:::i;:::-;;:::i;5661:276::-;;;;;;:::i;:::-;;:::i;3262:::-;;;;;;:::i;:::-;;:::i;4860:162::-;;;;;;:::i;:::-;4980:25;;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162;1987:344;2111:4;2146:51;;;2161:36;2146:51;;:126;;-1:-1:-1;2213:59:10;;;2228:44;2213:59;2146:126;:178;;;-1:-1:-1;1183:36:18;1168:51;;;;2288:36:10;2127:197;1987:344;-1:-1:-1;;1987:344:10:o;2932:98::-;2986:13;3018:5;3011:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:98;:::o;4407:167::-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:10;;;;:15;:24;;;;;;;;;4407:167::o;3929:417::-;4009:13;4025:34;4051:7;4025:25;:34::i;:::-;4009:50;;4083:5;4077:11;;:2;:11;;;4069:57;;;;;;;5687:2:29;4069:57:10;;;5669:21:29;5726:2;5706:18;;;5699:30;5765:34;5745:18;;;5738:62;5836:3;5816:18;;;5809:31;5857:19;;4069:57:10;;;;;;;;;929:10:15;4158:21:10;;;;;:62;;-1:-1:-1;4183:37:10;4200:5;929:10:15;4860:162:10;:::i;4183:37::-;4137:170;;;;;;;6089:2:29;4137:170:10;;;6071:21:29;6128:2;6108:18;;;6101:30;6167:34;6147:18;;;6140:62;6238:31;6218:18;;;6211:59;6287:19;;4137:170:10;5887:425:29;4137:170:10;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3999:347;3929:417;;:::o;5084:296::-;5243:41;929:10:15;5276:7:10;5243:18;:41::i;:::-;5235:99;;;;;;;6519:2:29;5235:99:10;;;6501:21:29;6558:2;6538:18;;;6531:30;6597:34;6577:18;;;6570:62;6668:15;6648:18;;;6641:43;6701:19;;5235:99:10;6317:409:29;5235:99:10;5345:28;5355:4;5361:2;5365:7;5345:9;:28::i;5446:149::-;5549:39;5566:4;5572:2;5576:7;5549:39;;;;;;;;;;;;:16;:39::i;2651:219::-;2723:7;7266:16;;;:7;:16;;;;;;;;;2785:56;;;;;;;6933:2:29;2785:56:10;;;6915:21:29;6972:2;6952:18;;;6945:30;7011:26;6991:18;;;6984:54;7055:18;;2785:56:10;6731:348:29;2390:204:10;2462:7;2489:19;;;2481:73;;;;;;;7286:2:29;2481:73:10;;;7268:21:29;7325:2;7305:18;;;7298:30;7364:34;7344:18;;;7337:62;7435:11;7415:18;;;7408:39;7464:19;;2481:73:10;7084:405:29;2481:73:10;-1:-1:-1;2571:16:10;;;;;;:9;:16;;;;;;;2390:204::o;3094:102::-;3150:13;3182:7;3175:14;;;;;:::i;4641:153::-;4735:52;929:10:15;4768:8:10;4778;4735:18;:52::i;:::-;4641:153;;:::o;5661:276::-;5791:41;929:10:15;5824:7:10;5791:18;:41::i;:::-;5783:99;;;;;;;6519:2:29;5783:99:10;;;6501:21:29;6558:2;6538:18;;;6531:30;6597:34;6577:18;;;6570:62;6668:15;6648:18;;;6641:43;6701:19;;5783:99:10;6317:409:29;5783:99:10;5892:38;5906:4;5912:2;5916:7;5925:4;5892:13;:38::i;:::-;5661:276;;;;:::o;3262:::-;3335:13;3360:23;3375:7;3360:14;:23::i;:::-;3394:21;3418:10;3856:9;;;;;;;;;-1:-1:-1;3856:9:10;;;3780:92;3418:10;3394:34;;3469:1;3451:7;3445:21;:25;:86;;;;;;;;;;;;;;;;;3497:7;3506:18;:7;:16;:18::i;:::-;3480:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3445:86;3438:93;3262:276;-1:-1:-1;;;3262:276:10:o;13778:133::-;7657:4;7266:16;;;:7;:16;;;;;;;;13851:53;;;;;;;6933:2:29;13851:53:10;;;6915:21:29;6972:2;6952:18;;;6945:30;7011:26;6991:18;;;6984:54;7055:18;;13851:53:10;6731:348:29;13851:53:10;13778:133;:::o;13099:182::-;13173:24;;;;:15;:24;;;;;:29;;;;;;;;;;;;;:24;;13226:34;13173:24;13226:25;:34::i;:::-;13217:57;;;;;;;;;;;;13099:182;;:::o;7876:272::-;7969:4;7985:13;8001:34;8027:7;8001:25;:34::i;:::-;7985:50;;8064:5;8053:16;;:7;:16;;;:52;;;-1:-1:-1;4980:25:10;;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8073:32;8053:87;;;;8133:7;8109:31;;:20;8121:7;8109:11;:20::i;:::-;:31;;;8053:87;8045:96;7876:272;-1:-1:-1;;;;7876:272:10:o;11762:1225::-;11897:4;11859:42;;:34;11885:7;11859:25;:34::i;:::-;:42;;;11851:92;;;;;;;8197:2:29;11851:92:10;;;8179:21:29;8236:2;8216:18;;;8209:30;8275:34;8255:18;;;8248:62;8346:7;8326:18;;;8319:35;8371:19;;11851:92:10;7995:401:29;11851:92:10;11961:16;;;11953:65;;;;;;;8603:2:29;11953:65:10;;;8585:21:29;8642:2;8622:18;;;8615:30;8681:34;8661:18;;;8654:62;8752:6;8732:18;;;8725:34;8776:19;;11953:65:10;8401:400:29;11953:65:10;12209:4;12171:42;;:34;12197:7;12171:25;:34::i;:::-;:42;;;12163:92;;;;;;;8197:2:29;12163:92:10;;;8179:21:29;8236:2;8216:18;;;8209:30;8275:34;8255:18;;;8248:62;8346:7;8326:18;;;8319:35;8371:19;;12163:92:10;7995:401:29;12163:92:10;12324:24;;;;:15;:24;;;;;;;;12317:31;;;;;;;;;;12792:15;;;;;;:9;:15;;;;;:20;;;;;;12826:13;;;;;;;;;:18;;12317:31;12826:18;;;12864:16;;;:7;:16;;;;;;:21;;;;;;;;;;12901:27;;12340:7;;12901:27;;;3999:347;3929:417;;:::o;13417:277::-;13537:8;13528:17;;:5;:17;;;13520:55;;;;;;;9008:2:29;13520:55:10;;;8990:21:29;9047:2;9027:18;;;9020:30;9086:27;9066:18;;;9059:55;9131:18;;13520:55:10;8806:349:29;13520:55:10;13585:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;13646:41;;586::29;;;13646::10;;559:18:29;13646:41:10;;;;;;;13417:277;;;:::o;6798:267::-;6910:28;6920:4;6926:2;6930:7;6910:9;:28::i;:::-;6956:47;6979:4;6985:2;6989:7;6998:4;6956:22;:47::i;:::-;6948:110;;;;;;;9362:2:29;6948:110:10;;;9344:21:29;9401:2;9381:18;;;9374:30;9440:34;9420:18;;;9413:62;9511:20;9491:18;;;9484:48;9549:19;;6948:110:10;9160:414:29;480:707:17;536:13;585:14;602:28;624:5;602:21;:28::i;:::-;633:1;602:32;585:49;;648:20;682:6;671:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;671:18:17;-1:-1:-1;648:41:17;-1:-1:-1;809:28:17;;;825:2;809:28;864:280;895:5;;1034:8;1029:2;1018:14;;1013:30;895:5;1000:44;1088:2;1079:11;;;-1:-1:-1;1108:21:17;864:280;1108:21;-1:-1:-1;1164:6:17;480:707;-1:-1:-1;;;480:707:17:o;14463:853:10:-;14612:4;14632:13;;;1713:19:14;:23;14628:682:10;;14667:82;;;;;:47;;;;;;:82;;929:10:15;;14729:4:10;;14735:7;;14744:4;;14667:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14667:82:10;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14663:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14927:6;:13;14944:1;14927:18;14923:321;;14969:60;;;;;9362:2:29;14969:60:10;;;9344:21:29;9401:2;9381:18;;;9374:30;9440:34;9420:18;;;9413:62;9511:20;9491:18;;;9484:48;9549:19;;14969:60:10;9160:414:29;14923:321:10;15196:6;15190:13;15181:6;15177:2;15173:15;15166:38;14663:595;14799:62;;14809:52;14799:62;;-1:-1:-1;14792:69:10;;14628:682;-1:-1:-1;15295:4:10;14463:853;;;;;;:::o;10150:916:20:-;10203:7;;10287:8;10278:17;;10274:103;;10324:8;10315:17;;;-1:-1:-1;10360:2:20;10350:12;10274:103;10403:8;10394:5;:17;10390:103;;10440:8;10431:17;;;-1:-1:-1;10476:2:20;10466:12;10390:103;10519:8;10510:5;:17;10506:103;;10556:8;10547:17;;;-1:-1:-1;10592:2:20;10582:12;10506:103;10635:7;10626:5;:16;10622:100;;10671:7;10662:16;;;-1:-1:-1;10706:1:20;10696:11;10622:100;10748:7;10739:5;:16;10735:100;;10784:7;10775:16;;;-1:-1:-1;10819:1:20;10809:11;10735:100;10861:7;10852:5;:16;10848:100;;10897:7;10888:16;;;-1:-1:-1;10932:1:20;10922:11;10848:100;10974:7;10965:5;:16;10961:66;;11011:1;11001:11;11053:6;10150:916;-1:-1:-1;;10150:916:20:o;14:177:29:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:29;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:29:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:180::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1604:23:29;;1453:180;-1:-1:-1;1453:180:29:o;1869:196::-;1937:20;;1997:42;1986:54;;1976:65;;1966:93;;2055:1;2052;2045:12;1966:93;1869:196;;;:::o;2070:254::-;2138:6;2146;2199:2;2187:9;2178:7;2174:23;2170:32;2167:52;;;2215:1;2212;2205:12;2167:52;2238:29;2257:9;2238:29;:::i;:::-;2228:39;2314:2;2299:18;;;;2286:32;;-1:-1:-1;;;2070:254:29:o;2329:328::-;2406:6;2414;2422;2475:2;2463:9;2454:7;2450:23;2446:32;2443:52;;;2491:1;2488;2481:12;2443:52;2514:29;2533:9;2514:29;:::i;:::-;2504:39;;2562:38;2596:2;2585:9;2581:18;2562:38;:::i;:::-;2552:48;;2647:2;2636:9;2632:18;2619:32;2609:42;;2329:328;;;;;:::o;2662:186::-;2721:6;2774:2;2762:9;2753:7;2749:23;2745:32;2742:52;;;2790:1;2787;2780:12;2742:52;2813:29;2832:9;2813:29;:::i;3035:347::-;3100:6;3108;3161:2;3149:9;3140:7;3136:23;3132:32;3129:52;;;3177:1;3174;3167:12;3129:52;3200:29;3219:9;3200:29;:::i;:::-;3190:39;;3279:2;3268:9;3264:18;3251:32;3326:5;3319:13;3312:21;3305:5;3302:32;3292:60;;3348:1;3345;3338:12;3292:60;3371:5;3361:15;;;3035:347;;;;;:::o;3387:184::-;3439:77;3436:1;3429:88;3536:4;3533:1;3526:15;3560:4;3557:1;3550:15;3576:1197;3671:6;3679;3687;3695;3748:3;3736:9;3727:7;3723:23;3719:33;3716:53;;;3765:1;3762;3755:12;3716:53;3788:29;3807:9;3788:29;:::i;:::-;3778:39;;3836:38;3870:2;3859:9;3855:18;3836:38;:::i;:::-;3826:48;;3921:2;3910:9;3906:18;3893:32;3883:42;;3976:2;3965:9;3961:18;3948:32;3999:18;4040:2;4032:6;4029:14;4026:34;;;4056:1;4053;4046:12;4026:34;4094:6;4083:9;4079:22;4069:32;;4139:7;4132:4;4128:2;4124:13;4120:27;4110:55;;4161:1;4158;4151:12;4110:55;4197:2;4184:16;4219:2;4215;4212:10;4209:36;;;4225:18;;:::i;:::-;4359:2;4353:9;4421:4;4413:13;;4264:66;4409:22;;;4433:2;4405:31;4401:40;4389:53;;;4457:18;;;4477:22;;;4454:46;4451:72;;;4503:18;;:::i;:::-;4543:10;4539:2;4532:22;4578:2;4570:6;4563:18;4618:7;4613:2;4608;4604;4600:11;4596:20;4593:33;4590:53;;;4639:1;4636;4629:12;4590:53;4695:2;4690;4686;4682:11;4677:2;4669:6;4665:15;4652:46;4740:1;4735:2;4730;4722:6;4718:15;4714:24;4707:35;4761:6;4751:16;;;;;;;3576:1197;;;;;;;:::o;4778:260::-;4846:6;4854;4907:2;4895:9;4886:7;4882:23;4878:32;4875:52;;;4923:1;4920;4913:12;4875:52;4946:29;4965:9;4946:29;:::i;:::-;4936:39;;4994:38;5028:2;5017:9;5013:18;4994:38;:::i;:::-;4984:48;;4778:260;;;;;:::o;5043:437::-;5122:1;5118:12;;;;5165;;;5186:61;;5240:4;5232:6;5228:17;5218:27;;5186:61;5293:2;5285:6;5282:14;5262:18;5259:38;5256:218;;5330:77;5327:1;5320:88;5431:4;5428:1;5421:15;5459:4;5456:1;5449:15;5256:218;;5043:437;;;:::o;7494:496::-;7673:3;7711:6;7705:13;7727:66;7786:6;7781:3;7774:4;7766:6;7762:17;7727:66;:::i;:::-;7856:13;;7815:16;;;;7878:70;7856:13;7815:16;7925:4;7913:17;;7878:70;:::i;:::-;7964:20;;7494:496;-1:-1:-1;;;;7494:496:29:o;9768:512::-;9962:4;9991:42;10072:2;10064:6;10060:15;10049:9;10042:34;10124:2;10116:6;10112:15;10107:2;10096:9;10092:18;10085:43;;10164:6;10159:2;10148:9;10144:18;10137:34;10207:3;10202:2;10191:9;10187:18;10180:31;10228:46;10269:3;10258:9;10254:19;10246:6;10228:46;:::i;:::-;10220:54;9768:512;-1:-1:-1;;;;;;9768:512:29:o;10285:249::-;10354:6;10407:2;10395:9;10386:7;10382:23;10378:32;10375:52;;;10423:1;10420;10413:12;10375:52;10455:9;10449:16;10474:30;10498:5;10474:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1199800","executionCost":"1248","totalCost":"1201048"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2598","getApproved(uint256)":"4756","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2537","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26654","supportsInterface(bytes4)":"456","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"__ERC721_init(string memory,string memory)":"infinite","__ERC721_init_unchained(string memory,string memory)":"infinite","__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"infinite","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"infinite","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721Upgradeable.sol\\\";\\nimport \\\"./IERC721ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC721MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\\n    using AddressUpgradeable for address;\\n    using StringsUpgradeable for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC721_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721Upgradeable.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721Upgradeable.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[44] private __gap;\\n}\\n\",\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Upgradeable.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\nimport \\\"./math/SignedMathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMathUpgradeable.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3204,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1366,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":1368,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":1372,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_owners","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_address)"},{"astId":1376,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_balances","offset":0,"slot":"104","type":"t_mapping(t_address,t_uint256)"},{"astId":1380,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_tokenApprovals","offset":0,"slot":"105","type":"t_mapping(t_uint256,t_address)"},{"astId":1386,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"_operatorApprovals","offset":0,"slot":"106","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2288,"contract":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable","label":"__gap","offset":0,"slot":"107","type":"t_array(t_uint256)44_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)44_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[44]","numberOfBytes":"1408"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol":{"IERC721ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":\"IERC721ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol":{"IERC721Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol":{"IERC721MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":\"IERC721MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Upgradeable.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061b68d1cbe1d43dcbd255ec67f91af8503c8bf0b1d59ce77ecc632303969cce664736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB68D SHR 0xBE SAR NUMBER 0xDC 0xBD 0x25 0x5E 0xC6 PUSH32 0x91AF8503C8BF0B1D59CE77ECC632303969CCE664736F6C634300081100330000 ","sourceMap":"194:9180:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061b68d1cbe1d43dcbd255ec67f91af8503c8bf0b1d59ce77ecc632303969cce664736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xB68D SHR 0xBE SAR NUMBER 0xDC 0xBD 0x25 0x5E 0xC6 PUSH32 0x91AF8503C8BF0B1D59CE77ECC632303969CCE664736F6C634300081100330000 ","sourceMap":"194:9180:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098d276cb87c59f44fdeb00bf57a245861c99446f036414610c8dfb2e85f5ac1164736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD2 PUSH23 0xCB87C59F44FDEB00BF57A245861C99446F036414610C8D 0xFB 0x2E DUP6 CREATE2 0xAC GT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1420:2696:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098d276cb87c59f44fdeb00bf57a245861c99446f036414610c8dfb2e85f5ac1164736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD2 PUSH23 0xCB87C59F44FDEB00BF57A245861C99446F036414610C8D 0xFB 0x2E DUP6 CREATE2 0xAC GT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1420:2696:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc46a0c8048af59b2e93ab120b1a0f6d6ac7196681054f86352040bb78eeac7464736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC CHAINID LOG0 0xC8 DIV DUP11 CREATE2 SWAP12 0x2E SWAP4 0xAB SLT SIGNEXTEND BYTE 0xF PUSH14 0x6AC7196681054F86352040BB78EE 0xAC PUSH21 0x64736F6C6343000811003300000000000000000000 ","sourceMap":"242:2603:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc46a0c8048af59b2e93ab120b1a0f6d6ac7196681054f86352040bb78eeac7464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC CHAINID LOG0 0xC8 DIV DUP11 CREATE2 SWAP12 0x2E SWAP4 0xAB SLT SIGNEXTEND BYTE 0xF PUSH14 0x6AC7196681054F86352040BB78EE 0xAC PUSH21 0x64736F6C6343000811003300000000000000000000 ","sourceMap":"242:2603:17:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\nimport \\\"./math/SignedMathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMathUpgradeable.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":3204,"contract":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d9b1a1033acae4b2f989d2f025696a60b09d4c3c20f244b7fc10008bee09b6f64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x9B1A1033ACAE4B2F989D2F025696 0xA6 SIGNEXTEND MULMOD 0xD4 0xC3 0xC2 0xF 0x24 0x4B PUSH32 0xC10008BEE09B6F64736F6C634300081100330000000000000000000000000000 ","sourceMap":"202:12593:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d9b1a1033acae4b2f989d2f025696a60b09d4c3c20f244b7fc10008bee09b6f64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x9B1A1033ACAE4B2F989D2F025696 0xA6 SIGNEXTEND MULMOD 0xD4 0xC3 0xC2 0xF 0x24 0x4B PUSH32 0xC10008BEE09B6F64736F6C634300081100330000000000000000000000000000 ","sourceMap":"202:12593:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum MathUpgradeable.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum MathUpgradeable.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum MathUpgradeable.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum MathUpgradeable.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e31cb7ab70975232cf7fac86f9f04b45decbeffe32f12221975b5b889b973bcb64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SHR 0xB7 0xAB PUSH17 0x975232CF7FAC86F9F04B45DECBEFFE32F1 0x22 0x21 SWAP8 JUMPDEST JUMPDEST DUP9 SWAP12 SWAP8 EXTCODESIZE 0xCB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1058:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e31cb7ab70975232cf7fac86f9f04b45decbeffe32f12221975b5b889b973bcb64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SHR 0xB7 0xAB PUSH17 0x975232CF7FAC86F9F04B45DECBEFFE32F1 0x22 0x21 SWAP8 JUMPDEST JUMPDEST DUP9 SWAP12 SWAP8 EXTCODESIZE 0xCB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1058:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/MocaPoints.sol":{"MocaPoints":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"reasonCodes","type":"bytes32[]"}],"name":"BatchAddedConsumeReasonCode","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"reasonCodes","type":"bytes32[]"}],"name":"BatchRemovedConsumeReasonCode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"realmId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"season","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"reasonCode","type":"bytes32"},{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"realmIdOwner","type":"address"}],"name":"Consumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"season","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"reasonCode","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"realmId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"season","type":"bytes32"}],"name":"SetCurrentSeason","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSITOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"}],"name":"balanceOfWithParentNodeName","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"balanceOfWithRealmId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"}],"name":"balanceOfWithSeason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"balanceOfWithSeasonRealmId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_reasonCodes","type":"bytes32[]"}],"name":"batchAddConsumeReasonCodes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_reasonCodes","type":"bytes32[]"}],"name":"batchRemoveConsumeReasonCodes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"}],"name":"consumeWithParentnode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"consumeWithParentnodeVRS","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"}],"name":"consumeWithRealmId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"consumeWithRealmIdVRS","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentSeason","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"depositReasonCode","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"depositReasonCode","type":"bytes32"}],"name":"depositWithParentnode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_realmIdContract","type":"address"},{"internalType":"address","name":"_adminAddress","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"reasonCode","type":"bytes32"}],"name":"isReasonCodeAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"reasonCode","type":"bytes32"}],"name":"preparePayload","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realmIdContract","outputs":[{"internalType":"contract IRealmId","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"seasons","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_season","type":"bytes32"}],"name":"setCurrentSeason","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_4309":{"entryPoint":null,"id":4309,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_1055":{"entryPoint":38,"id":1055,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:608:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:229:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:29"},"nodeType":"YulFunctionCall","src":"198:21:29"},"nodeType":"YulExpressionStatement","src":"198:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:29"},"nodeType":"YulFunctionCall","src":"235:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:29","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:29"},"nodeType":"YulFunctionCall","src":"228:30:29"},"nodeType":"YulExpressionStatement","src":"228:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:29"},"nodeType":"YulFunctionCall","src":"274:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"294:34:29","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:29"},"nodeType":"YulFunctionCall","src":"267:62:29"},"nodeType":"YulExpressionStatement","src":"267:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:29"},"nodeType":"YulFunctionCall","src":"345:18:29"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"365:9:29","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"338:6:29"},"nodeType":"YulFunctionCall","src":"338:37:29"},"nodeType":"YulExpressionStatement","src":"338:37:29"},{"nodeType":"YulAssignment","src":"384:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"396:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"407:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"392:3:29"},"nodeType":"YulFunctionCall","src":"392:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"384:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:29","type":""}],"src":"14:403:29"},{"body":{"nodeType":"YulBlock","src":"519:87:29","statements":[{"nodeType":"YulAssignment","src":"529:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"541:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"552:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:29"},"nodeType":"YulFunctionCall","src":"537:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"529:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"571:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"586:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"582:3:29"},"nodeType":"YulFunctionCall","src":"582:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"564:6:29"},"nodeType":"YulFunctionCall","src":"564:36:29"},"nodeType":"YulExpressionStatement","src":"564:36:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"488:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"499:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"510:4:29","type":""}],"src":"422:184:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516138836200011f60003960008181610b7201528181610c22015281816113ca0152818161147a01526115fc01526138836000f3fe6080604052600436106102855760003560e01c80635c975abb11610153578063a3b0b5a3116100cb578063df00bb241161007f578063f72c0d8b11610064578063f72c0d8b146107a7578063fc6f9468146107db578063ffd39e841461080957600080fd5b8063df00bb2414610753578063e63ab1e91461077357600080fd5b8063bcb39621116100b0578063bcb39621146106eb578063c0542cfa14610702578063d547741f1461073357600080fd5b8063a3b0b5a314610697578063b2c0638f146106cb57600080fd5b80638456cb5911610122578063906405a311610107578063906405a31461060f57806391d148541461062f578063a217fddf1461068257600080fd5b80638456cb59146105da57806386a8e98a146105ef57600080fd5b80635c975abb1461054e57806375b238fc146105665780637cfd24581461059a5780637f6232e7146105ba57600080fd5b80633659cfe611610201578063485cc955116101b55780634fc7ec0d1161019a5780634fc7ec0d146104f957806352d1902d1461051957806356209ab91461052e57600080fd5b8063485cc955146104c65780634f1ef286146104e657600080fd5b80633f30b00f116101e65780633f30b00f146104605780633f4ba83a146104805780634529cc1b1461049557600080fd5b80633659cfe6146104205780633b17f0561461044057600080fd5b8063248a9ca3116102585780632b48dc721161023d5780632b48dc721461038d5780632f2ff15d146103e057806336568abe1461040057600080fd5b8063248a9ca31461033d578063275e79ff1461036d57600080fd5b806301ffc9a71461028a578063141a468c146102bf57806318ee89f0146102fb5780632162671f1461031d575b600080fd5b34801561029657600080fd5b506102aa6102a5366004612f90565b610829565b60405190151581526020015b60405180910390f35b3480156102cb57600080fd5b506102ed6102da366004612fd2565b6101326020526000908152604090205481565b6040519081526020016102b6565b34801561030757600080fd5b5061031b610316366004612feb565b6108c2565b005b34801561032957600080fd5b506102ed61033836600461313a565b610a0b565b34801561034957600080fd5b506102ed610358366004612fd2565b60009081526097602052604090206001015490565b34801561037957600080fd5b5061031b610388366004613197565b610a58565b34801561039957600080fd5b5061012f546103bb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102b6565b3480156103ec57600080fd5b5061031b6103fb366004613237565b610a7e565b34801561040c57600080fd5b5061031b61041b366004613237565b610aa8565b34801561042c57600080fd5b5061031b61043b366004613267565b610b5b565b34801561044c57600080fd5b5061031b61045b366004613284565b610d60565b34801561046c57600080fd5b5061031b61047b3660046132f0565b610e1c565b34801561048c57600080fd5b5061031b610ff0565b3480156104a157600080fd5b506102aa6104b0366004612fd2565b61012e6020526000908152604090205460ff1681565b3480156104d257600080fd5b5061031b6104e1366004613396565b611022565b61031b6104f43660046133c4565b6113b3565b34801561050557600080fd5b506102ed610514366004612fd2565b6115a5565b34801561052557600080fd5b506102ed6115e2565b34801561053a57600080fd5b5061031b61054936600461341e565b6116ce565b34801561055a57600080fd5b5060335460ff166102aa565b34801561057257600080fd5b506102ed7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156105a657600080fd5b506102ed6105b5366004613475565b6116e7565b3480156105c657600080fd5b5061031b6105d5366004613497565b61171a565b3480156105e657600080fd5b5061031b611725565b3480156105fb57600080fd5b5061031b61060a366004612fd2565b611757565b34801561061b57600080fd5b5061031b61062a3660046132f0565b6118d9565b34801561063b57600080fd5b506102aa61064a366004613237565b600091825260976020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561068e57600080fd5b506102ed600081565b3480156106a357600080fd5b506102ed7f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a981565b3480156106d757600080fd5b506102ed6106e63660046134c3565b611a16565b3480156106f757600080fd5b506102ed61012d5481565b34801561070e57600080fd5b506102aa61071d366004612fd2565b6000908152610133602052604090205460ff1690565b34801561073f57600080fd5b5061031b61074e366004613237565b611a5b565b34801561075f57600080fd5b506102ed61076e366004613497565b611a80565b34801561077f57600080fd5b506102ed7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b3480156107b357600080fd5b506102ed7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b3480156107e757600080fd5b50610130546103bb9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561081557600080fd5b5061031b610824366004613513565b611af1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806108bc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b3360009081527f28e8759d778413ba386bd9f909ab886584d0c872d3157abd7018c4ab794baf5a602052604090205460ff1661095f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f72000000000000000000000000000000000060448201526064015b60405180910390fd5b3360009081527f28e8759d778413ba386bd9f909ab886584d0c872d3157abd7018c4ab794baf5a602052604090205460ff166109f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f7200000000000000000000000000000000006044820152606401610956565b610a048585858585611b07565b5050505050565b600080610a188484611b8c565b90506000610a2582611c2e565b61012d54600090815261013160209081526040808320958352948152848220928252919091529190912054949350505050565b6000610a648888611b8c565b9050610a74818787878787611cc3565b5050505050505050565b600082815260976020526040902060010154610a9981611db2565b610aa38383611dbc565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610b4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610956565b610b578282611eb0565b5050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610956565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c957f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610d38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610956565b610d4181611f6b565b60408051600080825260208201909252610d5d91839190611f95565b50565b3360009081527f28e8759d778413ba386bd9f909ab886584d0c872d3157abd7018c4ab794baf5a602052604090205460ff16610df8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f7200000000000000000000000000000000006044820152606401610956565b6000610e048686611b8c565b9050610e138782868686611b07565b50505050505050565b3360009081527f9805bb80c0cb3b8457cbce774d5adda6e717284b7d1e937eb2fdc8bbff924719602052604090205460ff16610eb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e00000000000000000000000000000000000000006044820152606401610956565b60005b8151811015610fb5576101336000838381518110610ed757610ed7613564565b60209081029190910181015182528101919091526040016000205460ff1615610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520616c7265616479206578697374730000000000006044820152606401610956565b60016101336000848481518110610f7557610f75613564565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610fad906135c2565b915050610eb7565b507f0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e81604051610fe591906135fa565b60405180910390a150565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61101a81611db2565b610d5d612194565b600054610100900460ff16158080156110425750600054600160ff909116105b8061105c5750303b15801561105c575060005460ff166001145b6110e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610956565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561114657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61114e612211565b6111566122b2565b61115e6122b2565b73ffffffffffffffffffffffffffffffffffffffff83166111db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f7420612076616c696420436f6e74726163742041646472657373000000006044820152606401610956565b73ffffffffffffffffffffffffffffffffffffffff8216611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420612076616c69642041646d696e2041646472657373000000000000006044820152606401610956565b611263600083611dbc565b61128d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a83611dbc565b6112b77f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e383611dbc565b6112e17fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583611dbc565b61130b7f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a983611dbc565b61012f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790558015610aa357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610956565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114ed7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614611590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610956565b61159982611f6b565b610b5782826001611f95565b6000806115b183611c2e565b61012d5460009081526101316020908152604080832096835295815285822092825291909152929092205492915050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146116a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610956565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60006116da8585611b8c565b9050610a04818484612349565b6000806116f383611c2e565b60009485526101316020908152604080872095875294815284862091865252505090205490565b610aa3838383612349565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61174f81611db2565b610d5d6123ef565b3360009081527f9805bb80c0cb3b8457cbce774d5adda6e717284b7d1e937eb2fdc8bbff924719602052604090205460ff166117ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e00000000000000000000000000000000000000006044820152606401610956565b600081815261012e602052604090205460ff1615611869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f536561736f6e20616c72656164792073657400000000000000000000000000006044820152606401610956565b61012d819055600081815261012e60205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef3190610fe59083815260200190565b3360009081527f9805bb80c0cb3b8457cbce774d5adda6e717284b7d1e937eb2fdc8bbff924719602052604090205460ff16611971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e00000000000000000000000000000000000000006044820152606401610956565b60005b81518110156119e657610133600083838151811061199457611994613564565b602090810291909101810151825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055806119de816135c2565b915050611974565b507f5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff981604051610fe591906135fa565b600080611a238484611b8c565b90506000611a3082611c2e565b6000968752610131602090815260408089209489529381528388209188525250909320549392505050565b600082815260976020526040902060010154611a7681611db2565b610aa38383611eb0565b600080611a8c85611c2e565b600086815261013260209081526040918290205461012d5483518084019a909a52898401949094526060890197909752608088019290925260a087019490945260c0808701959095528351808703909501855260e09095019092525050805191012090565b611aff868686868686611cc3565b505050505050565b600085815261013160209081526040808320878452825280832086845290915281208054849290611b3990849061363e565b909155505060408051858152602081018590529081018390528190869033907f9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad829060600160405180910390a45050505050565b61012f546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b90190611be690859087906004016136bf565b602060405180830381865afa158015611c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2791906136e1565b9392505050565b61012f546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063a9735f9490602401602060405180830381865afa158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bc91906136e1565b6000611cce87611c2e565b90506000611cf688838961013260008d8152602001908152602001600020548a8a8a8a61244a565b90506000611d0389612547565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5369676e6572206e6f74206f776e6572206f66207265616c6d496400000000006044820152606401610956565b611da789848a8a856125e0565b505050505050505050565b610d5d81336127c7565b600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b5757600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611e523390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b5757600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3610b5781611db2565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611fc857610aa383612881565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561204d575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261204a918101906136e1565b60015b6120d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610956565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610956565b50610aa383838361298b565b61219c6129b6565b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b600054610100900460ff166122a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610956565b6122b0612a22565b565b600054610100900460ff166122b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610956565b600061235484612547565b90503373ffffffffffffffffffffffffffffffffffffffff8216146123d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5369676e6572206e6f74206f776e6572206f66207265616c6d496400000000006044820152606401610956565b60006123e085611c2e565b9050610a0485828686336125e0565b6123f7612ae3565b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586121e73390565b61012d546040805160208082018c90528183018b9052606082018a9052608082019390935260a0810187905260c08082018990528251808303909101815260e08201808452815191850191909120600091829052610100830180855281905260ff88166101208401526101408301879052610160830186905292519093600192610180808201937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa158015612510573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519b9a5050505050505050505050565b61012f546040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101839052600091829173ffffffffffffffffffffffffffffffffffffffff90911690636352211e90602401602060405180830381865afa1580156125bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2791906136fa565b61012d546000908152610131602090815260408083208884528252808320878452909152902054831115612670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610956565b6000828152610133602052604090205460ff166126e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420636f6e73756d6520726561736f6e20636f646500000000006044820152606401610956565b61012d5460009081526101316020908152604080832088845282528083208784529091528120805485929061271f908490613717565b909155505061012d5460008681526101326020908152604091829020548251338152918201529081018690526060810185905273ffffffffffffffffffffffffffffffffffffffff8316608082015283919087907fd1255d580f215da0d3a191d00a885ae4716fac76b5813a6c309919fff6078bd19060a00160405180910390a46000858152610132602052604081208054916127bb836135c2565b91905055505050505050565b600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b575761280781612b50565b612812836020612b6f565b60405160200161282392919061372a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610956916004016137ab565b73ffffffffffffffffffffffffffffffffffffffff81163b612925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610956565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61299483612db2565b6000825111806129a15750805b15610aa3576129b08383612dff565b50505050565b60335460ff166122b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610956565b600054610100900460ff16612ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610956565b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60335460ff16156122b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610956565b60606108bc73ffffffffffffffffffffffffffffffffffffffff831660145b60606000612b7e8360026137be565b612b8990600261363e565b67ffffffffffffffff811115612ba157612ba1613026565b6040519080825280601f01601f191660200182016040528015612bcb576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612c0257612c02613564565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612c6557612c65613564565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000612ca18460026137be565b612cac90600161363e565b90505b6001811115612d49577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612ced57612ced613564565b1a60f81b828281518110612d0357612d03613564565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93612d42816137d5565b9050612caf565b508315611c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610956565b612dbb81612881565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611c2783836040518060600160405280602781526020016138276027913960606000808573ffffffffffffffffffffffffffffffffffffffff1685604051612e49919061380a565b600060405180830381855af49150503d8060008114612e84576040519150601f19603f3d011682016040523d82523d6000602084013e612e89565b606091505b5091509150612e9a86838387612ea4565b9695505050505050565b60608315612f3a578251600003612f335773ffffffffffffffffffffffffffffffffffffffff85163b612f33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610956565b5081612f44565b612f448383612f4c565b949350505050565b815115612f5c5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095691906137ab565b600060208284031215612fa257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611c2757600080fd5b600060208284031215612fe457600080fd5b5035919050565b600080600080600060a0868803121561300357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561309c5761309c613026565b604052919050565b600067ffffffffffffffff8311156130be576130be613026565b6130ef60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601613055565b905082815283838301111561310357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261312b57600080fd5b611c27838335602085016130a4565b6000806040838503121561314d57600080fd5b82359150602083013567ffffffffffffffff81111561316b57600080fd5b6131778582860161311a565b9150509250929050565b803560ff8116811461319257600080fd5b919050565b600080600080600080600060e0888a0312156131b257600080fd5b87359650602088013567ffffffffffffffff8111156131d057600080fd5b6131dc8a828b0161311a565b96505060408801359450606088013593506131f960808901613181565b925060a0880135915060c0880135905092959891949750929550565b73ffffffffffffffffffffffffffffffffffffffff81168114610d5d57600080fd5b6000806040838503121561324a57600080fd5b82359150602083013561325c81613215565b809150509250929050565b60006020828403121561327957600080fd5b8135611c2781613215565b60008060008060008060c0878903121561329d57600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156132c257600080fd5b6132ce89828a0161311a565b945050606087013592506080870135915060a087013590509295509295509295565b6000602080838503121561330357600080fd5b823567ffffffffffffffff8082111561331b57600080fd5b818501915085601f83011261332f57600080fd5b81358181111561334157613341613026565b8060051b9150613352848301613055565b818152918301840191848101908884111561336c57600080fd5b938501935b8385101561338a57843582529385019390850190613371565b98975050505050505050565b600080604083850312156133a957600080fd5b82356133b481613215565b9150602083013561325c81613215565b600080604083850312156133d757600080fd5b82356133e281613215565b9150602083013567ffffffffffffffff8111156133fe57600080fd5b8301601f8101851361340f57600080fd5b613177858235602084016130a4565b6000806000806080858703121561343457600080fd5b84359350602085013567ffffffffffffffff81111561345257600080fd5b61345e8782880161311a565b949794965050505060408301359260600135919050565b6000806040838503121561348857600080fd5b50508035926020909101359150565b6000806000606084860312156134ac57600080fd5b505081359360208301359350604090920135919050565b6000806000606084860312156134d857600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156134fd57600080fd5b6135098682870161311a565b9150509250925092565b60008060008060008060c0878903121561352c57600080fd5b86359550602087013594506040870135935061354a60608801613181565b92506080870135915060a087013590509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135f3576135f3613593565b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561363257835183529284019291840191600101613616565b50909695505050505050565b808201808211156108bc576108bc613593565b60005b8381101561366c578181015183820152602001613654565b50506000910152565b6000815180845261368d816020860160208601613651565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006136d26040830185613675565b90508260208301529392505050565b6000602082840312156136f357600080fd5b5051919050565b60006020828403121561370c57600080fd5b8151611c2781613215565b818103818111156108bc576108bc613593565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613762816017850160208801613651565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161379f816028840160208801613651565b01602801949350505050565b602081526000611c276020830184613675565b80820281158282048414176108bc576108bc613593565b6000816137e4576137e4613593565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6000825161381c818460208701613651565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122093ce946aa66fadcee9eff463f95e6f3ae38080744145b961e1ba261b0f8e1f4664736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x20 PUSH3 0x26 JUMP JUMPDEST PUSH3 0xE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH3 0xE5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3883 PUSH3 0x11F PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xB72 ADD MSTORE DUP2 DUP2 PUSH2 0xC22 ADD MSTORE DUP2 DUP2 PUSH2 0x13CA ADD MSTORE DUP2 DUP2 PUSH2 0x147A ADD MSTORE PUSH2 0x15FC ADD MSTORE PUSH2 0x3883 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x285 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x153 JUMPI DUP1 PUSH4 0xA3B0B5A3 GT PUSH2 0xCB JUMPI DUP1 PUSH4 0xDF00BB24 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xF72C0D8B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xFFD39E84 EQ PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDF00BB24 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBCB39621 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0xBCB39621 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xC0542CFA EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xB2C0638F EQ PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x906405A3 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x906405A3 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0x86A8E98A EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x7CFD2458 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x7F6232E7 EQ PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0x201 JUMPI DUP1 PUSH4 0x485CC955 GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x4FC7EC0D GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x4FC7EC0D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x56209AB9 EQ PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F30B00F GT PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3F30B00F EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x4529CC1B EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x3B17F056 EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x258 JUMPI DUP1 PUSH4 0x2B48DC72 GT PUSH2 0x23D JUMPI DUP1 PUSH4 0x2B48DC72 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x275E79FF EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x141A468C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x18EE89F0 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x2162671F EQ PUSH2 0x31D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F90 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FEB JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x313A JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x3197 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F SLOAD PUSH2 0x3BB SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x3267 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xFF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x31B PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH2 0x13B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x15A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x15E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x341E JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x2AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3475 JUMP JUMPDEST PUSH2 0x16E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x5D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3497 JUMP JUMPDEST PUSH2 0x171A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x1725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x1757 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0x18D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34C3 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x12D SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x71D CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x133 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0x1A5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x76E CALLDATASIZE PUSH1 0x4 PUSH2 0x3497 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 SLOAD PUSH2 0x3BB SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x824 CALLDATASIZE PUSH1 0x4 PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x8BC JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x28E8759D778413BA386BD9F909AB886584D0C872D3157ABD7018C4AB794BAF5A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x28E8759D778413BA386BD9F909AB886584D0C872D3157ABD7018C4AB794BAF5A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0xA04 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B07 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA18 DUP5 DUP5 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA25 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA64 DUP9 DUP9 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA74 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CC3 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA99 DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 PUSH2 0x1DBC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0xB57 DUP3 DUP3 PUSH2 0x1EB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC95 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x1F6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD5D SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1F95 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x28E8759D778413BA386BD9F909AB886584D0C872D3157ABD7018C4AB794BAF5A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE04 DUP7 DUP7 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH2 0xE13 DUP8 DUP3 DUP7 DUP7 DUP7 PUSH2 0x1B07 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x9805BB80C0CB3B8457CBCE774D5ADDA6E717284B7D1E937EB2FDC8BBFF924719 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFB5 JUMPI PUSH2 0x133 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xED7 JUMPI PUSH2 0xED7 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x133 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF75 JUMPI PUSH2 0xF75 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xFAD SWAP1 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB7 JUMP JUMPDEST POP PUSH32 0xD8C56A8918EC09C2FE3C4D9FCC00ECE66DF217A1AB3AD768DD0A71620DA5B4E DUP2 PUSH1 0x40 MLOAD PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x101A DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xD5D PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1042 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x105C JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x114E PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x1156 PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x115E PUSH2 0x22B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C696420436F6E7472616374204164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C69642041646D696E204164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1263 PUSH1 0x0 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x128D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x12B7 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x12E1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x130B PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x12F DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAA3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14ED PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1599 DUP3 PUSH2 0x1F6B JUMP JUMPDEST PUSH2 0xB57 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15B1 DUP4 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DA DUP6 DUP6 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA04 DUP2 DUP5 DUP5 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16F3 DUP4 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE POP POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 DUP4 PUSH2 0x2349 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x174F DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xD5D PUSH2 0x23EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x9805BB80C0CB3B8457CBCE774D5ADDA6E717284B7D1E937EB2FDC8BBFF924719 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536561736F6E20616C7265616479207365740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x12D DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x61228C895F8BA06548597D3E34A23BC0ECB6D1E62A1EB3FA30BE04883A17EF31 SWAP1 PUSH2 0xFE5 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x9805BB80C0CB3B8457CBCE774D5ADDA6E717284B7D1E937EB2FDC8BBFF924719 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x133 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1994 JUMPI PUSH2 0x1994 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 PUSH2 0x19DE DUP2 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1974 JUMP JUMPDEST POP PUSH32 0x5B2C9FCBB27D48BDBFC59F0564B5BA81539309EBF09A940FAD64D171BCFB9FF9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A23 DUP5 DUP5 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A30 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP10 KECCAK256 SWAP5 DUP10 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP9 KECCAK256 SWAP2 DUP9 MSTORE MSTORE POP SWAP1 SWAP4 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1A76 DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A8C DUP6 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH2 0x132 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD PUSH2 0x12D SLOAD DUP4 MLOAD DUP1 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP10 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP1 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP8 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD SWAP1 SWAP3 MSTORE POP POP DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1AFF DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1CC3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1B39 SWAP1 DUP5 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x9092BF6BD1CF7DB4FCF41AEDC7C0333B51C57F5B80B429BC3D9CAA5587C6AD82 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12F SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x1BE6 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x36BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12F SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCE DUP8 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CF6 DUP9 DUP4 DUP10 PUSH2 0x132 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP11 DUP11 DUP11 DUP11 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D03 DUP10 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1DA7 DUP10 DUP5 DUP11 DUP11 DUP6 PUSH2 0x25E0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD5D DUP2 CALLER PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB57 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1E52 CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0xB57 DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FC8 JUMPI PUSH2 0xAA3 DUP4 PUSH2 0x2881 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x204D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x204A SWAP2 DUP2 ADD SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x20D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x2188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST POP PUSH2 0xAA3 DUP4 DUP4 DUP4 PUSH2 0x298B JUMP JUMPDEST PUSH2 0x219C PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x22B0 PUSH2 0x2A22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2354 DUP5 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x23D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E0 DUP6 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP PUSH2 0xA04 DUP6 DUP3 DUP7 DUP7 CALLER PUSH2 0x25E0 JUMP JUMPDEST PUSH2 0x23F7 PUSH2 0x2AE3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x21E7 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP13 SWAP1 MSTORE DUP2 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP3 ADD DUP1 DUP5 MSTORE DUP2 MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP1 DUP6 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD DUP8 SWAP1 MSTORE PUSH2 0x160 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP1 SWAP4 PUSH1 0x1 SWAP3 PUSH2 0x180 DUP1 DUP3 ADD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2510 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12F SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x36FA JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x2670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x133 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x26E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E73756D6520726561736F6E20636F64650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x271F SWAP1 DUP5 SWAP1 PUSH2 0x3717 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x12D SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH2 0x132 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE DUP4 SWAP2 SWAP1 DUP8 SWAP1 PUSH32 0xD1255D580F215DA0D3A191D00A885AE4716FAC76B5813A6C309919FFF6078BD1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH2 0x132 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x27BB DUP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB57 JUMPI PUSH2 0x2807 DUP2 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x2812 DUP4 PUSH1 0x20 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2823 SWAP3 SWAP2 SWAP1 PUSH2 0x372A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x956 SWAP2 PUSH1 0x4 ADD PUSH2 0x37AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x2925 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2994 DUP4 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x29A1 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xAA3 JUMPI PUSH2 0x29B0 DUP4 DUP4 PUSH2 0x2DFF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2AB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8BC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2B7E DUP4 PUSH1 0x2 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x2B89 SWAP1 PUSH1 0x2 PUSH2 0x363E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BA1 JUMPI PUSH2 0x2BA1 PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BCB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C02 JUMPI PUSH2 0x2C02 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2C65 JUMPI PUSH2 0x2C65 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x2CA1 DUP5 PUSH1 0x2 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x2CAC SWAP1 PUSH1 0x1 PUSH2 0x363E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D49 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x2CED JUMPI PUSH2 0x2CED PUSH2 0x3564 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D03 JUMPI PUSH2 0x2D03 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x2D42 DUP2 PUSH2 0x37D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CAF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1C27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x2DBB DUP2 PUSH2 0x2881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C27 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3827 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E49 SWAP2 SWAP1 PUSH2 0x380A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2E9A DUP7 DUP4 DUP4 DUP8 PUSH2 0x2EA4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F3A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2F33 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x2F33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST POP DUP2 PUSH2 0x2F44 JUMP JUMPDEST PUSH2 0x2F44 DUP4 DUP4 PUSH2 0x2F4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2F5C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x37AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1C27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x309C JUMPI PUSH2 0x309C PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x30BE JUMPI PUSH2 0x30BE PUSH2 0x3026 JUMP JUMPDEST PUSH2 0x30EF PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD PUSH2 0x3055 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x312B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C27 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x314D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3177 DUP6 DUP3 DUP7 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x31B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31DC DUP11 DUP3 DUP12 ADD PUSH2 0x311A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x31F9 PUSH1 0x80 DUP10 ADD PUSH2 0x3181 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x324A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x325C DUP2 PUSH2 0x3215 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C27 DUP2 PUSH2 0x3215 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x329D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32CE DUP10 DUP3 DUP11 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x331B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x332F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3341 JUMPI PUSH2 0x3341 PUSH2 0x3026 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x3352 DUP5 DUP4 ADD PUSH2 0x3055 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x336C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x338A JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x3371 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33B4 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x325C DUP2 PUSH2 0x3215 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33E2 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x340F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3177 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x345E DUP8 DUP3 DUP9 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3509 DUP7 DUP3 DUP8 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x352C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x354A PUSH1 0x60 DUP9 ADD PUSH2 0x3181 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x35F3 JUMPI PUSH2 0x35F3 PUSH2 0x3593 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3632 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3616 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x366C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3654 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x368D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x36D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3675 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x370C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1C27 DUP2 PUSH2 0x3215 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x3593 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x3762 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3651 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x379F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3651 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3675 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x37E4 JUMPI PUSH2 0x37E4 PUSH2 0x3593 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x381C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3651 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122093CE94 PUSH11 0xA66FADCEE9EFF463F95E6F GASPRICE 0xE3 DUP1 DUP1 PUSH21 0x4145B961E1BA261B0F8E1F4664736F6C6343000811 STOP CALLER ","sourceMap":"527:12320:22:-:0;;;1332:4:8;1289:48;;2224:53:22;;;;;;;;;-1:-1:-1;2248:22:22;:20;:22::i;:::-;527:12320;;5939:280:7;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:7;;216:2:29;5998:66:7;;;198:21:29;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:29;;;338:37;392:19;;5998:66:7;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:7;6140:15;6125:30;;;;;;6174:28;;564:36:29;;;6174:28:7;;552:2:29;537:18;6174:28:7;;;;;;;6074:139;5939:280::o;422:184:29:-;527:12320:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_4223":{"entryPoint":null,"id":4223,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_42":{"entryPoint":null,"id":42,"parameterSlots":0,"returnSlots":0},"@DEPOSITOR_ROLE_4228":{"entryPoint":null,"id":4228,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_4213":{"entryPoint":null,"id":4213,"parameterSlots":0,"returnSlots":0},"@UPGRADER_ROLE_4218":{"entryPoint":null,"id":4218,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_21":{"entryPoint":8882,"id":21,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_1241":{"entryPoint":8721,"id":1241,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_1251":{"entryPoint":10786,"id":1251,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_1092":{"entryPoint":null,"id":1092,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_4395":{"entryPoint":8043,"id":4395,"parameterSlots":1,"returnSlots":0},"@_checkRole_107":{"entryPoint":7602,"id":107,"parameterSlots":1,"returnSlots":0},"@_checkRole_146":{"entryPoint":10183,"id":146,"parameterSlots":2,"returnSlots":0},"@_consumeWithSignature_4803":{"entryPoint":7363,"id":4803,"parameterSlots":6,"returnSlots":0},"@_consumeWithoutSignature_4964":{"entryPoint":9033,"id":4964,"parameterSlots":3,"returnSlots":0},"@_consume_4866":{"entryPoint":9696,"id":4866,"parameterSlots":5,"returnSlots":0},"@_deposit_4640":{"entryPoint":6919,"id":4640,"parameterSlots":5,"returnSlots":0},"@_getImplementation_616":{"entryPoint":null,"id":616,"parameterSlots":0,"returnSlots":1},"@_getRealmIdVersion_4484":{"entryPoint":7214,"id":4484,"parameterSlots":1,"returnSlots":1},"@_getSigner_4745":{"entryPoint":9290,"id":4745,"parameterSlots":8,"returnSlots":1},"@_grantRole_298":{"entryPoint":7612,"id":298,"parameterSlots":2,"returnSlots":0},"@_msgSender_2807":{"entryPoint":null,"id":2807,"parameterSlots":0,"returnSlots":1},"@_pause_1315":{"entryPoint":9199,"id":1315,"parameterSlots":0,"returnSlots":0},"@_preparePayload_5147":{"entryPoint":null,"id":5147,"parameterSlots":5,"returnSlots":1},"@_prepareRealmId_4512":{"entryPoint":7052,"id":4512,"parameterSlots":2,"returnSlots":1},"@_requireNotPaused_1288":{"entryPoint":10979,"id":1288,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1299":{"entryPoint":10678,"id":1299,"parameterSlots":0,"returnSlots":0},"@_revert_2779":{"entryPoint":12108,"id":2779,"parameterSlots":2,"returnSlots":0},"@_revokeRole_329":{"entryPoint":7856,"id":329,"parameterSlots":2,"returnSlots":0},"@_setImplementation_640":{"entryPoint":10369,"id":640,"parameterSlots":1,"returnSlots":0},"@_unpause_1331":{"entryPoint":8596,"id":1331,"parameterSlots":0,"returnSlots":0},"@_upgradeToAndCallUUPS_738":{"entryPoint":8085,"id":738,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_685":{"entryPoint":10635,"id":685,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_655":{"entryPoint":11698,"id":655,"parameterSlots":1,"returnSlots":0},"@adminAddress_4239":{"entryPoint":null,"id":4239,"parameterSlots":0,"returnSlots":0},"@balanceOfWithParentNodeName_5115":{"entryPoint":2571,"id":5115,"parameterSlots":2,"returnSlots":1},"@balanceOfWithRealmId_5084":{"entryPoint":5541,"id":5084,"parameterSlots":1,"returnSlots":1},"@balanceOfWithSeasonRealmId_5029":{"entryPoint":5863,"id":5029,"parameterSlots":2,"returnSlots":1},"@balanceOfWithSeason_5062":{"entryPoint":6678,"id":5062,"parameterSlots":3,"returnSlots":1},"@batchAddConsumeReasonCodes_4573":{"entryPoint":3612,"id":4573,"parameterSlots":1,"returnSlots":0},"@batchRemoveConsumeReasonCodes_4606":{"entryPoint":6361,"id":4606,"parameterSlots":1,"returnSlots":0},"@consumeWithParentnodeVRS_4900":{"entryPoint":2648,"id":4900,"parameterSlots":7,"returnSlots":0},"@consumeWithParentnode_4989":{"entryPoint":5838,"id":4989,"parameterSlots":4,"returnSlots":0},"@consumeWithRealmIdVRS_4925":{"entryPoint":6897,"id":4925,"parameterSlots":6,"returnSlots":0},"@consumeWithRealmId_5005":{"entryPoint":5914,"id":5005,"parameterSlots":3,"returnSlots":0},"@currentSeason_4230":{"entryPoint":null,"id":4230,"parameterSlots":0,"returnSlots":0},"@depositWithParentnode_4706":{"entryPoint":3424,"id":4706,"parameterSlots":6,"returnSlots":0},"@deposit_4673":{"entryPoint":2242,"id":4673,"parameterSlots":5,"returnSlots":0},"@functionDelegateCall_2667":{"entryPoint":11775,"id":2667,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_2696":{"entryPoint":null,"id":2696,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2854":{"entryPoint":null,"id":2854,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_2865":{"entryPoint":null,"id":2865,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_161":{"entryPoint":null,"id":161,"parameterSlots":1,"returnSlots":1},"@grantRole_181":{"entryPoint":2686,"id":181,"parameterSlots":2,"returnSlots":0},"@hasRole_94":{"entryPoint":null,"id":94,"parameterSlots":2,"returnSlots":1},"@initialize_4385":{"entryPoint":4130,"id":4385,"parameterSlots":2,"returnSlots":0},"@isContract_2468":{"entryPoint":null,"id":2468,"parameterSlots":1,"returnSlots":1},"@isReasonCodeAllowed_4496":{"entryPoint":null,"id":4496,"parameterSlots":1,"returnSlots":1},"@nonces_4251":{"entryPoint":null,"id":4251,"parameterSlots":0,"returnSlots":0},"@owner_4529":{"entryPoint":9543,"id":4529,"parameterSlots":1,"returnSlots":1},"@pause_4431":{"entryPoint":5925,"id":4431,"parameterSlots":0,"returnSlots":0},"@paused_1276":{"entryPoint":null,"id":1276,"parameterSlots":0,"returnSlots":1},"@preparePayload_5176":{"entryPoint":6784,"id":5176,"parameterSlots":3,"returnSlots":1},"@proxiableUUID_1155":{"entryPoint":5602,"id":1155,"parameterSlots":0,"returnSlots":1},"@realmIdContract_4237":{"entryPoint":null,"id":4237,"parameterSlots":0,"returnSlots":0},"@renounceRole_224":{"entryPoint":2728,"id":224,"parameterSlots":2,"returnSlots":0},"@revokeRole_201":{"entryPoint":6747,"id":201,"parameterSlots":2,"returnSlots":0},"@seasons_4234":{"entryPoint":null,"id":4234,"parameterSlots":0,"returnSlots":0},"@setCurrentSeason_4471":{"entryPoint":5975,"id":4471,"parameterSlots":1,"returnSlots":0},"@supportsInterface_3199":{"entryPoint":null,"id":3199,"parameterSlots":1,"returnSlots":1},"@supportsInterface_75":{"entryPoint":2089,"id":75,"parameterSlots":1,"returnSlots":1},"@toHexString_3115":{"entryPoint":11119,"id":3115,"parameterSlots":2,"returnSlots":1},"@toHexString_3135":{"entryPoint":11088,"id":3135,"parameterSlots":1,"returnSlots":1},"@unpause_4441":{"entryPoint":4080,"id":4441,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1198":{"entryPoint":5043,"id":1198,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1177":{"entryPoint":2907,"id":1177,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2735":{"entryPoint":11940,"id":2735,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":12452,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":12570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":14074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13206,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":13252,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":12855,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr":{"entryPoint":13507,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32":{"entryPoint":12932,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32t_string_memory_ptr":{"entryPoint":12602,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32":{"entryPoint":13342,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32":{"entryPoint":12695,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":13429,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":12267,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes4":{"entryPoint":12176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":12242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":14049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_bytes32":{"entryPoint":13463,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32":{"entryPoint":13587,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_uint8":{"entryPoint":12673,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":13941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14122,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IRealmId_$5277__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":14015,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":12373,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13886,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14270,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14103,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":13905,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":14293,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":13762,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13715,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13668,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12326,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":12821,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25168:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:29"},"nodeType":"YulFunctionCall","src":"131:12:29"},"nodeType":"YulExpressionStatement","src":"131:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:29"},"nodeType":"YulFunctionCall","src":"100:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:29"},"nodeType":"YulFunctionCall","src":"96:32:29"},"nodeType":"YulIf","src":"93:52:29"},{"nodeType":"YulVariableDeclaration","src":"154:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:29"},"nodeType":"YulFunctionCall","src":"167:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"300:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:29"},"nodeType":"YulFunctionCall","src":"302:12:29"},"nodeType":"YulExpressionStatement","src":"302:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"230:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:29"},"nodeType":"YulFunctionCall","src":"219:78:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:29"},"nodeType":"YulFunctionCall","src":"209:89:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:29"},"nodeType":"YulFunctionCall","src":"202:97:29"},"nodeType":"YulIf","src":"199:117:29"},{"nodeType":"YulAssignment","src":"325:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:29","type":""}],"src":"14:332:29"},{"body":{"nodeType":"YulBlock","src":"446:92:29","statements":[{"nodeType":"YulAssignment","src":"456:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:29"},"nodeType":"YulFunctionCall","src":"464:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"456:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"523:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"516:6:29"},"nodeType":"YulFunctionCall","src":"516:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"509:6:29"},"nodeType":"YulFunctionCall","src":"509:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"491:6:29"},"nodeType":"YulFunctionCall","src":"491:41:29"},"nodeType":"YulExpressionStatement","src":"491:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"415:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"426:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"437:4:29","type":""}],"src":"351:187:29"},{"body":{"nodeType":"YulBlock","src":"613:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"659:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"668:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"671:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"661:6:29"},"nodeType":"YulFunctionCall","src":"661:12:29"},"nodeType":"YulExpressionStatement","src":"661:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"634:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"630:3:29"},"nodeType":"YulFunctionCall","src":"630:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"655:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"626:3:29"},"nodeType":"YulFunctionCall","src":"626:32:29"},"nodeType":"YulIf","src":"623:52:29"},{"nodeType":"YulAssignment","src":"684:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"707:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"694:12:29"},"nodeType":"YulFunctionCall","src":"694:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"684:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"579:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"590:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"602:6:29","type":""}],"src":"543:180:29"},{"body":{"nodeType":"YulBlock","src":"829:76:29","statements":[{"nodeType":"YulAssignment","src":"839:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"851:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"862:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"847:3:29"},"nodeType":"YulFunctionCall","src":"847:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"839:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"881:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"892:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"874:6:29"},"nodeType":"YulFunctionCall","src":"874:25:29"},"nodeType":"YulExpressionStatement","src":"874:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"798:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"809:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"820:4:29","type":""}],"src":"728:177:29"},{"body":{"nodeType":"YulBlock","src":"1048:316:29","statements":[{"body":{"nodeType":"YulBlock","src":"1095:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1104:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1107:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1097:6:29"},"nodeType":"YulFunctionCall","src":"1097:12:29"},"nodeType":"YulExpressionStatement","src":"1097:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1069:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1065:3:29"},"nodeType":"YulFunctionCall","src":"1065:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1090:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1061:3:29"},"nodeType":"YulFunctionCall","src":"1061:33:29"},"nodeType":"YulIf","src":"1058:53:29"},{"nodeType":"YulAssignment","src":"1120:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1143:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1130:12:29"},"nodeType":"YulFunctionCall","src":"1130:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1120:6:29"}]},{"nodeType":"YulAssignment","src":"1162:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1189:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1200:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1185:3:29"},"nodeType":"YulFunctionCall","src":"1185:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1172:12:29"},"nodeType":"YulFunctionCall","src":"1172:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1162:6:29"}]},{"nodeType":"YulAssignment","src":"1213:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1240:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1251:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1236:3:29"},"nodeType":"YulFunctionCall","src":"1236:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1223:12:29"},"nodeType":"YulFunctionCall","src":"1223:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1213:6:29"}]},{"nodeType":"YulAssignment","src":"1264:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1291:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1302:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1287:3:29"},"nodeType":"YulFunctionCall","src":"1287:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1274:12:29"},"nodeType":"YulFunctionCall","src":"1274:32:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1264:6:29"}]},{"nodeType":"YulAssignment","src":"1315:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1353:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:29"},"nodeType":"YulFunctionCall","src":"1338:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1325:12:29"},"nodeType":"YulFunctionCall","src":"1325:33:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1315:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"982:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"993:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1005:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1013:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1021:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1029:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1037:6:29","type":""}],"src":"910:454:29"},{"body":{"nodeType":"YulBlock","src":"1401:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1418:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1421:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1411:6:29"},"nodeType":"YulFunctionCall","src":"1411:88:29"},"nodeType":"YulExpressionStatement","src":"1411:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1515:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1518:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1508:6:29"},"nodeType":"YulFunctionCall","src":"1508:15:29"},"nodeType":"YulExpressionStatement","src":"1508:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1542:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1532:6:29"},"nodeType":"YulFunctionCall","src":"1532:15:29"},"nodeType":"YulExpressionStatement","src":"1532:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1369:184:29"},{"body":{"nodeType":"YulBlock","src":"1603:289:29","statements":[{"nodeType":"YulAssignment","src":"1613:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1629:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1623:5:29"},"nodeType":"YulFunctionCall","src":"1623:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1613:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1641:117:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1663:6:29"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1679:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1685:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1675:3:29"},"nodeType":"YulFunctionCall","src":"1675:13:29"},{"kind":"number","nodeType":"YulLiteral","src":"1690:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1671:3:29"},"nodeType":"YulFunctionCall","src":"1671:86:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1659:3:29"},"nodeType":"YulFunctionCall","src":"1659:99:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1645:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1833:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1835:16:29"},"nodeType":"YulFunctionCall","src":"1835:18:29"},"nodeType":"YulExpressionStatement","src":"1835:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1776:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1788:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1773:2:29"},"nodeType":"YulFunctionCall","src":"1773:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1812:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1824:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1809:2:29"},"nodeType":"YulFunctionCall","src":"1809:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1770:2:29"},"nodeType":"YulFunctionCall","src":"1770:62:29"},"nodeType":"YulIf","src":"1767:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1871:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1875:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1864:6:29"},"nodeType":"YulFunctionCall","src":"1864:22:29"},"nodeType":"YulExpressionStatement","src":"1864:22:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1583:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1592:6:29","type":""}],"src":"1558:334:29"},{"body":{"nodeType":"YulBlock","src":"1972:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"2016:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2018:16:29"},"nodeType":"YulFunctionCall","src":"2018:18:29"},"nodeType":"YulExpressionStatement","src":"2018:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1988:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1996:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1985:2:29"},"nodeType":"YulFunctionCall","src":"1985:30:29"},"nodeType":"YulIf","src":"1982:56:29"},{"nodeType":"YulAssignment","src":"2047:125:29","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2084:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2092:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2080:3:29"},"nodeType":"YulFunctionCall","src":"2080:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"2097:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2076:3:29"},"nodeType":"YulFunctionCall","src":"2076:88:29"},{"kind":"number","nodeType":"YulLiteral","src":"2166:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2072:3:29"},"nodeType":"YulFunctionCall","src":"2072:99:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2056:15:29"},"nodeType":"YulFunctionCall","src":"2056:116:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2047:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2188:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2195:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2181:6:29"},"nodeType":"YulFunctionCall","src":"2181:21:29"},"nodeType":"YulExpressionStatement","src":"2181:21:29"},{"body":{"nodeType":"YulBlock","src":"2240:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2249:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2252:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2242:6:29"},"nodeType":"YulFunctionCall","src":"2242:12:29"},"nodeType":"YulExpressionStatement","src":"2242:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2221:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2226:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2217:3:29"},"nodeType":"YulFunctionCall","src":"2217:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2235:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2214:2:29"},"nodeType":"YulFunctionCall","src":"2214:25:29"},"nodeType":"YulIf","src":"2211:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2282:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2289:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2278:3:29"},"nodeType":"YulFunctionCall","src":"2278:16:29"},{"name":"src","nodeType":"YulIdentifier","src":"2296:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2301:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2265:12:29"},"nodeType":"YulFunctionCall","src":"2265:43:29"},"nodeType":"YulExpressionStatement","src":"2265:43:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2332:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2339:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2328:3:29"},"nodeType":"YulFunctionCall","src":"2328:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"2348:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:29"},"nodeType":"YulFunctionCall","src":"2324:29:29"},{"kind":"number","nodeType":"YulLiteral","src":"2355:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2317:6:29"},"nodeType":"YulFunctionCall","src":"2317:40:29"},"nodeType":"YulExpressionStatement","src":"2317:40:29"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1941:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1946:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1954:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1962:5:29","type":""}],"src":"1897:466:29"},{"body":{"nodeType":"YulBlock","src":"2421:169:29","statements":[{"body":{"nodeType":"YulBlock","src":"2470:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2479:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2482:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2472:6:29"},"nodeType":"YulFunctionCall","src":"2472:12:29"},"nodeType":"YulExpressionStatement","src":"2472:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2449:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2457:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:29"},"nodeType":"YulFunctionCall","src":"2445:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2464:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2441:3:29"},"nodeType":"YulFunctionCall","src":"2441:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2434:6:29"},"nodeType":"YulFunctionCall","src":"2434:35:29"},"nodeType":"YulIf","src":"2431:55:29"},{"nodeType":"YulAssignment","src":"2495:89:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2543:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2551:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2539:3:29"},"nodeType":"YulFunctionCall","src":"2539:17:29"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2571:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2558:12:29"},"nodeType":"YulFunctionCall","src":"2558:20:29"},{"name":"end","nodeType":"YulIdentifier","src":"2580:3:29"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"2504:34:29"},"nodeType":"YulFunctionCall","src":"2504:80:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2495:5:29"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2395:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2403:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2411:5:29","type":""}],"src":"2368:222:29"},{"body":{"nodeType":"YulBlock","src":"2692:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"2738:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2750:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2740:6:29"},"nodeType":"YulFunctionCall","src":"2740:12:29"},"nodeType":"YulExpressionStatement","src":"2740:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2713:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2722:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2709:3:29"},"nodeType":"YulFunctionCall","src":"2709:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2705:3:29"},"nodeType":"YulFunctionCall","src":"2705:32:29"},"nodeType":"YulIf","src":"2702:52:29"},{"nodeType":"YulAssignment","src":"2763:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2786:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2773:12:29"},"nodeType":"YulFunctionCall","src":"2773:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2763:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"2805:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2836:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2847:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2832:3:29"},"nodeType":"YulFunctionCall","src":"2832:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2819:12:29"},"nodeType":"YulFunctionCall","src":"2819:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2809:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2894:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2903:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2906:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2896:6:29"},"nodeType":"YulFunctionCall","src":"2896:12:29"},"nodeType":"YulExpressionStatement","src":"2896:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2866:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2874:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2863:2:29"},"nodeType":"YulFunctionCall","src":"2863:30:29"},"nodeType":"YulIf","src":"2860:50:29"},{"nodeType":"YulAssignment","src":"2919:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2951:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2962:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2947:3:29"},"nodeType":"YulFunctionCall","src":"2947:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2971:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2929:17:29"},"nodeType":"YulFunctionCall","src":"2929:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2919:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2650:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2661:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2673:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2681:6:29","type":""}],"src":"2595:390:29"},{"body":{"nodeType":"YulBlock","src":"3060:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"3106:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3115:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3118:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3108:6:29"},"nodeType":"YulFunctionCall","src":"3108:12:29"},"nodeType":"YulExpressionStatement","src":"3108:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3081:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3090:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3077:3:29"},"nodeType":"YulFunctionCall","src":"3077:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3102:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3073:3:29"},"nodeType":"YulFunctionCall","src":"3073:32:29"},"nodeType":"YulIf","src":"3070:52:29"},{"nodeType":"YulAssignment","src":"3131:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3154:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3141:12:29"},"nodeType":"YulFunctionCall","src":"3141:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3131:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3026:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3037:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3049:6:29","type":""}],"src":"2990:180:29"},{"body":{"nodeType":"YulBlock","src":"3276:76:29","statements":[{"nodeType":"YulAssignment","src":"3286:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3298:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3309:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3294:3:29"},"nodeType":"YulFunctionCall","src":"3294:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3286:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3328:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"3339:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3321:6:29"},"nodeType":"YulFunctionCall","src":"3321:25:29"},"nodeType":"YulExpressionStatement","src":"3321:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3245:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3256:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3267:4:29","type":""}],"src":"3175:177:29"},{"body":{"nodeType":"YulBlock","src":"3404:109:29","statements":[{"nodeType":"YulAssignment","src":"3414:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3436:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3423:12:29"},"nodeType":"YulFunctionCall","src":"3423:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3414:5:29"}]},{"body":{"nodeType":"YulBlock","src":"3491:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3500:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3503:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3493:6:29"},"nodeType":"YulFunctionCall","src":"3493:12:29"},"nodeType":"YulExpressionStatement","src":"3493:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3465:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3476:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3483:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3472:3:29"},"nodeType":"YulFunctionCall","src":"3472:16:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3462:2:29"},"nodeType":"YulFunctionCall","src":"3462:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3455:6:29"},"nodeType":"YulFunctionCall","src":"3455:35:29"},"nodeType":"YulIf","src":"3452:55:29"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3383:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:29","type":""}],"src":"3357:156:29"},{"body":{"nodeType":"YulBlock","src":"3698:556:29","statements":[{"body":{"nodeType":"YulBlock","src":"3745:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3754:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3757:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3747:6:29"},"nodeType":"YulFunctionCall","src":"3747:12:29"},"nodeType":"YulExpressionStatement","src":"3747:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3719:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3728:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3715:3:29"},"nodeType":"YulFunctionCall","src":"3715:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3740:3:29","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3711:3:29"},"nodeType":"YulFunctionCall","src":"3711:33:29"},"nodeType":"YulIf","src":"3708:53:29"},{"nodeType":"YulAssignment","src":"3770:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3793:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3780:12:29"},"nodeType":"YulFunctionCall","src":"3780:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3770:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"3812:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3854:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:29"},"nodeType":"YulFunctionCall","src":"3839:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3826:12:29"},"nodeType":"YulFunctionCall","src":"3826:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3816:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3901:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3910:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3913:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3903:6:29"},"nodeType":"YulFunctionCall","src":"3903:12:29"},"nodeType":"YulExpressionStatement","src":"3903:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3873:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3881:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3870:2:29"},"nodeType":"YulFunctionCall","src":"3870:30:29"},"nodeType":"YulIf","src":"3867:50:29"},{"nodeType":"YulAssignment","src":"3926:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3958:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3969:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3954:3:29"},"nodeType":"YulFunctionCall","src":"3954:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3978:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3936:17:29"},"nodeType":"YulFunctionCall","src":"3936:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3926:6:29"}]},{"nodeType":"YulAssignment","src":"3995:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4018:3:29"},"nodeType":"YulFunctionCall","src":"4018:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4005:12:29"},"nodeType":"YulFunctionCall","src":"4005:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3995:6:29"}]},{"nodeType":"YulAssignment","src":"4046:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4084:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4069:3:29"},"nodeType":"YulFunctionCall","src":"4069:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4056:12:29"},"nodeType":"YulFunctionCall","src":"4056:32:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4046:6:29"}]},{"nodeType":"YulAssignment","src":"4097:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4128:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4139:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4124:3:29"},"nodeType":"YulFunctionCall","src":"4124:19:29"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"4107:16:29"},"nodeType":"YulFunctionCall","src":"4107:37:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4097:6:29"}]},{"nodeType":"YulAssignment","src":"4153:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4180:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4191:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4176:3:29"},"nodeType":"YulFunctionCall","src":"4176:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4163:12:29"},"nodeType":"YulFunctionCall","src":"4163:33:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4153:6:29"}]},{"nodeType":"YulAssignment","src":"4205:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4232:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4243:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4228:3:29"},"nodeType":"YulFunctionCall","src":"4228:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4215:12:29"},"nodeType":"YulFunctionCall","src":"4215:33:29"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4205:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3616:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3627:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3639:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3647:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3655:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3663:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3671:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3679:6:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3687:6:29","type":""}],"src":"3518:736:29"},{"body":{"nodeType":"YulBlock","src":"4377:125:29","statements":[{"nodeType":"YulAssignment","src":"4387:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4395:3:29"},"nodeType":"YulFunctionCall","src":"4395:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4387:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4429:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4444:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4452:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4440:3:29"},"nodeType":"YulFunctionCall","src":"4440:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4422:6:29"},"nodeType":"YulFunctionCall","src":"4422:74:29"},"nodeType":"YulExpressionStatement","src":"4422:74:29"}]},"name":"abi_encode_tuple_t_contract$_IRealmId_$5277__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4346:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4357:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4368:4:29","type":""}],"src":"4259:243:29"},{"body":{"nodeType":"YulBlock","src":"4552:109:29","statements":[{"body":{"nodeType":"YulBlock","src":"4639:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4648:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4651:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4641:6:29"},"nodeType":"YulFunctionCall","src":"4641:12:29"},"nodeType":"YulExpressionStatement","src":"4641:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4575:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4586:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4593:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4582:3:29"},"nodeType":"YulFunctionCall","src":"4582:54:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4572:2:29"},"nodeType":"YulFunctionCall","src":"4572:65:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4565:6:29"},"nodeType":"YulFunctionCall","src":"4565:73:29"},"nodeType":"YulIf","src":"4562:93:29"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4541:5:29","type":""}],"src":"4507:154:29"},{"body":{"nodeType":"YulBlock","src":"4753:228:29","statements":[{"body":{"nodeType":"YulBlock","src":"4799:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4808:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4811:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4801:6:29"},"nodeType":"YulFunctionCall","src":"4801:12:29"},"nodeType":"YulExpressionStatement","src":"4801:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4774:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4770:3:29"},"nodeType":"YulFunctionCall","src":"4770:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4795:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4766:3:29"},"nodeType":"YulFunctionCall","src":"4766:32:29"},"nodeType":"YulIf","src":"4763:52:29"},{"nodeType":"YulAssignment","src":"4824:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4847:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4834:12:29"},"nodeType":"YulFunctionCall","src":"4834:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4824:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4866:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4896:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4907:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4892:3:29"},"nodeType":"YulFunctionCall","src":"4892:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4879:12:29"},"nodeType":"YulFunctionCall","src":"4879:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4870:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4945:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4920:24:29"},"nodeType":"YulFunctionCall","src":"4920:31:29"},"nodeType":"YulExpressionStatement","src":"4920:31:29"},{"nodeType":"YulAssignment","src":"4960:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4970:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4960:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4711:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4722:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4734:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4742:6:29","type":""}],"src":"4666:315:29"},{"body":{"nodeType":"YulBlock","src":"5056:177:29","statements":[{"body":{"nodeType":"YulBlock","src":"5102:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5111:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5114:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5104:6:29"},"nodeType":"YulFunctionCall","src":"5104:12:29"},"nodeType":"YulExpressionStatement","src":"5104:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5077:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5086:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5073:3:29"},"nodeType":"YulFunctionCall","src":"5073:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5098:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5069:3:29"},"nodeType":"YulFunctionCall","src":"5069:32:29"},"nodeType":"YulIf","src":"5066:52:29"},{"nodeType":"YulVariableDeclaration","src":"5127:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5153:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5140:12:29"},"nodeType":"YulFunctionCall","src":"5140:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5131:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5172:24:29"},"nodeType":"YulFunctionCall","src":"5172:31:29"},"nodeType":"YulExpressionStatement","src":"5172:31:29"},{"nodeType":"YulAssignment","src":"5212:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5222:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5212:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5022:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5033:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5045:6:29","type":""}],"src":"4986:247:29"},{"body":{"nodeType":"YulBlock","src":"5403:500:29","statements":[{"body":{"nodeType":"YulBlock","src":"5450:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5462:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5452:6:29"},"nodeType":"YulFunctionCall","src":"5452:12:29"},"nodeType":"YulExpressionStatement","src":"5452:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5424:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5433:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5420:3:29"},"nodeType":"YulFunctionCall","src":"5420:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5445:3:29","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5416:3:29"},"nodeType":"YulFunctionCall","src":"5416:33:29"},"nodeType":"YulIf","src":"5413:53:29"},{"nodeType":"YulAssignment","src":"5475:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5498:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5485:12:29"},"nodeType":"YulFunctionCall","src":"5485:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5475:6:29"}]},{"nodeType":"YulAssignment","src":"5517:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5544:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5555:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5540:3:29"},"nodeType":"YulFunctionCall","src":"5540:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5527:12:29"},"nodeType":"YulFunctionCall","src":"5527:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5517:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"5568:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5599:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5610:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5595:3:29"},"nodeType":"YulFunctionCall","src":"5595:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5582:12:29"},"nodeType":"YulFunctionCall","src":"5582:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5572:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5657:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5666:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5669:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5659:6:29"},"nodeType":"YulFunctionCall","src":"5659:12:29"},"nodeType":"YulExpressionStatement","src":"5659:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5629:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5637:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5626:2:29"},"nodeType":"YulFunctionCall","src":"5626:30:29"},"nodeType":"YulIf","src":"5623:50:29"},{"nodeType":"YulAssignment","src":"5682:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5714:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5725:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5710:3:29"},"nodeType":"YulFunctionCall","src":"5710:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5734:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5692:17:29"},"nodeType":"YulFunctionCall","src":"5692:50:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5682:6:29"}]},{"nodeType":"YulAssignment","src":"5751:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5778:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5789:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5774:3:29"},"nodeType":"YulFunctionCall","src":"5774:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5761:12:29"},"nodeType":"YulFunctionCall","src":"5761:32:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5751:6:29"}]},{"nodeType":"YulAssignment","src":"5802:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5840:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5825:3:29"},"nodeType":"YulFunctionCall","src":"5825:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5812:12:29"},"nodeType":"YulFunctionCall","src":"5812:33:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5802:6:29"}]},{"nodeType":"YulAssignment","src":"5854:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5881:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5892:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5877:3:29"},"nodeType":"YulFunctionCall","src":"5877:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5864:12:29"},"nodeType":"YulFunctionCall","src":"5864:33:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5854:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5329:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5340:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5352:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5360:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5368:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5376:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5384:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5392:6:29","type":""}],"src":"5238:665:29"},{"body":{"nodeType":"YulBlock","src":"6003:851:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6013:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6023:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6017:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6070:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6079:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6082:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6072:6:29"},"nodeType":"YulFunctionCall","src":"6072:12:29"},"nodeType":"YulExpressionStatement","src":"6072:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6045:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6054:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6041:3:29"},"nodeType":"YulFunctionCall","src":"6041:23:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6066:2:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6037:3:29"},"nodeType":"YulFunctionCall","src":"6037:32:29"},"nodeType":"YulIf","src":"6034:52:29"},{"nodeType":"YulVariableDeclaration","src":"6095:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6122:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6109:12:29"},"nodeType":"YulFunctionCall","src":"6109:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6099:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6141:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6151:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6145:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6196:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6205:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6208:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6198:6:29"},"nodeType":"YulFunctionCall","src":"6198:12:29"},"nodeType":"YulExpressionStatement","src":"6198:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6184:6:29"},{"name":"_2","nodeType":"YulIdentifier","src":"6192:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6181:2:29"},"nodeType":"YulFunctionCall","src":"6181:14:29"},"nodeType":"YulIf","src":"6178:34:29"},{"nodeType":"YulVariableDeclaration","src":"6221:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6235:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6246:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6231:3:29"},"nodeType":"YulFunctionCall","src":"6231:22:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6225:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6301:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6310:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6313:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6303:6:29"},"nodeType":"YulFunctionCall","src":"6303:12:29"},"nodeType":"YulExpressionStatement","src":"6303:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6280:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"6284:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6276:3:29"},"nodeType":"YulFunctionCall","src":"6276:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6291:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6272:3:29"},"nodeType":"YulFunctionCall","src":"6272:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6265:6:29"},"nodeType":"YulFunctionCall","src":"6265:35:29"},"nodeType":"YulIf","src":"6262:55:29"},{"nodeType":"YulVariableDeclaration","src":"6326:26:29","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6349:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6336:12:29"},"nodeType":"YulFunctionCall","src":"6336:16:29"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6330:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6375:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6377:16:29"},"nodeType":"YulFunctionCall","src":"6377:18:29"},"nodeType":"YulExpressionStatement","src":"6377:18:29"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"6367:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"6371:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6364:2:29"},"nodeType":"YulFunctionCall","src":"6364:10:29"},"nodeType":"YulIf","src":"6361:36:29"},{"nodeType":"YulVariableDeclaration","src":"6406:20:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6420:1:29","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"6423:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6416:3:29"},"nodeType":"YulFunctionCall","src":"6416:10:29"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"6410:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6435:39:29","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"6466:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6470:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6462:3:29"},"nodeType":"YulFunctionCall","src":"6462:11:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6446:15:29"},"nodeType":"YulFunctionCall","src":"6446:28:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6439:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6483:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"6496:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6487:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6515:3:29"},{"name":"_4","nodeType":"YulIdentifier","src":"6520:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6508:6:29"},"nodeType":"YulFunctionCall","src":"6508:15:29"},"nodeType":"YulExpressionStatement","src":"6508:15:29"},{"nodeType":"YulAssignment","src":"6532:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6543:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6548:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6539:3:29"},"nodeType":"YulFunctionCall","src":"6539:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6532:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"6560:34:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6582:2:29"},{"name":"_5","nodeType":"YulIdentifier","src":"6586:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6578:3:29"},"nodeType":"YulFunctionCall","src":"6578:11:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6591:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6574:3:29"},"nodeType":"YulFunctionCall","src":"6574:20:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6564:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6626:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6635:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6638:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6628:6:29"},"nodeType":"YulFunctionCall","src":"6628:12:29"},"nodeType":"YulExpressionStatement","src":"6628:12:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6609:6:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6617:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6606:2:29"},"nodeType":"YulFunctionCall","src":"6606:19:29"},"nodeType":"YulIf","src":"6603:39:29"},{"nodeType":"YulVariableDeclaration","src":"6651:22:29","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6666:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6670:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6662:3:29"},"nodeType":"YulFunctionCall","src":"6662:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6655:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6738:86:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6759:3:29"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6777:3:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6764:12:29"},"nodeType":"YulFunctionCall","src":"6764:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6752:6:29"},"nodeType":"YulFunctionCall","src":"6752:30:29"},"nodeType":"YulExpressionStatement","src":"6752:30:29"},{"nodeType":"YulAssignment","src":"6795:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6806:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6811:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6802:3:29"},"nodeType":"YulFunctionCall","src":"6802:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6795:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6693:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6698:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6690:2:29"},"nodeType":"YulFunctionCall","src":"6690:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6706:23:29","statements":[{"nodeType":"YulAssignment","src":"6708:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6719:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"6724:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6715:3:29"},"nodeType":"YulFunctionCall","src":"6715:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6708:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6686:3:29","statements":[]},"src":"6682:142:29"},{"nodeType":"YulAssignment","src":"6833:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"6843:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6833:6:29"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5969:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5980:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5992:6:29","type":""}],"src":"5908:946:29"},{"body":{"nodeType":"YulBlock","src":"6946:301:29","statements":[{"body":{"nodeType":"YulBlock","src":"6992:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7001:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7004:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6994:6:29"},"nodeType":"YulFunctionCall","src":"6994:12:29"},"nodeType":"YulExpressionStatement","src":"6994:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6967:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6976:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6963:3:29"},"nodeType":"YulFunctionCall","src":"6963:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6988:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6959:3:29"},"nodeType":"YulFunctionCall","src":"6959:32:29"},"nodeType":"YulIf","src":"6956:52:29"},{"nodeType":"YulVariableDeclaration","src":"7017:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7043:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7030:12:29"},"nodeType":"YulFunctionCall","src":"7030:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7021:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7087:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7062:24:29"},"nodeType":"YulFunctionCall","src":"7062:31:29"},"nodeType":"YulExpressionStatement","src":"7062:31:29"},{"nodeType":"YulAssignment","src":"7102:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7112:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7102:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"7126:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7158:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7169:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7154:3:29"},"nodeType":"YulFunctionCall","src":"7154:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7141:12:29"},"nodeType":"YulFunctionCall","src":"7141:32:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7130:7:29","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7207:7:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7182:24:29"},"nodeType":"YulFunctionCall","src":"7182:33:29"},"nodeType":"YulExpressionStatement","src":"7182:33:29"},{"nodeType":"YulAssignment","src":"7224:17:29","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7234:7:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7224:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6904:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6915:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6927:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6935:6:29","type":""}],"src":"6859:388:29"},{"body":{"nodeType":"YulBlock","src":"7348:489:29","statements":[{"body":{"nodeType":"YulBlock","src":"7394:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7403:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7406:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7396:6:29"},"nodeType":"YulFunctionCall","src":"7396:12:29"},"nodeType":"YulExpressionStatement","src":"7396:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7369:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7378:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:29"},"nodeType":"YulFunctionCall","src":"7365:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7361:3:29"},"nodeType":"YulFunctionCall","src":"7361:32:29"},"nodeType":"YulIf","src":"7358:52:29"},{"nodeType":"YulVariableDeclaration","src":"7419:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7445:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7432:12:29"},"nodeType":"YulFunctionCall","src":"7432:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7423:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7489:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7464:24:29"},"nodeType":"YulFunctionCall","src":"7464:31:29"},"nodeType":"YulExpressionStatement","src":"7464:31:29"},{"nodeType":"YulAssignment","src":"7504:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"7514:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7504:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"7528:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7559:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7570:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7555:3:29"},"nodeType":"YulFunctionCall","src":"7555:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7542:12:29"},"nodeType":"YulFunctionCall","src":"7542:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7532:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7617:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7626:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7629:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7619:6:29"},"nodeType":"YulFunctionCall","src":"7619:12:29"},"nodeType":"YulExpressionStatement","src":"7619:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7589:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7597:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7586:2:29"},"nodeType":"YulFunctionCall","src":"7586:30:29"},"nodeType":"YulIf","src":"7583:50:29"},{"nodeType":"YulVariableDeclaration","src":"7642:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7656:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7667:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7652:3:29"},"nodeType":"YulFunctionCall","src":"7652:22:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7646:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7722:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7731:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7734:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7724:6:29"},"nodeType":"YulFunctionCall","src":"7724:12:29"},"nodeType":"YulExpressionStatement","src":"7724:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7701:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7705:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7697:3:29"},"nodeType":"YulFunctionCall","src":"7697:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7712:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7693:3:29"},"nodeType":"YulFunctionCall","src":"7693:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7686:6:29"},"nodeType":"YulFunctionCall","src":"7686:35:29"},"nodeType":"YulIf","src":"7683:55:29"},{"nodeType":"YulAssignment","src":"7747:84:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7796:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7800:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7792:3:29"},"nodeType":"YulFunctionCall","src":"7792:11:29"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7818:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7805:12:29"},"nodeType":"YulFunctionCall","src":"7805:16:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7823:7:29"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"7757:34:29"},"nodeType":"YulFunctionCall","src":"7757:74:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7747:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7306:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7317:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7329:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7337:6:29","type":""}],"src":"7252:585:29"},{"body":{"nodeType":"YulBlock","src":"7973:396:29","statements":[{"body":{"nodeType":"YulBlock","src":"8020:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8029:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8032:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8022:6:29"},"nodeType":"YulFunctionCall","src":"8022:12:29"},"nodeType":"YulExpressionStatement","src":"8022:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7994:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8003:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7990:3:29"},"nodeType":"YulFunctionCall","src":"7990:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8015:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7986:3:29"},"nodeType":"YulFunctionCall","src":"7986:33:29"},"nodeType":"YulIf","src":"7983:53:29"},{"nodeType":"YulAssignment","src":"8045:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8068:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8055:12:29"},"nodeType":"YulFunctionCall","src":"8055:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8045:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"8087:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8118:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8129:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8114:3:29"},"nodeType":"YulFunctionCall","src":"8114:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8101:12:29"},"nodeType":"YulFunctionCall","src":"8101:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8091:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8176:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8185:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8188:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8178:6:29"},"nodeType":"YulFunctionCall","src":"8178:12:29"},"nodeType":"YulExpressionStatement","src":"8178:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8148:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8156:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8145:2:29"},"nodeType":"YulFunctionCall","src":"8145:30:29"},"nodeType":"YulIf","src":"8142:50:29"},{"nodeType":"YulAssignment","src":"8201:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8233:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8244:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8229:3:29"},"nodeType":"YulFunctionCall","src":"8229:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8253:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8211:17:29"},"nodeType":"YulFunctionCall","src":"8211:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8201:6:29"}]},{"nodeType":"YulAssignment","src":"8270:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8297:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8308:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:29"},"nodeType":"YulFunctionCall","src":"8293:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8280:12:29"},"nodeType":"YulFunctionCall","src":"8280:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8270:6:29"}]},{"nodeType":"YulAssignment","src":"8321:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8348:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8359:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8344:3:29"},"nodeType":"YulFunctionCall","src":"8344:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8331:12:29"},"nodeType":"YulFunctionCall","src":"8331:32:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8321:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7915:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7926:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7938:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7946:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7954:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7962:6:29","type":""}],"src":"7842:527:29"},{"body":{"nodeType":"YulBlock","src":"8461:161:29","statements":[{"body":{"nodeType":"YulBlock","src":"8507:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8516:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8519:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8509:6:29"},"nodeType":"YulFunctionCall","src":"8509:12:29"},"nodeType":"YulExpressionStatement","src":"8509:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8482:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8478:3:29"},"nodeType":"YulFunctionCall","src":"8478:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8503:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8474:3:29"},"nodeType":"YulFunctionCall","src":"8474:32:29"},"nodeType":"YulIf","src":"8471:52:29"},{"nodeType":"YulAssignment","src":"8532:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8555:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8542:12:29"},"nodeType":"YulFunctionCall","src":"8542:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8532:6:29"}]},{"nodeType":"YulAssignment","src":"8574:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8601:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8612:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:29"},"nodeType":"YulFunctionCall","src":"8597:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8584:12:29"},"nodeType":"YulFunctionCall","src":"8584:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8574:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8419:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8430:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8442:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8450:6:29","type":""}],"src":"8374:248:29"},{"body":{"nodeType":"YulBlock","src":"8731:212:29","statements":[{"body":{"nodeType":"YulBlock","src":"8777:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8786:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8789:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8779:6:29"},"nodeType":"YulFunctionCall","src":"8779:12:29"},"nodeType":"YulExpressionStatement","src":"8779:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8752:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8761:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8748:3:29"},"nodeType":"YulFunctionCall","src":"8748:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8773:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8744:3:29"},"nodeType":"YulFunctionCall","src":"8744:32:29"},"nodeType":"YulIf","src":"8741:52:29"},{"nodeType":"YulAssignment","src":"8802:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8825:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8812:12:29"},"nodeType":"YulFunctionCall","src":"8812:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8802:6:29"}]},{"nodeType":"YulAssignment","src":"8844:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8871:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8882:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8867:3:29"},"nodeType":"YulFunctionCall","src":"8867:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8854:12:29"},"nodeType":"YulFunctionCall","src":"8854:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8844:6:29"}]},{"nodeType":"YulAssignment","src":"8895:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8922:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8933:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8918:3:29"},"nodeType":"YulFunctionCall","src":"8918:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8905:12:29"},"nodeType":"YulFunctionCall","src":"8905:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8895:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8681:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8692:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8704:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8712:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8720:6:29","type":""}],"src":"8627:316:29"},{"body":{"nodeType":"YulBlock","src":"9062:344:29","statements":[{"body":{"nodeType":"YulBlock","src":"9108:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9117:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9120:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9110:6:29"},"nodeType":"YulFunctionCall","src":"9110:12:29"},"nodeType":"YulExpressionStatement","src":"9110:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9083:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9092:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9079:3:29"},"nodeType":"YulFunctionCall","src":"9079:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9104:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9075:3:29"},"nodeType":"YulFunctionCall","src":"9075:32:29"},"nodeType":"YulIf","src":"9072:52:29"},{"nodeType":"YulAssignment","src":"9133:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9143:12:29"},"nodeType":"YulFunctionCall","src":"9143:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9133:6:29"}]},{"nodeType":"YulAssignment","src":"9175:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9202:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9213:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9198:3:29"},"nodeType":"YulFunctionCall","src":"9198:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9185:12:29"},"nodeType":"YulFunctionCall","src":"9185:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9175:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"9226:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9257:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9268:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9253:3:29"},"nodeType":"YulFunctionCall","src":"9253:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9240:12:29"},"nodeType":"YulFunctionCall","src":"9240:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9230:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9315:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9324:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9327:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9317:6:29"},"nodeType":"YulFunctionCall","src":"9317:12:29"},"nodeType":"YulExpressionStatement","src":"9317:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9287:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9295:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9284:2:29"},"nodeType":"YulFunctionCall","src":"9284:30:29"},"nodeType":"YulIf","src":"9281:50:29"},{"nodeType":"YulAssignment","src":"9340:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9372:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9383:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9368:3:29"},"nodeType":"YulFunctionCall","src":"9368:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9392:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9350:17:29"},"nodeType":"YulFunctionCall","src":"9350:50:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9340:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9012:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9023:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9035:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9043:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9051:6:29","type":""}],"src":"8948:458:29"},{"body":{"nodeType":"YulBlock","src":"9512:125:29","statements":[{"nodeType":"YulAssignment","src":"9522:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9545:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9530:3:29"},"nodeType":"YulFunctionCall","src":"9530:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9522:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9564:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9579:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9587:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9575:3:29"},"nodeType":"YulFunctionCall","src":"9575:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9557:6:29"},"nodeType":"YulFunctionCall","src":"9557:74:29"},"nodeType":"YulExpressionStatement","src":"9557:74:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9481:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9492:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9503:4:29","type":""}],"src":"9411:226:29"},{"body":{"nodeType":"YulBlock","src":"9795:372:29","statements":[{"body":{"nodeType":"YulBlock","src":"9842:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9851:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9854:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9844:6:29"},"nodeType":"YulFunctionCall","src":"9844:12:29"},"nodeType":"YulExpressionStatement","src":"9844:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9816:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9825:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9812:3:29"},"nodeType":"YulFunctionCall","src":"9812:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9837:3:29","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9808:3:29"},"nodeType":"YulFunctionCall","src":"9808:33:29"},"nodeType":"YulIf","src":"9805:53:29"},{"nodeType":"YulAssignment","src":"9867:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9890:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9877:12:29"},"nodeType":"YulFunctionCall","src":"9877:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9867:6:29"}]},{"nodeType":"YulAssignment","src":"9909:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9936:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9947:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9932:3:29"},"nodeType":"YulFunctionCall","src":"9932:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9919:12:29"},"nodeType":"YulFunctionCall","src":"9919:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9909:6:29"}]},{"nodeType":"YulAssignment","src":"9960:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9987:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9998:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9983:3:29"},"nodeType":"YulFunctionCall","src":"9983:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9970:12:29"},"nodeType":"YulFunctionCall","src":"9970:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9960:6:29"}]},{"nodeType":"YulAssignment","src":"10011:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10042:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10053:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10038:3:29"},"nodeType":"YulFunctionCall","src":"10038:18:29"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"10021:16:29"},"nodeType":"YulFunctionCall","src":"10021:36:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10011:6:29"}]},{"nodeType":"YulAssignment","src":"10066:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10093:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10104:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10089:3:29"},"nodeType":"YulFunctionCall","src":"10089:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10076:12:29"},"nodeType":"YulFunctionCall","src":"10076:33:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10066:6:29"}]},{"nodeType":"YulAssignment","src":"10118:43:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10145:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10156:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10141:3:29"},"nodeType":"YulFunctionCall","src":"10141:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10128:12:29"},"nodeType":"YulFunctionCall","src":"10128:33:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10118:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9721:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9732:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9744:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9752:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9760:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9768:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9776:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9784:6:29","type":""}],"src":"9642:525:29"},{"body":{"nodeType":"YulBlock","src":"10346:165:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10363:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10374:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10356:6:29"},"nodeType":"YulFunctionCall","src":"10356:21:29"},"nodeType":"YulExpressionStatement","src":"10356:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10397:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10408:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10393:3:29"},"nodeType":"YulFunctionCall","src":"10393:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"10413:2:29","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10386:6:29"},"nodeType":"YulFunctionCall","src":"10386:30:29"},"nodeType":"YulExpressionStatement","src":"10386:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10436:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10447:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10432:3:29"},"nodeType":"YulFunctionCall","src":"10432:18:29"},{"hexValue":"4e6f742061206465706f7369746f72","kind":"string","nodeType":"YulLiteral","src":"10452:17:29","type":"","value":"Not a depositor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10425:6:29"},"nodeType":"YulFunctionCall","src":"10425:45:29"},"nodeType":"YulExpressionStatement","src":"10425:45:29"},{"nodeType":"YulAssignment","src":"10479:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10502:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10487:3:29"},"nodeType":"YulFunctionCall","src":"10487:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10479:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10323:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10337:4:29","type":""}],"src":"10172:339:29"},{"body":{"nodeType":"YulBlock","src":"10690:237:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10718:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10700:6:29"},"nodeType":"YulFunctionCall","src":"10700:21:29"},"nodeType":"YulExpressionStatement","src":"10700:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10741:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10752:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10737:3:29"},"nodeType":"YulFunctionCall","src":"10737:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"10757:2:29","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10730:6:29"},"nodeType":"YulFunctionCall","src":"10730:30:29"},"nodeType":"YulExpressionStatement","src":"10730:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10780:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10791:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10776:3:29"},"nodeType":"YulFunctionCall","src":"10776:18:29"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"10796:34:29","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10769:6:29"},"nodeType":"YulFunctionCall","src":"10769:62:29"},"nodeType":"YulExpressionStatement","src":"10769:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10851:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10862:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10847:3:29"},"nodeType":"YulFunctionCall","src":"10847:18:29"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"10867:17:29","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10840:6:29"},"nodeType":"YulFunctionCall","src":"10840:45:29"},"nodeType":"YulExpressionStatement","src":"10840:45:29"},{"nodeType":"YulAssignment","src":"10894:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10906:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10917:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10902:3:29"},"nodeType":"YulFunctionCall","src":"10902:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10894:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10667:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10681:4:29","type":""}],"src":"10516:411:29"},{"body":{"nodeType":"YulBlock","src":"11106:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11123:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11134:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11116:6:29"},"nodeType":"YulFunctionCall","src":"11116:21:29"},"nodeType":"YulExpressionStatement","src":"11116:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11157:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11168:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11153:3:29"},"nodeType":"YulFunctionCall","src":"11153:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"11173:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11146:6:29"},"nodeType":"YulFunctionCall","src":"11146:30:29"},"nodeType":"YulExpressionStatement","src":"11146:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11196:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11207:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11192:3:29"},"nodeType":"YulFunctionCall","src":"11192:18:29"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"11212:34:29","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11185:6:29"},"nodeType":"YulFunctionCall","src":"11185:62:29"},"nodeType":"YulExpressionStatement","src":"11185:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11267:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11278:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11263:3:29"},"nodeType":"YulFunctionCall","src":"11263:18:29"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"11283:14:29","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11256:6:29"},"nodeType":"YulFunctionCall","src":"11256:42:29"},"nodeType":"YulExpressionStatement","src":"11256:42:29"},{"nodeType":"YulAssignment","src":"11307:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11319:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11330:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11315:3:29"},"nodeType":"YulFunctionCall","src":"11315:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11307:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11083:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11097:4:29","type":""}],"src":"10932:408:29"},{"body":{"nodeType":"YulBlock","src":"11519:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11536:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11547:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11529:6:29"},"nodeType":"YulFunctionCall","src":"11529:21:29"},"nodeType":"YulExpressionStatement","src":"11529:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11570:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11581:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11566:3:29"},"nodeType":"YulFunctionCall","src":"11566:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"11586:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11559:6:29"},"nodeType":"YulFunctionCall","src":"11559:30:29"},"nodeType":"YulExpressionStatement","src":"11559:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11609:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11620:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11605:3:29"},"nodeType":"YulFunctionCall","src":"11605:18:29"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"11625:34:29","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11598:6:29"},"nodeType":"YulFunctionCall","src":"11598:62:29"},"nodeType":"YulExpressionStatement","src":"11598:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11680:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11691:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11676:3:29"},"nodeType":"YulFunctionCall","src":"11676:18:29"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"11696:14:29","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11669:6:29"},"nodeType":"YulFunctionCall","src":"11669:42:29"},"nodeType":"YulExpressionStatement","src":"11669:42:29"},{"nodeType":"YulAssignment","src":"11720:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11732:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11743:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11728:3:29"},"nodeType":"YulFunctionCall","src":"11728:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11720:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11496:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11510:4:29","type":""}],"src":"11345:408:29"},{"body":{"nodeType":"YulBlock","src":"11932:162:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11949:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11960:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11942:6:29"},"nodeType":"YulFunctionCall","src":"11942:21:29"},"nodeType":"YulExpressionStatement","src":"11942:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11983:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11994:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11979:3:29"},"nodeType":"YulFunctionCall","src":"11979:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"11999:2:29","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11972:6:29"},"nodeType":"YulFunctionCall","src":"11972:30:29"},"nodeType":"YulExpressionStatement","src":"11972:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12022:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12033:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12018:3:29"},"nodeType":"YulFunctionCall","src":"12018:18:29"},{"hexValue":"4e6f7420616e2061646d696e","kind":"string","nodeType":"YulLiteral","src":"12038:14:29","type":"","value":"Not an admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12011:6:29"},"nodeType":"YulFunctionCall","src":"12011:42:29"},"nodeType":"YulExpressionStatement","src":"12011:42:29"},{"nodeType":"YulAssignment","src":"12062:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12074:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12085:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12070:3:29"},"nodeType":"YulFunctionCall","src":"12070:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12062:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11909:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11923:4:29","type":""}],"src":"11758:336:29"},{"body":{"nodeType":"YulBlock","src":"12131:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12148:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12151:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12141:6:29"},"nodeType":"YulFunctionCall","src":"12141:88:29"},"nodeType":"YulExpressionStatement","src":"12141:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12245:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12248:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12238:6:29"},"nodeType":"YulFunctionCall","src":"12238:15:29"},"nodeType":"YulExpressionStatement","src":"12238:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12269:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12272:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12262:6:29"},"nodeType":"YulFunctionCall","src":"12262:15:29"},"nodeType":"YulExpressionStatement","src":"12262:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12099:184:29"},{"body":{"nodeType":"YulBlock","src":"12462:176:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12479:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12490:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12472:6:29"},"nodeType":"YulFunctionCall","src":"12472:21:29"},"nodeType":"YulExpressionStatement","src":"12472:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12513:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12524:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12509:3:29"},"nodeType":"YulFunctionCall","src":"12509:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"12529:2:29","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12502:6:29"},"nodeType":"YulFunctionCall","src":"12502:30:29"},"nodeType":"YulExpressionStatement","src":"12502:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12552:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12563:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12548:3:29"},"nodeType":"YulFunctionCall","src":"12548:18:29"},{"hexValue":"526561736f6e20636f646520616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"12568:28:29","type":"","value":"Reason code already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12541:6:29"},"nodeType":"YulFunctionCall","src":"12541:56:29"},"nodeType":"YulExpressionStatement","src":"12541:56:29"},{"nodeType":"YulAssignment","src":"12606:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12618:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12629:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:29"},"nodeType":"YulFunctionCall","src":"12614:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12606:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12439:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12453:4:29","type":""}],"src":"12288:350:29"},{"body":{"nodeType":"YulBlock","src":"12675:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12692:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12695:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12685:6:29"},"nodeType":"YulFunctionCall","src":"12685:88:29"},"nodeType":"YulExpressionStatement","src":"12685:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12789:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12792:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12782:6:29"},"nodeType":"YulFunctionCall","src":"12782:15:29"},"nodeType":"YulExpressionStatement","src":"12782:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12813:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12816:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12806:6:29"},"nodeType":"YulFunctionCall","src":"12806:15:29"},"nodeType":"YulExpressionStatement","src":"12806:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12643:184:29"},{"body":{"nodeType":"YulBlock","src":"12879:148:29","statements":[{"body":{"nodeType":"YulBlock","src":"12970:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12972:16:29"},"nodeType":"YulFunctionCall","src":"12972:18:29"},"nodeType":"YulExpressionStatement","src":"12972:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12895:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"12902:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12892:2:29"},"nodeType":"YulFunctionCall","src":"12892:77:29"},"nodeType":"YulIf","src":"12889:103:29"},{"nodeType":"YulAssignment","src":"13001:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13012:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"13019:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13008:3:29"},"nodeType":"YulFunctionCall","src":"13008:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13001:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12861:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12871:3:29","type":""}],"src":"12832:195:29"},{"body":{"nodeType":"YulBlock","src":"13183:481:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13193:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13203:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13197:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13214:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13232:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13243:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13228:3:29"},"nodeType":"YulFunctionCall","src":"13228:18:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13218:6:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13262:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13273:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13255:6:29"},"nodeType":"YulFunctionCall","src":"13255:21:29"},"nodeType":"YulExpressionStatement","src":"13255:21:29"},{"nodeType":"YulVariableDeclaration","src":"13285:17:29","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"13296:6:29"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"13289:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13311:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13331:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13325:5:29"},"nodeType":"YulFunctionCall","src":"13325:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13315:6:29","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13354:6:29"},{"name":"length","nodeType":"YulIdentifier","src":"13362:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13347:6:29"},"nodeType":"YulFunctionCall","src":"13347:22:29"},"nodeType":"YulExpressionStatement","src":"13347:22:29"},{"nodeType":"YulAssignment","src":"13378:25:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13389:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13400:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13385:3:29"},"nodeType":"YulFunctionCall","src":"13385:18:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13378:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"13412:29:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13430:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13438:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13426:3:29"},"nodeType":"YulFunctionCall","src":"13426:15:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13416:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13450:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13459:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13454:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13518:120:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13539:3:29"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13550:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13544:5:29"},"nodeType":"YulFunctionCall","src":"13544:13:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13532:6:29"},"nodeType":"YulFunctionCall","src":"13532:26:29"},"nodeType":"YulExpressionStatement","src":"13532:26:29"},{"nodeType":"YulAssignment","src":"13571:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13582:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13587:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13578:3:29"},"nodeType":"YulFunctionCall","src":"13578:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13571:3:29"}]},{"nodeType":"YulAssignment","src":"13603:25:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13617:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13625:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13613:3:29"},"nodeType":"YulFunctionCall","src":"13613:15:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13603:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13480:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"13483:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13477:2:29"},"nodeType":"YulFunctionCall","src":"13477:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13491:18:29","statements":[{"nodeType":"YulAssignment","src":"13493:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13502:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"13505:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13498:3:29"},"nodeType":"YulFunctionCall","src":"13498:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13493:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"13473:3:29","statements":[]},"src":"13469:169:29"},{"nodeType":"YulAssignment","src":"13647:11:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"13655:3:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13647:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13152:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13163:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13174:4:29","type":""}],"src":"13032:632:29"},{"body":{"nodeType":"YulBlock","src":"13843:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13860:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13871:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13853:6:29"},"nodeType":"YulFunctionCall","src":"13853:21:29"},"nodeType":"YulExpressionStatement","src":"13853:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13894:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13905:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13890:3:29"},"nodeType":"YulFunctionCall","src":"13890:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"13910:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13883:6:29"},"nodeType":"YulFunctionCall","src":"13883:30:29"},"nodeType":"YulExpressionStatement","src":"13883:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13933:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13944:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13929:3:29"},"nodeType":"YulFunctionCall","src":"13929:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"13949:34:29","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13922:6:29"},"nodeType":"YulFunctionCall","src":"13922:62:29"},"nodeType":"YulExpressionStatement","src":"13922:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14004:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14015:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14000:3:29"},"nodeType":"YulFunctionCall","src":"14000:18:29"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"14020:16:29","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13993:6:29"},"nodeType":"YulFunctionCall","src":"13993:44:29"},"nodeType":"YulExpressionStatement","src":"13993:44:29"},{"nodeType":"YulAssignment","src":"14046:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14058:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14069:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14054:3:29"},"nodeType":"YulFunctionCall","src":"14054:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14046:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13820:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13834:4:29","type":""}],"src":"13669:410:29"},{"body":{"nodeType":"YulBlock","src":"14258:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14275:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14286:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14268:6:29"},"nodeType":"YulFunctionCall","src":"14268:21:29"},"nodeType":"YulExpressionStatement","src":"14268:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14309:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14320:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14305:3:29"},"nodeType":"YulFunctionCall","src":"14305:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"14325:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14298:6:29"},"nodeType":"YulFunctionCall","src":"14298:30:29"},"nodeType":"YulExpressionStatement","src":"14298:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14348:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14359:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14344:3:29"},"nodeType":"YulFunctionCall","src":"14344:18:29"},{"hexValue":"4e6f7420612076616c696420436f6e74726163742041646472657373","kind":"string","nodeType":"YulLiteral","src":"14364:30:29","type":"","value":"Not a valid Contract Address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14337:6:29"},"nodeType":"YulFunctionCall","src":"14337:58:29"},"nodeType":"YulExpressionStatement","src":"14337:58:29"},{"nodeType":"YulAssignment","src":"14404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14427:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14412:3:29"},"nodeType":"YulFunctionCall","src":"14412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14404:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14235:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14249:4:29","type":""}],"src":"14084:352:29"},{"body":{"nodeType":"YulBlock","src":"14615:175:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14643:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14625:6:29"},"nodeType":"YulFunctionCall","src":"14625:21:29"},"nodeType":"YulExpressionStatement","src":"14625:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14666:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14677:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14662:3:29"},"nodeType":"YulFunctionCall","src":"14662:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"14682:2:29","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14655:6:29"},"nodeType":"YulFunctionCall","src":"14655:30:29"},"nodeType":"YulExpressionStatement","src":"14655:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14705:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14716:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14701:3:29"},"nodeType":"YulFunctionCall","src":"14701:18:29"},{"hexValue":"4e6f7420612076616c69642041646d696e2041646472657373","kind":"string","nodeType":"YulLiteral","src":"14721:27:29","type":"","value":"Not a valid Admin Address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14694:6:29"},"nodeType":"YulFunctionCall","src":"14694:55:29"},"nodeType":"YulExpressionStatement","src":"14694:55:29"},{"nodeType":"YulAssignment","src":"14758:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14770:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14781:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14766:3:29"},"nodeType":"YulFunctionCall","src":"14766:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14758:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14592:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14606:4:29","type":""}],"src":"14441:349:29"},{"body":{"nodeType":"YulBlock","src":"14902:87:29","statements":[{"nodeType":"YulAssignment","src":"14912:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14924:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14935:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14920:3:29"},"nodeType":"YulFunctionCall","src":"14920:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14912:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14954:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14969:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14977:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14965:3:29"},"nodeType":"YulFunctionCall","src":"14965:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14947:6:29"},"nodeType":"YulFunctionCall","src":"14947:36:29"},"nodeType":"YulExpressionStatement","src":"14947:36:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14871:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14882:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14893:4:29","type":""}],"src":"14795:194:29"},{"body":{"nodeType":"YulBlock","src":"15168:246:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15185:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15196:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15178:6:29"},"nodeType":"YulFunctionCall","src":"15178:21:29"},"nodeType":"YulExpressionStatement","src":"15178:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15219:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15230:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15215:3:29"},"nodeType":"YulFunctionCall","src":"15215:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"15235:2:29","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15208:6:29"},"nodeType":"YulFunctionCall","src":"15208:30:29"},"nodeType":"YulExpressionStatement","src":"15208:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15258:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15269:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15254:3:29"},"nodeType":"YulFunctionCall","src":"15254:18:29"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"15274:34:29","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15247:6:29"},"nodeType":"YulFunctionCall","src":"15247:62:29"},"nodeType":"YulExpressionStatement","src":"15247:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15329:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15340:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15325:3:29"},"nodeType":"YulFunctionCall","src":"15325:18:29"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"15345:26:29","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15318:6:29"},"nodeType":"YulFunctionCall","src":"15318:54:29"},"nodeType":"YulExpressionStatement","src":"15318:54:29"},{"nodeType":"YulAssignment","src":"15381:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15393:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15404:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15389:3:29"},"nodeType":"YulFunctionCall","src":"15389:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15381:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15145:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15159:4:29","type":""}],"src":"14994:420:29"},{"body":{"nodeType":"YulBlock","src":"15593:168:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15610:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15621:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15603:6:29"},"nodeType":"YulFunctionCall","src":"15603:21:29"},"nodeType":"YulExpressionStatement","src":"15603:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15644:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15655:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15640:3:29"},"nodeType":"YulFunctionCall","src":"15640:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"15660:2:29","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15633:6:29"},"nodeType":"YulFunctionCall","src":"15633:30:29"},"nodeType":"YulExpressionStatement","src":"15633:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15683:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15694:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15679:3:29"},"nodeType":"YulFunctionCall","src":"15679:18:29"},{"hexValue":"536561736f6e20616c726561647920736574","kind":"string","nodeType":"YulLiteral","src":"15699:20:29","type":"","value":"Season already set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15672:6:29"},"nodeType":"YulFunctionCall","src":"15672:48:29"},"nodeType":"YulExpressionStatement","src":"15672:48:29"},{"nodeType":"YulAssignment","src":"15729:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15741:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15752:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15737:3:29"},"nodeType":"YulFunctionCall","src":"15737:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15729:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15570:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15584:4:29","type":""}],"src":"15419:342:29"},{"body":{"nodeType":"YulBlock","src":"15814:77:29","statements":[{"nodeType":"YulAssignment","src":"15824:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15835:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"15838:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:29"},"nodeType":"YulFunctionCall","src":"15831:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15824:3:29"}]},{"body":{"nodeType":"YulBlock","src":"15863:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15865:16:29"},"nodeType":"YulFunctionCall","src":"15865:18:29"},"nodeType":"YulExpressionStatement","src":"15865:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15855:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"15858:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15852:2:29"},"nodeType":"YulFunctionCall","src":"15852:10:29"},"nodeType":"YulIf","src":"15849:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15797:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"15800:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15806:3:29","type":""}],"src":"15766:125:29"},{"body":{"nodeType":"YulBlock","src":"16053:162:29","statements":[{"nodeType":"YulAssignment","src":"16063:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16075:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16086:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16071:3:29"},"nodeType":"YulFunctionCall","src":"16071:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16063:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16105:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"16116:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16098:6:29"},"nodeType":"YulFunctionCall","src":"16098:25:29"},"nodeType":"YulExpressionStatement","src":"16098:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16143:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16154:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16139:3:29"},"nodeType":"YulFunctionCall","src":"16139:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"16159:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16132:6:29"},"nodeType":"YulFunctionCall","src":"16132:34:29"},"nodeType":"YulExpressionStatement","src":"16132:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16186:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16197:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16182:3:29"},"nodeType":"YulFunctionCall","src":"16182:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"16202:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16175:6:29"},"nodeType":"YulFunctionCall","src":"16175:34:29"},"nodeType":"YulExpressionStatement","src":"16175:34:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16006:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16017:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16025:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16033:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16044:4:29","type":""}],"src":"15896:319:29"},{"body":{"nodeType":"YulBlock","src":"16286:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16296:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"16305:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16300:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"16365:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16390:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"16395:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16386:3:29"},"nodeType":"YulFunctionCall","src":"16386:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16409:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"16414:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16405:3:29"},"nodeType":"YulFunctionCall","src":"16405:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16399:5:29"},"nodeType":"YulFunctionCall","src":"16399:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16379:6:29"},"nodeType":"YulFunctionCall","src":"16379:39:29"},"nodeType":"YulExpressionStatement","src":"16379:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16326:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"16329:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16323:2:29"},"nodeType":"YulFunctionCall","src":"16323:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16337:19:29","statements":[{"nodeType":"YulAssignment","src":"16339:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16348:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"16351:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16344:3:29"},"nodeType":"YulFunctionCall","src":"16344:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16339:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"16319:3:29","statements":[]},"src":"16315:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16448:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16453:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16444:3:29"},"nodeType":"YulFunctionCall","src":"16444:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"16462:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16437:6:29"},"nodeType":"YulFunctionCall","src":"16437:27:29"},"nodeType":"YulExpressionStatement","src":"16437:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"16264:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"16269:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"16274:6:29","type":""}],"src":"16220:250:29"},{"body":{"nodeType":"YulBlock","src":"16525:280:29","statements":[{"nodeType":"YulVariableDeclaration","src":"16535:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16555:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16549:5:29"},"nodeType":"YulFunctionCall","src":"16549:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16539:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16577:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16582:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16570:6:29"},"nodeType":"YulFunctionCall","src":"16570:19:29"},"nodeType":"YulExpressionStatement","src":"16570:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16637:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"16644:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16633:3:29"},"nodeType":"YulFunctionCall","src":"16633:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16655:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"16660:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16651:3:29"},"nodeType":"YulFunctionCall","src":"16651:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"16667:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16598:34:29"},"nodeType":"YulFunctionCall","src":"16598:76:29"},"nodeType":"YulExpressionStatement","src":"16598:76:29"},{"nodeType":"YulAssignment","src":"16683:116:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16698:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16711:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16719:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16707:3:29"},"nodeType":"YulFunctionCall","src":"16707:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"16724:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16703:3:29"},"nodeType":"YulFunctionCall","src":"16703:88:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16694:3:29"},"nodeType":"YulFunctionCall","src":"16694:98:29"},{"kind":"number","nodeType":"YulLiteral","src":"16794:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16690:3:29"},"nodeType":"YulFunctionCall","src":"16690:109:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16683:3:29"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16502:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16509:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16517:3:29","type":""}],"src":"16475:330:29"},{"body":{"nodeType":"YulBlock","src":"16959:142:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16976:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16987:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16969:6:29"},"nodeType":"YulFunctionCall","src":"16969:21:29"},"nodeType":"YulExpressionStatement","src":"16969:21:29"},{"nodeType":"YulAssignment","src":"16999:53:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17025:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17037:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17048:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17033:3:29"},"nodeType":"YulFunctionCall","src":"17033:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"17007:17:29"},"nodeType":"YulFunctionCall","src":"17007:45:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16999:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17072:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17083:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17068:3:29"},"nodeType":"YulFunctionCall","src":"17068:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"17088:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17061:6:29"},"nodeType":"YulFunctionCall","src":"17061:34:29"},"nodeType":"YulExpressionStatement","src":"17061:34:29"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16920:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16931:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16939:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16950:4:29","type":""}],"src":"16810:291:29"},{"body":{"nodeType":"YulBlock","src":"17187:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"17233:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17242:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17245:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17235:6:29"},"nodeType":"YulFunctionCall","src":"17235:12:29"},"nodeType":"YulExpressionStatement","src":"17235:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17208:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17217:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17204:3:29"},"nodeType":"YulFunctionCall","src":"17204:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"17229:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17200:3:29"},"nodeType":"YulFunctionCall","src":"17200:32:29"},"nodeType":"YulIf","src":"17197:52:29"},{"nodeType":"YulAssignment","src":"17258:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17274:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17268:5:29"},"nodeType":"YulFunctionCall","src":"17268:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17258:6:29"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17153:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17164:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17176:6:29","type":""}],"src":"17106:184:29"},{"body":{"nodeType":"YulBlock","src":"17469:177:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17486:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17497:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17479:6:29"},"nodeType":"YulFunctionCall","src":"17479:21:29"},"nodeType":"YulExpressionStatement","src":"17479:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17520:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17531:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17516:3:29"},"nodeType":"YulFunctionCall","src":"17516:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"17536:2:29","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17509:6:29"},"nodeType":"YulFunctionCall","src":"17509:30:29"},"nodeType":"YulExpressionStatement","src":"17509:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17559:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17570:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17555:3:29"},"nodeType":"YulFunctionCall","src":"17555:18:29"},{"hexValue":"5369676e6572206e6f74206f776e6572206f66207265616c6d4964","kind":"string","nodeType":"YulLiteral","src":"17575:29:29","type":"","value":"Signer not owner of realmId"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17548:6:29"},"nodeType":"YulFunctionCall","src":"17548:57:29"},"nodeType":"YulExpressionStatement","src":"17548:57:29"},{"nodeType":"YulAssignment","src":"17614:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17626:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17637:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17622:3:29"},"nodeType":"YulFunctionCall","src":"17622:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17614:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17446:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17460:4:29","type":""}],"src":"17295:351:29"},{"body":{"nodeType":"YulBlock","src":"17732:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"17778:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17787:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17790:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17780:6:29"},"nodeType":"YulFunctionCall","src":"17780:12:29"},"nodeType":"YulExpressionStatement","src":"17780:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17753:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17762:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17749:3:29"},"nodeType":"YulFunctionCall","src":"17749:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"17774:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17745:3:29"},"nodeType":"YulFunctionCall","src":"17745:32:29"},"nodeType":"YulIf","src":"17742:52:29"},{"nodeType":"YulAssignment","src":"17803:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17819:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17813:5:29"},"nodeType":"YulFunctionCall","src":"17813:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17803:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17698:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17709:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17721:6:29","type":""}],"src":"17651:184:29"},{"body":{"nodeType":"YulBlock","src":"18014:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18031:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18042:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18024:6:29"},"nodeType":"YulFunctionCall","src":"18024:21:29"},"nodeType":"YulExpressionStatement","src":"18024:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18065:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18076:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18061:3:29"},"nodeType":"YulFunctionCall","src":"18061:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18081:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18054:6:29"},"nodeType":"YulFunctionCall","src":"18054:30:29"},"nodeType":"YulExpressionStatement","src":"18054:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18104:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18115:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18100:3:29"},"nodeType":"YulFunctionCall","src":"18100:18:29"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"18120:34:29","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18093:6:29"},"nodeType":"YulFunctionCall","src":"18093:62:29"},"nodeType":"YulExpressionStatement","src":"18093:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18175:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18186:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18171:3:29"},"nodeType":"YulFunctionCall","src":"18171:18:29"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"18191:16:29","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18164:6:29"},"nodeType":"YulFunctionCall","src":"18164:44:29"},"nodeType":"YulExpressionStatement","src":"18164:44:29"},{"nodeType":"YulAssignment","src":"18217:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18229:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18240:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18225:3:29"},"nodeType":"YulFunctionCall","src":"18225:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18217:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17991:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18005:4:29","type":""}],"src":"17840:410:29"},{"body":{"nodeType":"YulBlock","src":"18429:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18446:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18457:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18439:6:29"},"nodeType":"YulFunctionCall","src":"18439:21:29"},"nodeType":"YulExpressionStatement","src":"18439:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18480:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18491:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18476:3:29"},"nodeType":"YulFunctionCall","src":"18476:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18496:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18469:6:29"},"nodeType":"YulFunctionCall","src":"18469:30:29"},"nodeType":"YulExpressionStatement","src":"18469:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18519:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18530:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18515:3:29"},"nodeType":"YulFunctionCall","src":"18515:18:29"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"18535:34:29","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18508:6:29"},"nodeType":"YulFunctionCall","src":"18508:62:29"},"nodeType":"YulExpressionStatement","src":"18508:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18590:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18601:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18586:3:29"},"nodeType":"YulFunctionCall","src":"18586:18:29"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"18606:11:29","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18579:6:29"},"nodeType":"YulFunctionCall","src":"18579:39:29"},"nodeType":"YulExpressionStatement","src":"18579:39:29"},{"nodeType":"YulAssignment","src":"18627:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18639:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18650:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18635:3:29"},"nodeType":"YulFunctionCall","src":"18635:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18627:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18406:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18420:4:29","type":""}],"src":"18255:405:29"},{"body":{"nodeType":"YulBlock","src":"18839:233:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18856:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18867:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18849:6:29"},"nodeType":"YulFunctionCall","src":"18849:21:29"},"nodeType":"YulExpressionStatement","src":"18849:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18890:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18901:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18886:3:29"},"nodeType":"YulFunctionCall","src":"18886:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"18906:2:29","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18879:6:29"},"nodeType":"YulFunctionCall","src":"18879:30:29"},"nodeType":"YulExpressionStatement","src":"18879:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18929:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"18940:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18925:3:29"},"nodeType":"YulFunctionCall","src":"18925:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"18945:34:29","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18918:6:29"},"nodeType":"YulFunctionCall","src":"18918:62:29"},"nodeType":"YulExpressionStatement","src":"18918:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19000:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19011:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18996:3:29"},"nodeType":"YulFunctionCall","src":"18996:18:29"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"19016:13:29","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18989:6:29"},"nodeType":"YulFunctionCall","src":"18989:41:29"},"nodeType":"YulExpressionStatement","src":"18989:41:29"},{"nodeType":"YulAssignment","src":"19039:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19051:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19062:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19047:3:29"},"nodeType":"YulFunctionCall","src":"19047:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19039:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18816:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18830:4:29","type":""}],"src":"18665:407:29"},{"body":{"nodeType":"YulBlock","src":"19336:251:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19353:3:29"},{"name":"value0","nodeType":"YulIdentifier","src":"19358:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19346:6:29"},"nodeType":"YulFunctionCall","src":"19346:19:29"},"nodeType":"YulExpressionStatement","src":"19346:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19385:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19390:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19381:3:29"},"nodeType":"YulFunctionCall","src":"19381:12:29"},{"name":"value1","nodeType":"YulIdentifier","src":"19395:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19374:6:29"},"nodeType":"YulFunctionCall","src":"19374:28:29"},"nodeType":"YulExpressionStatement","src":"19374:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19422:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19427:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19418:3:29"},"nodeType":"YulFunctionCall","src":"19418:12:29"},{"name":"value2","nodeType":"YulIdentifier","src":"19432:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19411:6:29"},"nodeType":"YulFunctionCall","src":"19411:28:29"},"nodeType":"YulExpressionStatement","src":"19411:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19459:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19464:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19455:3:29"},"nodeType":"YulFunctionCall","src":"19455:12:29"},{"name":"value3","nodeType":"YulIdentifier","src":"19469:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19448:6:29"},"nodeType":"YulFunctionCall","src":"19448:28:29"},"nodeType":"YulExpressionStatement","src":"19448:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19496:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19501:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19492:3:29"},"nodeType":"YulFunctionCall","src":"19492:13:29"},{"name":"value4","nodeType":"YulIdentifier","src":"19507:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19485:6:29"},"nodeType":"YulFunctionCall","src":"19485:29:29"},"nodeType":"YulExpressionStatement","src":"19485:29:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19534:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19539:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19530:3:29"},"nodeType":"YulFunctionCall","src":"19530:13:29"},{"name":"value5","nodeType":"YulIdentifier","src":"19545:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19523:6:29"},"nodeType":"YulFunctionCall","src":"19523:29:29"},"nodeType":"YulExpressionStatement","src":"19523:29:29"},{"nodeType":"YulAssignment","src":"19561:20:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19572:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19577:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19568:3:29"},"nodeType":"YulFunctionCall","src":"19568:13:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19561:3:29"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19272:3:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19277:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19285:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19293:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19301:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19309:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19317:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19328:3:29","type":""}],"src":"19077:510:29"},{"body":{"nodeType":"YulBlock","src":"19773:217:29","statements":[{"nodeType":"YulAssignment","src":"19783:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19795:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19806:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19791:3:29"},"nodeType":"YulFunctionCall","src":"19791:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19783:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19826:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"19837:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19819:6:29"},"nodeType":"YulFunctionCall","src":"19819:25:29"},"nodeType":"YulExpressionStatement","src":"19819:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19864:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19875:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19860:3:29"},"nodeType":"YulFunctionCall","src":"19860:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19884:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19892:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19880:3:29"},"nodeType":"YulFunctionCall","src":"19880:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19853:6:29"},"nodeType":"YulFunctionCall","src":"19853:45:29"},"nodeType":"YulExpressionStatement","src":"19853:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19918:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19929:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19914:3:29"},"nodeType":"YulFunctionCall","src":"19914:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"19934:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19907:6:29"},"nodeType":"YulFunctionCall","src":"19907:34:29"},"nodeType":"YulExpressionStatement","src":"19907:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19961:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19972:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19957:3:29"},"nodeType":"YulFunctionCall","src":"19957:18:29"},{"name":"value3","nodeType":"YulIdentifier","src":"19977:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19950:6:29"},"nodeType":"YulFunctionCall","src":"19950:34:29"},"nodeType":"YulExpressionStatement","src":"19950:34:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19718:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19729:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19737:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19745:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19753:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19764:4:29","type":""}],"src":"19592:398:29"},{"body":{"nodeType":"YulBlock","src":"20076:170:29","statements":[{"body":{"nodeType":"YulBlock","src":"20122:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20131:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20134:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20124:6:29"},"nodeType":"YulFunctionCall","src":"20124:12:29"},"nodeType":"YulExpressionStatement","src":"20124:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20097:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"20106:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20093:3:29"},"nodeType":"YulFunctionCall","src":"20093:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"20118:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20089:3:29"},"nodeType":"YulFunctionCall","src":"20089:32:29"},"nodeType":"YulIf","src":"20086:52:29"},{"nodeType":"YulVariableDeclaration","src":"20147:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20166:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20160:5:29"},"nodeType":"YulFunctionCall","src":"20160:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20151:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20210:5:29"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"20185:24:29"},"nodeType":"YulFunctionCall","src":"20185:31:29"},"nodeType":"YulExpressionStatement","src":"20185:31:29"},{"nodeType":"YulAssignment","src":"20225:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"20235:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20225:6:29"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20042:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20053:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20065:6:29","type":""}],"src":"19995:251:29"},{"body":{"nodeType":"YulBlock","src":"20425:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20442:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20453:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20435:6:29"},"nodeType":"YulFunctionCall","src":"20435:21:29"},"nodeType":"YulExpressionStatement","src":"20435:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20476:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20487:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20472:3:29"},"nodeType":"YulFunctionCall","src":"20472:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20492:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20465:6:29"},"nodeType":"YulFunctionCall","src":"20465:30:29"},"nodeType":"YulExpressionStatement","src":"20465:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20515:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20526:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20511:3:29"},"nodeType":"YulFunctionCall","src":"20511:18:29"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"20531:22:29","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20504:6:29"},"nodeType":"YulFunctionCall","src":"20504:50:29"},"nodeType":"YulExpressionStatement","src":"20504:50:29"},{"nodeType":"YulAssignment","src":"20563:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20575:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20586:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20571:3:29"},"nodeType":"YulFunctionCall","src":"20571:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20563:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20402:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20416:4:29","type":""}],"src":"20251:344:29"},{"body":{"nodeType":"YulBlock","src":"20774:177:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20791:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20802:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20784:6:29"},"nodeType":"YulFunctionCall","src":"20784:21:29"},"nodeType":"YulExpressionStatement","src":"20784:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20825:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20836:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20821:3:29"},"nodeType":"YulFunctionCall","src":"20821:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20841:2:29","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20814:6:29"},"nodeType":"YulFunctionCall","src":"20814:30:29"},"nodeType":"YulExpressionStatement","src":"20814:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20864:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20875:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20860:3:29"},"nodeType":"YulFunctionCall","src":"20860:18:29"},{"hexValue":"496e76616c696420636f6e73756d6520726561736f6e20636f6465","kind":"string","nodeType":"YulLiteral","src":"20880:29:29","type":"","value":"Invalid consume reason code"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20853:6:29"},"nodeType":"YulFunctionCall","src":"20853:57:29"},"nodeType":"YulExpressionStatement","src":"20853:57:29"},{"nodeType":"YulAssignment","src":"20919:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20931:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20942:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20927:3:29"},"nodeType":"YulFunctionCall","src":"20927:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20919:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20751:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20765:4:29","type":""}],"src":"20600:351:29"},{"body":{"nodeType":"YulBlock","src":"21005:79:29","statements":[{"nodeType":"YulAssignment","src":"21015:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21027:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"21030:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21023:3:29"},"nodeType":"YulFunctionCall","src":"21023:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21015:4:29"}]},{"body":{"nodeType":"YulBlock","src":"21056:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21058:16:29"},"nodeType":"YulFunctionCall","src":"21058:18:29"},"nodeType":"YulExpressionStatement","src":"21058:18:29"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"21047:4:29"},{"name":"x","nodeType":"YulIdentifier","src":"21053:1:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21044:2:29"},"nodeType":"YulFunctionCall","src":"21044:11:29"},"nodeType":"YulIf","src":"21041:37:29"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20987:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"20990:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20996:4:29","type":""}],"src":"20956:128:29"},{"body":{"nodeType":"YulBlock","src":"21302:329:29","statements":[{"nodeType":"YulAssignment","src":"21312:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21324:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21335:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21320:3:29"},"nodeType":"YulFunctionCall","src":"21320:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21312:4:29"}]},{"nodeType":"YulVariableDeclaration","src":"21348:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"21358:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21352:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21416:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21431:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"21439:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21427:3:29"},"nodeType":"YulFunctionCall","src":"21427:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21409:6:29"},"nodeType":"YulFunctionCall","src":"21409:34:29"},"nodeType":"YulExpressionStatement","src":"21409:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21463:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21474:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21459:3:29"},"nodeType":"YulFunctionCall","src":"21459:18:29"},{"name":"value1","nodeType":"YulIdentifier","src":"21479:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21452:6:29"},"nodeType":"YulFunctionCall","src":"21452:34:29"},"nodeType":"YulExpressionStatement","src":"21452:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21506:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21517:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21502:3:29"},"nodeType":"YulFunctionCall","src":"21502:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"21522:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21495:6:29"},"nodeType":"YulFunctionCall","src":"21495:34:29"},"nodeType":"YulExpressionStatement","src":"21495:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21549:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21560:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21545:3:29"},"nodeType":"YulFunctionCall","src":"21545:18:29"},{"name":"value3","nodeType":"YulIdentifier","src":"21565:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21538:6:29"},"nodeType":"YulFunctionCall","src":"21538:34:29"},"nodeType":"YulExpressionStatement","src":"21538:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21592:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21603:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21588:3:29"},"nodeType":"YulFunctionCall","src":"21588:19:29"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21613:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"21621:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21609:3:29"},"nodeType":"YulFunctionCall","src":"21609:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21581:6:29"},"nodeType":"YulFunctionCall","src":"21581:44:29"},"nodeType":"YulExpressionStatement","src":"21581:44:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21239:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21250:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21258:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21266:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21274:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21282:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21293:4:29","type":""}],"src":"21089:542:29"},{"body":{"nodeType":"YulBlock","src":"22025:423:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22042:3:29"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"22047:25:29","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22035:6:29"},"nodeType":"YulFunctionCall","src":"22035:38:29"},"nodeType":"YulExpressionStatement","src":"22035:38:29"},{"nodeType":"YulVariableDeclaration","src":"22082:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22102:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22096:5:29"},"nodeType":"YulFunctionCall","src":"22096:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22086:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22157:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22165:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22153:3:29"},"nodeType":"YulFunctionCall","src":"22153:17:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22176:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22181:2:29","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22172:3:29"},"nodeType":"YulFunctionCall","src":"22172:12:29"},{"name":"length","nodeType":"YulIdentifier","src":"22186:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22118:34:29"},"nodeType":"YulFunctionCall","src":"22118:75:29"},"nodeType":"YulExpressionStatement","src":"22118:75:29"},{"nodeType":"YulVariableDeclaration","src":"22202:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22216:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"22221:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22212:3:29"},"nodeType":"YulFunctionCall","src":"22212:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22206:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22248:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"22252:2:29","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22244:3:29"},"nodeType":"YulFunctionCall","src":"22244:11:29"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"22257:19:29","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22237:6:29"},"nodeType":"YulFunctionCall","src":"22237:40:29"},"nodeType":"YulExpressionStatement","src":"22237:40:29"},{"nodeType":"YulVariableDeclaration","src":"22286:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22308:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22302:5:29"},"nodeType":"YulFunctionCall","src":"22302:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"22290:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22363:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22371:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22359:3:29"},"nodeType":"YulFunctionCall","src":"22359:17:29"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22382:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"22386:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22378:3:29"},"nodeType":"YulFunctionCall","src":"22378:11:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"22391:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"22324:34:29"},"nodeType":"YulFunctionCall","src":"22324:76:29"},"nodeType":"YulExpressionStatement","src":"22324:76:29"},{"nodeType":"YulAssignment","src":"22409:33:29","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22424:2:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"22428:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22420:3:29"},"nodeType":"YulFunctionCall","src":"22420:17:29"},{"kind":"number","nodeType":"YulLiteral","src":"22439:2:29","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22416:3:29"},"nodeType":"YulFunctionCall","src":"22416:26:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22409:3:29"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21993:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21998:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22006:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22017:3:29","type":""}],"src":"21636:812:29"},{"body":{"nodeType":"YulBlock","src":"22574:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22591:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22602:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22584:6:29"},"nodeType":"YulFunctionCall","src":"22584:21:29"},"nodeType":"YulExpressionStatement","src":"22584:21:29"},{"nodeType":"YulAssignment","src":"22614:53:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22640:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22652:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22663:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22648:3:29"},"nodeType":"YulFunctionCall","src":"22648:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22622:17:29"},"nodeType":"YulFunctionCall","src":"22622:45:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22614:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22543:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22554:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22565:4:29","type":""}],"src":"22453:220:29"},{"body":{"nodeType":"YulBlock","src":"22852:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22869:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22880:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22862:6:29"},"nodeType":"YulFunctionCall","src":"22862:21:29"},"nodeType":"YulExpressionStatement","src":"22862:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22903:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22914:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22899:3:29"},"nodeType":"YulFunctionCall","src":"22899:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"22919:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22892:6:29"},"nodeType":"YulFunctionCall","src":"22892:30:29"},"nodeType":"YulExpressionStatement","src":"22892:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22942:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"22953:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22938:3:29"},"nodeType":"YulFunctionCall","src":"22938:18:29"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"22958:34:29","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22931:6:29"},"nodeType":"YulFunctionCall","src":"22931:62:29"},"nodeType":"YulExpressionStatement","src":"22931:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23013:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23024:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23009:3:29"},"nodeType":"YulFunctionCall","src":"23009:18:29"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"23029:15:29","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23002:6:29"},"nodeType":"YulFunctionCall","src":"23002:43:29"},"nodeType":"YulExpressionStatement","src":"23002:43:29"},{"nodeType":"YulAssignment","src":"23054:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23066:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23077:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23062:3:29"},"nodeType":"YulFunctionCall","src":"23062:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23054:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22829:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22843:4:29","type":""}],"src":"22678:409:29"},{"body":{"nodeType":"YulBlock","src":"23266:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23283:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23294:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23276:6:29"},"nodeType":"YulFunctionCall","src":"23276:21:29"},"nodeType":"YulExpressionStatement","src":"23276:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23317:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23328:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23313:3:29"},"nodeType":"YulFunctionCall","src":"23313:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"23333:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23306:6:29"},"nodeType":"YulFunctionCall","src":"23306:30:29"},"nodeType":"YulExpressionStatement","src":"23306:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23356:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23367:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23352:3:29"},"nodeType":"YulFunctionCall","src":"23352:18:29"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"23372:22:29","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23345:6:29"},"nodeType":"YulFunctionCall","src":"23345:50:29"},"nodeType":"YulExpressionStatement","src":"23345:50:29"},{"nodeType":"YulAssignment","src":"23404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23427:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23412:3:29"},"nodeType":"YulFunctionCall","src":"23412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23404:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23243:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23257:4:29","type":""}],"src":"23092:344:29"},{"body":{"nodeType":"YulBlock","src":"23615:166:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23643:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23625:6:29"},"nodeType":"YulFunctionCall","src":"23625:21:29"},"nodeType":"YulExpressionStatement","src":"23625:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23666:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23677:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23662:3:29"},"nodeType":"YulFunctionCall","src":"23662:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"23682:2:29","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23655:6:29"},"nodeType":"YulFunctionCall","src":"23655:30:29"},"nodeType":"YulExpressionStatement","src":"23655:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23705:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23716:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23701:3:29"},"nodeType":"YulFunctionCall","src":"23701:18:29"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"23721:18:29","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23694:6:29"},"nodeType":"YulFunctionCall","src":"23694:46:29"},"nodeType":"YulExpressionStatement","src":"23694:46:29"},{"nodeType":"YulAssignment","src":"23749:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23761:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23772:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23757:3:29"},"nodeType":"YulFunctionCall","src":"23757:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23749:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23592:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23606:4:29","type":""}],"src":"23441:340:29"},{"body":{"nodeType":"YulBlock","src":"23838:116:29","statements":[{"nodeType":"YulAssignment","src":"23848:20:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23863:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"23866:1:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23859:3:29"},"nodeType":"YulFunctionCall","src":"23859:9:29"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"23848:7:29"}]},{"body":{"nodeType":"YulBlock","src":"23926:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23928:16:29"},"nodeType":"YulFunctionCall","src":"23928:18:29"},"nodeType":"YulExpressionStatement","src":"23928:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23897:1:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23890:6:29"},"nodeType":"YulFunctionCall","src":"23890:9:29"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23904:1:29"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"23911:7:29"},{"name":"x","nodeType":"YulIdentifier","src":"23920:1:29"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23907:3:29"},"nodeType":"YulFunctionCall","src":"23907:15:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23901:2:29"},"nodeType":"YulFunctionCall","src":"23901:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23887:2:29"},"nodeType":"YulFunctionCall","src":"23887:37:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23880:6:29"},"nodeType":"YulFunctionCall","src":"23880:45:29"},"nodeType":"YulIf","src":"23877:71:29"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23817:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"23820:1:29","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23826:7:29","type":""}],"src":"23786:168:29"},{"body":{"nodeType":"YulBlock","src":"24006:149:29","statements":[{"body":{"nodeType":"YulBlock","src":"24033:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24035:16:29"},"nodeType":"YulFunctionCall","src":"24035:18:29"},"nodeType":"YulExpressionStatement","src":"24035:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24026:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24019:6:29"},"nodeType":"YulFunctionCall","src":"24019:13:29"},"nodeType":"YulIf","src":"24016:39:29"},{"nodeType":"YulAssignment","src":"24064:85:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24075:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"24082:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24071:3:29"},"nodeType":"YulFunctionCall","src":"24071:78:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24064:3:29"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23988:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23998:3:29","type":""}],"src":"23959:196:29"},{"body":{"nodeType":"YulBlock","src":"24334:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24351:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24362:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24344:6:29"},"nodeType":"YulFunctionCall","src":"24344:21:29"},"nodeType":"YulExpressionStatement","src":"24344:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24385:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24396:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24381:3:29"},"nodeType":"YulFunctionCall","src":"24381:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"24401:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24374:6:29"},"nodeType":"YulFunctionCall","src":"24374:30:29"},"nodeType":"YulExpressionStatement","src":"24374:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24424:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24435:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24420:3:29"},"nodeType":"YulFunctionCall","src":"24420:18:29"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"24440:34:29","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24413:6:29"},"nodeType":"YulFunctionCall","src":"24413:62:29"},"nodeType":"YulExpressionStatement","src":"24413:62:29"},{"nodeType":"YulAssignment","src":"24484:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24496:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24507:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24492:3:29"},"nodeType":"YulFunctionCall","src":"24492:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24484:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24311:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24325:4:29","type":""}],"src":"24160:356:29"},{"body":{"nodeType":"YulBlock","src":"24658:150:29","statements":[{"nodeType":"YulVariableDeclaration","src":"24668:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24688:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24682:5:29"},"nodeType":"YulFunctionCall","src":"24682:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24672:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24743:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24751:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24739:3:29"},"nodeType":"YulFunctionCall","src":"24739:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"24758:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"24763:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24704:34:29"},"nodeType":"YulFunctionCall","src":"24704:66:29"},"nodeType":"YulExpressionStatement","src":"24704:66:29"},{"nodeType":"YulAssignment","src":"24779:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24790:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"24795:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24786:3:29"},"nodeType":"YulFunctionCall","src":"24786:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24779:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24634:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24639:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24650:3:29","type":""}],"src":"24521:287:29"},{"body":{"nodeType":"YulBlock","src":"24987:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25004:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25015:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24997:6:29"},"nodeType":"YulFunctionCall","src":"24997:21:29"},"nodeType":"YulExpressionStatement","src":"24997:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25038:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25049:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25034:3:29"},"nodeType":"YulFunctionCall","src":"25034:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"25054:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25027:6:29"},"nodeType":"YulFunctionCall","src":"25027:30:29"},"nodeType":"YulExpressionStatement","src":"25027:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25088:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25073:3:29"},"nodeType":"YulFunctionCall","src":"25073:18:29"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"25093:31:29","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25066:6:29"},"nodeType":"YulFunctionCall","src":"25066:59:29"},"nodeType":"YulExpressionStatement","src":"25066:59:29"},{"nodeType":"YulAssignment","src":"25134:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25146:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25157:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25142:3:29"},"nodeType":"YulFunctionCall","src":"25142:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25134:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24964:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24978:4:29","type":""}],"src":"24813:353:29"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_contract$_IRealmId_$5277__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not a depositor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not an admin\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Reason code already exists\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not a valid Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not a valid Admin Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Season already set\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Signer not owner of realmId\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        mstore(add(pos, 128), value4)\n        mstore(add(pos, 160), value5)\n        end := add(pos, 192)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid consume reason code\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1105":[{"length":32,"start":2930},{"length":32,"start":3106},{"length":32,"start":5066},{"length":32,"start":5242},{"length":32,"start":5628}]},"linkReferences":{},"object":"6080604052600436106102855760003560e01c80635c975abb11610153578063a3b0b5a3116100cb578063df00bb241161007f578063f72c0d8b11610064578063f72c0d8b146107a7578063fc6f9468146107db578063ffd39e841461080957600080fd5b8063df00bb2414610753578063e63ab1e91461077357600080fd5b8063bcb39621116100b0578063bcb39621146106eb578063c0542cfa14610702578063d547741f1461073357600080fd5b8063a3b0b5a314610697578063b2c0638f146106cb57600080fd5b80638456cb5911610122578063906405a311610107578063906405a31461060f57806391d148541461062f578063a217fddf1461068257600080fd5b80638456cb59146105da57806386a8e98a146105ef57600080fd5b80635c975abb1461054e57806375b238fc146105665780637cfd24581461059a5780637f6232e7146105ba57600080fd5b80633659cfe611610201578063485cc955116101b55780634fc7ec0d1161019a5780634fc7ec0d146104f957806352d1902d1461051957806356209ab91461052e57600080fd5b8063485cc955146104c65780634f1ef286146104e657600080fd5b80633f30b00f116101e65780633f30b00f146104605780633f4ba83a146104805780634529cc1b1461049557600080fd5b80633659cfe6146104205780633b17f0561461044057600080fd5b8063248a9ca3116102585780632b48dc721161023d5780632b48dc721461038d5780632f2ff15d146103e057806336568abe1461040057600080fd5b8063248a9ca31461033d578063275e79ff1461036d57600080fd5b806301ffc9a71461028a578063141a468c146102bf57806318ee89f0146102fb5780632162671f1461031d575b600080fd5b34801561029657600080fd5b506102aa6102a5366004612f90565b610829565b60405190151581526020015b60405180910390f35b3480156102cb57600080fd5b506102ed6102da366004612fd2565b6101326020526000908152604090205481565b6040519081526020016102b6565b34801561030757600080fd5b5061031b610316366004612feb565b6108c2565b005b34801561032957600080fd5b506102ed61033836600461313a565b610a0b565b34801561034957600080fd5b506102ed610358366004612fd2565b60009081526097602052604090206001015490565b34801561037957600080fd5b5061031b610388366004613197565b610a58565b34801561039957600080fd5b5061012f546103bb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102b6565b3480156103ec57600080fd5b5061031b6103fb366004613237565b610a7e565b34801561040c57600080fd5b5061031b61041b366004613237565b610aa8565b34801561042c57600080fd5b5061031b61043b366004613267565b610b5b565b34801561044c57600080fd5b5061031b61045b366004613284565b610d60565b34801561046c57600080fd5b5061031b61047b3660046132f0565b610e1c565b34801561048c57600080fd5b5061031b610ff0565b3480156104a157600080fd5b506102aa6104b0366004612fd2565b61012e6020526000908152604090205460ff1681565b3480156104d257600080fd5b5061031b6104e1366004613396565b611022565b61031b6104f43660046133c4565b6113b3565b34801561050557600080fd5b506102ed610514366004612fd2565b6115a5565b34801561052557600080fd5b506102ed6115e2565b34801561053a57600080fd5b5061031b61054936600461341e565b6116ce565b34801561055a57600080fd5b5060335460ff166102aa565b34801561057257600080fd5b506102ed7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b3480156105a657600080fd5b506102ed6105b5366004613475565b6116e7565b3480156105c657600080fd5b5061031b6105d5366004613497565b61171a565b3480156105e657600080fd5b5061031b611725565b3480156105fb57600080fd5b5061031b61060a366004612fd2565b611757565b34801561061b57600080fd5b5061031b61062a3660046132f0565b6118d9565b34801561063b57600080fd5b506102aa61064a366004613237565b600091825260976020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561068e57600080fd5b506102ed600081565b3480156106a357600080fd5b506102ed7f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a981565b3480156106d757600080fd5b506102ed6106e63660046134c3565b611a16565b3480156106f757600080fd5b506102ed61012d5481565b34801561070e57600080fd5b506102aa61071d366004612fd2565b6000908152610133602052604090205460ff1690565b34801561073f57600080fd5b5061031b61074e366004613237565b611a5b565b34801561075f57600080fd5b506102ed61076e366004613497565b611a80565b34801561077f57600080fd5b506102ed7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b3480156107b357600080fd5b506102ed7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b3480156107e757600080fd5b50610130546103bb9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561081557600080fd5b5061031b610824366004613513565b611af1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806108bc57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b3360009081527f28e8759d778413ba386bd9f909ab886584d0c872d3157abd7018c4ab794baf5a602052604090205460ff1661095f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f72000000000000000000000000000000000060448201526064015b60405180910390fd5b3360009081527f28e8759d778413ba386bd9f909ab886584d0c872d3157abd7018c4ab794baf5a602052604090205460ff166109f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f7200000000000000000000000000000000006044820152606401610956565b610a048585858585611b07565b5050505050565b600080610a188484611b8c565b90506000610a2582611c2e565b61012d54600090815261013160209081526040808320958352948152848220928252919091529190912054949350505050565b6000610a648888611b8c565b9050610a74818787878787611cc3565b5050505050505050565b600082815260976020526040902060010154610a9981611db2565b610aa38383611dbc565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610b4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610956565b610b578282611eb0565b5050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610956565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c957f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610d38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610956565b610d4181611f6b565b60408051600080825260208201909252610d5d91839190611f95565b50565b3360009081527f28e8759d778413ba386bd9f909ab886584d0c872d3157abd7018c4ab794baf5a602052604090205460ff16610df8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f7200000000000000000000000000000000006044820152606401610956565b6000610e048686611b8c565b9050610e138782868686611b07565b50505050505050565b3360009081527f9805bb80c0cb3b8457cbce774d5adda6e717284b7d1e937eb2fdc8bbff924719602052604090205460ff16610eb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e00000000000000000000000000000000000000006044820152606401610956565b60005b8151811015610fb5576101336000838381518110610ed757610ed7613564565b60209081029190910181015182528101919091526040016000205460ff1615610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520616c7265616479206578697374730000000000006044820152606401610956565b60016101336000848481518110610f7557610f75613564565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610fad906135c2565b915050610eb7565b507f0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e81604051610fe591906135fa565b60405180910390a150565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61101a81611db2565b610d5d612194565b600054610100900460ff16158080156110425750600054600160ff909116105b8061105c5750303b15801561105c575060005460ff166001145b6110e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610956565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561114657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61114e612211565b6111566122b2565b61115e6122b2565b73ffffffffffffffffffffffffffffffffffffffff83166111db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f7420612076616c696420436f6e74726163742041646472657373000000006044820152606401610956565b73ffffffffffffffffffffffffffffffffffffffff8216611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420612076616c69642041646d696e2041646472657373000000000000006044820152606401610956565b611263600083611dbc565b61128d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a83611dbc565b6112b77f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e383611dbc565b6112e17fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583611dbc565b61130b7f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a983611dbc565b61012f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790558015610aa357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610956565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114ed7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614611590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610956565b61159982611f6b565b610b5782826001611f95565b6000806115b183611c2e565b61012d5460009081526101316020908152604080832096835295815285822092825291909152929092205492915050565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146116a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610956565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60006116da8585611b8c565b9050610a04818484612349565b6000806116f383611c2e565b60009485526101316020908152604080872095875294815284862091865252505090205490565b610aa3838383612349565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61174f81611db2565b610d5d6123ef565b3360009081527f9805bb80c0cb3b8457cbce774d5adda6e717284b7d1e937eb2fdc8bbff924719602052604090205460ff166117ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e00000000000000000000000000000000000000006044820152606401610956565b600081815261012e602052604090205460ff1615611869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f536561736f6e20616c72656164792073657400000000000000000000000000006044820152606401610956565b61012d819055600081815261012e60205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef3190610fe59083815260200190565b3360009081527f9805bb80c0cb3b8457cbce774d5adda6e717284b7d1e937eb2fdc8bbff924719602052604090205460ff16611971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e00000000000000000000000000000000000000006044820152606401610956565b60005b81518110156119e657610133600083838151811061199457611994613564565b602090810291909101810151825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055806119de816135c2565b915050611974565b507f5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff981604051610fe591906135fa565b600080611a238484611b8c565b90506000611a3082611c2e565b6000968752610131602090815260408089209489529381528388209188525250909320549392505050565b600082815260976020526040902060010154611a7681611db2565b610aa38383611eb0565b600080611a8c85611c2e565b600086815261013260209081526040918290205461012d5483518084019a909a52898401949094526060890197909752608088019290925260a087019490945260c0808701959095528351808703909501855260e09095019092525050805191012090565b611aff868686868686611cc3565b505050505050565b600085815261013160209081526040808320878452825280832086845290915281208054849290611b3990849061363e565b909155505060408051858152602081018590529081018390528190869033907f9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad829060600160405180910390a45050505050565b61012f546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff169063cad6b90190611be690859087906004016136bf565b602060405180830381865afa158015611c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2791906136e1565b9392505050565b61012f546040517fa9735f940000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063a9735f9490602401602060405180830381865afa158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bc91906136e1565b6000611cce87611c2e565b90506000611cf688838961013260008d8152602001908152602001600020548a8a8a8a61244a565b90506000611d0389612547565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5369676e6572206e6f74206f776e6572206f66207265616c6d496400000000006044820152606401610956565b611da789848a8a856125e0565b505050505050505050565b610d5d81336127c7565b600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b5757600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611e523390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610b5757600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3610b5781611db2565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611fc857610aa383612881565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561204d575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261204a918101906136e1565b60015b6120d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610956565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610956565b50610aa383838361298b565b61219c6129b6565b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b600054610100900460ff166122a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610956565b6122b0612a22565b565b600054610100900460ff166122b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610956565b600061235484612547565b90503373ffffffffffffffffffffffffffffffffffffffff8216146123d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5369676e6572206e6f74206f776e6572206f66207265616c6d496400000000006044820152606401610956565b60006123e085611c2e565b9050610a0485828686336125e0565b6123f7612ae3565b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586121e73390565b61012d546040805160208082018c90528183018b9052606082018a9052608082019390935260a0810187905260c08082018990528251808303909101815260e08201808452815191850191909120600091829052610100830180855281905260ff88166101208401526101408301879052610160830186905292519093600192610180808201937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa158015612510573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519b9a5050505050505050505050565b61012f546040517f6352211e00000000000000000000000000000000000000000000000000000000815260048101839052600091829173ffffffffffffffffffffffffffffffffffffffff90911690636352211e90602401602060405180830381865afa1580156125bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2791906136fa565b61012d546000908152610131602090815260408083208884528252808320878452909152902054831115612670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610956565b6000828152610133602052604090205460ff166126e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420636f6e73756d6520726561736f6e20636f646500000000006044820152606401610956565b61012d5460009081526101316020908152604080832088845282528083208784529091528120805485929061271f908490613717565b909155505061012d5460008681526101326020908152604091829020548251338152918201529081018690526060810185905273ffffffffffffffffffffffffffffffffffffffff8316608082015283919087907fd1255d580f215da0d3a191d00a885ae4716fac76b5813a6c309919fff6078bd19060a00160405180910390a46000858152610132602052604081208054916127bb836135c2565b91905055505050505050565b600082815260976020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610b575761280781612b50565b612812836020612b6f565b60405160200161282392919061372a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610956916004016137ab565b73ffffffffffffffffffffffffffffffffffffffff81163b612925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610956565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61299483612db2565b6000825111806129a15750805b15610aa3576129b08383612dff565b50505050565b60335460ff166122b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610956565b600054610100900460ff16612ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610956565b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60335460ff16156122b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610956565b60606108bc73ffffffffffffffffffffffffffffffffffffffff831660145b60606000612b7e8360026137be565b612b8990600261363e565b67ffffffffffffffff811115612ba157612ba1613026565b6040519080825280601f01601f191660200182016040528015612bcb576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612c0257612c02613564565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612c6557612c65613564565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000612ca18460026137be565b612cac90600161363e565b90505b6001811115612d49577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612ced57612ced613564565b1a60f81b828281518110612d0357612d03613564565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93612d42816137d5565b9050612caf565b508315611c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610956565b612dbb81612881565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060611c2783836040518060600160405280602781526020016138276027913960606000808573ffffffffffffffffffffffffffffffffffffffff1685604051612e49919061380a565b600060405180830381855af49150503d8060008114612e84576040519150601f19603f3d011682016040523d82523d6000602084013e612e89565b606091505b5091509150612e9a86838387612ea4565b9695505050505050565b60608315612f3a578251600003612f335773ffffffffffffffffffffffffffffffffffffffff85163b612f33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610956565b5081612f44565b612f448383612f4c565b949350505050565b815115612f5c5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095691906137ab565b600060208284031215612fa257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611c2757600080fd5b600060208284031215612fe457600080fd5b5035919050565b600080600080600060a0868803121561300357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561309c5761309c613026565b604052919050565b600067ffffffffffffffff8311156130be576130be613026565b6130ef60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601613055565b905082815283838301111561310357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261312b57600080fd5b611c27838335602085016130a4565b6000806040838503121561314d57600080fd5b82359150602083013567ffffffffffffffff81111561316b57600080fd5b6131778582860161311a565b9150509250929050565b803560ff8116811461319257600080fd5b919050565b600080600080600080600060e0888a0312156131b257600080fd5b87359650602088013567ffffffffffffffff8111156131d057600080fd5b6131dc8a828b0161311a565b96505060408801359450606088013593506131f960808901613181565b925060a0880135915060c0880135905092959891949750929550565b73ffffffffffffffffffffffffffffffffffffffff81168114610d5d57600080fd5b6000806040838503121561324a57600080fd5b82359150602083013561325c81613215565b809150509250929050565b60006020828403121561327957600080fd5b8135611c2781613215565b60008060008060008060c0878903121561329d57600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156132c257600080fd5b6132ce89828a0161311a565b945050606087013592506080870135915060a087013590509295509295509295565b6000602080838503121561330357600080fd5b823567ffffffffffffffff8082111561331b57600080fd5b818501915085601f83011261332f57600080fd5b81358181111561334157613341613026565b8060051b9150613352848301613055565b818152918301840191848101908884111561336c57600080fd5b938501935b8385101561338a57843582529385019390850190613371565b98975050505050505050565b600080604083850312156133a957600080fd5b82356133b481613215565b9150602083013561325c81613215565b600080604083850312156133d757600080fd5b82356133e281613215565b9150602083013567ffffffffffffffff8111156133fe57600080fd5b8301601f8101851361340f57600080fd5b613177858235602084016130a4565b6000806000806080858703121561343457600080fd5b84359350602085013567ffffffffffffffff81111561345257600080fd5b61345e8782880161311a565b949794965050505060408301359260600135919050565b6000806040838503121561348857600080fd5b50508035926020909101359150565b6000806000606084860312156134ac57600080fd5b505081359360208301359350604090920135919050565b6000806000606084860312156134d857600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156134fd57600080fd5b6135098682870161311a565b9150509250925092565b60008060008060008060c0878903121561352c57600080fd5b86359550602087013594506040870135935061354a60608801613181565b92506080870135915060a087013590509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135f3576135f3613593565b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561363257835183529284019291840191600101613616565b50909695505050505050565b808201808211156108bc576108bc613593565b60005b8381101561366c578181015183820152602001613654565b50506000910152565b6000815180845261368d816020860160208601613651565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006136d26040830185613675565b90508260208301529392505050565b6000602082840312156136f357600080fd5b5051919050565b60006020828403121561370c57600080fd5b8151611c2781613215565b818103818111156108bc576108bc613593565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613762816017850160208801613651565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161379f816028840160208801613651565b01602801949350505050565b602081526000611c276020830184613675565b80820281158282048414176108bc576108bc613593565b6000816137e4576137e4613593565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6000825161381c818460208701613651565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122093ce946aa66fadcee9eff463f95e6f3ae38080744145b961e1ba261b0f8e1f4664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x285 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x153 JUMPI DUP1 PUSH4 0xA3B0B5A3 GT PUSH2 0xCB JUMPI DUP1 PUSH4 0xDF00BB24 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xF72C0D8B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x7A7 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xFFD39E84 EQ PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDF00BB24 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBCB39621 GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0xBCB39621 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xC0542CFA EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xB2C0638F EQ PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x906405A3 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x906405A3 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0x86A8E98A EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x7CFD2458 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x7F6232E7 EQ PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 GT PUSH2 0x201 JUMPI DUP1 PUSH4 0x485CC955 GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x4FC7EC0D GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x4FC7EC0D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x56209AB9 EQ PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x485CC955 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F30B00F GT PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x3F30B00F EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x4529CC1B EQ PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x3B17F056 EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x258 JUMPI DUP1 PUSH4 0x2B48DC72 GT PUSH2 0x23D JUMPI DUP1 PUSH4 0x2B48DC72 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x275E79FF EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x141A468C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x18EE89F0 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x2162671F EQ PUSH2 0x31D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F90 JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x132 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FEB JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x313A JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x3197 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F SLOAD PUSH2 0x3BB SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x3267 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x3284 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xFF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x31B PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C4 JUMP JUMPDEST PUSH2 0x13B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x15A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x15E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x341E JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x2AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3475 JUMP JUMPDEST PUSH2 0x16E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x5D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3497 JUMP JUMPDEST PUSH2 0x171A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x1725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x1757 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x32F0 JUMP JUMPDEST PUSH2 0x18D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x34C3 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x12D SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x71D CALLDATASIZE PUSH1 0x4 PUSH2 0x2FD2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x133 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x3237 JUMP JUMPDEST PUSH2 0x1A5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH2 0x76E CALLDATASIZE PUSH1 0x4 PUSH2 0x3497 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 SLOAD PUSH2 0x3BB SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x824 CALLDATASIZE PUSH1 0x4 PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x8BC JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x28E8759D778413BA386BD9F909AB886584D0C872D3157ABD7018C4AB794BAF5A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x28E8759D778413BA386BD9F909AB886584D0C872D3157ABD7018C4AB794BAF5A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0xA04 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B07 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA18 DUP5 DUP5 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA25 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA64 DUP9 DUP9 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA74 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CC3 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA99 DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 PUSH2 0x1DBC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0xB57 DUP3 DUP3 PUSH2 0x1EB0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC95 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x1F6B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD5D SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1F95 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x28E8759D778413BA386BD9F909AB886584D0C872D3157ABD7018C4AB794BAF5A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE04 DUP7 DUP7 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH2 0xE13 DUP8 DUP3 DUP7 DUP7 DUP7 PUSH2 0x1B07 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x9805BB80C0CB3B8457CBCE774D5ADDA6E717284B7D1E937EB2FDC8BBFF924719 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFB5 JUMPI PUSH2 0x133 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xED7 JUMPI PUSH2 0xED7 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x133 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF75 JUMPI PUSH2 0xF75 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0xFAD SWAP1 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB7 JUMP JUMPDEST POP PUSH32 0xD8C56A8918EC09C2FE3C4D9FCC00ECE66DF217A1AB3AD768DD0A71620DA5B4E DUP2 PUSH1 0x40 MLOAD PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x101A DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xD5D PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1042 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x105C JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x114E PUSH2 0x2211 JUMP JUMPDEST PUSH2 0x1156 PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x115E PUSH2 0x22B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C696420436F6E7472616374204164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C69642041646D696E204164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1263 PUSH1 0x0 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x128D PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x12B7 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x12E1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x130B PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP4 PUSH2 0x1DBC JUMP JUMPDEST PUSH2 0x12F DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAA3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14ED PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1599 DUP3 PUSH2 0x1F6B JUMP JUMPDEST PUSH2 0xB57 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15B1 DUP4 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DA DUP6 DUP6 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA04 DUP2 DUP5 DUP5 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16F3 DUP4 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE POP POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 DUP4 PUSH2 0x2349 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x174F DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xD5D PUSH2 0x23EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x9805BB80C0CB3B8457CBCE774D5ADDA6E717284B7D1E937EB2FDC8BBFF924719 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536561736F6E20616C7265616479207365740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x12D DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x61228C895F8BA06548597D3E34A23BC0ECB6D1E62A1EB3FA30BE04883A17EF31 SWAP1 PUSH2 0xFE5 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x9805BB80C0CB3B8457CBCE774D5ADDA6E717284B7D1E937EB2FDC8BBFF924719 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x19E6 JUMPI PUSH2 0x133 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1994 JUMPI PUSH2 0x1994 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 PUSH2 0x19DE DUP2 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1974 JUMP JUMPDEST POP PUSH32 0x5B2C9FCBB27D48BDBFC59F0564B5BA81539309EBF09A940FAD64D171BCFB9FF9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A23 DUP5 DUP5 PUSH2 0x1B8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A30 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP10 KECCAK256 SWAP5 DUP10 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP9 KECCAK256 SWAP2 DUP9 MSTORE MSTORE POP SWAP1 SWAP4 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1A76 DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A8C DUP6 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH2 0x132 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD PUSH2 0x12D SLOAD DUP4 MLOAD DUP1 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP10 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP1 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP8 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD SWAP1 SWAP3 MSTORE POP POP DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1AFF DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1CC3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1B39 SWAP1 DUP5 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x9092BF6BD1CF7DB4FCF41AEDC7C0333B51C57F5B80B429BC3D9CAA5587C6AD82 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12F SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xCAD6B901 SWAP1 PUSH2 0x1BE6 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x36BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12F SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCE DUP8 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CF6 DUP9 DUP4 DUP10 PUSH2 0x132 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP11 DUP11 DUP11 DUP11 PUSH2 0x244A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D03 DUP10 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1DA7 DUP10 DUP5 DUP11 DUP11 DUP6 PUSH2 0x25E0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD5D DUP2 CALLER PUSH2 0x27C7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB57 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1E52 CALLER SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB57 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0xB57 DUP2 PUSH2 0x1DB2 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FC8 JUMPI PUSH2 0xAA3 DUP4 PUSH2 0x2881 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x204D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x204A SWAP2 DUP2 ADD SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x20D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x2188 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST POP PUSH2 0xAA3 DUP4 DUP4 DUP4 PUSH2 0x298B JUMP JUMPDEST PUSH2 0x219C PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x22B0 PUSH2 0x2A22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2354 DUP5 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x23D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E0 DUP6 PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP PUSH2 0xA04 DUP6 DUP3 DUP7 DUP7 CALLER PUSH2 0x25E0 JUMP JUMPDEST PUSH2 0x23F7 PUSH2 0x2AE3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x21E7 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP13 SWAP1 MSTORE DUP2 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP3 ADD DUP1 DUP5 MSTORE DUP2 MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP1 DUP6 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD DUP8 SWAP1 MSTORE PUSH2 0x160 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP1 SWAP4 PUSH1 0x1 SWAP3 PUSH2 0x180 DUP1 DUP3 ADD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2510 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12F SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C27 SWAP2 SWAP1 PUSH2 0x36FA JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x2670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x133 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x26E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E73756D6520726561736F6E20636F64650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x131 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x271F SWAP1 DUP5 SWAP1 PUSH2 0x3717 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x12D SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH2 0x132 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE DUP4 SWAP2 SWAP1 DUP8 SWAP1 PUSH32 0xD1255D580F215DA0D3A191D00A885AE4716FAC76B5813A6C309919FFF6078BD1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH2 0x132 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x27BB DUP4 PUSH2 0x35C2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB57 JUMPI PUSH2 0x2807 DUP2 PUSH2 0x2B50 JUMP JUMPDEST PUSH2 0x2812 DUP4 PUSH1 0x20 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2823 SWAP3 SWAP2 SWAP1 PUSH2 0x372A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x956 SWAP2 PUSH1 0x4 ADD PUSH2 0x37AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x2925 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2994 DUP4 PUSH2 0x2DB2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x29A1 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xAA3 JUMPI PUSH2 0x29B0 DUP4 DUP4 PUSH2 0x2DFF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2AB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8BC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2B7E DUP4 PUSH1 0x2 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x2B89 SWAP1 PUSH1 0x2 PUSH2 0x363E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BA1 JUMPI PUSH2 0x2BA1 PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2BCB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C02 JUMPI PUSH2 0x2C02 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2C65 JUMPI PUSH2 0x2C65 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x2CA1 DUP5 PUSH1 0x2 PUSH2 0x37BE JUMP JUMPDEST PUSH2 0x2CAC SWAP1 PUSH1 0x1 PUSH2 0x363E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2D49 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x2CED JUMPI PUSH2 0x2CED PUSH2 0x3564 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D03 JUMPI PUSH2 0x2D03 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x2D42 DUP2 PUSH2 0x37D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CAF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1C27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST PUSH2 0x2DBB DUP2 PUSH2 0x2881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C27 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3827 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E49 SWAP2 SWAP1 PUSH2 0x380A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E84 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E89 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2E9A DUP7 DUP4 DUP4 DUP8 PUSH2 0x2EA4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F3A JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2F33 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x2F33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x956 JUMP JUMPDEST POP DUP2 PUSH2 0x2F44 JUMP JUMPDEST PUSH2 0x2F44 DUP4 DUP4 PUSH2 0x2F4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2F5C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x37AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1C27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x309C JUMPI PUSH2 0x309C PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x30BE JUMPI PUSH2 0x30BE PUSH2 0x3026 JUMP JUMPDEST PUSH2 0x30EF PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD PUSH2 0x3055 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x312B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C27 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x314D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3177 DUP6 DUP3 DUP7 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x31B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31DC DUP11 DUP3 DUP12 ADD PUSH2 0x311A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x31F9 PUSH1 0x80 DUP10 ADD PUSH2 0x3181 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x324A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x325C DUP2 PUSH2 0x3215 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C27 DUP2 PUSH2 0x3215 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x329D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32CE DUP10 DUP3 DUP11 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x331B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x332F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3341 JUMPI PUSH2 0x3341 PUSH2 0x3026 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x3352 DUP5 DUP4 ADD PUSH2 0x3055 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x336C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x338A JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x3371 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33B4 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x325C DUP2 PUSH2 0x3215 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x33E2 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x340F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3177 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x345E DUP8 DUP3 DUP9 ADD PUSH2 0x311A JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3509 DUP7 DUP3 DUP8 ADD PUSH2 0x311A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x352C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x354A PUSH1 0x60 DUP9 ADD PUSH2 0x3181 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x35F3 JUMPI PUSH2 0x35F3 PUSH2 0x3593 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3632 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3616 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x366C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3654 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x368D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x36D2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3675 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x370C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1C27 DUP2 PUSH2 0x3215 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x3593 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x3762 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3651 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x379F DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3651 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C27 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3675 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x37E4 JUMPI PUSH2 0x37E4 PUSH2 0x3593 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x381C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3651 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122093CE94 PUSH11 0xA66FADCEE9EFF463F95E6F GASPRICE 0xE3 DUP1 DUP1 PUSH21 0x4145B961E1BA261B0F8E1F4664736F6C6343000811 STOP CALLER ","sourceMap":"527:12320:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:213:0;;;;;;;;;;-1:-1:-1;3029:213:0;;;;;:::i;:::-;;:::i;:::-;;;516:14:29;;509:22;491:41;;479:2;464:18;3029:213:0;;;;;;;;1352:41:22;;;;;;;;;;-1:-1:-1;1352:41:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;874:25:29;;;862:2;847:18;1352:41:22;728:177:29;5937:433:22;;;;;;;;;;-1:-1:-1;5937:433:22;;;;;:::i;:::-;;:::i;:::-;;11408:521;;;;;;;;;;-1:-1:-1;11408:521:22;;;;;:::i;:::-;;:::i;4834:129:0:-;;;;;;;;;;-1:-1:-1;4834:129:0;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;8630:419:22;;;;;;;;;;-1:-1:-1;8630:419:22;;;;;:::i;:::-;;:::i;1073:31::-;;;;;;;;;;-1:-1:-1;1073:31:22;;;;;;;;;;;4452:42:29;4440:55;;;4422:74;;4410:2;4395:18;1073:31:22;4259:243:29;5259:145:0;;;;;;;;;;-1:-1:-1;5259:145:0;;;;;:::i;:::-;;:::i;6368:214::-;;;;;;;;;;-1:-1:-1;6368:214:0;;;;;:::i;:::-;;:::i;3387:195:8:-;;;;;;;;;;-1:-1:-1;3387:195:8;;;;;:::i;:::-;;:::i;6376:514:22:-;;;;;;;;;;-1:-1:-1;6376:514:22;;;;;:::i;:::-;;:::i;4451:524::-;;;;;;;;;;-1:-1:-1;4451:524:22;;;;;:::i;:::-;;:::i;3372:75::-;;;;;;;;;;;;;:::i;988:39::-;;;;;;;;;;-1:-1:-1;988:39:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;2283:669;;;;;;;;;;-1:-1:-1;2283:669:22;;;;;:::i;:::-;;:::i;3901:220:8:-;;;;;;:::i;:::-;;:::i;11045:357:22:-;;;;;;;;;;-1:-1:-1;11045:357:22;;;;;:::i;:::-;;:::i;3006:131:8:-;;;;;;;;;;;;;:::i;9723:334:22:-;;;;;;;;;;-1:-1:-1;9723:334:22;;;;;:::i;:::-;;:::i;1858:84:9:-;;;;;;;;;;-1:-1:-1;1928:7:9;;;;1858:84;;787:60:22;;;;;;;;;;;;824:23;787:60;;10243:285;;;;;;;;;;-1:-1:-1;10243:285:22;;;;;:::i;:::-;;:::i;10063:174::-;;;;;;;;;;-1:-1:-1;10063:174:22;;;;;:::i;:::-;;:::i;3295:71::-;;;;;;;;;;;;;:::i;3453:233::-;;;;;;;;;;-1:-1:-1;3453:233:22;;;;;:::i;:::-;;:::i;4981:577::-;;;;;;;;;;-1:-1:-1;4981:577:22;;;;;:::i;:::-;;:::i;3329:145:0:-;;;;;;;;;;-1:-1:-1;3329:145:0;;;;;:::i;:::-;3415:4;3438:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;;;;3329:145;2450:49;;;;;;;;;;-1:-1:-1;2450:49:0;2495:4;2450:49;;853:68:22;;;;;;;;;;;;894:27;853:68;;10534:505;;;;;;;;;;-1:-1:-1;10534:505:22;;;;;:::i;:::-;;:::i;954:28::-;;;;;;;;;;;;;;;;3902:139;;;;;;;;;;-1:-1:-1;3902:139:22;;;;;:::i;:::-;3974:4;3997:37;;;:25;:37;;;;;;;;;3902:139;5684:147:0;;;;;;;;;;-1:-1:-1;5684:147:0;;;;;:::i;:::-;;:::i;12514:331:22:-;;;;;;;;;;-1:-1:-1;12514:331:22;;;;;:::i;:::-;;:::i;634:62::-;;;;;;;;;;;;672:24;634:62;;702:66;;;;;;;;;;;;742:26;702:66;;1132:27;;;;;;;;;;-1:-1:-1;1132:27:22;;;;;;;;9055:214;;;;;;;;;;-1:-1:-1;9055:214:22;;;;;:::i;:::-;;:::i;3029:213:0:-;3114:4;3137:58;;;3152:43;3137:58;;:98;;-1:-1:-1;1183:36:18;1168:51;;;;3199:36:0;3130:105;3029:213;-1:-1:-1;;3029:213:0:o;5937:433:22:-;3240:10;3415:4:0;3438:29;;;:12;;:29;:12;:29;;;;;3208:63:22;;;;;;;10374:2:29;3208:63:22;;;10356:21:29;10413:2;10393:18;;;10386:30;10452:17;10432:18;;;10425:45;10487:18;;3208:63:22;;;;;;;;;6173:10:::1;3415:4:0::0;3438:29;;;:12;;:29;:12;:29;;;;;6141:63:22::1;;;::::0;::::1;::::0;;10374:2:29;6141:63:22::1;::::0;::::1;10356:21:29::0;10413:2;10393:18;;;10386:30;10452:17;10432:18;;;10425:45;10487:18;;6141:63:22::1;10172:339:29::0;6141:63:22::1;6295:68;6304:6;6312:7;6321:14;6337:6;6345:17;6295:8;:68::i;:::-;5937:433:::0;;;;;:::o;11408:521::-;11509:7;11598:15;11616:34;11632:10;11644:5;11616:15;:34::i;:::-;11598:52;;11717:22;11742:27;11761:7;11742:18;:27::i;:::-;11883:13;;11874:23;;;;:8;:23;;;;;;;;:32;;;;;;;;;:48;;;;;;;;;;;;;11408:521;-1:-1:-1;;;;11408:521:22:o;8630:419::-;8913:15;8931:34;8947:10;8959:5;8931:15;:34::i;:::-;8913:52;;8976:66;8998:7;9007:6;9015:17;9034:1;9037;9040;8976:21;:66::i;:::-;8850:199;8630:419;;;;;;;:::o;5259:145:0:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;6463:23;;;929:10:15;6463:23:0;6455:83;;;;;;;10718:2:29;6455:83:0;;;10700:21:29;10757:2;10737:18;;;10730:30;10796:34;10776:18;;;10769:62;10867:17;10847:18;;;10840:45;10902:19;;6455:83:0;10516:411:29;6455:83:0;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;3387:195:8:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;11134:2:29;1873:80:8;;;11116:21:29;11173:2;11153:18;;;11146:30;11212:34;11192:18;;;11185:62;11283:14;11263:18;;;11256:42;11315:19;;1873:80:8;10932:408:29;1873:80:8;1995:6;1971:30;;:20;1312:66:5;1536:65;;;;1457:151;1971:20:8;:30;;;1963:87;;;;;;;11547:2:29;1963:87:8;;;11529:21:29;11586:2;11566:18;;;11559:30;11625:34;11605:18;;;11598:62;11696:14;11676:18;;;11669:42;11728:19;;1963:87:8;11345:408:29;1963:87:8;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;6376:514:22:-;3240:10;3415:4:0;3438:29;;;:12;;:29;:12;:29;;;;;3208:63:22;;;;;;;10374:2:29;3208:63:22;;;10356:21:29;10413:2;10393:18;;;10386:30;10452:17;10432:18;;;10425:45;10487:18;;3208:63:22;10172:339:29;3208:63:22;6673:15:::1;6691:33;6707:10;6719:4;6691:15;:33::i;:::-;6673:51;;6815:68;6824:6;6832:7;6841:14;6857:6;6865:17;6815:8;:68::i;:::-;6607:283;6376:514:::0;;;;;;:::o;4451:524::-;3121:10;3415:4:0;3438:29;;;:12;;:29;:12;:29;;;;;3093:56:22;;;;;;;11960:2:29;3093:56:22;;;11942:21:29;11999:2;11979:18;;;11972:30;12038:14;12018:18;;;12011:42;12070:18;;3093:56:22;11758:336:29;3093:56:22;4626:9:::1;4621:220;4645:12;:19;4641:1;:23;4621:220;;;4694:25;:42;4720:12;4733:1;4720:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4694:42;;;::::1;::::0;;;;;;-1:-1:-1;4694:42:22;;::::1;;4693:43;4685:82;;;::::0;::::1;::::0;;12490:2:29;4685:82:22::1;::::0;::::1;12472:21:29::0;12529:2;12509:18;;;12502:30;12568:28;12548:18;;;12541:56;12614:18;;4685:82:22::1;12288:350:29::0;4685:82:22::1;4826:4;4781:25;:42;4807:12;4820:1;4807:15;;;;;;;;:::i;:::-;;;;;;;4781:42;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;4666:3;;;;;:::i;:::-;;;;4621:220;;;;4927:41;4955:12;4927:41;;;;;;:::i;:::-;;;;;;;;4451:524:::0;:::o;3372:75::-;672:24;2928:16:0;2939:4;2928:10;:16::i;:::-;3430:10:22::1;:8;:10::i;2283:669::-:0;3279:19:7;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:7;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:7;1713:19:14;:23;;;3387:66:7;;-1:-1:-1;3436:12:7;;;;;:17;3387:66;3325:201;;;;;;;13871:2:29;3325:201:7;;;13853:21:29;13910:2;13890:18;;;13883:30;13949:34;13929:18;;;13922:62;14020:16;14000:18;;;13993:44;14054:19;;3325:201:7;13669:410:29;3325:201:7;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;2381:17:22::1;:15;:17::i;:::-;2408:22;:20;:22::i;:::-;2440:24;:22;:24::i;:::-;2483:39;::::0;::::1;2475:80;;;::::0;::::1;::::0;;14286:2:29;2475:80:22::1;::::0;::::1;14268:21:29::0;14325:2;14305:18;;;14298:30;14364;14344:18;;;14337:58;14412:18;;2475:80:22::1;14084:352:29::0;2475:80:22::1;2573:36;::::0;::::1;2565:74;;;::::0;::::1;::::0;;14643:2:29;2565:74:22::1;::::0;::::1;14625:21:29::0;14682:2;14662:18;;;14655:30;14721:27;14701:18;;;14694:55;14766:18;;2565:74:22::1;14441:349:29::0;2565:74:22::1;2650:45;2495:4:0;2681:13:22::0;2650:10:::1;:45::i;:::-;2705:38;672:24;2729:13;2705:10;:38::i;:::-;2753:40;742:26;2779:13;2753:10;:40::i;:::-;2803:37;824:23;2826:13;2803:10;:37::i;:::-;2850:41;894:27;2877:13;2850:10;:41::i;:::-;2901:15;:44:::0;;;::::1;;::::0;::::1;;::::0;;3647:99:7;;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;14947:36:29;;3721:14:7;;14935:2:29;14920:18;3721:14:7;;;;;;;3269:483;2283:669:22;;:::o;3901:220:8:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;11134:2:29;1873:80:8;;;11116:21:29;11173:2;11153:18;;;11146:30;11212:34;11192:18;;;11185:62;11283:14;11263:18;;;11256:42;11315:19;;1873:80:8;10932:408:29;1873:80:8;1995:6;1971:30;;:20;1312:66:5;1536:65;;;;1457:151;1971:20:8;:30;;;1963:87;;;;;;;11547:2:29;1963:87:8;;;11529:21:29;11586:2;11566:18;;;11559:30;11625:34;11605:18;;;11598:62;11696:14;11676:18;;;11669:42;11728:19;;1963:87:8;11345:408:29;1963:87:8;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;11045:357:22:-:0;11115:7;11190:22;11215:27;11234:7;11215:18;:27::i;:::-;11356:13;;11347:23;;;;:8;:23;;;;;;;;:32;;;;;;;;;:48;;;;;;;;;;;;;11045:357;-1:-1:-1;;11045:357:22:o;3006:131:8:-;3084:7;2324:4;2316:23;2333:6;2316:23;;2308:92;;;;;;;15196:2:29;2308:92:8;;;15178:21:29;15235:2;15215:18;;;15208:30;15274:34;15254:18;;;15247:62;15345:26;15325:18;;;15318:54;15389:19;;2308:92:8;14994:420:29;2308:92:8;-1:-1:-1;1312:66:5::1;3006:131:8::0;:::o;9723:334:22:-;9927:15;9945:34;9961:10;9973:5;9945:15;:34::i;:::-;9927:52;;9990:60;10015:7;10024:6;10032:17;9990:24;:60::i;10243:285::-;10335:7;10410:22;10435:27;10454:7;10435:18;:27::i;:::-;10480:16;;;;:8;:16;;;;;;;;:25;;;;;;;;;:41;;;;-1:-1:-1;;10480:41:22;;;;10243:285::o;10063:174::-;10170:60;10195:7;10204:6;10212:17;10170:24;:60::i;3295:71::-;672:24;2928:16:0;2939:4;2928:10;:16::i;:::-;3351:8:22::1;:6;:8::i;3453:233::-:0;3121:10;3415:4:0;3438:29;;;:12;;:29;:12;:29;;;;;3093:56:22;;;;;;;11960:2:29;3093:56:22;;;11942:21:29;11999:2;11979:18;;;11972:30;12038:14;12018:18;;;12011:42;12070:18;;3093:56:22;11758:336:29;3093:56:22;3534:16:::1;::::0;;;:7:::1;:16;::::0;;;;;::::1;;3533:17;3525:48;;;::::0;::::1;::::0;;15621:2:29;3525:48:22::1;::::0;::::1;15603:21:29::0;15660:2;15640:18;;;15633:30;15699:20;15679:18;;;15672:48;15737:18;;3525:48:22::1;15419:342:29::0;3525:48:22::1;3583:13;:23:::0;;;3616:16:::1;::::0;;;:7:::1;:16;::::0;;;;;;:23;;;::::1;3635:4;3616:23;::::0;;3654:25;::::1;::::0;::::1;::::0;3599:7;874:25:29;;862:2;847:18;;728:177;4981:577:22;3121:10;3415:4:0;3438:29;;;:12;;:29;:12;:29;;;;;3093:56:22;;;;;;;11960:2:29;3093:56:22;;;11942:21:29;11999:2;11979:18;;;11972:30;12038:14;12018:18;;;12011:42;12070:18;;3093:56:22;11758:336:29;3093:56:22;5148:9:::1;5143:277;5167:12;:19;5163:1;:23;5143:277;;;5367:25;:42;5393:12;5406:1;5393:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;5367:42;;;::::1;::::0;;;;;;-1:-1:-1;5367:42:22;5360:49;;;::::1;::::0;;5188:3;::::1;::::0;::::1;:::i;:::-;;;;5143:277;;;;5508:43;5538:12;5508:43;;;;;;:::i;10534:505::-:0;10643:7;10732:15;10750:34;10766:10;10778:5;10750:15;:34::i;:::-;10732:52;;10851:22;10876:27;10895:7;10876:18;:27::i;:::-;10991:16;;;;:8;:16;;;;;;;;:25;;;;;;;;;:41;;;;-1:-1:-1;10991:41:22;;;;;10534:505;-1:-1:-1;;;10534:505:22:o;5684:147:0:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;12514:331:22:-:0;12614:7;12689:22;12714:27;12733:7;12714:18;:27::i;:::-;12809:15;;;;:6;:15;;;;;;;;;;12322:13;;12272:83;;;;;19346:19:29;;;;19381:12;;;19374:28;;;;19418:12;;;19411:28;;;;19455:12;;;19448:28;;;;19492:13;;;19485:29;;;;19530:13;;;;19523:29;;;;12272:83:22;;;;;;;;;;19568:13:29;;;;12272:83:22;;;-1:-1:-1;;12262:94:22;;;;;;12514:331::o;9055:214::-;9196:66;9218:7;9227:6;9235:17;9254:1;9257;9260;9196:21;:66::i;:::-;9055:214;;;;;;:::o;5564:367::-;5742:16;;;;:8;:16;;;;;;;;:25;;;;;;;;:41;;;;;;;;:51;;5787:6;;5742:16;:51;;5787:6;;5742:51;:::i;:::-;;;;-1:-1:-1;;5843:81:22;;;16098:25:29;;;16154:2;16139:18;;16132:34;;;16182:18;;;16175:34;;;5873:17:22;;5865:6;;5853:10;;5843:81;;16086:2:29;16071:18;5843:81:22;;;;;;;5564:367;;;;;:::o;4047:167::-;4162:15;;:45;;;;;4136:7;;4162:15;;;:26;;:45;;4189:5;;4196:10;;4162:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4155:52;4047:167;-1:-1:-1;;;4047:167:22:o;3760:136::-;3854:15;;:35;;;;;;;;874:25:29;;;3828:7:22;;3854:15;;;:26;;847:18:29;;3854:35:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7315:500::-;7456:22;7481:27;7500:7;7481:18;:27::i;:::-;7456:52;;7518:14;7535:88;7546:7;7555:14;7571:6;7579;:15;7586:7;7579:15;;;;;;;;;;;;7596:17;7615:1;7618;7621;7535:10;:88::i;:::-;7518:105;;7633:14;7650;7656:7;7650:5;:14::i;:::-;7633:31;;7692:6;7682:16;;:6;:16;;;7674:56;;;;;;;17497:2:29;7674:56:22;;;17479:21:29;17536:2;17516:18;;;17509:30;17575:29;17555:18;;;17548:57;17622:18;;7674:56:22;17295:351:29;7674:56:22;7740:68;7749:7;7758:14;7774:6;7782:17;7801:6;7740:8;:68::i;:::-;7446:369;;;7315:500;;;;;;:::o;3768:103:0:-;3834:30;3845:4;929:10:15;3834::0;:30::i;7917:233::-;3415:4;3438:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7995:149;;8038:12;;;;:6;:12;;;;;;;;:29;;;;;;;;;;:36;;;;8070:4;8038:36;;;8120:12;929:10:15;;850:96;8120:12:0;8093:40;;8111:7;8093:40;;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;3415:4;3438:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8498:40;929:10:15;;8442:12:0;;8498:40;;8474:5;8498:40;8321:234;;:::o;2958:98:22:-;742:26;2928:16:0;2939:4;2928:10;:16::i;2820:944:5:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;3383:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;;;;18042:2:29;3610:56:5;;;18024:21:29;18081:2;18061:18;;;18054:30;18120:34;18100:18;;;18093:62;18191:16;18171:18;;;18164:44;18225:19;;3610:56:5;17840:410:29;3379:302:5;1312:66;3496:28;;3488:82;;;;;;;18457:2:29;3488:82:5;;;18439:21:29;18496:2;18476:18;;;18469:30;18535:34;18515:18;;;18508:62;18606:11;18586:18;;;18579:39;18635:19;;3488:82:5;18255:405:29;3488:82:5;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2676:117:9:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;;::::1;::::0;;2764:22:::1;929:10:15::0;2773:12:9::1;2764:22;::::0;4452:42:29;4440:55;;;4422:74;;4410:2;4395:18;2764:22:9::1;;;;;;;2676:117::o:0;1063:97::-;5374:13:7;;;;;;;5366:69;;;;;;;18867:2:29;5366:69:7;;;18849:21:29;18906:2;18886:18;;;18879:30;18945:34;18925:18;;;18918:62;19016:13;18996:18;;;18989:41;19047:19;;5366:69:7;18665:407:29;5366:69:7;1126:27:9::1;:25;:27::i;:::-;1063:97::o:0;2151:65:0:-;5374:13:7;;;;;;;5366:69;;;;;;;18867:2:29;5366:69:7;;;18849:21:29;18906:2;18886:18;;;18879:30;18945:34;18925:18;;;18918:62;19016:13;18996:18;;;18989:41;19047:19;;5366:69:7;18665:407:29;9275:442:22;9388:14;9405;9411:7;9405:5;:14::i;:::-;9388:31;-1:-1:-1;9437:10:22;:20;;;;9429:60;;;;;;;17497:2:29;9429:60:22;;;17479:21:29;17536:2;17516:18;;;17509:30;17575:29;17555:18;;;17548:57;17622:18;;9429:60:22;17295:351:29;9429:60:22;9576:22;9601:27;9620:7;9601:18;:27::i;:::-;9576:52;;9638:72;9647:7;9656:14;9672:6;9680:17;9699:10;9638:8;:72::i;2429:115:9:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;;::::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:15::0;;850:96;6896:413:22;12322:13;;12272:83;;;;;;;19346:19:29;;;19381:12;;;19374:28;;;19418:12;;;19411:28;;;19455:12;;;19448:28;;;;19492:13;;;19485:29;;;19530:13;;;;19523:29;;;12272:83:22;;;;;;;;;;19568:13:29;;;12272:83:22;;;12262:94;;;;;;;;;-1:-1:-1;7271:31:22;;;;;;;;;;19819:25:29;;;19892:4;19880:17;;19860:18;;;19853:45;19914:18;;;19907:34;;;19957:18;;;19950:34;;;7271:31:22;;-1:-1:-1;;7271:31:22;;19791:19:29;;;;;-1:-1:-1;7271:31:22;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7271:31:22;;;;;;6896:413;-1:-1:-1;;;;;;;;;;;6896:413:22:o;4292:153::-;4383:15;;:32;;;;;;;;874:25:29;;;4347:7:22;;;;4383:15;;;;;:23;;847:18:29;;4383:32:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7821:803::-;8025:13;;8016:23;;;;:8;:23;;;;;;;;:32;;;;;;;;:48;;;;;;;;;:58;-1:-1:-1;8016:58:22;8008:91;;;;;;;20453:2:29;8008:91:22;;;20435:21:29;20492:2;20472:18;;;20465:30;20531:22;20511:18;;;20504:50;20571:18;;8008:91:22;20251:344:29;8008:91:22;8194:44;;;;:25;:44;;;;;;;;8186:84;;;;;;;20802:2:29;8186:84:22;;;20784:21:29;20841:2;20821:18;;;20814:30;20880:29;20860:18;;;20853:57;20927:18;;8186:84:22;20600:351:29;8186:84:22;8331:13;;8322:23;;;;:8;:23;;;;;;;;:32;;;;;;;;:48;;;;;;;;:58;;8374:6;;8322:23;:58;;8374:6;;8322:58;:::i;:::-;;;;-1:-1:-1;;8449:13:22;;8495:15;;;;:6;:15;;;;;;;;;;8431:112;;8483:10;21409:34:29;;21459:18;;;21452:34;21502:18;;;21495:34;;;21560:2;21545:18;;21538:34;;;21358:42;21609:15;;21603:3;21588:19;;21581:44;8464:17:22;;8449:13;8440:7;;8431:112;;21335:3:29;21320:19;8431:112:22;;;;;;;8600:15;;;;:6;:15;;;;;:17;;;;;;:::i;:::-;;;;;;7821:803;;;;;:::o;4152:501:0:-;3415:4;3438:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4278:358;;;;;;;;:::i;1699:281:5:-;1713:19:14;;;;1772:106:5;;;;;;;22880:2:29;1772:106:5;;;22862:21:29;22919:2;22899:18;;;22892:30;22958:34;22938:18;;;22931:62;23029:15;23009:18;;;23002:43;23062:19;;1772:106:5;22678:409:29;1772:106:5;1312:66;1888:85;;;;;;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;2188:106:9:-;1928:7;;;;2246:41;;;;;;;23294:2:29;2246:41:9;;;23276:21:29;23333:2;23313:18;;;23306:30;23372:22;23352:18;;;23345:50;23412:18;;2246:41:9;23092:344:29;1166:95:9;5374:13:7;;;;;;;5366:69;;;;;;;18867:2:29;5366:69:7;;;18849:21:29;18906:2;18886:18;;;18879:30;18945:34;18925:18;;;18918:62;19016:13;18996:18;;;18989:41;19047:19;;5366:69:7;18665:407:29;5366:69:7;1239:7:9::1;:15:::0;;;::::1;::::0;;1166:95::o;2010:106::-;1928:7;;;;2079:9;2071:38;;;;;;;23643:2:29;2071:38:9;;;23625:21:29;23682:2;23662:18;;;23655:30;23721:18;23701;;;23694:46;23757:18;;2071:38:9;23441:340:29;2473:149:17;2531:13;2563:52;2575:22;;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:17;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;2096:9:17;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2171:5;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;;;;;;;;;;-1:-1:-1;2207:1:17;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:17;;2228:55;;;;;;;24362:2:29;2228:55:17;;;24344:21:29;;;24381:18;;;24374:30;24440:34;24420:18;;;24413:62;24492:18;;2228:55:17;24160:356:29;2086:152:5;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;;;;;;;;;;2086:152;:::o;6685:198:14:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:14:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;1713:19;;;;8124:60;;;;;;;25015:2:29;8124:60:14;;;24997:21:29;25054:2;25034:18;;;25027:30;25093:31;25073:18;;;25066:59;25142:18;;8124:60:14;24813:353:29;8124:60:14;-1:-1:-1;8219:10:14;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;14:332:29:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:180;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;-1:-1:-1;694:23:29;;543:180;-1:-1:-1;543:180:29:o;910:454::-;1005:6;1013;1021;1029;1037;1090:3;1078:9;1069:7;1065:23;1061:33;1058:53;;;1107:1;1104;1097:12;1058:53;-1:-1:-1;;1130:23:29;;;1200:2;1185:18;;1172:32;;-1:-1:-1;1251:2:29;1236:18;;1223:32;;1302:2;1287:18;;1274:32;;-1:-1:-1;1353:3:29;1338:19;1325:33;;-1:-1:-1;910:454:29;-1:-1:-1;910:454:29:o;1369:184::-;1421:77;1418:1;1411:88;1518:4;1515:1;1508:15;1542:4;1539:1;1532:15;1558:334;1629:2;1623:9;1685:2;1675:13;;1690:66;1671:86;1659:99;;1788:18;1773:34;;1809:22;;;1770:62;1767:88;;;1835:18;;:::i;:::-;1871:2;1864:22;1558:334;;-1:-1:-1;1558:334:29:o;1897:466::-;1962:5;1996:18;1988:6;1985:30;1982:56;;;2018:18;;:::i;:::-;2056:116;2166:4;2097:66;2092:2;2084:6;2080:15;2076:88;2072:99;2056:116;:::i;:::-;2047:125;;2195:6;2188:5;2181:21;2235:3;2226:6;2221:3;2217:16;2214:25;2211:45;;;2252:1;2249;2242:12;2211:45;2301:6;2296:3;2289:4;2282:5;2278:16;2265:43;2355:1;2348:4;2339:6;2332:5;2328:18;2324:29;2317:40;1897:466;;;;;:::o;2368:222::-;2411:5;2464:3;2457:4;2449:6;2445:17;2441:27;2431:55;;2482:1;2479;2472:12;2431:55;2504:80;2580:3;2571:6;2558:20;2551:4;2543:6;2539:17;2504:80;:::i;2595:390::-;2673:6;2681;2734:2;2722:9;2713:7;2709:23;2705:32;2702:52;;;2750:1;2747;2740:12;2702:52;2786:9;2773:23;2763:33;;2847:2;2836:9;2832:18;2819:32;2874:18;2866:6;2863:30;2860:50;;;2906:1;2903;2896:12;2860:50;2929;2971:7;2962:6;2951:9;2947:22;2929:50;:::i;:::-;2919:60;;;2595:390;;;;;:::o;3357:156::-;3423:20;;3483:4;3472:16;;3462:27;;3452:55;;3503:1;3500;3493:12;3452:55;3357:156;;;:::o;3518:736::-;3639:6;3647;3655;3663;3671;3679;3687;3740:3;3728:9;3719:7;3715:23;3711:33;3708:53;;;3757:1;3754;3747:12;3708:53;3793:9;3780:23;3770:33;;3854:2;3843:9;3839:18;3826:32;3881:18;3873:6;3870:30;3867:50;;;3913:1;3910;3903:12;3867:50;3936;3978:7;3969:6;3958:9;3954:22;3936:50;:::i;:::-;3926:60;;;4033:2;4022:9;4018:18;4005:32;3995:42;;4084:2;4073:9;4069:18;4056:32;4046:42;;4107:37;4139:3;4128:9;4124:19;4107:37;:::i;:::-;4097:47;;4191:3;4180:9;4176:19;4163:33;4153:43;;4243:3;4232:9;4228:19;4215:33;4205:43;;3518:736;;;;;;;;;;:::o;4507:154::-;4593:42;4586:5;4582:54;4575:5;4572:65;4562:93;;4651:1;4648;4641:12;4666:315;4734:6;4742;4795:2;4783:9;4774:7;4770:23;4766:32;4763:52;;;4811:1;4808;4801:12;4763:52;4847:9;4834:23;4824:33;;4907:2;4896:9;4892:18;4879:32;4920:31;4945:5;4920:31;:::i;:::-;4970:5;4960:15;;;4666:315;;;;;:::o;4986:247::-;5045:6;5098:2;5086:9;5077:7;5073:23;5069:32;5066:52;;;5114:1;5111;5104:12;5066:52;5153:9;5140:23;5172:31;5197:5;5172:31;:::i;5238:665::-;5352:6;5360;5368;5376;5384;5392;5445:3;5433:9;5424:7;5420:23;5416:33;5413:53;;;5462:1;5459;5452:12;5413:53;5498:9;5485:23;5475:33;;5555:2;5544:9;5540:18;5527:32;5517:42;;5610:2;5599:9;5595:18;5582:32;5637:18;5629:6;5626:30;5623:50;;;5669:1;5666;5659:12;5623:50;5692;5734:7;5725:6;5714:9;5710:22;5692:50;:::i;:::-;5682:60;;;5789:2;5778:9;5774:18;5761:32;5751:42;;5840:3;5829:9;5825:19;5812:33;5802:43;;5892:3;5881:9;5877:19;5864:33;5854:43;;5238:665;;;;;;;;:::o;5908:946::-;5992:6;6023:2;6066;6054:9;6045:7;6041:23;6037:32;6034:52;;;6082:1;6079;6072:12;6034:52;6122:9;6109:23;6151:18;6192:2;6184:6;6181:14;6178:34;;;6208:1;6205;6198:12;6178:34;6246:6;6235:9;6231:22;6221:32;;6291:7;6284:4;6280:2;6276:13;6272:27;6262:55;;6313:1;6310;6303:12;6262:55;6349:2;6336:16;6371:2;6367;6364:10;6361:36;;;6377:18;;:::i;:::-;6423:2;6420:1;6416:10;6406:20;;6446:28;6470:2;6466;6462:11;6446:28;:::i;:::-;6508:15;;;6578:11;;;6574:20;;;6539:12;;;;6606:19;;;6603:39;;;6638:1;6635;6628:12;6603:39;6662:11;;;;6682:142;6698:6;6693:3;6690:15;6682:142;;;6764:17;;6752:30;;6715:12;;;;6802;;;;6682:142;;;6843:5;5908:946;-1:-1:-1;;;;;;;;5908:946:29:o;6859:388::-;6927:6;6935;6988:2;6976:9;6967:7;6963:23;6959:32;6956:52;;;7004:1;7001;6994:12;6956:52;7043:9;7030:23;7062:31;7087:5;7062:31;:::i;:::-;7112:5;-1:-1:-1;7169:2:29;7154:18;;7141:32;7182:33;7141:32;7182:33;:::i;7252:585::-;7329:6;7337;7390:2;7378:9;7369:7;7365:23;7361:32;7358:52;;;7406:1;7403;7396:12;7358:52;7445:9;7432:23;7464:31;7489:5;7464:31;:::i;:::-;7514:5;-1:-1:-1;7570:2:29;7555:18;;7542:32;7597:18;7586:30;;7583:50;;;7629:1;7626;7619:12;7583:50;7652:22;;7705:4;7697:13;;7693:27;-1:-1:-1;7683:55:29;;7734:1;7731;7724:12;7683:55;7757:74;7823:7;7818:2;7805:16;7800:2;7796;7792:11;7757:74;:::i;7842:527::-;7938:6;7946;7954;7962;8015:3;8003:9;7994:7;7990:23;7986:33;7983:53;;;8032:1;8029;8022:12;7983:53;8068:9;8055:23;8045:33;;8129:2;8118:9;8114:18;8101:32;8156:18;8148:6;8145:30;8142:50;;;8188:1;8185;8178:12;8142:50;8211;8253:7;8244:6;8233:9;8229:22;8211:50;:::i;:::-;7842:527;;8201:60;;-1:-1:-1;;;;8308:2:29;8293:18;;8280:32;;8359:2;8344:18;8331:32;;7842:527;-1:-1:-1;7842:527:29:o;8374:248::-;8442:6;8450;8503:2;8491:9;8482:7;8478:23;8474:32;8471:52;;;8519:1;8516;8509:12;8471:52;-1:-1:-1;;8542:23:29;;;8612:2;8597:18;;;8584:32;;-1:-1:-1;8374:248:29:o;8627:316::-;8704:6;8712;8720;8773:2;8761:9;8752:7;8748:23;8744:32;8741:52;;;8789:1;8786;8779:12;8741:52;-1:-1:-1;;8812:23:29;;;8882:2;8867:18;;8854:32;;-1:-1:-1;8933:2:29;8918:18;;;8905:32;;8627:316;-1:-1:-1;8627:316:29:o;8948:458::-;9035:6;9043;9051;9104:2;9092:9;9083:7;9079:23;9075:32;9072:52;;;9120:1;9117;9110:12;9072:52;9156:9;9143:23;9133:33;;9213:2;9202:9;9198:18;9185:32;9175:42;;9268:2;9257:9;9253:18;9240:32;9295:18;9287:6;9284:30;9281:50;;;9327:1;9324;9317:12;9281:50;9350;9392:7;9383:6;9372:9;9368:22;9350:50;:::i;:::-;9340:60;;;8948:458;;;;;:::o;9642:525::-;9744:6;9752;9760;9768;9776;9784;9837:3;9825:9;9816:7;9812:23;9808:33;9805:53;;;9854:1;9851;9844:12;9805:53;9890:9;9877:23;9867:33;;9947:2;9936:9;9932:18;9919:32;9909:42;;9998:2;9987:9;9983:18;9970:32;9960:42;;10021:36;10053:2;10042:9;10038:18;10021:36;:::i;:::-;10011:46;;10104:3;10093:9;10089:19;10076:33;10066:43;;10156:3;10145:9;10141:19;10128:33;10118:43;;9642:525;;;;;;;;:::o;12099:184::-;12151:77;12148:1;12141:88;12248:4;12245:1;12238:15;12272:4;12269:1;12262:15;12643:184;12695:77;12692:1;12685:88;12792:4;12789:1;12782:15;12816:4;12813:1;12806:15;12832:195;12871:3;12902:66;12895:5;12892:77;12889:103;;12972:18;;:::i;:::-;-1:-1:-1;13019:1:29;13008:13;;12832:195::o;13032:632::-;13203:2;13255:21;;;13325:13;;13228:18;;;13347:22;;;13174:4;;13203:2;13426:15;;;;13400:2;13385:18;;;13174:4;13469:169;13483:6;13480:1;13477:13;13469:169;;;13544:13;;13532:26;;13613:15;;;;13578:12;;;;13505:1;13498:9;13469:169;;;-1:-1:-1;13655:3:29;;13032:632;-1:-1:-1;;;;;;13032:632:29:o;15766:125::-;15831:9;;;15852:10;;;15849:36;;;15865:18;;:::i;16220:250::-;16305:1;16315:113;16329:6;16326:1;16323:13;16315:113;;;16405:11;;;16399:18;16386:11;;;16379:39;16351:2;16344:10;16315:113;;;-1:-1:-1;;16462:1:29;16444:16;;16437:27;16220:250::o;16475:330::-;16517:3;16555:5;16549:12;16582:6;16577:3;16570:19;16598:76;16667:6;16660:4;16655:3;16651:14;16644:4;16637:5;16633:16;16598:76;:::i;:::-;16719:2;16707:15;16724:66;16703:88;16694:98;;;;16794:4;16690:109;;16475:330;-1:-1:-1;;16475:330:29:o;16810:291::-;16987:2;16976:9;16969:21;16950:4;17007:45;17048:2;17037:9;17033:18;17025:6;17007:45;:::i;:::-;16999:53;;17088:6;17083:2;17072:9;17068:18;17061:34;16810:291;;;;;:::o;17106:184::-;17176:6;17229:2;17217:9;17208:7;17204:23;17200:32;17197:52;;;17245:1;17242;17235:12;17197:52;-1:-1:-1;17268:16:29;;17106:184;-1:-1:-1;17106:184:29:o;19995:251::-;20065:6;20118:2;20106:9;20097:7;20093:23;20089:32;20086:52;;;20134:1;20131;20124:12;20086:52;20166:9;20160:16;20185:31;20210:5;20185:31;:::i;20956:128::-;21023:9;;;21044:11;;;21041:37;;;21058:18;;:::i;21636:812::-;22047:25;22042:3;22035:38;22017:3;22102:6;22096:13;22118:75;22186:6;22181:2;22176:3;22172:12;22165:4;22157:6;22153:17;22118:75;:::i;:::-;22257:19;22252:2;22212:16;;;22244:11;;;22237:40;22302:13;;22324:76;22302:13;22386:2;22378:11;;22371:4;22359:17;;22324:76;:::i;:::-;22420:17;22439:2;22416:26;;21636:812;-1:-1:-1;;;;21636:812:29:o;22453:220::-;22602:2;22591:9;22584:21;22565:4;22622:45;22663:2;22652:9;22648:18;22640:6;22622:45;:::i;23786:168::-;23859:9;;;23890;;23907:15;;;23901:22;;23887:37;23877:71;;23928:18;;:::i;23959:196::-;23998:3;24026:5;24016:39;;24035:18;;:::i;:::-;-1:-1:-1;24082:66:29;24071:78;;23959:196::o;24521:287::-;24650:3;24688:6;24682:13;24704:66;24763:6;24758:3;24751:4;24743:6;24739:17;24704:66;:::i;:::-;24786:16;;;;;24521:287;-1:-1:-1;;24521:287:29:o"},"gasEstimates":{"creation":{"codeDepositCost":"2893400","executionCost":"infinite","totalCost":"infinite"},"external":{"ADMIN_ROLE()":"263","DEFAULT_ADMIN_ROLE()":"306","DEPOSITOR_ROLE()":"263","PAUSER_ROLE()":"284","UPGRADER_ROLE()":"261","adminAddress()":"2401","balanceOfWithParentNodeName(bytes32,string)":"infinite","balanceOfWithRealmId(uint256)":"infinite","balanceOfWithSeason(bytes32,bytes32,string)":"infinite","balanceOfWithSeasonRealmId(bytes32,uint256)":"infinite","batchAddConsumeReasonCodes(bytes32[])":"infinite","batchRemoveConsumeReasonCodes(bytes32[])":"infinite","consumeWithParentnode(bytes32,string,uint256,bytes32)":"infinite","consumeWithParentnodeVRS(bytes32,string,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","consumeWithRealmId(uint256,uint256,bytes32)":"infinite","consumeWithRealmIdVRS(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","currentSeason()":"2362","deposit(bytes32,uint256,uint256,uint256,bytes32)":"32093","depositWithParentnode(bytes32,bytes32,string,uint256,uint256,bytes32)":"infinite","getRoleAdmin(bytes32)":"2513","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"2706","initialize(address,address)":"infinite","isReasonCodeAllowed(bytes32)":"2528","nonces(uint256)":"2507","pause()":"infinite","paused()":"2339","preparePayload(uint256,uint256,bytes32)":"infinite","proxiableUUID()":"infinite","realmIdContract()":"2381","renounceRole(bytes32,address)":"29022","revokeRole(bytes32,address)":"infinite","seasons(bytes32)":"2551","setCurrentSeason(bytes32)":"52170","supportsInterface(bytes4)":"416","unpause()":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_consume(uint256,uint256,uint256,bytes32,address)":"infinite","_consumeWithSignature(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","_consumeWithoutSignature(uint256,uint256,bytes32)":"infinite","_deposit(bytes32,uint256,uint256,uint256,bytes32)":"infinite","_getRealmIdVersion(uint256)":"infinite","_getSigner(uint256,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","_preparePayload(uint256,uint256,uint256,uint256,bytes32)":"infinite","_prepareRealmId(bytes32,string memory)":"infinite","owner(uint256)":"infinite"}},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DEPOSITOR_ROLE()":"a3b0b5a3","PAUSER_ROLE()":"e63ab1e9","UPGRADER_ROLE()":"f72c0d8b","adminAddress()":"fc6f9468","balanceOfWithParentNodeName(bytes32,string)":"2162671f","balanceOfWithRealmId(uint256)":"4fc7ec0d","balanceOfWithSeason(bytes32,bytes32,string)":"b2c0638f","balanceOfWithSeasonRealmId(bytes32,uint256)":"7cfd2458","batchAddConsumeReasonCodes(bytes32[])":"3f30b00f","batchRemoveConsumeReasonCodes(bytes32[])":"906405a3","consumeWithParentnode(bytes32,string,uint256,bytes32)":"56209ab9","consumeWithParentnodeVRS(bytes32,string,uint256,bytes32,uint8,bytes32,bytes32)":"275e79ff","consumeWithRealmId(uint256,uint256,bytes32)":"7f6232e7","consumeWithRealmIdVRS(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"ffd39e84","currentSeason()":"bcb39621","deposit(bytes32,uint256,uint256,uint256,bytes32)":"18ee89f0","depositWithParentnode(bytes32,bytes32,string,uint256,uint256,bytes32)":"3b17f056","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address)":"485cc955","isReasonCodeAllowed(bytes32)":"c0542cfa","nonces(uint256)":"141a468c","pause()":"8456cb59","paused()":"5c975abb","preparePayload(uint256,uint256,bytes32)":"df00bb24","proxiableUUID()":"52d1902d","realmIdContract()":"2b48dc72","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","seasons(bytes32)":"4529cc1b","setCurrentSeason(bytes32)":"86a8e98a","supportsInterface(bytes4)":"01ffc9a7","unpause()":"3f4ba83a","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"BatchAddedConsumeReasonCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"BatchRemovedConsumeReasonCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"realmIdOwner\",\"type\":\"address\"}],\"name\":\"Consumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"}],\"name\":\"SetCurrentSeason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"balanceOfWithParentNodeName\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"balanceOfWithRealmId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"balanceOfWithSeason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"balanceOfWithSeasonRealmId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"batchAddConsumeReasonCodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"batchRemoveConsumeReasonCodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"}],\"name\":\"consumeWithParentnode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"consumeWithParentnodeVRS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"}],\"name\":\"consumeWithRealmId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"consumeWithRealmIdVRS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSeason\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"depositReasonCode\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"depositReasonCode\",\"type\":\"bytes32\"}],\"name\":\"depositWithParentnode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_realmIdContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"}],\"name\":\"isReasonCodeAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"}],\"name\":\"preparePayload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realmIdContract\",\"outputs\":[{\"internalType\":\"contract IRealmId\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"seasons\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_season\",\"type\":\"bytes32\"}],\"name\":\"setCurrentSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/MocaPoints.sol\":\"MocaPoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControl_init_unchained() internal onlyInitializing {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\nimport \\\"./math/SignedMathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMathUpgradeable.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"},\"contracts/MocaPoints/MocaPoints.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {IRealmId} from \\\"./interface/IRealmId.sol\\\";\\nimport {PausableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport {AccessControlUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\\\";\\nimport {Initializable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport {UUPSUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract MocaPoints is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\\n    bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n    bytes32 public constant UPGRADER_ROLE = keccak256(\\\"UPGRADER_ROLE\\\");\\n    // Roles\\n    bytes32 public constant ADMIN_ROLE = keccak256(\\\"ADMIN_ROLE\\\");\\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\\\"DEPOSITOR_ROLE\\\");\\n\\n    // Seasonal variables\\n    bytes32 public currentSeason;\\n    mapping(bytes32 => bool) public seasons;\\n\\n    // Address of the RealmId contract\\n    IRealmId public realmIdContract;\\n\\n    // Admin Address\\n    address public adminAddress;\\n\\n    // Balances mapping\\n    mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256))) private balances; // season => realmId => realmIdVersion => balance\\n\\n    // Nonce mapping\\n    mapping(uint256 => uint256) public nonces; // realmId => nonce\\n\\n    // Allowed consume reason codes mapping\\n    mapping(bytes32 => bool) private allowedConsumeReasonCodes;\\n\\n    event SetCurrentSeason(bytes32 season);\\n    event BatchAddedConsumeReasonCode(bytes32[] reasonCodes);\\n    event BatchRemovedConsumeReasonCode(bytes32[] reasonCodes);\\n    event Deposited(\\n        address indexed sender,\\n        bytes32 indexed season,\\n        bytes32 indexed reasonCode,\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount\\n    );\\n\\n    event Consumed(\\n        uint256 indexed realmId,\\n        bytes32 indexed season,\\n        bytes32 indexed reasonCode,\\n        address operator,\\n        uint256 nonce,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        address realmIdOwner\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _realmIdContract, address _adminAddress) public initializer {\\n        __Pausable_init();\\n        __AccessControl_init();\\n        __UUPSUpgradeable_init();\\n\\n        require(address(_realmIdContract) != address(0), \\\"Not a valid Contract Address\\\");\\n        require(address(_adminAddress) != address(0), \\\"Not a valid Admin Address\\\");\\n\\n        _grantRole(DEFAULT_ADMIN_ROLE, _adminAddress);\\n        _grantRole(PAUSER_ROLE, _adminAddress);\\n        _grantRole(UPGRADER_ROLE, _adminAddress);\\n        _grantRole(ADMIN_ROLE, _adminAddress);\\n        _grantRole(DEPOSITOR_ROLE, _adminAddress);\\n        realmIdContract = IRealmId(_realmIdContract);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\\n\\n    modifier onlyAdmin() {\\n        require(hasRole(ADMIN_ROLE, msg.sender), \\\"Not an admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyDepositor() {\\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \\\"Not a depositor\\\");\\n        _;\\n    }\\n\\n    function pause() public onlyRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyRole(PAUSER_ROLE) {\\n        _unpause();\\n    }\\n\\n    function setCurrentSeason(bytes32 _season) external onlyAdmin {\\n        require(!seasons[_season], \\\"Season already set\\\");\\n        currentSeason = _season;\\n        seasons[_season] = true;\\n        emit SetCurrentSeason(_season);\\n    }\\n\\n    // Function to get the realmIdVersion from the RealmId contract\\n    function _getRealmIdVersion(uint256 realmId) internal view returns (uint256) {\\n        return realmIdContract.burnCounts(realmId);\\n    }\\n\\n    function isReasonCodeAllowed(bytes32 reasonCode) external view returns (bool) {\\n        return allowedConsumeReasonCodes[reasonCode];\\n    }\\n\\n    function _prepareRealmId(bytes32 parentNode, string memory _name) internal view returns (uint256) {\\n        return realmIdContract.getTokenId(_name, parentNode);\\n    }\\n\\n    // Function to get the owner of a realmId from the RealmId contract\\n    function owner(uint256 realmId) internal view returns (address) {\\n        address _owner = realmIdContract.ownerOf(realmId);\\n        return _owner;\\n    }\\n\\n    function batchAddConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\\n        // Check if each reason code is unique and does not already exist\\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\\n            require(!allowedConsumeReasonCodes[_reasonCodes[i]], \\\"Reason code already exists\\\");\\n            allowedConsumeReasonCodes[_reasonCodes[i]] = true;\\n        }\\n\\n        // Emit the event to indicate that all reason codes were added\\n        emit BatchAddedConsumeReasonCode(_reasonCodes);\\n    }\\n\\n    function batchRemoveConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\\n        // Check if each reason code exists and can be removed\\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\\n            // require(\\n            //     allowedConsumeReasonCodes[_reasonCodes[i]],\\n            //     \\\"Reason code does not exist\\\"\\n            // );\\n            delete allowedConsumeReasonCodes[_reasonCodes[i]];\\n        }\\n\\n        // Emit the event to indicate that all reason codes were removed\\n        emit BatchRemovedConsumeReasonCode(_reasonCodes);\\n    }\\n\\n    function _deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) internal {\\n        // Perform the deposit operation\\n        balances[season][realmId][realmIdVersion] += amount;\\n\\n        // Emit the Deposit event\\n        emit Deposited(msg.sender, season, depositReasonCode, realmId, realmIdVersion, amount);\\n    }\\n\\n    function deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) external onlyDepositor {\\n        // Check if the sender has the Depositor role\\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \\\"Not a depositor\\\");\\n\\n        // Call the internal _deposit function to perform the deposit operation\\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\\n    }\\n\\n    function depositWithParentnode(\\n        bytes32 season,\\n        bytes32 parentNode,\\n        string memory name,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        bytes32 depositReasonCode\\n    ) external onlyDepositor {\\n        // Create the realmId using parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, name);\\n\\n        // Call the internal _deposit function to perform the deposit operation\\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\\n    }\\n\\n    function _getSigner(\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        uint256 nonce,\\n        bytes32 consumeReasonCode,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view returns (address) {\\n        bytes32 messageHash = _preparePayload(realmId, realmIdVersion, amount, nonce, consumeReasonCode);\\n        return ecrecover(messageHash, v, r, s);\\n    }\\n\\n    function _consumeWithSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) internal {\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n        address signer = _getSigner(realmId, realmIdVersion, amount, nonces[realmId], consumeReasonCode, v, r, s);\\n        address owner_ = owner(realmId);\\n        require(signer == owner_, \\\"Signer not owner of realmId\\\");\\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, owner_);\\n    }\\n\\n    function _consume(uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 consumeReasonCode, address owner_) internal {\\n        // Check if the sender has enough balance\\n        require(balances[currentSeason][realmId][realmIdVersion] >= amount, \\\"Insufficient balance\\\");\\n\\n        // Check if the consumeReasonCode exists and is true in the mapping\\n        require(allowedConsumeReasonCodes[consumeReasonCode], \\\"Invalid consume reason code\\\");\\n\\n        // Perform the consume operation\\n        balances[currentSeason][realmId][realmIdVersion] -= amount;\\n\\n        // Emit the Consumed event\\n        emit Consumed(realmId, currentSeason, consumeReasonCode, msg.sender, nonces[realmId], realmIdVersion, amount, owner_);\\n        // Increment the nonce for the realmId\\n        nonces[realmId]++;\\n    }\\n\\n    function consumeWithParentnodeVRS(\\n        bytes32 parentNode,\\n        string memory _name,\\n        uint256 amount,\\n        bytes32 consumeReasonCode,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        // get the realmId using parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\\n    }\\n\\n    function consumeWithRealmIdVRS(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) external {\\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\\n    }\\n\\n    function _consumeWithoutSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) internal {\\n        address owner_ = owner(realmId);\\n        require(msg.sender == owner_, \\\"Signer not owner of realmId\\\");\\n\\n        // Call the common _consume function for the core consume operation\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, msg.sender);\\n    }\\n\\n    function consumeWithParentnode(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode) external {\\n        // Compute the realmId using the provided parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\\n    }\\n\\n    function consumeWithRealmId(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) external {\\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\\n    }\\n\\n    function balanceOfWithSeasonRealmId(bytes32 season, uint256 realmId) external view returns (uint256) {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        return balances[season][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOfWithSeason(bytes32 season, bytes32 parentNode, string memory _name) external view returns (uint256) {\\n        // Compute the realmId using the provided parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        // Retrieve and return the balance for the calculated realmId\\n        return balances[season][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOfWithRealmId(uint256 realmId) external view returns (uint256) {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        // Retrieve and return the balance for the given realmId at the current season\\n        return balances[currentSeason][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOfWithParentNodeName(bytes32 parentNode, string memory _name) external view returns (uint256) {\\n        // Compute the realmId using the provided parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        // Retrieve and return the balance for the given realmId at the current season\\n        return balances[currentSeason][realmId][realmIdVersion];\\n    }\\n\\n    // Return the payload which is generated using the arguments, current season and the realmIdversion\\n    function _preparePayload(\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        uint256 nonce,\\n        bytes32 reasonCode\\n    ) internal view returns (bytes32) {\\n        bytes32 payload = keccak256(abi.encodePacked(realmId, realmIdVersion, amount, currentSeason, reasonCode, nonce));\\n        return payload;\\n    }\\n\\n    // Return the payload which is generated using the arguments, current nonce, current season, and the realmId version\\n    function preparePayload(uint256 realmId, uint256 amount, bytes32 reasonCode) external view returns (bytes32) {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        return (_preparePayload(realmId, realmIdVersion, amount, nonces[realmId], reasonCode));\\n    }\\n}\\n\",\"keccak256\":\"0x8c977cef82e64edd1b241d68ece2e21a554746e86d195431583c5857df692f5d\",\"license\":\"MIT\"},\"contracts/MocaPoints/interface/IRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\n// import {RealmId} from \\\"../realmIdContract/RealmId.sol\\\";\\n\\ninterface IRealmId {\\n    function allowedParentNodes(bytes32 parentNode) external view returns (bool);\\n\\n    function burnCounts(uint256 realmId) external view returns (uint256);\\n\\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\\n\\n    function ownerOf(uint256 realmId) external view returns (address);\\n\\n    function register(string calldata _name, bytes32 parentNode, address to, bytes calldata preData) external returns (uint256);\\n\\n    function allowNode(\\n        string calldata label,\\n        bytes32 parentNode,\\n        bool allow,\\n        string calldata baseTokenURI,\\n        address middleware,\\n        bytes calldata middlewareData\\n    ) external returns (bytes32 allowedNode);\\n\\n    function available(string calldata _name, bytes32 parentNode) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xead0cc33b774c2f6a32a77cdb0711c78f5a3a702a847de543ebf865baae34bce\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1231,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":1336,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":3204,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":39,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_roles","offset":0,"slot":"151","type":"t_mapping(t_bytes32,t_struct(RoleData)34_storage)"},{"astId":334,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":894,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"201","type":"t_array(t_uint256)50_storage"},{"astId":1209,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":4230,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"currentSeason","offset":0,"slot":"301","type":"t_bytes32"},{"astId":4234,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"seasons","offset":0,"slot":"302","type":"t_mapping(t_bytes32,t_bool)"},{"astId":4237,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"realmIdContract","offset":0,"slot":"303","type":"t_contract(IRealmId)5277"},{"astId":4239,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"adminAddress","offset":0,"slot":"304","type":"t_address"},{"astId":4247,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"balances","offset":0,"slot":"305","type":"t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))"},{"astId":4251,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"nonces","offset":0,"slot":"306","type":"t_mapping(t_uint256,t_uint256)"},{"astId":4255,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"allowedConsumeReasonCodes","offset":0,"slot":"307","type":"t_mapping(t_bytes32,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IRealmId)5277":{"encoding":"inplace","label":"contract IRealmId","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_bytes32,t_struct(RoleData)34_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)34_storage"},"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(RoleData)34_storage":{"encoding":"inplace","label":"struct AccessControlUpgradeable.RoleData","members":[{"astId":31,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":33,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/interface/IMiddleware.sol":{"IMiddleware":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"namePatternValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"address","name":"to","type":"address"}],"internalType":"struct DataTypes.RegisterNameParams","name":"params","type":"tuple"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"preProcess","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"setMwData","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"namePatternValid(string)":{"params":{"name":"The name to validate."}},"preProcess((address,string,bytes32,address),bytes)":{"params":{"data":"Extra data to process.","params":"The params for creating name."}},"setMwData(bytes)":{"params":{"data":"Extra data to set."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"namePatternValid(string)":"7ac3e6ea","preProcess((address,string,bytes32,address),bytes)":"cab80ede","setMwData(bytes)":"42a0d9b4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"namePatternValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.RegisterNameParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"preProcess\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setMwData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"namePatternValid(string)\":{\"params\":{\"name\":\"The name to validate.\"}},\"preProcess((address,string,bytes32,address),bytes)\":{\"params\":{\"data\":\"Extra data to process.\",\"params\":\"The params for creating name.\"}},\"setMwData(bytes)\":{\"params\":{\"data\":\"Extra data to set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"namePatternValid(string)\":{\"notice\":\"Validates the name pattern.\"},\"preProcess((address,string,bytes32,address),bytes)\":{\"notice\":\"Process that runs before the name creation happens.\"},\"setMwData(bytes)\":{\"notice\":\"Sets data for middleware.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/interface/IMiddleware.sol\":\"IMiddleware\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/interface/IMiddleware.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../realmIdContract/DataTypes.sol\\\";\\n\\ninterface IMiddleware {\\n    /**\\n     * @notice Sets data for middleware.\\n     *\\n     * @param data Extra data to set.\\n     */\\n    function setMwData(bytes calldata data) external;\\n\\n    /**\\n     * @notice Process that runs before the name creation happens.\\n     *\\n     * @param params The params for creating name.\\n     * @param data Extra data to process.\\n     */\\n    function preProcess(DataTypes.RegisterNameParams calldata params, bytes calldata data) external payable;\\n\\n    /**\\n     * @notice Validates the name pattern.\\n     *\\n     * @param name The name to validate.\\n     */\\n    function namePatternValid(string calldata name) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6a394cbf28fc4f380c64e69fce8a41633d0e160d2006f35112c55bcad7bca62b\",\"license\":\"GPL-3.0-or-later\"},\"contracts/MocaPoints/realmIdContract/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    struct EIP712Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 deadline;\\n    }\\n\\n    struct MetadataPair {\\n        string key;\\n        string value;\\n    }\\n\\n    struct RegisterNameParams {\\n        address msgSender;\\n        string name;\\n        bytes32 parentNode;\\n        address to;\\n    }\\n\\n    struct RegisterCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 durationYear;\\n    }\\n\\n    struct RenewCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        uint256 durationYear;\\n    }\\n\\n    struct BidCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 auctionStartTimestamp;\\n    }\\n}\\n\",\"keccak256\":\"0x4fdc1a70f1a279e7221180af577db51e638cc7e2d9ecd4a0300914dd61001606\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"namePatternValid(string)":{"notice":"Validates the name pattern."},"preProcess((address,string,bytes32,address),bytes)":{"notice":"Process that runs before the name creation happens."},"setMwData(bytes)":{"notice":"Sets data for middleware."}},"version":1}}},"contracts/MocaPoints/interface/IRealmId.sol":{"IRealmId":{"abi":[{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"bool","name":"allow","type":"bool"},{"internalType":"string","name":"baseTokenURI","type":"string"},{"internalType":"address","name":"middleware","type":"address"},{"internalType":"bytes","name":"middlewareData","type":"bytes"}],"name":"allowNode","outputs":[{"internalType":"bytes32","name":"allowedNode","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"allowedParentNodes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"available","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"burnCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"preData","type":"bytes"}],"name":"register","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowNode(string,bytes32,bool,string,address,bytes)":"d619cee5","allowedParentNodes(bytes32)":"16404d01","available(string,bytes32)":"2595eacb","burnCounts(uint256)":"a9735f94","getTokenId(string,bytes32)":"cad6b901","ownerOf(uint256)":"6352211e","register(string,bytes32,address,bytes)":"7c7efe6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"middleware\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"middlewareData\",\"type\":\"bytes\"}],\"name\":\"allowNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"allowedNode\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"allowedParentNodes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"burnCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preData\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/interface/IRealmId.sol\":\"IRealmId\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/interface/IRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\n// import {RealmId} from \\\"../realmIdContract/RealmId.sol\\\";\\n\\ninterface IRealmId {\\n    function allowedParentNodes(bytes32 parentNode) external view returns (bool);\\n\\n    function burnCounts(uint256 realmId) external view returns (uint256);\\n\\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\\n\\n    function ownerOf(uint256 realmId) external view returns (address);\\n\\n    function register(string calldata _name, bytes32 parentNode, address to, bytes calldata preData) external returns (uint256);\\n\\n    function allowNode(\\n        string calldata label,\\n        bytes32 parentNode,\\n        bool allow,\\n        string calldata baseTokenURI,\\n        address middleware,\\n        bytes calldata middlewareData\\n    ) external returns (bytes32 allowedNode);\\n\\n    function available(string calldata _name, bytes32 parentNode) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xead0cc33b774c2f6a32a77cdb0711c78f5a3a702a847de543ebf865baae34bce\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/realmIdContract/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919213f70906c68094ee5b2c5c91b08631bcfcab3e9d438fc9d269efbde724ac64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP3 SGT 0xF7 MULMOD MOD 0xC6 DUP1 SWAP5 0xEE JUMPDEST 0x2C 0x5C SWAP2 0xB0 DUP7 BALANCE 0xBC 0xFC 0xAB RETURNDATACOPY SWAP14 NUMBER DUP16 0xC9 0xD2 PUSH10 0xEFBDE724AC64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"72:745:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:745:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220919213f70906c68094ee5b2c5c91b08631bcfcab3e9d438fc9d269efbde724ac64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 SWAP3 SGT 0xF7 MULMOD MOD 0xC6 DUP1 SWAP5 0xEE JUMPDEST 0x2C 0x5C SWAP2 0xB0 DUP7 BALANCE 0xBC 0xFC 0xAB RETURNDATACOPY SWAP14 NUMBER DUP16 0xC9 0xD2 PUSH10 0xEFBDE724AC64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"72:745:25:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/realmIdContract/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/realmIdContract/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    struct EIP712Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 deadline;\\n    }\\n\\n    struct MetadataPair {\\n        string key;\\n        string value;\\n    }\\n\\n    struct RegisterNameParams {\\n        address msgSender;\\n        string name;\\n        bytes32 parentNode;\\n        address to;\\n    }\\n\\n    struct RegisterCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 durationYear;\\n    }\\n\\n    struct RenewCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        uint256 durationYear;\\n    }\\n\\n    struct BidCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 auctionStartTimestamp;\\n    }\\n}\\n\",\"keccak256\":\"0x4fdc1a70f1a279e7221180af577db51e638cc7e2d9ecd4a0300914dd61001606\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/realmIdContract/LibString.sol":{"LibString":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087806f3a1e1c7be16ca955d8c094fdca4e1338b1e5520f47c10babcab6c9c58a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 DUP1 PUSH16 0x3A1E1C7BE16CA955D8C094FDCA4E1338 0xB1 0xE5 MSTORE 0xF SELFBALANCE 0xC1 SIGNEXTEND 0xAB 0xCA 0xB6 0xC9 0xC5 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"103:9651:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;103:9651:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087806f3a1e1c7be16ca955d8c094fdca4e1338b1e5520f47c10babcab6c9c58a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 DUP1 PUSH16 0x3A1E1C7BE16CA955D8C094FDCA4E1338 0xB1 0xE5 MSTORE 0xF SELFBALANCE 0xC1 SIGNEXTEND 0xAB 0xCA 0xB6 0xC9 0xC5 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"103:9651:26:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"stringToUint256(string memory)":"infinite","strlen(string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toLower(string memory)":"infinite","toString(uint256)":"infinite","toUpper(string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/realmIdContract/LibString.sol\":\"LibString\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/realmIdContract/LibString.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\n// adapted from 721A contracts\\nlibrary LibString {\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory ptr) {\\n        assembly {\\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\\n            // We will need 1 32-byte word to store the length,\\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\\n            ptr := add(mload(0x40), 128)\\n            // Update the free memory pointer to allocate.\\n            mstore(0x40, ptr)\\n            // Cache the end of the memory to calculate the length later.\\n            let end := ptr\\n            // We write the string from the rightmost digit to the leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            // Costs a bit more than early returning for the zero case,\\n            // but cheaper in terms of deployment and overall runtime costs.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                let temp := value\\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\\n                ptr := sub(ptr, 1)\\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\\n                mstore8(ptr, add(48, mod(temp, 10)))\\n                temp := div(temp, 10)\\n            } temp {\\n                // Keep dividing `temp` until zero.\\n                temp := div(temp, 10)\\n            } {\\n                // Body of the for loop.\\n                ptr := sub(ptr, 1)\\n                mstore8(ptr, add(48, mod(temp, 10)))\\n            }\\n            let length := sub(end, ptr)\\n            // Move the pointer 32 bytes leftwards to make room for the length.\\n            ptr := sub(ptr, 32)\\n            // Store the length.\\n            mstore(ptr, length)\\n        }\\n    }\\n\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory str) {\\n        assembly {\\n            let start := mload(0x40)\\n            // We need length * 2 bytes for the digits, 2 bytes for the prefix,\\n            // and 32 bytes for the length. We add 32 to the total and round down\\n            // to a multiple of 32. (32 + 2 + 32) = 66.\\n            str := add(start, and(add(shl(1, length), 66), not(31)))\\n\\n            // Cache the end to calculate the length later.\\n            let end := str\\n\\n            // Allocate the memory.\\n            mstore(0x40, str)\\n\\n            let temp := value\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n                length := sub(length, 1)\\n            } length {\\n                length := sub(length, 1)\\n            } {\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            }\\n\\n            if temp {\\n                mstore(0x00, \\\"\\\\x08\\\\xc3\\\\x79\\\\xa0\\\") // Function selector of the error method.\\n                mstore(0x04, 0x20) // Offset of the error string.\\n                mstore(0x24, 23) // Length of the error string.\\n                mstore(0x44, \\\"HEX_LENGTH_INSUFFICIENT\\\") // The error string.\\n                revert(0x00, 0x64) // Revert with (offset, size).\\n            }\\n\\n            // Compute the string's length.\\n            let strLength := add(sub(end, str), 2)\\n            // Move the pointer and write the \\\"0x\\\" prefix.\\n            str := sub(str, 32)\\n            mstore(str, 0x3078)\\n            // Move the pointer and write the length.\\n            str := sub(str, 2)\\n            mstore(str, strLength)\\n        }\\n    }\\n\\n    function toHexString(uint256 value) internal pure returns (string memory str) {\\n        assembly {\\n            let start := mload(0x40)\\n            // We need 32 bytes for the length, 2 bytes for the prefix,\\n            // and 64 bytes for the digits.\\n            // The next multiple of 32 above (32 + 2 + 64) is 128.\\n            str := add(start, 128)\\n\\n            // Cache the end to calculate the length later.\\n            let end := str\\n\\n            // Allocate the memory.\\n            mstore(0x40, str)\\n\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                let temp := value\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            } temp {\\n                // prettier-ignore\\n            } {\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            }\\n\\n            // Compute the string's length.\\n            let strLength := add(sub(end, str), 2)\\n            // Move the pointer and write the \\\"0x\\\" prefix.\\n            str := sub(str, 32)\\n            mstore(str, 0x3078)\\n            // Move the pointer and write the length.\\n            str := sub(str, 2)\\n            mstore(str, strLength)\\n        }\\n    }\\n\\n    function toHexString(address value) internal pure returns (string memory str) {\\n        assembly {\\n            let start := mload(0x40)\\n            // We need 32 bytes for the length, 2 bytes for the prefix,\\n            // and 40 bytes for the digits.\\n            // The next multiple of 32 above (32 + 2 + 40) is 96.\\n            str := add(start, 96)\\n\\n            // Allocate the memory.\\n            mstore(0x40, str)\\n\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                let length := 20\\n                let temp := value\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n                length := sub(length, 1)\\n            } length {\\n                length := sub(length, 1)\\n            } {\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            }\\n\\n            // Move the pointer and write the \\\"0x\\\" prefix.\\n            str := sub(str, 32)\\n            mstore(str, 0x3078)\\n            // Move the pointer and write the length.\\n            str := sub(str, 2)\\n            mstore(str, 42)\\n        }\\n    }\\n\\n    function toLower(string memory str) internal pure returns (string memory) {\\n        bytes memory bStr = bytes(str);\\n        bytes memory bLower = new bytes(bStr.length);\\n        for (uint256 i = 0; i < bStr.length; i++) {\\n            if ((bStr[i] >= \\\"A\\\") && (bStr[i] <= \\\"Z\\\")) {\\n                bLower[i] = bytes1(uint8(bStr[i]) + 32);\\n            } else {\\n                bLower[i] = bStr[i];\\n            }\\n        }\\n        return string(bLower);\\n    }\\n\\n    function toUpper(string memory str) internal pure returns (string memory) {\\n        bytes memory bStr = bytes(str);\\n        bytes memory bLower = new bytes(bStr.length);\\n        for (uint256 i = 0; i < bStr.length; i++) {\\n            if ((bStr[i] >= \\\"a\\\") && (bStr[i] <= \\\"z\\\")) {\\n                bLower[i] = bytes1(uint8(bStr[i]) - 32);\\n            } else {\\n                bLower[i] = bStr[i];\\n            }\\n        }\\n        return string(bLower);\\n    }\\n\\n    /**\\n     * @dev Returns the length of a given string\\n     *\\n     * @param s The string to measure the length of\\n     * @return The length of the input string\\n     */\\n    function strlen(string memory s) internal pure returns (uint) {\\n        uint len;\\n        uint i = 0;\\n        uint bytelength = bytes(s).length;\\n        for (len = 0; i < bytelength; len++) {\\n            bytes1 b = bytes(s)[i];\\n            if (b < 0x80) {\\n                i += 1;\\n            } else if (b < 0xE0) {\\n                i += 2;\\n            } else if (b < 0xF0) {\\n                i += 3;\\n            } else if (b < 0xF8) {\\n                i += 4;\\n            } else if (b < 0xFC) {\\n                i += 5;\\n            } else {\\n                i += 6;\\n            }\\n        }\\n        return len;\\n    }\\n\\n    function stringToUint256(string memory s) internal pure returns (uint256) {\\n        bytes memory b = bytes(s);\\n        uint256 result = 0;\\n        for (uint256 i = 0; i < b.length; i++) {\\n            uint256 c = uint256(uint8(b[i]));\\n            if (c >= 48 && c <= 57) {\\n                result = result * 10 + c - 48;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xf8aa99ac4cf28fa7cfbc6e6f67d8de9a337343fecf16c1fddb3f12ce896ef052\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/realmIdContract/MetadataResolver.sol":{"MetadataResolver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"GatedMetadataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"newVersion","type":"uint64"}],"name":"GatedMetadataVersionChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"MetadataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"newVersion","type":"uint64"}],"name":"MetadataVersionChanged","type":"event"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"internalType":"struct DataTypes.MetadataPair[]","name":"pairs","type":"tuple[]"}],"name":"batchSetGatedMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"internalType":"struct DataTypes.MetadataPair[]","name":"pairs","type":"tuple[]"}],"name":"batchSetMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"clearGatedMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"clearMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"gatedMetadataVersions","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"name":"getGatedMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"name":"getMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"metadataVersions","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"batchSetGatedMetadatas(uint256,(string,string)[])":{"params":{"pairs":"The kv pairs to set.","tokenId":"The token to update."}},"batchSetMetadatas(uint256,(string,string)[])":{"params":{"pairs":"The kv pairs to set.","tokenId":"The token to update."}},"clearGatedMetadatas(uint256)":{"params":{"tokenId":"token to clear metadata."}},"clearMetadatas(uint256)":{"params":{"tokenId":"token to clear metadata."}},"getGatedMetadata(uint256,string)":{"params":{"key":"The metadata key to query.","tokenId":"The token to query."},"returns":{"_0":"The associated metadata."}},"getMetadata(uint256,string)":{"params":{"key":"The metadata key to query.","tokenId":"The token to query."},"returns":{"_0":"The associated metadata."}}},"stateVariables":{"__gap":{"details":"Added to allow future versions to add new variables in case this contract becomes      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchSetGatedMetadatas(uint256,(string,string)[])":"b33dab09","batchSetMetadatas(uint256,(string,string)[])":"26ec9ad8","clearGatedMetadatas(uint256)":"8e73361e","clearMetadatas(uint256)":"07b472c4","gatedMetadataVersions(uint256)":"0ae16e53","getGatedMetadata(uint256,string)":"0739d191","getMetadata(uint256,string)":"cb4799f2","metadataVersions(uint256)":"d9a9eb24"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"GatedMetadataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newVersion\",\"type\":\"uint64\"}],\"name\":\"GatedMetadataVersionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"MetadataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newVersion\",\"type\":\"uint64\"}],\"name\":\"MetadataVersionChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.MetadataPair[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"batchSetGatedMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.MetadataPair[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"batchSetMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"clearGatedMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"clearMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gatedMetadataVersions\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getGatedMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metadataVersions\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchSetGatedMetadatas(uint256,(string,string)[])\":{\"params\":{\"pairs\":\"The kv pairs to set.\",\"tokenId\":\"The token to update.\"}},\"batchSetMetadatas(uint256,(string,string)[])\":{\"params\":{\"pairs\":\"The kv pairs to set.\",\"tokenId\":\"The token to update.\"}},\"clearGatedMetadatas(uint256)\":{\"params\":{\"tokenId\":\"token to clear metadata.\"}},\"clearMetadatas(uint256)\":{\"params\":{\"tokenId\":\"token to clear metadata.\"}},\"getGatedMetadata(uint256,string)\":{\"params\":{\"key\":\"The metadata key to query.\",\"tokenId\":\"The token to query.\"},\"returns\":{\"_0\":\"The associated metadata.\"}},\"getMetadata(uint256,string)\":{\"params\":{\"key\":\"The metadata key to query.\",\"tokenId\":\"The token to query.\"},\"returns\":{\"_0\":\"The associated metadata.\"}}},\"stateVariables\":{\"__gap\":{\"details\":\"Added to allow future versions to add new variables in case this contract becomes      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchSetGatedMetadatas(uint256,(string,string)[])\":{\"notice\":\"Sets the gated metadatas associated with an token and keys.\"},\"batchSetMetadatas(uint256,(string,string)[])\":{\"notice\":\"Sets the metadatas associated with an token and keys. Only can be called by the owner or approved operators of that token.\"},\"clearGatedMetadatas(uint256)\":{\"notice\":\"Clears all gated metadata on a token.\"},\"clearMetadatas(uint256)\":{\"notice\":\"Clears all metadata on a token.\"},\"getGatedMetadata(uint256,string)\":{\"notice\":\"Returns the gated metadata associated with an token and key.\"},\"getMetadata(uint256,string)\":{\"notice\":\"Returns the metadata associated with an token and key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/realmIdContract/MetadataResolver.sol\":\"MetadataResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"contracts/MocaPoints/realmIdContract/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    struct EIP712Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 deadline;\\n    }\\n\\n    struct MetadataPair {\\n        string key;\\n        string value;\\n    }\\n\\n    struct RegisterNameParams {\\n        address msgSender;\\n        string name;\\n        bytes32 parentNode;\\n        address to;\\n    }\\n\\n    struct RegisterCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 durationYear;\\n    }\\n\\n    struct RenewCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        uint256 durationYear;\\n    }\\n\\n    struct BidCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 auctionStartTimestamp;\\n    }\\n}\\n\",\"keccak256\":\"0x4fdc1a70f1a279e7221180af577db51e638cc7e2d9ecd4a0300914dd61001606\",\"license\":\"GPL-3.0-or-later\"},\"contracts/MocaPoints/realmIdContract/MetadataResolver.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"./DataTypes.sol\\\";\\nimport {Initializable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nabstract contract MetadataResolver is Initializable {\\n    /*//////////////////////////////////////////////////////////////\\n                            STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(uint64 => mapping(uint256 => mapping(string => string))) _metadatas;\\n    mapping(uint256 => uint64) public metadataVersions;\\n\\n    mapping(uint64 => mapping(uint256 => mapping(string => string))) _gatedMetadatas;\\n    mapping(uint256 => uint64) public gatedMetadataVersions;\\n\\n    /**\\n     * @dev Added to allow future versions to add new variables in case this contract becomes\\n     *      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[40] private __gap;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                 CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    // constructor() {\\n    //     _disableInitializers();\\n    // }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event MetadataVersionChanged(uint256 indexed tokenId, uint64 newVersion);\\n\\n    event MetadataChanged(uint256 indexed tokenId, string key, string value);\\n\\n    event GatedMetadataVersionChanged(uint256 indexed tokenId, uint64 newVersion);\\n\\n    event GatedMetadataChanged(uint256 indexed tokenId, string key, string value);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            MODIFIER\\n    //////////////////////////////////////////////////////////////*/\\n\\n    modifier authorised(uint256 tokenId) {\\n        require(_isMetadataAuthorised(tokenId), \\\"METADATA_UNAUTHORISED\\\");\\n        _;\\n    }\\n\\n    modifier gatedAuthorised(uint256 tokenId) {\\n        require(_isGatedMetadataAuthorised(tokenId), \\\"GATED_METADATA_UNAUTHORISED\\\");\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EXTERNAL\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice  Clears all metadata on a token.\\n     * @param   tokenId  token to clear metadata.\\n     */\\n    function clearMetadatas(uint256 tokenId) external virtual authorised(tokenId) {\\n        _clearMetadatas(tokenId);\\n    }\\n\\n    /**\\n     * @notice  Clears all gated metadata on a token.\\n     * @param   tokenId  token to clear metadata.\\n     */\\n    function clearGatedMetadatas(uint256 tokenId) external virtual gatedAuthorised(tokenId) {\\n        _clearGatedMetadatas(tokenId);\\n    }\\n\\n    /**\\n     * @notice Sets the metadatas associated with an token and keys.\\n     * Only can be called by the owner or approved operators of that token.\\n     * @param tokenId The token to update.\\n     * @param pairs The kv pairs to set.\\n     */\\n    function batchSetMetadatas(uint256 tokenId, DataTypes.MetadataPair[] calldata pairs) external authorised(tokenId) {\\n        for (uint256 i = 0; i < pairs.length; i++) {\\n            DataTypes.MetadataPair memory pair = pairs[i];\\n            _metadatas[metadataVersions[tokenId]][tokenId][pair.key] = pair.value;\\n            emit MetadataChanged(tokenId, pair.key, pair.value);\\n        }\\n    }\\n\\n    /**\\n     * @notice Sets the gated metadatas associated with an token and keys.\\n     * @param tokenId The token to update.\\n     * @param pairs The kv pairs to set.\\n     */\\n    function batchSetGatedMetadatas(uint256 tokenId, DataTypes.MetadataPair[] memory pairs) public gatedAuthorised(tokenId) {\\n        for (uint256 i = 0; i < pairs.length; i++) {\\n            DataTypes.MetadataPair memory pair = pairs[i];\\n            _gatedMetadatas[gatedMetadataVersions[tokenId]][tokenId][pair.key] = pair.value;\\n            emit GatedMetadataChanged(tokenId, pair.key, pair.value);\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns the metadata associated with an token and key.\\n     * @param tokenId The token to query.\\n     * @param key The metadata key to query.\\n     * @return The associated metadata.\\n     */\\n    function getMetadata(uint256 tokenId, string calldata key) external view returns (string memory) {\\n        return _metadatas[metadataVersions[tokenId]][tokenId][key];\\n    }\\n\\n    /**\\n     * @notice Returns the gated metadata associated with an token and key.\\n     * @param tokenId The token to query.\\n     * @param key The metadata key to query.\\n     * @return The associated metadata.\\n     */\\n    function getGatedMetadata(uint256 tokenId, string memory key) public view returns (string memory) {\\n        return _gatedMetadatas[gatedMetadataVersions[tokenId]][tokenId][key];\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            INTERNAL\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _isMetadataAuthorised(uint256 tokenId) internal view virtual returns (bool);\\n\\n    function _isGatedMetadataAuthorised(uint256 tokenId) internal view virtual returns (bool);\\n\\n    function _clearMetadatas(uint256 tokenId) internal virtual {\\n        metadataVersions[tokenId]++;\\n        emit MetadataVersionChanged(tokenId, metadataVersions[tokenId]);\\n    }\\n\\n    function _clearGatedMetadatas(uint256 tokenId) internal virtual {\\n        gatedMetadataVersions[tokenId]++;\\n        emit GatedMetadataVersionChanged(tokenId, gatedMetadataVersions[tokenId]);\\n    }\\n}\\n\",\"keccak256\":\"0xc9d22c61560e96940a0855767a45d76877bd7f2e36cfd3b5bdc101559821c67c\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":5710,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"_metadatas","offset":0,"slot":"1","type":"t_mapping(t_uint64,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage)))"},{"astId":5714,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"metadataVersions","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_uint64)"},{"astId":5722,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"_gatedMetadatas","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage)))"},{"astId":5726,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"gatedMetadataVersions","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint64)"},{"astId":5731,"contract":"contracts/MocaPoints/realmIdContract/MetadataResolver.sol:MetadataResolver","label":"__gap","offset":0,"slot":"5","type":"t_array(t_uint256)40_storage"}],"types":{"t_array(t_uint256)40_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[40]","numberOfBytes":"1280"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_string_memory_ptr,t_string_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(string => string))","numberOfBytes":"32","value":"t_mapping(t_string_memory_ptr,t_string_storage)"},"t_mapping(t_uint256,t_uint64)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_uint64,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage)))":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => mapping(uint256 => mapping(string => string)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"batchSetGatedMetadatas(uint256,(string,string)[])":{"notice":"Sets the gated metadatas associated with an token and keys."},"batchSetMetadatas(uint256,(string,string)[])":{"notice":"Sets the metadatas associated with an token and keys. Only can be called by the owner or approved operators of that token."},"clearGatedMetadatas(uint256)":{"notice":"Clears all gated metadata on a token."},"clearMetadatas(uint256)":{"notice":"Clears all metadata on a token."},"getGatedMetadata(uint256,string)":{"notice":"Returns the gated metadata associated with an token and key."},"getMetadata(uint256,string)":{"notice":"Returns the metadata associated with an token and key."}},"version":1}}},"contracts/MocaPoints/realmIdContract/RealmId.sol":{"RealmId":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"BaseTokenURISet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"burnCount","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"GatedMetadataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"newVersion","type":"uint64"}],"name":"GatedMetadataVersionChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"value","type":"string"}],"name":"MetadataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"newVersion","type":"uint64"}],"name":"MetadataVersionChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":true,"internalType":"address","name":"middleware","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"MiddlewareSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"node","type":"bytes32"},{"indexed":false,"internalType":"string","name":"label","type":"string"},{"indexed":false,"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"allowed","type":"bool"}],"name":"NodeAllowanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Register","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"string","name":"label","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"bool","name":"allow","type":"bool"},{"internalType":"string","name":"baseTokenURI","type":"string"},{"internalType":"address","name":"middleware","type":"address"},{"internalType":"bytes","name":"middlewareData","type":"bytes"}],"name":"allowNode","outputs":[{"internalType":"bytes32","name":"allowedNode","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"allowedParentNodes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"available","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"baseTokenURIs","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"internalType":"struct DataTypes.MetadataPair[]","name":"pairs","type":"tuple[]"}],"name":"batchSetGatedMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"value","type":"string"}],"internalType":"struct DataTypes.MetadataPair[]","name":"pairs","type":"tuple[]"}],"name":"batchSetMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"burnCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"clearGatedMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"clearMetadatas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"gatedMetadataVersions","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"name":"getGatedMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"key","type":"string"}],"name":"getMetadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenName","type":"string"},{"internalType":"string","name":"_tokenSymbol","type":"string"},{"internalType":"address","name":"_owner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"metadataVersions","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"middlewares","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"parents","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"preData","type":"bytes"}],"name":"register","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"string","name":"uri","type":"string"}],"name":"setBaseTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"node","type":"bytes32"},{"internalType":"address","name":"_middleware","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"setMiddleware","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"BaseTokenURISet(bytes32,string)":{"details":"Emit an event when a base token URI is set.","params":{"node":"The node to set the base token URI for","uri":"The base token URI"}},"Burn(uint256,uint256)":{"details":"Emit an event when a realmId is burned.","params":{"burnCount":"The number of burning for the tokenId","tokenId":"The tokenId of the realmId"}},"MiddlewareSet(bytes32,address,bytes)":{"details":"Emit an event when a middleware is set.","params":{"data":"The data of the middleware","middleware":"The middleware contract address","node":"The node to set the middleware for"}},"NodeAllowanceChanged(bytes32,string,bytes32,bool)":{"details":"Emit an event when a node allowance changed.","params":{"allowed":"The new state of allowance","label":"The label of the node","node":"The node","parentNode":"The parent node of the node"}},"Register(string,bytes32,uint256,address)":{"details":"Emit an event when a realmId is registered. For example, when \"user.realm\" is registered, the name is \"user\" and the parent node is namehash(\"realm\").","params":{"name":"The name of the realmId","parentNode":"The parent node of the realmId","to":"The address that owns the realmId","tokenId":"The tokenId of the realmId"}}},"kind":"dev","methods":{"allowNode(string,bytes32,bool,string,address,bytes)":{"details":"allowNode(\"moca\", bytes32(0)) to allow \".moca\""},"approve(address,uint256)":{"details":"See {IERC721-approve}."},"available(string,bytes32)":{"params":{"_name":"The name to check","parentNode":"The parent node of the realmId"}},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"batchSetGatedMetadatas(uint256,(string,string)[])":{"params":{"pairs":"The kv pairs to set.","tokenId":"The token to update."}},"batchSetMetadatas(uint256,(string,string)[])":{"params":{"pairs":"The kv pairs to set.","tokenId":"The token to update."}},"burn(uint256)":{"params":{"tokenId":"The token id to burn."}},"clearGatedMetadatas(uint256)":{"params":{"tokenId":"token to clear metadata."}},"clearMetadatas(uint256)":{"params":{"tokenId":"token to clear metadata."}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getGatedMetadata(uint256,string)":{"params":{"key":"The metadata key to query.","tokenId":"The token to query."},"returns":{"_0":"The associated metadata."}},"getMetadata(uint256,string)":{"params":{"key":"The metadata key to query.","tokenId":"The token to query."},"returns":{"_0":"The associated metadata."}},"getTokenId(string,bytes32)":{"returns":{"_0":"uint256 The token id."}},"initialize(string,string,address)":{"params":{"_tokenName":"The ERC-721 name of the fname token","_tokenSymbol":"The ERC-721 symbol of the fname token"}},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"register(string,bytes32,address,bytes)":{"params":{"_name":"The name to register","parentNode":"The parent node of the realmId","preData":"The register data for preprocess.","to":"The address that will own the realmId"},"returns":{"_0":"uint256   Minted tokenId"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"params":{"tokenId":"The uint256 tokenId of the realmId"}},"totalSupply()":{"returns":{"_0":"uint256 The total supply."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x5345 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x13EB ADD MSTORE DUP2 DUP2 PUSH2 0x149B ADD MSTORE DUP2 DUP2 PUSH2 0x1783 ADD MSTORE DUP2 DUP2 PUSH2 0x1833 ADD MSTORE PUSH2 0x1978 ADD MSTORE PUSH2 0x5345 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x184 JUMPI DUP1 PUSH4 0xA9735F94 GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xCB4799F2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xF97C6DAE EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB4799F2 EQ PUSH2 0x82C JUMPI DUP1 PUSH4 0xD619CEE5 EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0xD9A9EB24 EQ PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0xCAD6B901 EQ PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9735F94 EQ PUSH2 0x77E JUMPI DUP1 PUSH4 0xB33DAB09 EQ PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x898572A6 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x96977C1B EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x898572A6 EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x8E73361E EQ PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x7C7EFE6B EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x23D JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x57AD9C90 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26EC9AD8 GT PUSH2 0x222 JUMPI DUP1 PUSH4 0x26EC9AD8 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x2595EACB EQ PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x29F JUMPI DUP1 PUSH4 0x16404D01 GT PUSH2 0x279 JUMPI DUP1 PUSH4 0x16404D01 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x1F0509E0 EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xAE16E53 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x739D191 GT PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x739D191 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x7B472C4 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x321 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x4363 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x43EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x450D JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x45C6 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0xDC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x4660 JUMP JUMPDEST PUSH2 0xE73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x468A JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x46D6 JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x4712 JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x475E JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DD JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x15D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x46D6 JUMP JUMPDEST PUSH2 0x15EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x47F8 JUMP JUMPDEST PUSH2 0x176C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x195E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x30C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x641 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1A4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DD JUMP JUMPDEST PUSH2 0x1AD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x1BA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x4830 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x1CF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x6CB CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x18E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x724 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x1D81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x759 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1D90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x779 CALLDATASIZE PUSH1 0x4 PUSH2 0x48CB JUMP JUMPDEST PUSH2 0x1E2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x799 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x7C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x498C JUMP JUMPDEST PUSH2 0x1E36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A5B JUMP JUMPDEST PUSH2 0x1F8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x807 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x2005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x827 CALLDATASIZE PUSH1 0x4 PUSH2 0x4712 JUMP JUMPDEST PUSH2 0x20E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x847 CALLDATASIZE PUSH1 0x4 PUSH2 0x468A JUMP JUMPDEST PUSH2 0x2152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AC3 JUMP JUMPDEST PUSH2 0x2236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x8BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4B91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DD JUMP JUMPDEST PUSH2 0x2341 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x935 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC4 JUMP JUMPDEST PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x9CD JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0xA19 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5A SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x162 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH2 0x161 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0xAF3 SWAP1 DUP5 SWAP1 PUSH2 0x4C71 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB0C SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB38 SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xBB2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xBCC JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBCC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD2E DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2531 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD36 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0xD3E PUSH2 0x2669 JUMP JUMPDEST PUSH2 0xD46 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0xD4E PUSH2 0x27A7 JUMP JUMPDEST PUSH2 0xD57 DUP3 PUSH2 0x282D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xDCC DUP2 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0xE32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D455441444154415F554E415554484F52495345440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 PUSH2 0x28B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4A DUP3 PUSH2 0x293D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7E DUP3 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0xF64 JUMPI POP PUSH2 0xF64 DUP2 CALLER PUSH2 0x8BF JUMP JUMPDEST PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 PUSH2 0x29C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x18B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1021 DUP3 DUP5 DUP4 PUSH2 0x4CD3 JUMP JUMPDEST POP PUSH32 0xE091AB4D07F328DFAF2DCD8B50B82E02D05CF20D71197646AC6B2611395947B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1055 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4E4F545F414C4C4F574544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F44455F4E4F545F414C4C4F57454400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP6 DUP6 DUP6 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1262 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1257 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7AC3E6EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x7AC3E6EA SWAP1 PUSH2 0x120D SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x4E6D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x1279 DUP2 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x12DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D455441444154415F554E415554484F52495345440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x4E8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1310 SWAP2 SWAP1 PUSH2 0x4EB9 JUMP JUMPDEST PUSH2 0x1319 SWAP1 PUSH2 0x4EED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH2 0x160 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH2 0x15F DUP5 MSTORE DUP1 DUP3 KECCAK256 DUP12 DUP4 MSTORE SWAP1 SWAP4 MSTORE DUP3 SWAP1 KECCAK256 DUP4 MLOAD SWAP3 MLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x1360 SWAP2 PUSH2 0x4C71 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x4EF9 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD DUP9 SWAP3 PUSH32 0x601D4B2F0F06545C0F60D4F70E3BC5D78DB246F7B66AAEB1EA23A56AA854C670 SWAP3 PUSH2 0x13B2 SWAP3 PUSH2 0x5013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 PUSH2 0x13C5 DUP2 PUSH2 0x5067 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15BA DUP2 PUSH2 0x2B8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x15D6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2C27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15E1 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x2E26 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4E4F545F414C4C4F574544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x2E7E JUMP JUMPDEST PUSH2 0x166E CALLER DUP3 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x16D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x28B0 JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x16FF DUP2 PUSH2 0x2FE6 JUMP JUMPDEST PUSH2 0x18F PUSH1 0x0 DUP2 SLOAD PUSH2 0x170F SWAP1 PUSH2 0x509F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x190 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 PUSH32 0x410C5C259085CDE81FEDF70C1AA308EC839373C26E9B7ADA6560A2ACA0254EB6 SWAP3 SWAP2 PUSH2 0x1752 SWAP1 PUSH2 0x5067 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A6 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1952 DUP3 PUSH2 0x2B8A JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH1 0x1 PUSH2 0x2C27 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1B7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BAC PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x15E9 PUSH1 0x0 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND PUSH1 0x40 SWAP3 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCAB80EDE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0xCAB80EDE SWAP1 PUSH2 0x1CAC SWAP1 DUP5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x1CEC DUP9 DUP9 DUP9 DUP9 PUSH2 0x30BE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D00 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x27A7 JUMP JUMPDEST DUP1 PUSH2 0x1D12 DUP2 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47415445445F4D455441444154415F554E415554484F52495345440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH2 0x4C1E JUMP JUMPDEST PUSH2 0x18B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1DAA SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DD6 SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E23 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E06 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xE3B CALLER DUP4 DUP4 PUSH2 0x3297 JUMP JUMPDEST DUP2 PUSH2 0x1E40 DUP2 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x1EA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47415445445F4D455441444154415F554E415554484F52495345440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EC6 JUMPI PUSH2 0x1EC6 PUSH2 0x4E8A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP1 DUP3 ADD MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH2 0x162 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH2 0x161 DUP6 MSTORE DUP1 DUP3 KECCAK256 DUP11 DUP4 MSTORE SWAP1 SWAP5 MSTORE DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP4 MLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x1F18 SWAP2 SWAP1 PUSH2 0x4C71 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x1F32 SWAP2 SWAP1 PUSH2 0x4EF9 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD DUP8 SWAP3 PUSH32 0x29D4CD326B134D55E630CEB2871CEA5E243B89BC9667E0C840B5DA53B26FFD6A SWAP3 PUSH2 0x1F6A SWAP3 PUSH2 0x5013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 PUSH2 0x1F7D DUP2 PUSH2 0x5067 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4E4F545F414C4C4F574544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1F85 DUP5 DUP5 DUP5 DUP5 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F544F4B454E5F494400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x18E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH2 0x18B SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x20B9 DUP4 PUSH2 0x3466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20CA SWAP3 SWAP2 SWAP1 PUSH2 0x5147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20F4 SWAP3 SWAP2 SWAP1 PUSH2 0x51EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x2113 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH2 0x15F DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x2196 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x51EC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x21AF SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DB SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2240 PUSH2 0x2A68 JUMP JUMPDEST DUP8 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2251 SWAP3 SWAP2 SWAP1 PUSH2 0x51EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x2270 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18D SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP11 ISZERO ISZERO OR SWAP1 SSTORE SWAP2 POP DUP2 SWAP1 PUSH32 0xFBBC4187CF8CD340D071EE02E4E44EB8E04903A03649EF31A26E38798390351D SWAP1 PUSH2 0x2315 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH2 0x51FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x2328 DUP2 DUP8 DUP8 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x2334 DUP2 DUP6 DUP6 DUP6 PUSH2 0x23F5 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2349 PUSH2 0x2A68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x23EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15D6 DUP2 PUSH2 0x282D JUMP JUMPDEST PUSH2 0x23FD PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x42A0D9B400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x42A0D9B4 SWAP1 PUSH2 0x24A6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57DA1406F81E1F47CDA5874100D33118BF695F202882AACC5CA6D45CA917449 DUP6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2523 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH2 0x34D3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x3583 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x279F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x3623 JUMP JUMPDEST PUSH2 0x27AF PUSH2 0x36E5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2803 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA19 CALLER DUP4 PUSH2 0x2E99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 PUSH2 0x28D5 DUP4 PUSH2 0x5228 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND DUP2 MSTORE DUP4 SWAP3 POP PUSH32 0x3773C27B7F05829D86B67403E26562FB9D776452B918D74B238BFDC1203BF0ED SWAP2 ADD PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2A22 DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x2AF3 CALLER DUP3 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x2B7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x3753 JUMP JUMPDEST CALLER PUSH2 0x2BAA PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F4F574E45520000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C5A JUMPI PUSH2 0xFFA DUP4 PUSH2 0x3A4E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2CDF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2CDC SWAP2 DUP2 ADD SWAP1 PUSH2 0x524F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2D6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x2E1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST POP PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x3B58 JUMP JUMPDEST PUSH2 0x2E2E PUSH2 0x3B7D JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x2803 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA5 DUP4 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2F13 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x2F51 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F39 DUP5 PUSH2 0xE3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x162 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 PUSH2 0x2F7E DUP4 PUSH2 0x5228 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x162 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND DUP2 MSTORE DUP4 SWAP3 POP PUSH32 0xC87757BEABCC5D61E477F4FFAFB24461A0EB17E06D5BBF82354B4DF70F3580C3 SWAP2 ADD PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF1 DUP3 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP PUSH2 0x2FFC DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x68 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x67 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CB DUP6 DUP6 DUP6 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x3131 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E414D455F4E4F545F415641494C41424C450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313E DUP7 DUP7 DUP7 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x314A DUP4 DUP3 PUSH2 0x3BEA JUMP JUMPDEST PUSH2 0x18F PUSH1 0x0 DUP2 SLOAD PUSH2 0x315A SWAP1 PUSH2 0x5067 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP3 SWAP1 PUSH32 0xFE530E3B4B61411A7DD546ADC0E6736D4255ABEFC6B610401D26068E02DD495E SWAP1 PUSH2 0x31BE SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x5268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x325A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E5F4E4F545F4D494E54454400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST CALLER PUSH2 0x327A PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x332C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x33CE CALLER DUP4 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x345A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1F85 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3C04 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x34A3 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x3485 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x356A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x65 PUSH2 0x3576 DUP4 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST POP PUSH1 0x66 PUSH2 0xFFA DUP3 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x361A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15E9 CALLER PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3773 DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3816 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x38B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38D8 DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x397B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x3AF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3B61 DUP4 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3B6E JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFFA JUMPI PUSH2 0x1F85 DUP4 DUP4 PUSH2 0x3CF4 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3D19 JUMP JUMPDEST PUSH2 0x3C0F DUP5 DUP5 DUP5 PUSH2 0x3753 JUMP JUMPDEST PUSH2 0x3C1B DUP5 DUP5 DUP5 DUP5 PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x1F85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x3CB0 DUP2 PUSH2 0x3A4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1268 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x52E9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x3FAC JUMP JUMPDEST PUSH2 0x3D23 DUP4 DUP4 PUSH2 0x4031 JUMP JUMPDEST PUSH2 0x3D30 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3FA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x3E33 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x528C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3E8C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3E89 SWAP2 DUP2 ADD SWAP1 PUSH2 0x52CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3F59 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x3EBA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3EBF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x3F51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0x2F51 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x3FD6 SWAP2 SWAP1 PUSH2 0x4C71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4011 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4016 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4027 DUP7 DUP4 DUP4 DUP8 PUSH2 0x4256 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x40AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x413A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x41C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x42EC JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x42E5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x42E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST POP DUP2 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0x2F51 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x4301 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x43EE JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1268 DUP2 PUSH2 0x4335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x439B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4383 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x43BC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4380 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43A4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4477 JUMPI PUSH2 0x4477 PUSH2 0x4401 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44AA JUMPI PUSH2 0x44AA PUSH2 0x4401 JUMP JUMPDEST PUSH2 0x44DB PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x4430 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x44F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x454A DUP6 DUP3 DUP7 ADD PUSH2 0x447F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x457E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x45C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x45DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x45F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4602 DUP10 DUP4 DUP11 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x461B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4628 DUP9 DUP3 DUP10 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x463B SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x459D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x467C DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x469F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C9 DUP7 DUP3 DUP8 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x46EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46F4 DUP5 PUSH2 0x459D JUMP JUMPDEST SWAP3 POP PUSH2 0x4702 PUSH1 0x20 DUP6 ADD PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x473E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x474A DUP7 DUP3 DUP8 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x47A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x47B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x47CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1268 DUP3 PUSH2 0x459D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x480B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4814 DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486D DUP11 DUP4 DUP12 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP6 POP DUP7 SWAP2 POP PUSH2 0x4888 PUSH1 0x40 DUP11 ADD PUSH2 0x459D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x489E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48AB DUP10 DUP3 DUP11 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E7 DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x48F7 DUP2 PUSH2 0x48BD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP3 LT DUP2 DUP4 GT OR ISZERO PUSH2 0x4938 JUMPI PUSH2 0x4938 PUSH2 0x4401 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 SWAP4 POP DUP5 CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x495C DUP7 DUP4 DUP8 ADD PUSH2 0x447F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497F DUP6 DUP3 DUP7 ADD PUSH2 0x447F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x499F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x49BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x49D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x49E5 JUMPI PUSH2 0x49E5 PUSH2 0x4401 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x49F4 DUP6 DUP3 ADD PUSH2 0x4430 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP6 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x4A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x4A4A JUMPI DUP3 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x4A2C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4A3A DUP13 DUP10 DUP4 DUP11 ADD ADD PUSH2 0x4902 JUMP JUMPDEST DUP4 MSTORE POP SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x4A14 JUMP JUMPDEST DUP1 SWAP8 POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A7A DUP6 PUSH2 0x459D JUMP JUMPDEST SWAP4 POP PUSH2 0x4A88 PUSH1 0x20 DUP7 ADD PUSH2 0x459D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AB7 DUP8 DUP3 DUP9 ADD PUSH2 0x447F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B05 DUP14 DUP4 DUP15 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x4B21 DUP3 PUSH2 0x48BD JUMP JUMPDEST SWAP1 SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x4B37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B43 DUP14 DUP4 DUP15 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x4B57 PUSH1 0x80 DUP14 ADD PUSH2 0x459D JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B7A DUP13 DUP3 DUP14 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BAD DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH2 0x4BBB PUSH1 0x20 DUP5 ADD PUSH2 0x459D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x4BEA PUSH1 0x20 DUP7 ADD PUSH2 0x459D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C12 DUP8 DUP3 DUP9 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4C32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4C6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4C83 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4380 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4CB4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDBA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4CC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x4CEB JUMPI PUSH2 0x4CEB PUSH2 0x4401 JUMP JUMPDEST PUSH2 0x4CFF DUP4 PUSH2 0x4CF9 DUP4 SLOAD PUSH2 0x4C1E JUMP JUMPDEST DUP4 PUSH2 0x4C8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D51 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4D1B JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4DA0 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4D80 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x4DDB JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4E50 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x4DED JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F51 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1268 DUP2 PUSH2 0x48BD JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x4C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA19 CALLDATASIZE DUP4 PUSH2 0x4902 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F13 JUMPI PUSH2 0x4F13 PUSH2 0x4401 JUMP JUMPDEST PUSH2 0x4F27 DUP2 PUSH2 0x4F21 DUP5 SLOAD PUSH2 0x4C1E JUMP JUMPDEST DUP5 PUSH2 0x4C8D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F7A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4F44 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4FC7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4FA8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5003 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5026 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x43A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4E50 DUP2 DUP6 PUSH2 0x43A4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x5098 JUMPI PUSH2 0x5098 PUSH2 0x5038 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x50AE JUMPI PUSH2 0x50AE PUSH2 0x5038 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x5111 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x43A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE DUP2 PUSH1 0x60 DUP9 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x513C DUP2 DUP7 DUP9 PUSH2 0x4DED JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x5155 DUP2 PUSH2 0x4C1E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x516D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x51A0 JUMPI PUSH2 0x51CF JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x51CF JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x51C6 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x51AD JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x51E3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x4380 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5210 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x5245 JUMPI PUSH2 0x5245 PUSH2 0x5038 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x527C PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x4DED JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4027 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x43A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1268 DUP2 PUSH2 0x4335 JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220684117 SDIV SWAP6 0xAB 0x2F MULMOD EQ DUP5 0x5D PUSH21 0x65C63B072A81451EFA2351D012EEC165AD0B3FE64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"772:11196:28:-:0;;;1332:4:8;1289:48;;772:11196:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__ERC721_init_1402":{"entryPoint":9521,"id":1402,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_1420":{"entryPoint":13523,"id":1420,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_435":{"entryPoint":9833,"id":435,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_446":{"entryPoint":13699,"id":446,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_1241":{"entryPoint":9992,"id":1241,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_1251":{"entryPoint":13859,"id":1251,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_1092":{"entryPoint":9682,"id":1092,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_2268":{"entryPoint":null,"id":2268,"parameterSlots":4,"returnSlots":0},"@_approve_2134":{"entryPoint":10696,"id":2134,"parameterSlots":2,"returnSlots":0},"@_authorizeUpgrade_6639":{"entryPoint":11146,"id":6639,"parameterSlots":1,"returnSlots":0},"@_beforeTokenTransfer_2255":{"entryPoint":null,"id":2255,"parameterSlots":4,"returnSlots":0},"@_burn_2025":{"entryPoint":12262,"id":2025,"parameterSlots":1,"returnSlots":0},"@_checkOnERC721Received_2242":{"entryPoint":15804,"id":2242,"parameterSlots":4,"returnSlots":1},"@_checkOwner_477":{"entryPoint":10856,"id":477,"parameterSlots":0,"returnSlots":0},"@_clearGatedMetadatas_6021":{"entryPoint":12121,"id":6021,"parameterSlots":1,"returnSlots":0},"@_clearMetadatas_6003":{"entryPoint":10416,"id":6003,"parameterSlots":1,"returnSlots":0},"@_exists_1803":{"entryPoint":null,"id":1803,"parameterSlots":1,"returnSlots":1},"@_getImplementation_616":{"entryPoint":null,"id":616,"parameterSlots":0,"returnSlots":1},"@_isApprovedOrOwner_1837":{"entryPoint":11929,"id":1837,"parameterSlots":2,"returnSlots":1},"@_isGatedMetadataAuthorised_6729":{"entryPoint":12751,"id":6729,"parameterSlots":1,"returnSlots":1},"@_isMetadataAuthorised_6707":{"entryPoint":10404,"id":6707,"parameterSlots":1,"returnSlots":1},"@_mint_1958":{"entryPoint":16433,"id":1958,"parameterSlots":2,"returnSlots":0},"@_msgSender_2807":{"entryPoint":null,"id":2807,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1785":{"entryPoint":null,"id":1785,"parameterSlots":1,"returnSlots":1},"@_pause_1315":{"entryPoint":10151,"id":1315,"parameterSlots":0,"returnSlots":0},"@_register_6691":{"entryPoint":12478,"id":6691,"parameterSlots":4,"returnSlots":1},"@_requireMinted_2180":{"entryPoint":10557,"id":2180,"parameterSlots":1,"returnSlots":0},"@_requireNotPaused_1288":{"entryPoint":14053,"id":1288,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1299":{"entryPoint":15229,"id":1299,"parameterSlots":0,"returnSlots":0},"@_revert_2779":{"entryPoint":null,"id":2779,"parameterSlots":2,"returnSlots":0},"@_safeMint_1852":{"entryPoint":15338,"id":1852,"parameterSlots":2,"returnSlots":0},"@_safeMint_1881":{"entryPoint":15641,"id":1881,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1772":{"entryPoint":15364,"id":1772,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2166":{"entryPoint":12951,"id":2166,"parameterSlots":3,"returnSlots":0},"@_setImplementation_640":{"entryPoint":14926,"id":640,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_534":{"entryPoint":10285,"id":534,"parameterSlots":1,"returnSlots":0},"@_transfer_2110":{"entryPoint":14163,"id":2110,"parameterSlots":3,"returnSlots":0},"@_unpause_1331":{"entryPoint":11814,"id":1331,"parameterSlots":0,"returnSlots":0},"@_upgradeToAndCallUUPS_738":{"entryPoint":11303,"id":738,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_685":{"entryPoint":15192,"id":685,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_655":{"entryPoint":15527,"id":655,"parameterSlots":1,"returnSlots":0},"@allowNode_6623":{"entryPoint":8758,"id":6623,"parameterSlots":9,"returnSlots":1},"@allowedParentNodes_6071":{"entryPoint":null,"id":6071,"parameterSlots":0,"returnSlots":0},"@approve_1614":{"entryPoint":3699,"id":1614,"parameterSlots":2,"returnSlots":0},"@available_6220":{"entryPoint":4315,"id":6220,"parameterSlots":3,"returnSlots":1},"@balanceOf_1475":{"entryPoint":6870,"id":1475,"parameterSlots":1,"returnSlots":1},"@baseTokenURIs_6061":{"entryPoint":7568,"id":6061,"parameterSlots":0,"returnSlots":0},"@batchSetGatedMetadatas_5929":{"entryPoint":7734,"id":5929,"parameterSlots":2,"returnSlots":0},"@batchSetMetadatas_5871":{"entryPoint":4719,"id":5871,"parameterSlots":3,"returnSlots":0},"@burnCounts_6084":{"entryPoint":null,"id":6084,"parameterSlots":0,"returnSlots":0},"@burn_6323":{"entryPoint":5732,"id":6323,"parameterSlots":1,"returnSlots":0},"@clearGatedMetadatas_5813":{"entryPoint":7432,"id":5813,"parameterSlots":1,"returnSlots":0},"@clearMetadatas_5799":{"entryPoint":3522,"id":5799,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_2667":{"entryPoint":15604,"id":2667,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_2696":{"entryPoint":16300,"id":2696,"parameterSlots":3,"returnSlots":1},"@gatedMetadataVersions_5726":{"entryPoint":null,"id":5726,"parameterSlots":0,"returnSlots":0},"@getAddressSlot_2854":{"entryPoint":null,"id":2854,"parameterSlots":1,"returnSlots":1},"@getApproved_1632":{"entryPoint":3647,"id":1632,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_2865":{"entryPoint":null,"id":2865,"parameterSlots":1,"returnSlots":1},"@getGatedMetadata_5971":{"entryPoint":2737,"id":5971,"parameterSlots":2,"returnSlots":1},"@getMetadata_5950":{"entryPoint":8530,"id":5950,"parameterSlots":3,"returnSlots":1},"@getTokenId_6470":{"entryPoint":8416,"id":6470,"parameterSlots":3,"returnSlots":1},"@initialize_6163":{"entryPoint":2962,"id":6163,"parameterSlots":5,"returnSlots":0},"@isApprovedForAll_1667":{"entryPoint":null,"id":1667,"parameterSlots":2,"returnSlots":1},"@isContract_2468":{"entryPoint":null,"id":2468,"parameterSlots":1,"returnSlots":1},"@metadataVersions_5714":{"entryPoint":null,"id":5714,"parameterSlots":0,"returnSlots":0},"@middlewares_6066":{"entryPoint":null,"id":6066,"parameterSlots":0,"returnSlots":0},"@name_1513":{"entryPoint":2591,"id":1513,"parameterSlots":0,"returnSlots":1},"@ownerOf_1503":{"entryPoint":6730,"id":1503,"parameterSlots":1,"returnSlots":1},"@owner_463":{"entryPoint":null,"id":463,"parameterSlots":0,"returnSlots":1},"@parents_6076":{"entryPoint":null,"id":6076,"parameterSlots":0,"returnSlots":0},"@pause_6551":{"entryPoint":7416,"id":6551,"parameterSlots":0,"returnSlots":0},"@paused_1276":{"entryPoint":null,"id":1276,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_1155":{"entryPoint":6494,"id":1155,"parameterSlots":0,"returnSlots":1},"@register_6277":{"entryPoint":7094,"id":6277,"parameterSlots":6,"returnSlots":1},"@renounceOwnership_491":{"entryPoint":7076,"id":491,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1713":{"entryPoint":11902,"id":1713,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1743":{"entryPoint":13252,"id":1743,"parameterSlots":4,"returnSlots":0},"@safeTransferFrom_6377":{"entryPoint":5611,"id":6377,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_6407":{"entryPoint":8075,"id":6407,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1649":{"entryPoint":7723,"id":1649,"parameterSlots":2,"returnSlots":0},"@setBaseTokenURI_6501":{"entryPoint":4095,"id":6501,"parameterSlots":3,"returnSlots":0},"@setMiddleware_6541":{"entryPoint":9205,"id":6541,"parameterSlots":4,"returnSlots":0},"@supportsInterface_1451":{"entryPoint":2362,"id":1451,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3199":{"entryPoint":null,"id":3199,"parameterSlots":1,"returnSlots":1},"@symbol_1523":{"entryPoint":7553,"id":1523,"parameterSlots":0,"returnSlots":1},"@toString_5340":{"entryPoint":13414,"id":5340,"parameterSlots":1,"returnSlots":1},"@tokenURI_6439":{"entryPoint":8197,"id":6439,"parameterSlots":1,"returnSlots":1},"@totalSupply_6479":{"entryPoint":null,"id":6479,"parameterSlots":0,"returnSlots":1},"@transferFrom_1694":{"entryPoint":10985,"id":1694,"parameterSlots":3,"returnSlots":0},"@transferFrom_6350":{"entryPoint":4194,"id":6350,"parameterSlots":3,"returnSlots":0},"@transferOwnership_514":{"entryPoint":9025,"id":514,"parameterSlots":1,"returnSlots":0},"@unpause_6561":{"entryPoint":5593,"id":6561,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1198":{"entryPoint":5996,"id":1198,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1177":{"entryPoint":5076,"id":1177,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2735":{"entryPoint":16982,"id":2735,"parameterSlots":4,"returnSlots":1},"abi_decode_address":{"entryPoint":17821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":17535,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":17748,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_MetadataPair":{"entryPoint":18690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":19345,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":18134,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":19035,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":18635,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":18424,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":18016,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":20077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":21071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr":{"entryPoint":19396,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_string_calldata_ptr":{"entryPoint":18058,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes4":{"entryPoint":17251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":21195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_bytes32":{"entryPoint":18194,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_calldata_ptrt_bytes32t_addresst_bytes_calldata_ptr":{"entryPoint":18480,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_string_calldata_ptrt_bytes32t_boolt_string_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":19139,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address":{"entryPoint":17862,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":17991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_struct$_MetadataPair_$5293_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":18270,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_array$_t_struct$_MetadataPair_$5293_memory_ptr_$dyn_memory_ptr":{"entryPoint":18828,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_calldata_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":17677,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":17316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":19949,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20972,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20807,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21132,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_string_calldata_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20022,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20057,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":21096,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_bytes32_t_bool__to_t_string_memory_ptr_t_bytes32_t_bool__fromStack_reversed":{"entryPoint":20988,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20499,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_132cade136e5864ed6f6f60db47cb872f3bd8363cd38183a10b735188ba5ff5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_690d813f825dd4dd92907e1429f9e9d01f0cb6239eb289ec82623ae817686b0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_806fc2f0c528614f6371ca4d5621d8076cd90c51a2211198fdc62e3aba768436__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b57486942432b5ec89eaefbe7911ae2e63f871808daa7bd2261d2d6bdfa6e7e9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c16e8dd559ff445903b31b38ace05f162c07cc8b27da39dd23f80f3dba5b68b1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d4d6719c9f6bf1f398a61e7ceb8dff26d48346602421236409d0fb0b222f65b2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebd31dcb44615cb17d73824c7a1cd3c2bb0eba2c267afdbb3e21263895a0cab2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_RegisterNameParams_$5302_memory_ptr_t_bytes_calldata_ptr__to_t_struct$_RegisterNameParams_$5302_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20692,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_struct$_MetadataPair_$5293_calldata_ptr":{"entryPoint":20153,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":17456,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":19597,"id":null,"parameterSlots":3,"returnSlots":0},"convert_t_struct$_MetadataPair_$5293_calldata_ptr_to_t_struct$_MetadataPair_$5293_memory_ptr":{"entryPoint":20205,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":19667,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":20217,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":17280,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":20639,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":19486,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":20583,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":21032,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":20536,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20106,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17409,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":18621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":17205,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40432:29","statements":[{"nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:133:29","statements":[{"body":{"nodeType":"YulBlock","src":"169:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:29"},"nodeType":"YulFunctionCall","src":"171:12:29"},"nodeType":"YulExpressionStatement","src":"171:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"99:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:29"},"nodeType":"YulFunctionCall","src":"88:78:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:29"},"nodeType":"YulFunctionCall","src":"78:89:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:29"},"nodeType":"YulFunctionCall","src":"71:97:29"},"nodeType":"YulIf","src":"68:117:29"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:29","type":""}],"src":"14:177:29"},{"body":{"nodeType":"YulBlock","src":"265:176:29","statements":[{"body":{"nodeType":"YulBlock","src":"311:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"323:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"313:6:29"},"nodeType":"YulFunctionCall","src":"313:12:29"},"nodeType":"YulExpressionStatement","src":"313:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"286:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"295:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"282:3:29"},"nodeType":"YulFunctionCall","src":"282:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"307:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"278:3:29"},"nodeType":"YulFunctionCall","src":"278:32:29"},"nodeType":"YulIf","src":"275:52:29"},{"nodeType":"YulVariableDeclaration","src":"336:36:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"349:12:29"},"nodeType":"YulFunctionCall","src":"349:23:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"340:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"405:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"381:23:29"},"nodeType":"YulFunctionCall","src":"381:30:29"},"nodeType":"YulExpressionStatement","src":"381:30:29"},{"nodeType":"YulAssignment","src":"420:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"430:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"420:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"231:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"242:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"254:6:29","type":""}],"src":"196:245:29"},{"body":{"nodeType":"YulBlock","src":"541:92:29","statements":[{"nodeType":"YulAssignment","src":"551:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"574:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:29"},"nodeType":"YulFunctionCall","src":"559:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"551:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"593:9:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"618:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"611:6:29"},"nodeType":"YulFunctionCall","src":"611:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"604:6:29"},"nodeType":"YulFunctionCall","src":"604:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"586:6:29"},"nodeType":"YulFunctionCall","src":"586:41:29"},"nodeType":"YulExpressionStatement","src":"586:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"510:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"521:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"532:4:29","type":""}],"src":"446:187:29"},{"body":{"nodeType":"YulBlock","src":"704:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"714:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"723:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"718:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"783:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"808:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"813:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:29"},"nodeType":"YulFunctionCall","src":"804:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"827:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"832:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"823:3:29"},"nodeType":"YulFunctionCall","src":"823:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"817:5:29"},"nodeType":"YulFunctionCall","src":"817:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"797:6:29"},"nodeType":"YulFunctionCall","src":"797:39:29"},"nodeType":"YulExpressionStatement","src":"797:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"744:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"747:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"741:2:29"},"nodeType":"YulFunctionCall","src":"741:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"755:19:29","statements":[{"nodeType":"YulAssignment","src":"757:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"766:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:29"},"nodeType":"YulFunctionCall","src":"762:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"757:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"737:3:29","statements":[]},"src":"733:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"866:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"871:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"862:3:29"},"nodeType":"YulFunctionCall","src":"862:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"880:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"855:6:29"},"nodeType":"YulFunctionCall","src":"855:27:29"},"nodeType":"YulExpressionStatement","src":"855:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"682:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"687:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"692:6:29","type":""}],"src":"638:250:29"},{"body":{"nodeType":"YulBlock","src":"943:280:29","statements":[{"nodeType":"YulVariableDeclaration","src":"953:26:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"973:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"967:5:29"},"nodeType":"YulFunctionCall","src":"967:12:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"957:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"995:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1000:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"988:6:29"},"nodeType":"YulFunctionCall","src":"988:19:29"},"nodeType":"YulExpressionStatement","src":"988:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1055:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1062:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:29"},"nodeType":"YulFunctionCall","src":"1051:16:29"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1073:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1078:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1069:3:29"},"nodeType":"YulFunctionCall","src":"1069:14:29"},{"name":"length","nodeType":"YulIdentifier","src":"1085:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1016:34:29"},"nodeType":"YulFunctionCall","src":"1016:76:29"},"nodeType":"YulExpressionStatement","src":"1016:76:29"},{"nodeType":"YulAssignment","src":"1101:116:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1116:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1129:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1137:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1125:3:29"},"nodeType":"YulFunctionCall","src":"1125:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"1142:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1121:3:29"},"nodeType":"YulFunctionCall","src":"1121:88:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1112:3:29"},"nodeType":"YulFunctionCall","src":"1112:98:29"},{"kind":"number","nodeType":"YulLiteral","src":"1212:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1108:3:29"},"nodeType":"YulFunctionCall","src":"1108:109:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1101:3:29"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"920:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"927:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"935:3:29","type":""}],"src":"893:330:29"},{"body":{"nodeType":"YulBlock","src":"1349:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1366:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1377:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1359:6:29"},"nodeType":"YulFunctionCall","src":"1359:21:29"},"nodeType":"YulExpressionStatement","src":"1359:21:29"},{"nodeType":"YulAssignment","src":"1389:53:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1415:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1427:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1438:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1423:3:29"},"nodeType":"YulFunctionCall","src":"1423:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1397:17:29"},"nodeType":"YulFunctionCall","src":"1397:45:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1389:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1318:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1329:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1340:4:29","type":""}],"src":"1228:220:29"},{"body":{"nodeType":"YulBlock","src":"1485:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1505:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1495:6:29"},"nodeType":"YulFunctionCall","src":"1495:88:29"},"nodeType":"YulExpressionStatement","src":"1495:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1599:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1602:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1592:6:29"},"nodeType":"YulFunctionCall","src":"1592:15:29"},"nodeType":"YulExpressionStatement","src":"1592:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1623:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1626:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1616:6:29"},"nodeType":"YulFunctionCall","src":"1616:15:29"},"nodeType":"YulExpressionStatement","src":"1616:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1453:184:29"},{"body":{"nodeType":"YulBlock","src":"1687:289:29","statements":[{"nodeType":"YulAssignment","src":"1697:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1707:5:29"},"nodeType":"YulFunctionCall","src":"1707:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1697:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"1725:117:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1747:6:29"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1763:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1769:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:29"},"nodeType":"YulFunctionCall","src":"1759:13:29"},{"kind":"number","nodeType":"YulLiteral","src":"1774:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1755:3:29"},"nodeType":"YulFunctionCall","src":"1755:86:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:29"},"nodeType":"YulFunctionCall","src":"1743:99:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1729:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1917:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1919:16:29"},"nodeType":"YulFunctionCall","src":"1919:18:29"},"nodeType":"YulExpressionStatement","src":"1919:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1860:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1872:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1857:2:29"},"nodeType":"YulFunctionCall","src":"1857:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1896:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1908:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1893:2:29"},"nodeType":"YulFunctionCall","src":"1893:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1854:2:29"},"nodeType":"YulFunctionCall","src":"1854:62:29"},"nodeType":"YulIf","src":"1851:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1955:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1959:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1948:6:29"},"nodeType":"YulFunctionCall","src":"1948:22:29"},"nodeType":"YulExpressionStatement","src":"1948:22:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1667:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1676:6:29","type":""}],"src":"1642:334:29"},{"body":{"nodeType":"YulBlock","src":"2034:537:29","statements":[{"body":{"nodeType":"YulBlock","src":"2083:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2092:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2095:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2085:6:29"},"nodeType":"YulFunctionCall","src":"2085:12:29"},"nodeType":"YulExpressionStatement","src":"2085:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2062:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2070:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:29"},"nodeType":"YulFunctionCall","src":"2058:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2077:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2054:3:29"},"nodeType":"YulFunctionCall","src":"2054:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2047:6:29"},"nodeType":"YulFunctionCall","src":"2047:35:29"},"nodeType":"YulIf","src":"2044:55:29"},{"nodeType":"YulVariableDeclaration","src":"2108:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2131:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2118:12:29"},"nodeType":"YulFunctionCall","src":"2118:20:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2112:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2177:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2179:16:29"},"nodeType":"YulFunctionCall","src":"2179:18:29"},"nodeType":"YulExpressionStatement","src":"2179:18:29"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2153:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2157:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2150:2:29"},"nodeType":"YulFunctionCall","src":"2150:26:29"},"nodeType":"YulIf","src":"2147:52:29"},{"nodeType":"YulVariableDeclaration","src":"2208:129:29","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2251:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"2255:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2247:3:29"},"nodeType":"YulFunctionCall","src":"2247:13:29"},{"kind":"number","nodeType":"YulLiteral","src":"2262:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2243:3:29"},"nodeType":"YulFunctionCall","src":"2243:86:29"},{"kind":"number","nodeType":"YulLiteral","src":"2331:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2239:3:29"},"nodeType":"YulFunctionCall","src":"2239:97:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2223:15:29"},"nodeType":"YulFunctionCall","src":"2223:114:29"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"2212:7:29","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2353:7:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2362:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2346:6:29"},"nodeType":"YulFunctionCall","src":"2346:19:29"},"nodeType":"YulExpressionStatement","src":"2346:19:29"},{"body":{"nodeType":"YulBlock","src":"2413:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2422:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2425:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2415:6:29"},"nodeType":"YulFunctionCall","src":"2415:12:29"},"nodeType":"YulExpressionStatement","src":"2415:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2388:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2396:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2384:3:29"},"nodeType":"YulFunctionCall","src":"2384:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"2401:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2380:3:29"},"nodeType":"YulFunctionCall","src":"2380:26:29"},{"name":"end","nodeType":"YulIdentifier","src":"2408:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2377:2:29"},"nodeType":"YulFunctionCall","src":"2377:35:29"},"nodeType":"YulIf","src":"2374:55:29"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2455:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"2464:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2451:3:29"},"nodeType":"YulFunctionCall","src":"2451:18:29"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2475:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2483:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2471:3:29"},"nodeType":"YulFunctionCall","src":"2471:17:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2490:2:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2438:12:29"},"nodeType":"YulFunctionCall","src":"2438:55:29"},"nodeType":"YulExpressionStatement","src":"2438:55:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2517:7:29"},{"name":"_1","nodeType":"YulIdentifier","src":"2526:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:29"},"nodeType":"YulFunctionCall","src":"2513:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2531:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2509:3:29"},"nodeType":"YulFunctionCall","src":"2509:27:29"},{"kind":"number","nodeType":"YulLiteral","src":"2538:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2502:6:29"},"nodeType":"YulFunctionCall","src":"2502:38:29"},"nodeType":"YulExpressionStatement","src":"2502:38:29"},{"nodeType":"YulAssignment","src":"2549:16:29","value":{"name":"array_1","nodeType":"YulIdentifier","src":"2558:7:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2549:5:29"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2008:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2016:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2024:5:29","type":""}],"src":"1981:590:29"},{"body":{"nodeType":"YulBlock","src":"2673:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"2719:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2728:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2731:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2721:6:29"},"nodeType":"YulFunctionCall","src":"2721:12:29"},"nodeType":"YulExpressionStatement","src":"2721:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2694:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2703:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2690:3:29"},"nodeType":"YulFunctionCall","src":"2690:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2715:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2686:3:29"},"nodeType":"YulFunctionCall","src":"2686:32:29"},"nodeType":"YulIf","src":"2683:52:29"},{"nodeType":"YulAssignment","src":"2744:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2767:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2754:12:29"},"nodeType":"YulFunctionCall","src":"2754:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2744:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"2786:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2817:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2828:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2813:3:29"},"nodeType":"YulFunctionCall","src":"2813:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2800:12:29"},"nodeType":"YulFunctionCall","src":"2800:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2790:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2884:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2887:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2877:6:29"},"nodeType":"YulFunctionCall","src":"2877:12:29"},"nodeType":"YulExpressionStatement","src":"2877:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:29"},"nodeType":"YulFunctionCall","src":"2844:30:29"},"nodeType":"YulIf","src":"2841:50:29"},{"nodeType":"YulAssignment","src":"2900:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2932:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2943:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2928:3:29"},"nodeType":"YulFunctionCall","src":"2928:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2952:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2910:17:29"},"nodeType":"YulFunctionCall","src":"2910:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2900:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2642:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2654:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2662:6:29","type":""}],"src":"2576:390:29"},{"body":{"nodeType":"YulBlock","src":"3044:275:29","statements":[{"body":{"nodeType":"YulBlock","src":"3093:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3102:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3105:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3095:6:29"},"nodeType":"YulFunctionCall","src":"3095:12:29"},"nodeType":"YulExpressionStatement","src":"3095:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3072:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3080:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3068:3:29"},"nodeType":"YulFunctionCall","src":"3068:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"3087:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3064:3:29"},"nodeType":"YulFunctionCall","src":"3064:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3057:6:29"},"nodeType":"YulFunctionCall","src":"3057:35:29"},"nodeType":"YulIf","src":"3054:55:29"},{"nodeType":"YulAssignment","src":"3118:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3141:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3128:12:29"},"nodeType":"YulFunctionCall","src":"3128:20:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3118:6:29"}]},{"body":{"nodeType":"YulBlock","src":"3191:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3200:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3203:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3193:6:29"},"nodeType":"YulFunctionCall","src":"3193:12:29"},"nodeType":"YulExpressionStatement","src":"3193:12:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3163:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3171:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3160:2:29"},"nodeType":"YulFunctionCall","src":"3160:30:29"},"nodeType":"YulIf","src":"3157:50:29"},{"nodeType":"YulAssignment","src":"3216:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3232:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3240:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:29"},"nodeType":"YulFunctionCall","src":"3228:17:29"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3216:8:29"}]},{"body":{"nodeType":"YulBlock","src":"3297:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3306:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3309:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3299:6:29"},"nodeType":"YulFunctionCall","src":"3299:12:29"},"nodeType":"YulExpressionStatement","src":"3299:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3268:6:29"},{"name":"length","nodeType":"YulIdentifier","src":"3276:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3264:3:29"},"nodeType":"YulFunctionCall","src":"3264:19:29"},{"kind":"number","nodeType":"YulLiteral","src":"3285:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:29"},"nodeType":"YulFunctionCall","src":"3260:30:29"},{"name":"end","nodeType":"YulIdentifier","src":"3292:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3257:2:29"},"nodeType":"YulFunctionCall","src":"3257:39:29"},"nodeType":"YulIf","src":"3254:59:29"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3007:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3015:3:29","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3023:8:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"3033:6:29","type":""}],"src":"2971:348:29"},{"body":{"nodeType":"YulBlock","src":"3373:147:29","statements":[{"nodeType":"YulAssignment","src":"3383:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3405:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3392:12:29"},"nodeType":"YulFunctionCall","src":"3392:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3383:5:29"}]},{"body":{"nodeType":"YulBlock","src":"3498:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3507:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3500:6:29"},"nodeType":"YulFunctionCall","src":"3500:12:29"},"nodeType":"YulExpressionStatement","src":"3500:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3434:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3445:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3452:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3441:3:29"},"nodeType":"YulFunctionCall","src":"3441:54:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3431:2:29"},"nodeType":"YulFunctionCall","src":"3431:65:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3424:6:29"},"nodeType":"YulFunctionCall","src":"3424:73:29"},"nodeType":"YulIf","src":"3421:93:29"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3352:6:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3363:5:29","type":""}],"src":"3324:196:29"},{"body":{"nodeType":"YulBlock","src":"3669:651:29","statements":[{"body":{"nodeType":"YulBlock","src":"3715:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3724:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3727:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3717:6:29"},"nodeType":"YulFunctionCall","src":"3717:12:29"},"nodeType":"YulExpressionStatement","src":"3717:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3690:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3699:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3686:3:29"},"nodeType":"YulFunctionCall","src":"3686:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3682:3:29"},"nodeType":"YulFunctionCall","src":"3682:32:29"},"nodeType":"YulIf","src":"3679:52:29"},{"nodeType":"YulVariableDeclaration","src":"3740:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3767:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3754:12:29"},"nodeType":"YulFunctionCall","src":"3754:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3744:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3786:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3796:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3790:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3841:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3850:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3853:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3843:6:29"},"nodeType":"YulFunctionCall","src":"3843:12:29"},"nodeType":"YulExpressionStatement","src":"3843:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3829:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"3837:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3826:2:29"},"nodeType":"YulFunctionCall","src":"3826:14:29"},"nodeType":"YulIf","src":"3823:34:29"},{"nodeType":"YulVariableDeclaration","src":"3866:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3923:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3934:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3919:3:29"},"nodeType":"YulFunctionCall","src":"3919:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3943:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"3892:26:29"},"nodeType":"YulFunctionCall","src":"3892:59:29"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"3870:8:29","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"3880:8:29","type":""}]},{"nodeType":"YulAssignment","src":"3960:18:29","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"3970:8:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3960:6:29"}]},{"nodeType":"YulAssignment","src":"3987:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"3997:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3987:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"4014:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4047:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4058:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:29"},"nodeType":"YulFunctionCall","src":"4043:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4030:12:29"},"nodeType":"YulFunctionCall","src":"4030:32:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4018:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4091:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4100:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4103:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4093:6:29"},"nodeType":"YulFunctionCall","src":"4093:12:29"},"nodeType":"YulExpressionStatement","src":"4093:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4077:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"4087:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4074:2:29"},"nodeType":"YulFunctionCall","src":"4074:16:29"},"nodeType":"YulIf","src":"4071:36:29"},{"nodeType":"YulVariableDeclaration","src":"4116:87:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4173:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4184:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4169:3:29"},"nodeType":"YulFunctionCall","src":"4169:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4195:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4142:26:29"},"nodeType":"YulFunctionCall","src":"4142:61:29"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"4120:8:29","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"4130:8:29","type":""}]},{"nodeType":"YulAssignment","src":"4212:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4222:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4212:6:29"}]},{"nodeType":"YulAssignment","src":"4239:18:29","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4249:8:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4239:6:29"}]},{"nodeType":"YulAssignment","src":"4266:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4299:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4310:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4295:3:29"},"nodeType":"YulFunctionCall","src":"4295:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4276:18:29"},"nodeType":"YulFunctionCall","src":"4276:38:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4266:6:29"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3603:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3614:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3626:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3634:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3642:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3650:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3658:6:29","type":""}],"src":"3525:795:29"},{"body":{"nodeType":"YulBlock","src":"4395:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"4441:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4450:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4453:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4443:6:29"},"nodeType":"YulFunctionCall","src":"4443:12:29"},"nodeType":"YulExpressionStatement","src":"4443:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4416:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4412:3:29"},"nodeType":"YulFunctionCall","src":"4412:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4437:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4408:3:29"},"nodeType":"YulFunctionCall","src":"4408:32:29"},"nodeType":"YulIf","src":"4405:52:29"},{"nodeType":"YulAssignment","src":"4466:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4489:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4476:12:29"},"nodeType":"YulFunctionCall","src":"4476:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4466:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4361:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4372:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4384:6:29","type":""}],"src":"4325:180:29"},{"body":{"nodeType":"YulBlock","src":"4611:125:29","statements":[{"nodeType":"YulAssignment","src":"4621:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4633:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4644:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4629:3:29"},"nodeType":"YulFunctionCall","src":"4629:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4621:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4678:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4686:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4674:3:29"},"nodeType":"YulFunctionCall","src":"4674:55:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4656:6:29"},"nodeType":"YulFunctionCall","src":"4656:74:29"},"nodeType":"YulExpressionStatement","src":"4656:74:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4580:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4591:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4602:4:29","type":""}],"src":"4510:226:29"},{"body":{"nodeType":"YulBlock","src":"4828:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"4874:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4883:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4886:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4876:6:29"},"nodeType":"YulFunctionCall","src":"4876:12:29"},"nodeType":"YulExpressionStatement","src":"4876:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4849:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4858:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4845:3:29"},"nodeType":"YulFunctionCall","src":"4845:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4870:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4841:3:29"},"nodeType":"YulFunctionCall","src":"4841:32:29"},"nodeType":"YulIf","src":"4838:52:29"},{"nodeType":"YulAssignment","src":"4899:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4928:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4909:18:29"},"nodeType":"YulFunctionCall","src":"4909:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4899:6:29"}]},{"nodeType":"YulAssignment","src":"4947:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4974:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4985:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4970:3:29"},"nodeType":"YulFunctionCall","src":"4970:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4957:12:29"},"nodeType":"YulFunctionCall","src":"4957:32:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4947:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4786:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4797:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4809:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4817:6:29","type":""}],"src":"4741:254:29"},{"body":{"nodeType":"YulBlock","src":"5099:101:29","statements":[{"nodeType":"YulAssignment","src":"5109:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5121:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5132:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5117:3:29"},"nodeType":"YulFunctionCall","src":"5117:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5109:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5151:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5166:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5174:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5162:3:29"},"nodeType":"YulFunctionCall","src":"5162:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5144:6:29"},"nodeType":"YulFunctionCall","src":"5144:50:29"},"nodeType":"YulExpressionStatement","src":"5144:50:29"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5068:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5079:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5090:4:29","type":""}],"src":"5000:200:29"},{"body":{"nodeType":"YulBlock","src":"5275:110:29","statements":[{"body":{"nodeType":"YulBlock","src":"5321:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5330:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5333:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5323:6:29"},"nodeType":"YulFunctionCall","src":"5323:12:29"},"nodeType":"YulExpressionStatement","src":"5323:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5296:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5305:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5292:3:29"},"nodeType":"YulFunctionCall","src":"5292:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5317:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5288:3:29"},"nodeType":"YulFunctionCall","src":"5288:32:29"},"nodeType":"YulIf","src":"5285:52:29"},{"nodeType":"YulAssignment","src":"5346:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5356:12:29"},"nodeType":"YulFunctionCall","src":"5356:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5346:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5241:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5252:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5264:6:29","type":""}],"src":"5205:180:29"},{"body":{"nodeType":"YulBlock","src":"5491:76:29","statements":[{"nodeType":"YulAssignment","src":"5501:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5524:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:29"},"nodeType":"YulFunctionCall","src":"5509:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5501:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5543:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"5554:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5536:6:29"},"nodeType":"YulFunctionCall","src":"5536:25:29"},"nodeType":"YulExpressionStatement","src":"5536:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5460:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5471:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5482:4:29","type":""}],"src":"5390:177:29"},{"body":{"nodeType":"YulBlock","src":"5679:372:29","statements":[{"body":{"nodeType":"YulBlock","src":"5725:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5734:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5737:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5727:6:29"},"nodeType":"YulFunctionCall","src":"5727:12:29"},"nodeType":"YulExpressionStatement","src":"5727:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5700:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5709:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5696:3:29"},"nodeType":"YulFunctionCall","src":"5696:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5721:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5692:3:29"},"nodeType":"YulFunctionCall","src":"5692:32:29"},"nodeType":"YulIf","src":"5689:52:29"},{"nodeType":"YulAssignment","src":"5750:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5773:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5760:12:29"},"nodeType":"YulFunctionCall","src":"5760:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5750:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"5792:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5823:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5834:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5819:3:29"},"nodeType":"YulFunctionCall","src":"5819:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5806:12:29"},"nodeType":"YulFunctionCall","src":"5806:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5796:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5881:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5890:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5893:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5883:6:29"},"nodeType":"YulFunctionCall","src":"5883:12:29"},"nodeType":"YulExpressionStatement","src":"5883:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5853:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5861:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5850:2:29"},"nodeType":"YulFunctionCall","src":"5850:30:29"},"nodeType":"YulIf","src":"5847:50:29"},{"nodeType":"YulVariableDeclaration","src":"5906:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5963:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5974:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:29"},"nodeType":"YulFunctionCall","src":"5959:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5983:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"5932:26:29"},"nodeType":"YulFunctionCall","src":"5932:59:29"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"5910:8:29","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"5920:8:29","type":""}]},{"nodeType":"YulAssignment","src":"6000:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"6010:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6000:6:29"}]},{"nodeType":"YulAssignment","src":"6027:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"6037:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6027:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5629:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5640:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5652:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5660:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5668:6:29","type":""}],"src":"5572:479:29"},{"body":{"nodeType":"YulBlock","src":"6160:224:29","statements":[{"body":{"nodeType":"YulBlock","src":"6206:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6215:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6218:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6208:6:29"},"nodeType":"YulFunctionCall","src":"6208:12:29"},"nodeType":"YulExpressionStatement","src":"6208:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6181:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6190:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6177:3:29"},"nodeType":"YulFunctionCall","src":"6177:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6202:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6173:3:29"},"nodeType":"YulFunctionCall","src":"6173:32:29"},"nodeType":"YulIf","src":"6170:52:29"},{"nodeType":"YulAssignment","src":"6231:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6260:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6241:18:29"},"nodeType":"YulFunctionCall","src":"6241:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6231:6:29"}]},{"nodeType":"YulAssignment","src":"6279:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6312:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6323:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6308:3:29"},"nodeType":"YulFunctionCall","src":"6308:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6289:18:29"},"nodeType":"YulFunctionCall","src":"6289:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6279:6:29"}]},{"nodeType":"YulAssignment","src":"6336:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6363:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6374:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6359:3:29"},"nodeType":"YulFunctionCall","src":"6359:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6346:12:29"},"nodeType":"YulFunctionCall","src":"6346:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6336:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6110:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6121:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6133:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6141:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6149:6:29","type":""}],"src":"6056:328:29"},{"body":{"nodeType":"YulBlock","src":"6496:372:29","statements":[{"body":{"nodeType":"YulBlock","src":"6542:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6551:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6554:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6544:6:29"},"nodeType":"YulFunctionCall","src":"6544:12:29"},"nodeType":"YulExpressionStatement","src":"6544:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6517:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6526:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6513:3:29"},"nodeType":"YulFunctionCall","src":"6513:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6538:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6509:3:29"},"nodeType":"YulFunctionCall","src":"6509:32:29"},"nodeType":"YulIf","src":"6506:52:29"},{"nodeType":"YulVariableDeclaration","src":"6567:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6594:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6581:12:29"},"nodeType":"YulFunctionCall","src":"6581:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6571:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6647:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6656:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6659:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6649:6:29"},"nodeType":"YulFunctionCall","src":"6649:12:29"},"nodeType":"YulExpressionStatement","src":"6649:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6619:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6627:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6616:2:29"},"nodeType":"YulFunctionCall","src":"6616:30:29"},"nodeType":"YulIf","src":"6613:50:29"},{"nodeType":"YulVariableDeclaration","src":"6672:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6729:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6740:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6725:3:29"},"nodeType":"YulFunctionCall","src":"6725:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6749:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"6698:26:29"},"nodeType":"YulFunctionCall","src":"6698:59:29"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"6676:8:29","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"6686:8:29","type":""}]},{"nodeType":"YulAssignment","src":"6766:18:29","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"6776:8:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6766:6:29"}]},{"nodeType":"YulAssignment","src":"6793:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"6803:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6793:6:29"}]},{"nodeType":"YulAssignment","src":"6820:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6847:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6858:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6843:3:29"},"nodeType":"YulFunctionCall","src":"6843:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6830:12:29"},"nodeType":"YulFunctionCall","src":"6830:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6820:6:29"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6446:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6457:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6469:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6477:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6485:6:29","type":""}],"src":"6389:479:29"},{"body":{"nodeType":"YulBlock","src":"7027:561:29","statements":[{"body":{"nodeType":"YulBlock","src":"7073:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7082:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7085:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7075:6:29"},"nodeType":"YulFunctionCall","src":"7075:12:29"},"nodeType":"YulExpressionStatement","src":"7075:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7048:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7057:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7044:3:29"},"nodeType":"YulFunctionCall","src":"7044:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7069:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7040:3:29"},"nodeType":"YulFunctionCall","src":"7040:32:29"},"nodeType":"YulIf","src":"7037:52:29"},{"nodeType":"YulAssignment","src":"7098:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7121:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7108:12:29"},"nodeType":"YulFunctionCall","src":"7108:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7098:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"7140:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7171:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7167:3:29"},"nodeType":"YulFunctionCall","src":"7167:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7154:12:29"},"nodeType":"YulFunctionCall","src":"7154:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7144:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7195:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7205:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7199:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7250:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7259:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7262:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7252:6:29"},"nodeType":"YulFunctionCall","src":"7252:12:29"},"nodeType":"YulExpressionStatement","src":"7252:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7238:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"7246:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7235:2:29"},"nodeType":"YulFunctionCall","src":"7235:14:29"},"nodeType":"YulIf","src":"7232:34:29"},{"nodeType":"YulVariableDeclaration","src":"7275:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7289:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7300:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7285:3:29"},"nodeType":"YulFunctionCall","src":"7285:22:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7279:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7355:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7364:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7367:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7357:6:29"},"nodeType":"YulFunctionCall","src":"7357:12:29"},"nodeType":"YulExpressionStatement","src":"7357:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7334:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7338:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7330:3:29"},"nodeType":"YulFunctionCall","src":"7330:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7345:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7326:3:29"},"nodeType":"YulFunctionCall","src":"7326:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7319:6:29"},"nodeType":"YulFunctionCall","src":"7319:35:29"},"nodeType":"YulIf","src":"7316:55:29"},{"nodeType":"YulVariableDeclaration","src":"7380:30:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7407:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7394:12:29"},"nodeType":"YulFunctionCall","src":"7394:16:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7384:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7437:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7446:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7449:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7439:6:29"},"nodeType":"YulFunctionCall","src":"7439:12:29"},"nodeType":"YulExpressionStatement","src":"7439:12:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7425:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"7433:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7422:2:29"},"nodeType":"YulFunctionCall","src":"7422:14:29"},"nodeType":"YulIf","src":"7419:34:29"},{"body":{"nodeType":"YulBlock","src":"7511:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7520:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7523:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7513:6:29"},"nodeType":"YulFunctionCall","src":"7513:12:29"},"nodeType":"YulExpressionStatement","src":"7513:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7476:2:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7484:1:29","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"7487:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7480:3:29"},"nodeType":"YulFunctionCall","src":"7480:14:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7472:3:29"},"nodeType":"YulFunctionCall","src":"7472:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7497:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7468:3:29"},"nodeType":"YulFunctionCall","src":"7468:32:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7502:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7465:2:29"},"nodeType":"YulFunctionCall","src":"7465:45:29"},"nodeType":"YulIf","src":"7462:65:29"},{"nodeType":"YulAssignment","src":"7536:21:29","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7550:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"7554:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7546:3:29"},"nodeType":"YulFunctionCall","src":"7546:11:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7536:6:29"}]},{"nodeType":"YulAssignment","src":"7566:16:29","value":{"name":"length","nodeType":"YulIdentifier","src":"7576:6:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7566:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_struct$_MetadataPair_$5293_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6977:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6988:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7000:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7008:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7016:6:29","type":""}],"src":"6873:715:29"},{"body":{"nodeType":"YulBlock","src":"7663:116:29","statements":[{"body":{"nodeType":"YulBlock","src":"7709:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7718:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7721:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7711:6:29"},"nodeType":"YulFunctionCall","src":"7711:12:29"},"nodeType":"YulExpressionStatement","src":"7711:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7684:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7680:3:29"},"nodeType":"YulFunctionCall","src":"7680:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7705:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7676:3:29"},"nodeType":"YulFunctionCall","src":"7676:32:29"},"nodeType":"YulIf","src":"7673:52:29"},{"nodeType":"YulAssignment","src":"7734:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7763:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7744:18:29"},"nodeType":"YulFunctionCall","src":"7744:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7734:6:29"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7629:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7640:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7652:6:29","type":""}],"src":"7593:186:29"},{"body":{"nodeType":"YulBlock","src":"7880:299:29","statements":[{"body":{"nodeType":"YulBlock","src":"7926:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7935:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7938:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7928:6:29"},"nodeType":"YulFunctionCall","src":"7928:12:29"},"nodeType":"YulExpressionStatement","src":"7928:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7901:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7910:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7897:3:29"},"nodeType":"YulFunctionCall","src":"7897:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7922:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7893:3:29"},"nodeType":"YulFunctionCall","src":"7893:32:29"},"nodeType":"YulIf","src":"7890:52:29"},{"nodeType":"YulAssignment","src":"7951:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7980:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7961:18:29"},"nodeType":"YulFunctionCall","src":"7961:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7951:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"7999:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8030:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8041:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8026:3:29"},"nodeType":"YulFunctionCall","src":"8026:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8013:12:29"},"nodeType":"YulFunctionCall","src":"8013:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8003:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8088:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8097:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8100:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8090:6:29"},"nodeType":"YulFunctionCall","src":"8090:12:29"},"nodeType":"YulExpressionStatement","src":"8090:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8060:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8068:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8057:2:29"},"nodeType":"YulFunctionCall","src":"8057:30:29"},"nodeType":"YulIf","src":"8054:50:29"},{"nodeType":"YulAssignment","src":"8113:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8145:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8156:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8141:3:29"},"nodeType":"YulFunctionCall","src":"8141:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8165:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8123:17:29"},"nodeType":"YulFunctionCall","src":"8123:50:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8113:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7838:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7849:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7861:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7869:6:29","type":""}],"src":"7784:395:29"},{"body":{"nodeType":"YulBlock","src":"8285:76:29","statements":[{"nodeType":"YulAssignment","src":"8295:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8307:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8303:3:29"},"nodeType":"YulFunctionCall","src":"8303:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8295:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8337:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"8348:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8330:6:29"},"nodeType":"YulFunctionCall","src":"8330:25:29"},"nodeType":"YulExpressionStatement","src":"8330:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8254:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8265:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8276:4:29","type":""}],"src":"8184:177:29"},{"body":{"nodeType":"YulBlock","src":"8526:703:29","statements":[{"body":{"nodeType":"YulBlock","src":"8573:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8582:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8585:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8575:6:29"},"nodeType":"YulFunctionCall","src":"8575:12:29"},"nodeType":"YulExpressionStatement","src":"8575:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8547:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8556:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8543:3:29"},"nodeType":"YulFunctionCall","src":"8543:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8568:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8539:3:29"},"nodeType":"YulFunctionCall","src":"8539:33:29"},"nodeType":"YulIf","src":"8536:53:29"},{"nodeType":"YulVariableDeclaration","src":"8598:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8625:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8612:12:29"},"nodeType":"YulFunctionCall","src":"8612:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8602:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8644:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8654:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8648:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8699:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8708:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8711:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8701:6:29"},"nodeType":"YulFunctionCall","src":"8701:12:29"},"nodeType":"YulExpressionStatement","src":"8701:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8687:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"8695:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8684:2:29"},"nodeType":"YulFunctionCall","src":"8684:14:29"},"nodeType":"YulIf","src":"8681:34:29"},{"nodeType":"YulVariableDeclaration","src":"8724:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8781:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8792:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8777:3:29"},"nodeType":"YulFunctionCall","src":"8777:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8801:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"8750:26:29"},"nodeType":"YulFunctionCall","src":"8750:59:29"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"8728:8:29","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"8738:8:29","type":""}]},{"nodeType":"YulAssignment","src":"8818:18:29","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"8828:8:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8818:6:29"}]},{"nodeType":"YulAssignment","src":"8845:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"8855:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8845:6:29"}]},{"nodeType":"YulAssignment","src":"8872:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8899:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8910:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8895:3:29"},"nodeType":"YulFunctionCall","src":"8895:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8882:12:29"},"nodeType":"YulFunctionCall","src":"8882:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8872:6:29"}]},{"nodeType":"YulAssignment","src":"8923:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8956:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8967:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8952:3:29"},"nodeType":"YulFunctionCall","src":"8952:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8933:18:29"},"nodeType":"YulFunctionCall","src":"8933:38:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8923:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"8980:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9013:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9024:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9009:3:29"},"nodeType":"YulFunctionCall","src":"9009:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8996:12:29"},"nodeType":"YulFunctionCall","src":"8996:32:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"8984:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9057:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9066:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9069:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9059:6:29"},"nodeType":"YulFunctionCall","src":"9059:12:29"},"nodeType":"YulExpressionStatement","src":"9059:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9043:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"9053:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9040:2:29"},"nodeType":"YulFunctionCall","src":"9040:16:29"},"nodeType":"YulIf","src":"9037:36:29"},{"nodeType":"YulVariableDeclaration","src":"9082:87:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9139:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9150:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9135:3:29"},"nodeType":"YulFunctionCall","src":"9135:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9161:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"9108:26:29"},"nodeType":"YulFunctionCall","src":"9108:61:29"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"9086:8:29","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"9096:8:29","type":""}]},{"nodeType":"YulAssignment","src":"9178:18:29","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"9188:8:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9178:6:29"}]},{"nodeType":"YulAssignment","src":"9205:18:29","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"9215:8:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9205:6:29"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_bytes32t_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8452:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8463:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8475:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8483:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8491:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8499:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8507:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8515:6:29","type":""}],"src":"8366:863:29"},{"body":{"nodeType":"YulBlock","src":"9276:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"9330:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9339:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9342:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9332:6:29"},"nodeType":"YulFunctionCall","src":"9332:12:29"},"nodeType":"YulExpressionStatement","src":"9332:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9299:5:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9320:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9313:6:29"},"nodeType":"YulFunctionCall","src":"9313:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9306:6:29"},"nodeType":"YulFunctionCall","src":"9306:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9296:2:29"},"nodeType":"YulFunctionCall","src":"9296:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9289:6:29"},"nodeType":"YulFunctionCall","src":"9289:40:29"},"nodeType":"YulIf","src":"9286:60:29"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9265:5:29","type":""}],"src":"9234:118:29"},{"body":{"nodeType":"YulBlock","src":"9441:231:29","statements":[{"body":{"nodeType":"YulBlock","src":"9487:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9496:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9499:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9489:6:29"},"nodeType":"YulFunctionCall","src":"9489:12:29"},"nodeType":"YulExpressionStatement","src":"9489:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9462:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9471:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:29"},"nodeType":"YulFunctionCall","src":"9458:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9483:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9454:3:29"},"nodeType":"YulFunctionCall","src":"9454:32:29"},"nodeType":"YulIf","src":"9451:52:29"},{"nodeType":"YulAssignment","src":"9512:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9541:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9522:18:29"},"nodeType":"YulFunctionCall","src":"9522:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9512:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"9560:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9590:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9601:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9586:3:29"},"nodeType":"YulFunctionCall","src":"9586:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9573:12:29"},"nodeType":"YulFunctionCall","src":"9573:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9564:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9636:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"9614:21:29"},"nodeType":"YulFunctionCall","src":"9614:28:29"},"nodeType":"YulExpressionStatement","src":"9614:28:29"},{"nodeType":"YulAssignment","src":"9651:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"9661:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9651:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9399:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9410:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9422:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9430:6:29","type":""}],"src":"9357:315:29"},{"body":{"nodeType":"YulBlock","src":"9746:663:29","statements":[{"body":{"nodeType":"YulBlock","src":"9790:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9799:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9802:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9792:6:29"},"nodeType":"YulFunctionCall","src":"9792:12:29"},"nodeType":"YulExpressionStatement","src":"9792:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"9767:3:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9772:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9763:3:29"},"nodeType":"YulFunctionCall","src":"9763:19:29"},{"kind":"number","nodeType":"YulLiteral","src":"9784:4:29","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9759:3:29"},"nodeType":"YulFunctionCall","src":"9759:30:29"},"nodeType":"YulIf","src":"9756:50:29"},{"nodeType":"YulVariableDeclaration","src":"9815:25:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9835:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9829:5:29"},"nodeType":"YulFunctionCall","src":"9829:11:29"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9819:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9849:35:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9871:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9879:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9867:3:29"},"nodeType":"YulFunctionCall","src":"9867:17:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9853:10:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9893:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9903:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9897:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9980:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9982:16:29"},"nodeType":"YulFunctionCall","src":"9982:18:29"},"nodeType":"YulExpressionStatement","src":"9982:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9939:10:29"},{"name":"_1","nodeType":"YulIdentifier","src":"9951:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9936:2:29"},"nodeType":"YulFunctionCall","src":"9936:18:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9959:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9971:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9956:2:29"},"nodeType":"YulFunctionCall","src":"9956:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9933:2:29"},"nodeType":"YulFunctionCall","src":"9933:46:29"},"nodeType":"YulIf","src":"9930:72:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10018:4:29","type":"","value":"0x40"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10024:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10011:6:29"},"nodeType":"YulFunctionCall","src":"10011:24:29"},"nodeType":"YulExpressionStatement","src":"10011:24:29"},{"nodeType":"YulAssignment","src":"10044:15:29","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"10053:6:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10044:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"10068:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10095:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10082:12:29"},"nodeType":"YulFunctionCall","src":"10082:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10072:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10132:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10141:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10144:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10134:6:29"},"nodeType":"YulFunctionCall","src":"10134:12:29"},"nodeType":"YulExpressionStatement","src":"10134:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10120:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10128:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10117:2:29"},"nodeType":"YulFunctionCall","src":"10117:14:29"},"nodeType":"YulIf","src":"10114:34:29"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10164:6:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10194:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10205:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10190:3:29"},"nodeType":"YulFunctionCall","src":"10190:22:29"},{"name":"end","nodeType":"YulIdentifier","src":"10214:3:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10172:17:29"},"nodeType":"YulFunctionCall","src":"10172:46:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10157:6:29"},"nodeType":"YulFunctionCall","src":"10157:62:29"},"nodeType":"YulExpressionStatement","src":"10157:62:29"},{"nodeType":"YulVariableDeclaration","src":"10228:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10272:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10257:3:29"},"nodeType":"YulFunctionCall","src":"10257:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10244:12:29"},"nodeType":"YulFunctionCall","src":"10244:32:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"10232:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10305:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10314:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10317:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10307:6:29"},"nodeType":"YulFunctionCall","src":"10307:12:29"},"nodeType":"YulExpressionStatement","src":"10307:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10291:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10301:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10288:2:29"},"nodeType":"YulFunctionCall","src":"10288:16:29"},"nodeType":"YulIf","src":"10285:36:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10341:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10349:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10337:3:29"},"nodeType":"YulFunctionCall","src":"10337:15:29"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10376:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10387:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10372:3:29"},"nodeType":"YulFunctionCall","src":"10372:24:29"},{"name":"end","nodeType":"YulIdentifier","src":"10398:3:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"10354:17:29"},"nodeType":"YulFunctionCall","src":"10354:48:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10330:6:29"},"nodeType":"YulFunctionCall","src":"10330:73:29"},"nodeType":"YulExpressionStatement","src":"10330:73:29"}]},"name":"abi_decode_struct_MetadataPair","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9717:9:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"9728:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9736:5:29","type":""}],"src":"9677:732:29"},{"body":{"nodeType":"YulBlock","src":"10556:1126:29","statements":[{"body":{"nodeType":"YulBlock","src":"10602:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10611:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10614:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10604:6:29"},"nodeType":"YulFunctionCall","src":"10604:12:29"},"nodeType":"YulExpressionStatement","src":"10604:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10577:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10586:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10573:3:29"},"nodeType":"YulFunctionCall","src":"10573:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10598:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10569:3:29"},"nodeType":"YulFunctionCall","src":"10569:32:29"},"nodeType":"YulIf","src":"10566:52:29"},{"nodeType":"YulAssignment","src":"10627:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10650:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10637:12:29"},"nodeType":"YulFunctionCall","src":"10637:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10627:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"10669:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10679:2:29","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10673:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10690:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10721:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"10732:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10717:3:29"},"nodeType":"YulFunctionCall","src":"10717:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10704:12:29"},"nodeType":"YulFunctionCall","src":"10704:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10694:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10745:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10755:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"10749:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10800:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10809:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10812:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10802:6:29"},"nodeType":"YulFunctionCall","src":"10802:12:29"},"nodeType":"YulExpressionStatement","src":"10802:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10788:6:29"},{"name":"_2","nodeType":"YulIdentifier","src":"10796:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10785:2:29"},"nodeType":"YulFunctionCall","src":"10785:14:29"},"nodeType":"YulIf","src":"10782:34:29"},{"nodeType":"YulVariableDeclaration","src":"10825:32:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10839:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10850:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10835:3:29"},"nodeType":"YulFunctionCall","src":"10835:22:29"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"10829:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10905:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10914:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10917:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10907:6:29"},"nodeType":"YulFunctionCall","src":"10907:12:29"},"nodeType":"YulExpressionStatement","src":"10907:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"10884:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"10888:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10880:3:29"},"nodeType":"YulFunctionCall","src":"10880:13:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10895:7:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10876:3:29"},"nodeType":"YulFunctionCall","src":"10876:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10869:6:29"},"nodeType":"YulFunctionCall","src":"10869:35:29"},"nodeType":"YulIf","src":"10866:55:29"},{"nodeType":"YulVariableDeclaration","src":"10930:26:29","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"10953:2:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10940:12:29"},"nodeType":"YulFunctionCall","src":"10940:16:29"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"10934:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10979:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10981:16:29"},"nodeType":"YulFunctionCall","src":"10981:18:29"},"nodeType":"YulExpressionStatement","src":"10981:18:29"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"10971:2:29"},{"name":"_2","nodeType":"YulIdentifier","src":"10975:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10968:2:29"},"nodeType":"YulFunctionCall","src":"10968:10:29"},"nodeType":"YulIf","src":"10965:36:29"},{"nodeType":"YulVariableDeclaration","src":"11010:20:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11024:1:29","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"11027:2:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11020:3:29"},"nodeType":"YulFunctionCall","src":"11020:10:29"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"11014:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11039:39:29","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"11070:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11074:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11066:3:29"},"nodeType":"YulFunctionCall","src":"11066:11:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11050:15:29"},"nodeType":"YulFunctionCall","src":"11050:28:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11043:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11087:16:29","value":{"name":"dst","nodeType":"YulIdentifier","src":"11100:3:29"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"11091:5:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11119:3:29"},{"name":"_4","nodeType":"YulIdentifier","src":"11124:2:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11112:6:29"},"nodeType":"YulFunctionCall","src":"11112:15:29"},"nodeType":"YulExpressionStatement","src":"11112:15:29"},{"nodeType":"YulAssignment","src":"11136:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11147:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11152:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11143:3:29"},"nodeType":"YulFunctionCall","src":"11143:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11136:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"11164:34:29","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"11186:2:29"},{"name":"_5","nodeType":"YulIdentifier","src":"11190:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11182:3:29"},"nodeType":"YulFunctionCall","src":"11182:11:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11195:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11178:3:29"},"nodeType":"YulFunctionCall","src":"11178:20:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"11168:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11230:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11239:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11242:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11232:6:29"},"nodeType":"YulFunctionCall","src":"11232:12:29"},"nodeType":"YulExpressionStatement","src":"11232:12:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"11213:6:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11221:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11210:2:29"},"nodeType":"YulFunctionCall","src":"11210:19:29"},"nodeType":"YulIf","src":"11207:39:29"},{"nodeType":"YulVariableDeclaration","src":"11255:22:29","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"11270:2:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11274:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11266:3:29"},"nodeType":"YulFunctionCall","src":"11266:11:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"11259:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11342:310:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11356:36:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11388:3:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11375:12:29"},"nodeType":"YulFunctionCall","src":"11375:17:29"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"11360:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11440:74:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11458:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11468:1:29","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"11462:2:29","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"11493:2:29"},{"name":"_6","nodeType":"YulIdentifier","src":"11497:2:29"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11486:6:29"},"nodeType":"YulFunctionCall","src":"11486:14:29"},"nodeType":"YulExpressionStatement","src":"11486:14:29"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"11411:11:29"},{"name":"_2","nodeType":"YulIdentifier","src":"11424:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11408:2:29"},"nodeType":"YulFunctionCall","src":"11408:19:29"},"nodeType":"YulIf","src":"11405:109:29"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11534:3:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"11578:2:29"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"11582:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11574:3:29"},"nodeType":"YulFunctionCall","src":"11574:20:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11596:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11570:3:29"},"nodeType":"YulFunctionCall","src":"11570:29:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11601:7:29"}],"functionName":{"name":"abi_decode_struct_MetadataPair","nodeType":"YulIdentifier","src":"11539:30:29"},"nodeType":"YulFunctionCall","src":"11539:70:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11527:6:29"},"nodeType":"YulFunctionCall","src":"11527:83:29"},"nodeType":"YulExpressionStatement","src":"11527:83:29"},{"nodeType":"YulAssignment","src":"11623:19:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11634:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11639:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11630:3:29"},"nodeType":"YulFunctionCall","src":"11630:12:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11623:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11297:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"11302:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11294:2:29"},"nodeType":"YulFunctionCall","src":"11294:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11310:23:29","statements":[{"nodeType":"YulAssignment","src":"11312:19:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11323:3:29"},{"name":"_1","nodeType":"YulIdentifier","src":"11328:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11319:3:29"},"nodeType":"YulFunctionCall","src":"11319:12:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"11312:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"11290:3:29","statements":[]},"src":"11286:366:29"},{"nodeType":"YulAssignment","src":"11661:15:29","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"11671:5:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11661:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_struct$_MetadataPair_$5293_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10514:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10525:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10537:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10545:6:29","type":""}],"src":"10414:1268:29"},{"body":{"nodeType":"YulBlock","src":"11817:408:29","statements":[{"body":{"nodeType":"YulBlock","src":"11864:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11873:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11876:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11866:6:29"},"nodeType":"YulFunctionCall","src":"11866:12:29"},"nodeType":"YulExpressionStatement","src":"11866:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11838:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11847:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11834:3:29"},"nodeType":"YulFunctionCall","src":"11834:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11859:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11830:3:29"},"nodeType":"YulFunctionCall","src":"11830:33:29"},"nodeType":"YulIf","src":"11827:53:29"},{"nodeType":"YulAssignment","src":"11889:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11918:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11899:18:29"},"nodeType":"YulFunctionCall","src":"11899:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11889:6:29"}]},{"nodeType":"YulAssignment","src":"11937:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11970:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11981:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11966:3:29"},"nodeType":"YulFunctionCall","src":"11966:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11947:18:29"},"nodeType":"YulFunctionCall","src":"11947:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11937:6:29"}]},{"nodeType":"YulAssignment","src":"11994:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12021:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12032:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12017:3:29"},"nodeType":"YulFunctionCall","src":"12017:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12004:12:29"},"nodeType":"YulFunctionCall","src":"12004:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11994:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12045:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12076:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12087:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12072:3:29"},"nodeType":"YulFunctionCall","src":"12072:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12059:12:29"},"nodeType":"YulFunctionCall","src":"12059:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12049:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12134:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12143:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12146:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12136:6:29"},"nodeType":"YulFunctionCall","src":"12136:12:29"},"nodeType":"YulExpressionStatement","src":"12136:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12106:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12114:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12103:2:29"},"nodeType":"YulFunctionCall","src":"12103:30:29"},"nodeType":"YulIf","src":"12100:50:29"},{"nodeType":"YulAssignment","src":"12159:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12191:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12202:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12187:3:29"},"nodeType":"YulFunctionCall","src":"12187:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12211:7:29"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"12169:17:29"},"nodeType":"YulFunctionCall","src":"12169:50:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12159:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11759:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11770:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11782:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11790:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11798:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11806:6:29","type":""}],"src":"11687:538:29"},{"body":{"nodeType":"YulBlock","src":"12337:372:29","statements":[{"body":{"nodeType":"YulBlock","src":"12383:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12392:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12395:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12385:6:29"},"nodeType":"YulFunctionCall","src":"12385:12:29"},"nodeType":"YulExpressionStatement","src":"12385:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12358:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12367:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12354:3:29"},"nodeType":"YulFunctionCall","src":"12354:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12379:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12350:3:29"},"nodeType":"YulFunctionCall","src":"12350:32:29"},"nodeType":"YulIf","src":"12347:52:29"},{"nodeType":"YulAssignment","src":"12408:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12431:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12418:12:29"},"nodeType":"YulFunctionCall","src":"12418:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12408:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"12450:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12481:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12492:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12477:3:29"},"nodeType":"YulFunctionCall","src":"12477:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12464:12:29"},"nodeType":"YulFunctionCall","src":"12464:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12454:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12539:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12548:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12551:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12541:6:29"},"nodeType":"YulFunctionCall","src":"12541:12:29"},"nodeType":"YulExpressionStatement","src":"12541:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12511:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12519:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12508:2:29"},"nodeType":"YulFunctionCall","src":"12508:30:29"},"nodeType":"YulIf","src":"12505:50:29"},{"nodeType":"YulVariableDeclaration","src":"12564:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12621:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12632:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12617:3:29"},"nodeType":"YulFunctionCall","src":"12617:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12641:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"12590:26:29"},"nodeType":"YulFunctionCall","src":"12590:59:29"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"12568:8:29","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"12578:8:29","type":""}]},{"nodeType":"YulAssignment","src":"12658:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"12668:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12658:6:29"}]},{"nodeType":"YulAssignment","src":"12685:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"12695:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12685:6:29"}]}]},"name":"abi_decode_tuple_t_uint256t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12287:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12298:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12310:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12318:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12326:6:29","type":""}],"src":"12230:479:29"},{"body":{"nodeType":"YulBlock","src":"12925:1072:29","statements":[{"body":{"nodeType":"YulBlock","src":"12972:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12981:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12984:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12974:6:29"},"nodeType":"YulFunctionCall","src":"12974:12:29"},"nodeType":"YulExpressionStatement","src":"12974:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12946:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12955:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12942:3:29"},"nodeType":"YulFunctionCall","src":"12942:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12967:3:29","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12938:3:29"},"nodeType":"YulFunctionCall","src":"12938:33:29"},"nodeType":"YulIf","src":"12935:53:29"},{"nodeType":"YulVariableDeclaration","src":"12997:37:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13024:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13011:12:29"},"nodeType":"YulFunctionCall","src":"13011:23:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13001:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13043:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13053:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13047:2:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13098:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13107:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13110:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13100:6:29"},"nodeType":"YulFunctionCall","src":"13100:12:29"},"nodeType":"YulExpressionStatement","src":"13100:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13086:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13094:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13083:2:29"},"nodeType":"YulFunctionCall","src":"13083:14:29"},"nodeType":"YulIf","src":"13080:34:29"},{"nodeType":"YulVariableDeclaration","src":"13123:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13180:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13191:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13176:3:29"},"nodeType":"YulFunctionCall","src":"13176:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13200:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"13149:26:29"},"nodeType":"YulFunctionCall","src":"13149:59:29"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"13127:8:29","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"13137:8:29","type":""}]},{"nodeType":"YulAssignment","src":"13217:18:29","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"13227:8:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13217:6:29"}]},{"nodeType":"YulAssignment","src":"13244:18:29","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"13254:8:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13244:6:29"}]},{"nodeType":"YulAssignment","src":"13271:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13298:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13309:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13294:3:29"},"nodeType":"YulFunctionCall","src":"13294:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13281:12:29"},"nodeType":"YulFunctionCall","src":"13281:32:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13271:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13322:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13352:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13363:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13348:3:29"},"nodeType":"YulFunctionCall","src":"13348:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13335:12:29"},"nodeType":"YulFunctionCall","src":"13335:32:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13326:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13398:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"13376:21:29"},"nodeType":"YulFunctionCall","src":"13376:28:29"},"nodeType":"YulExpressionStatement","src":"13376:28:29"},{"nodeType":"YulAssignment","src":"13413:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"13423:5:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13413:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13437:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:29"},"nodeType":"YulFunctionCall","src":"13466:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13453:12:29"},"nodeType":"YulFunctionCall","src":"13453:32:29"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"13441:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13514:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13523:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13526:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13516:6:29"},"nodeType":"YulFunctionCall","src":"13516:12:29"},"nodeType":"YulExpressionStatement","src":"13516:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"13500:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13510:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13497:2:29"},"nodeType":"YulFunctionCall","src":"13497:16:29"},"nodeType":"YulIf","src":"13494:36:29"},{"nodeType":"YulVariableDeclaration","src":"13539:87:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13596:9:29"},{"name":"offset_1","nodeType":"YulIdentifier","src":"13607:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13592:3:29"},"nodeType":"YulFunctionCall","src":"13592:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13618:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"13565:26:29"},"nodeType":"YulFunctionCall","src":"13565:61:29"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"13543:8:29","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"13553:8:29","type":""}]},{"nodeType":"YulAssignment","src":"13635:18:29","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"13645:8:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13635:6:29"}]},{"nodeType":"YulAssignment","src":"13662:18:29","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"13672:8:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"13662:6:29"}]},{"nodeType":"YulAssignment","src":"13689:49:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13722:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13733:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13718:3:29"},"nodeType":"YulFunctionCall","src":"13718:19:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"13699:18:29"},"nodeType":"YulFunctionCall","src":"13699:39:29"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13689:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13747:49:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13780:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13791:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13776:3:29"},"nodeType":"YulFunctionCall","src":"13776:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13763:12:29"},"nodeType":"YulFunctionCall","src":"13763:33:29"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"13751:8:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13825:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13834:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13837:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13827:6:29"},"nodeType":"YulFunctionCall","src":"13827:12:29"},"nodeType":"YulExpressionStatement","src":"13827:12:29"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"13811:8:29"},{"name":"_1","nodeType":"YulIdentifier","src":"13821:2:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13808:2:29"},"nodeType":"YulFunctionCall","src":"13808:16:29"},"nodeType":"YulIf","src":"13805:36:29"},{"nodeType":"YulVariableDeclaration","src":"13850:87:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13907:9:29"},{"name":"offset_2","nodeType":"YulIdentifier","src":"13918:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13903:3:29"},"nodeType":"YulFunctionCall","src":"13903:24:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13929:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"13876:26:29"},"nodeType":"YulFunctionCall","src":"13876:61:29"},"variables":[{"name":"value7_1","nodeType":"YulTypedName","src":"13854:8:29","type":""},{"name":"value8_1","nodeType":"YulTypedName","src":"13864:8:29","type":""}]},{"nodeType":"YulAssignment","src":"13946:18:29","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"13956:8:29"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"13946:6:29"}]},{"nodeType":"YulAssignment","src":"13973:18:29","value":{"name":"value8_1","nodeType":"YulIdentifier","src":"13983:8:29"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"13973:6:29"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_bytes32t_boolt_string_calldata_ptrt_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12827:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12838:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12850:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12858:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12866:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12874:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12882:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12890:6:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12898:6:29","type":""},{"name":"value7","nodeType":"YulTypedName","src":"12906:6:29","type":""},{"name":"value8","nodeType":"YulTypedName","src":"12914:6:29","type":""}],"src":"12714:1283:29"},{"body":{"nodeType":"YulBlock","src":"14089:173:29","statements":[{"body":{"nodeType":"YulBlock","src":"14135:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14144:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14147:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14137:6:29"},"nodeType":"YulFunctionCall","src":"14137:12:29"},"nodeType":"YulExpressionStatement","src":"14137:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14110:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14119:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14106:3:29"},"nodeType":"YulFunctionCall","src":"14106:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"14131:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14102:3:29"},"nodeType":"YulFunctionCall","src":"14102:32:29"},"nodeType":"YulIf","src":"14099:52:29"},{"nodeType":"YulAssignment","src":"14160:39:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14189:9:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"14170:18:29"},"nodeType":"YulFunctionCall","src":"14170:29:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14160:6:29"}]},{"nodeType":"YulAssignment","src":"14208:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14241:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14252:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14237:3:29"},"nodeType":"YulFunctionCall","src":"14237:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"14218:18:29"},"nodeType":"YulFunctionCall","src":"14218:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14208:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14047:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14058:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14070:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14078:6:29","type":""}],"src":"14002:260:29"},{"body":{"nodeType":"YulBlock","src":"14390:429:29","statements":[{"body":{"nodeType":"YulBlock","src":"14436:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14445:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14448:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14438:6:29"},"nodeType":"YulFunctionCall","src":"14438:12:29"},"nodeType":"YulExpressionStatement","src":"14438:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14411:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14420:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14407:3:29"},"nodeType":"YulFunctionCall","src":"14407:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"14432:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14403:3:29"},"nodeType":"YulFunctionCall","src":"14403:32:29"},"nodeType":"YulIf","src":"14400:52:29"},{"nodeType":"YulAssignment","src":"14461:33:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14484:9:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14471:12:29"},"nodeType":"YulFunctionCall","src":"14471:23:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14461:6:29"}]},{"nodeType":"YulAssignment","src":"14503:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14536:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14547:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14532:3:29"},"nodeType":"YulFunctionCall","src":"14532:18:29"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"14513:18:29"},"nodeType":"YulFunctionCall","src":"14513:38:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14503:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"14560:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14591:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14602:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14587:3:29"},"nodeType":"YulFunctionCall","src":"14587:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14574:12:29"},"nodeType":"YulFunctionCall","src":"14574:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14564:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"14649:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14658:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14661:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14651:6:29"},"nodeType":"YulFunctionCall","src":"14651:12:29"},"nodeType":"YulExpressionStatement","src":"14651:12:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14621:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"14629:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14618:2:29"},"nodeType":"YulFunctionCall","src":"14618:30:29"},"nodeType":"YulIf","src":"14615:50:29"},{"nodeType":"YulVariableDeclaration","src":"14674:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14731:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"14742:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14727:3:29"},"nodeType":"YulFunctionCall","src":"14727:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14751:7:29"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"14700:26:29"},"nodeType":"YulFunctionCall","src":"14700:59:29"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"14678:8:29","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"14688:8:29","type":""}]},{"nodeType":"YulAssignment","src":"14768:18:29","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"14778:8:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14768:6:29"}]},{"nodeType":"YulAssignment","src":"14795:18:29","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"14805:8:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14795:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14332:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14343:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14355:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14363:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14371:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14379:6:29","type":""}],"src":"14267:552:29"},{"body":{"nodeType":"YulBlock","src":"14879:382:29","statements":[{"nodeType":"YulAssignment","src":"14889:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14903:1:29","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"14906:4:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14899:3:29"},"nodeType":"YulFunctionCall","src":"14899:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14889:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"14920:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14950:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"14956:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14946:3:29"},"nodeType":"YulFunctionCall","src":"14946:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14924:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"14997:31:29","statements":[{"nodeType":"YulAssignment","src":"14999:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15013:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15021:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15009:3:29"},"nodeType":"YulFunctionCall","src":"15009:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14999:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14977:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14970:6:29"},"nodeType":"YulFunctionCall","src":"14970:26:29"},"nodeType":"YulIf","src":"14967:61:29"},{"body":{"nodeType":"YulBlock","src":"15087:168:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15108:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15111:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15101:6:29"},"nodeType":"YulFunctionCall","src":"15101:88:29"},"nodeType":"YulExpressionStatement","src":"15101:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15209:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15212:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15202:6:29"},"nodeType":"YulFunctionCall","src":"15202:15:29"},"nodeType":"YulExpressionStatement","src":"15202:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15237:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15240:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15230:6:29"},"nodeType":"YulFunctionCall","src":"15230:15:29"},"nodeType":"YulExpressionStatement","src":"15230:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15043:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15066:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15074:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15063:2:29"},"nodeType":"YulFunctionCall","src":"15063:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15040:2:29"},"nodeType":"YulFunctionCall","src":"15040:38:29"},"nodeType":"YulIf","src":"15037:218:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14859:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14868:6:29","type":""}],"src":"14824:437:29"},{"body":{"nodeType":"YulBlock","src":"15405:150:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15415:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15435:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15429:5:29"},"nodeType":"YulFunctionCall","src":"15429:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15419:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15490:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15498:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15486:3:29"},"nodeType":"YulFunctionCall","src":"15486:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"15505:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"15510:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15451:34:29"},"nodeType":"YulFunctionCall","src":"15451:66:29"},"nodeType":"YulExpressionStatement","src":"15451:66:29"},{"nodeType":"YulAssignment","src":"15526:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15537:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"15542:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15533:3:29"},"nodeType":"YulFunctionCall","src":"15533:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15526:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15381:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15386:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15397:3:29","type":""}],"src":"15266:289:29"},{"body":{"nodeType":"YulBlock","src":"15734:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15751:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15762:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15744:6:29"},"nodeType":"YulFunctionCall","src":"15744:21:29"},"nodeType":"YulExpressionStatement","src":"15744:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15785:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15796:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15781:3:29"},"nodeType":"YulFunctionCall","src":"15781:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"15801:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15774:6:29"},"nodeType":"YulFunctionCall","src":"15774:30:29"},"nodeType":"YulExpressionStatement","src":"15774:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15824:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15835:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15820:3:29"},"nodeType":"YulFunctionCall","src":"15820:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"15840:34:29","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15813:6:29"},"nodeType":"YulFunctionCall","src":"15813:62:29"},"nodeType":"YulExpressionStatement","src":"15813:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15895:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15906:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15891:3:29"},"nodeType":"YulFunctionCall","src":"15891:18:29"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"15911:16:29","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15884:6:29"},"nodeType":"YulFunctionCall","src":"15884:44:29"},"nodeType":"YulExpressionStatement","src":"15884:44:29"},{"nodeType":"YulAssignment","src":"15937:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15949:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15960:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15945:3:29"},"nodeType":"YulFunctionCall","src":"15945:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15937:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15711:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15725:4:29","type":""}],"src":"15560:410:29"},{"body":{"nodeType":"YulBlock","src":"16082:87:29","statements":[{"nodeType":"YulAssignment","src":"16092:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16104:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16115:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16100:3:29"},"nodeType":"YulFunctionCall","src":"16100:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16092:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16134:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16149:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16157:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16145:3:29"},"nodeType":"YulFunctionCall","src":"16145:17:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16127:6:29"},"nodeType":"YulFunctionCall","src":"16127:36:29"},"nodeType":"YulExpressionStatement","src":"16127:36:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16051:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16062:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16073:4:29","type":""}],"src":"15975:194:29"},{"body":{"nodeType":"YulBlock","src":"16348:171:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16365:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16376:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16358:6:29"},"nodeType":"YulFunctionCall","src":"16358:21:29"},"nodeType":"YulExpressionStatement","src":"16358:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16399:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16410:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16395:3:29"},"nodeType":"YulFunctionCall","src":"16395:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"16415:2:29","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16388:6:29"},"nodeType":"YulFunctionCall","src":"16388:30:29"},"nodeType":"YulExpressionStatement","src":"16388:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16438:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16449:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16434:3:29"},"nodeType":"YulFunctionCall","src":"16434:18:29"},{"hexValue":"4d455441444154415f554e415554484f5249534544","kind":"string","nodeType":"YulLiteral","src":"16454:23:29","type":"","value":"METADATA_UNAUTHORISED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16427:6:29"},"nodeType":"YulFunctionCall","src":"16427:51:29"},"nodeType":"YulExpressionStatement","src":"16427:51:29"},{"nodeType":"YulAssignment","src":"16487:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16499:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16510:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16495:3:29"},"nodeType":"YulFunctionCall","src":"16495:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16487:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_132cade136e5864ed6f6f60db47cb872f3bd8363cd38183a10b735188ba5ff5c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16325:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16339:4:29","type":""}],"src":"16174:345:29"},{"body":{"nodeType":"YulBlock","src":"16698:223:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16715:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16726:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16708:6:29"},"nodeType":"YulFunctionCall","src":"16708:21:29"},"nodeType":"YulExpressionStatement","src":"16708:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16749:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16760:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16745:3:29"},"nodeType":"YulFunctionCall","src":"16745:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"16765:2:29","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16738:6:29"},"nodeType":"YulFunctionCall","src":"16738:30:29"},"nodeType":"YulExpressionStatement","src":"16738:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16788:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16799:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16784:3:29"},"nodeType":"YulFunctionCall","src":"16784:18:29"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16804:34:29","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16777:6:29"},"nodeType":"YulFunctionCall","src":"16777:62:29"},"nodeType":"YulExpressionStatement","src":"16777:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16859:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16870:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16855:3:29"},"nodeType":"YulFunctionCall","src":"16855:18:29"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16875:3:29","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16848:6:29"},"nodeType":"YulFunctionCall","src":"16848:31:29"},"nodeType":"YulExpressionStatement","src":"16848:31:29"},{"nodeType":"YulAssignment","src":"16888:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16900:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16911:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16896:3:29"},"nodeType":"YulFunctionCall","src":"16896:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16888:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16675:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16689:4:29","type":""}],"src":"16524:397:29"},{"body":{"nodeType":"YulBlock","src":"17100:251:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17117:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17128:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17110:6:29"},"nodeType":"YulFunctionCall","src":"17110:21:29"},"nodeType":"YulExpressionStatement","src":"17110:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17151:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17162:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17147:3:29"},"nodeType":"YulFunctionCall","src":"17147:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"17167:2:29","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17140:6:29"},"nodeType":"YulFunctionCall","src":"17140:30:29"},"nodeType":"YulExpressionStatement","src":"17140:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17190:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17201:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17186:3:29"},"nodeType":"YulFunctionCall","src":"17186:18:29"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17206:34:29","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17179:6:29"},"nodeType":"YulFunctionCall","src":"17179:62:29"},"nodeType":"YulExpressionStatement","src":"17179:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17261:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17272:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17257:3:29"},"nodeType":"YulFunctionCall","src":"17257:18:29"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17277:31:29","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17250:6:29"},"nodeType":"YulFunctionCall","src":"17250:59:29"},"nodeType":"YulExpressionStatement","src":"17250:59:29"},{"nodeType":"YulAssignment","src":"17318:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17330:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17341:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17326:3:29"},"nodeType":"YulFunctionCall","src":"17326:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17318:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17077:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17091:4:29","type":""}],"src":"16926:425:29"},{"body":{"nodeType":"YulBlock","src":"17412:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17429:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17432:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17422:6:29"},"nodeType":"YulFunctionCall","src":"17422:14:29"},"nodeType":"YulExpressionStatement","src":"17422:14:29"},{"nodeType":"YulAssignment","src":"17445:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17463:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17466:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17453:9:29"},"nodeType":"YulFunctionCall","src":"17453:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17445:4:29"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17395:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17403:4:29","type":""}],"src":"17356:121:29"},{"body":{"nodeType":"YulBlock","src":"17563:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"17596:425:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17610:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17620:1:29","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17614:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17641:2:29"},{"name":"array","nodeType":"YulIdentifier","src":"17645:5:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17634:6:29"},"nodeType":"YulFunctionCall","src":"17634:17:29"},"nodeType":"YulExpressionStatement","src":"17634:17:29"},{"nodeType":"YulVariableDeclaration","src":"17664:31:29","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17686:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"17690:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17676:9:29"},"nodeType":"YulFunctionCall","src":"17676:19:29"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"17668:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17708:57:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17731:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17741:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17748:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"17760:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17744:3:29"},"nodeType":"YulFunctionCall","src":"17744:19:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17737:3:29"},"nodeType":"YulFunctionCall","src":"17737:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17727:3:29"},"nodeType":"YulFunctionCall","src":"17727:38:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"17712:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"17802:23:29","statements":[{"nodeType":"YulAssignment","src":"17804:19:29","value":{"name":"data","nodeType":"YulIdentifier","src":"17819:4:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17804:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17784:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"17796:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17781:2:29"},"nodeType":"YulFunctionCall","src":"17781:20:29"},"nodeType":"YulIf","src":"17778:47:29"},{"nodeType":"YulVariableDeclaration","src":"17838:41:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17852:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17862:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17869:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17874:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17865:3:29"},"nodeType":"YulFunctionCall","src":"17865:12:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17858:3:29"},"nodeType":"YulFunctionCall","src":"17858:20:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17848:3:29"},"nodeType":"YulFunctionCall","src":"17848:31:29"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17842:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17892:24:29","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"17905:11:29"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"17896:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"17990:21:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17999:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"18006:2:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17992:6:29"},"nodeType":"YulFunctionCall","src":"17992:17:29"},"nodeType":"YulExpressionStatement","src":"17992:17:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17940:5:29"},{"name":"_2","nodeType":"YulIdentifier","src":"17947:2:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17937:2:29"},"nodeType":"YulFunctionCall","src":"17937:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17951:26:29","statements":[{"nodeType":"YulAssignment","src":"17953:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17966:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"17973:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17962:3:29"},"nodeType":"YulFunctionCall","src":"17962:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"17953:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"17933:3:29","statements":[]},"src":"17929:82:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17579:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"17584:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17576:2:29"},"nodeType":"YulFunctionCall","src":"17576:11:29"},"nodeType":"YulIf","src":"17573:448:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17535:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"17542:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"17547:10:29","type":""}],"src":"17482:545:29"},{"body":{"nodeType":"YulBlock","src":"18117:141:29","statements":[{"nodeType":"YulAssignment","src":"18127:125:29","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18142:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18160:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"18163:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18156:3:29"},"nodeType":"YulFunctionCall","src":"18156:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"18169:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18152:3:29"},"nodeType":"YulFunctionCall","src":"18152:84:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18148:3:29"},"nodeType":"YulFunctionCall","src":"18148:89:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18138:3:29"},"nodeType":"YulFunctionCall","src":"18138:100:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18244:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"18247:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18240:3:29"},"nodeType":"YulFunctionCall","src":"18240:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18135:2:29"},"nodeType":"YulFunctionCall","src":"18135:117:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"18127:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18094:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"18100:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18108:4:29","type":""}],"src":"18032:226:29"},{"body":{"nodeType":"YulBlock","src":"18366:1222:29","statements":[{"body":{"nodeType":"YulBlock","src":"18407:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18409:16:29"},"nodeType":"YulFunctionCall","src":"18409:18:29"},"nodeType":"YulExpressionStatement","src":"18409:18:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18382:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"18387:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18379:2:29"},"nodeType":"YulFunctionCall","src":"18379:27:29"},"nodeType":"YulIf","src":"18376:53:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18482:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18520:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18514:5:29"},"nodeType":"YulFunctionCall","src":"18514:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18488:25:29"},"nodeType":"YulFunctionCall","src":"18488:38:29"},{"name":"len","nodeType":"YulIdentifier","src":"18528:3:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"18438:43:29"},"nodeType":"YulFunctionCall","src":"18438:94:29"},"nodeType":"YulExpressionStatement","src":"18438:94:29"},{"nodeType":"YulVariableDeclaration","src":"18541:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18558:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"18545:9:29","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18602:728:29","statements":[{"nodeType":"YulVariableDeclaration","src":"18616:91:29","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18635:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"18640:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18631:3:29"},"nodeType":"YulFunctionCall","src":"18631:76:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18620:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18720:49:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18764:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18734:29:29"},"nodeType":"YulFunctionCall","src":"18734:35:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"18724:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18782:18:29","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"18791:9:29"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18786:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"18870:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18895:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18920:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18925:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18916:3:29"},"nodeType":"YulFunctionCall","src":"18916:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18903:12:29"},"nodeType":"YulFunctionCall","src":"18903:33:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18888:6:29"},"nodeType":"YulFunctionCall","src":"18888:49:29"},"nodeType":"YulExpressionStatement","src":"18888:49:29"},{"nodeType":"YulAssignment","src":"18954:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18968:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18976:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18964:3:29"},"nodeType":"YulFunctionCall","src":"18964:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18954:6:29"}]},{"nodeType":"YulAssignment","src":"18995:33:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19012:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19023:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19008:3:29"},"nodeType":"YulFunctionCall","src":"19008:20:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18995:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18824:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"18827:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18821:2:29"},"nodeType":"YulFunctionCall","src":"18821:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18836:21:29","statements":[{"nodeType":"YulAssignment","src":"18838:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18847:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"18850:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18843:3:29"},"nodeType":"YulFunctionCall","src":"18843:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18838:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"18817:3:29","statements":[]},"src":"18813:229:29"},{"body":{"nodeType":"YulBlock","src":"19087:187:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19112:6:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19141:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19146:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19137:3:29"},"nodeType":"YulFunctionCall","src":"19137:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19124:12:29"},"nodeType":"YulFunctionCall","src":"19124:33:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19175:1:29","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"19178:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19171:3:29"},"nodeType":"YulFunctionCall","src":"19171:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"19184:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19167:3:29"},"nodeType":"YulFunctionCall","src":"19167:21:29"},{"kind":"number","nodeType":"YulLiteral","src":"19190:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19163:3:29"},"nodeType":"YulFunctionCall","src":"19163:94:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19159:3:29"},"nodeType":"YulFunctionCall","src":"19159:99:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19120:3:29"},"nodeType":"YulFunctionCall","src":"19120:139:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19105:6:29"},"nodeType":"YulFunctionCall","src":"19105:155:29"},"nodeType":"YulExpressionStatement","src":"19105:155:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19061:7:29"},{"name":"len","nodeType":"YulIdentifier","src":"19070:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19058:2:29"},"nodeType":"YulFunctionCall","src":"19058:16:29"},"nodeType":"YulIf","src":"19055:219:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19294:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19308:1:29","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"19311:3:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19304:3:29"},"nodeType":"YulFunctionCall","src":"19304:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"19317:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19300:3:29"},"nodeType":"YulFunctionCall","src":"19300:19:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19287:6:29"},"nodeType":"YulFunctionCall","src":"19287:33:29"},"nodeType":"YulExpressionStatement","src":"19287:33:29"}]},"nodeType":"YulCase","src":"18595:735:29","value":{"kind":"number","nodeType":"YulLiteral","src":"18600:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19347:235:29","statements":[{"nodeType":"YulVariableDeclaration","src":"19361:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"19374:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19365:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"19407:74:29","statements":[{"nodeType":"YulAssignment","src":"19425:42:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19451:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19456:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19447:3:29"},"nodeType":"YulFunctionCall","src":"19447:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19434:12:29"},"nodeType":"YulFunctionCall","src":"19434:33:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19425:5:29"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"19391:3:29"},"nodeType":"YulIf","src":"19388:93:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19501:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19560:5:29"},{"name":"len","nodeType":"YulIdentifier","src":"19567:3:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19507:52:29"},"nodeType":"YulFunctionCall","src":"19507:64:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19494:6:29"},"nodeType":"YulFunctionCall","src":"19494:78:29"},"nodeType":"YulExpressionStatement","src":"19494:78:29"}]},"nodeType":"YulCase","src":"19339:243:29","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18578:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"18583:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18575:2:29"},"nodeType":"YulFunctionCall","src":"18575:11:29"},"nodeType":"YulSwitch","src":"18568:1014:29"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18346:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"18352:3:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"18357:3:29","type":""}],"src":"18263:1325:29"},{"body":{"nodeType":"YulBlock","src":"19660:259:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19677:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"19682:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19670:6:29"},"nodeType":"YulFunctionCall","src":"19670:19:29"},"nodeType":"YulExpressionStatement","src":"19670:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19715:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"19720:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19711:3:29"},"nodeType":"YulFunctionCall","src":"19711:14:29"},{"name":"start","nodeType":"YulIdentifier","src":"19727:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"19734:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"19698:12:29"},"nodeType":"YulFunctionCall","src":"19698:43:29"},"nodeType":"YulExpressionStatement","src":"19698:43:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19765:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"19770:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19761:3:29"},"nodeType":"YulFunctionCall","src":"19761:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"19779:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19757:3:29"},"nodeType":"YulFunctionCall","src":"19757:27:29"},{"kind":"number","nodeType":"YulLiteral","src":"19786:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19750:6:29"},"nodeType":"YulFunctionCall","src":"19750:38:29"},"nodeType":"YulExpressionStatement","src":"19750:38:29"},{"nodeType":"YulAssignment","src":"19797:116:29","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19812:3:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19825:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19833:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19821:3:29"},"nodeType":"YulFunctionCall","src":"19821:15:29"},{"kind":"number","nodeType":"YulLiteral","src":"19838:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19817:3:29"},"nodeType":"YulFunctionCall","src":"19817:88:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19808:3:29"},"nodeType":"YulFunctionCall","src":"19808:98:29"},{"kind":"number","nodeType":"YulLiteral","src":"19908:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19804:3:29"},"nodeType":"YulFunctionCall","src":"19804:109:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19797:3:29"}]}]},"name":"abi_encode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"19629:5:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"19636:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19644:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19652:3:29","type":""}],"src":"19593:326:29"},{"body":{"nodeType":"YulBlock","src":"20083:159:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20100:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"20111:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20093:6:29"},"nodeType":"YulFunctionCall","src":"20093:25:29"},"nodeType":"YulExpressionStatement","src":"20093:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20138:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20149:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20134:3:29"},"nodeType":"YulFunctionCall","src":"20134:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20154:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20127:6:29"},"nodeType":"YulFunctionCall","src":"20127:30:29"},"nodeType":"YulExpressionStatement","src":"20127:30:29"},{"nodeType":"YulAssignment","src":"20166:70:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20201:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"20209:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20221:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20232:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20217:3:29"},"nodeType":"YulFunctionCall","src":"20217:18:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"20174:26:29"},"nodeType":"YulFunctionCall","src":"20174:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20166:4:29"}]}]},"name":"abi_encode_tuple_t_bytes32_t_string_calldata_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20036:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20047:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20055:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20063:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20074:4:29","type":""}],"src":"19924:318:29"},{"body":{"nodeType":"YulBlock","src":"20421:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20438:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20449:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20431:6:29"},"nodeType":"YulFunctionCall","src":"20431:21:29"},"nodeType":"YulExpressionStatement","src":"20431:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20472:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20483:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20468:3:29"},"nodeType":"YulFunctionCall","src":"20468:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20488:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20461:6:29"},"nodeType":"YulFunctionCall","src":"20461:30:29"},"nodeType":"YulExpressionStatement","src":"20461:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20511:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20522:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20507:3:29"},"nodeType":"YulFunctionCall","src":"20507:18:29"},{"hexValue":"5452414e534645525f4e4f545f414c4c4f574544","kind":"string","nodeType":"YulLiteral","src":"20527:22:29","type":"","value":"TRANSFER_NOT_ALLOWED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20500:6:29"},"nodeType":"YulFunctionCall","src":"20500:50:29"},"nodeType":"YulExpressionStatement","src":"20500:50:29"},{"nodeType":"YulAssignment","src":"20559:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20571:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20582:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20567:3:29"},"nodeType":"YulFunctionCall","src":"20567:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20559:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20398:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20412:4:29","type":""}],"src":"20247:344:29"},{"body":{"nodeType":"YulBlock","src":"20770:166:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20787:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20798:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20780:6:29"},"nodeType":"YulFunctionCall","src":"20780:21:29"},"nodeType":"YulExpressionStatement","src":"20780:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20821:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20832:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20817:3:29"},"nodeType":"YulFunctionCall","src":"20817:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"20837:2:29","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20810:6:29"},"nodeType":"YulFunctionCall","src":"20810:30:29"},"nodeType":"YulExpressionStatement","src":"20810:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20860:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20871:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20856:3:29"},"nodeType":"YulFunctionCall","src":"20856:18:29"},{"hexValue":"4e4f44455f4e4f545f414c4c4f574544","kind":"string","nodeType":"YulLiteral","src":"20876:18:29","type":"","value":"NODE_NOT_ALLOWED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20849:6:29"},"nodeType":"YulFunctionCall","src":"20849:46:29"},"nodeType":"YulExpressionStatement","src":"20849:46:29"},{"nodeType":"YulAssignment","src":"20904:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20916:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"20927:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20912:3:29"},"nodeType":"YulFunctionCall","src":"20912:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20904:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b57486942432b5ec89eaefbe7911ae2e63f871808daa7bd2261d2d6bdfa6e7e9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20747:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20761:4:29","type":""}],"src":"20596:340:29"},{"body":{"nodeType":"YulBlock","src":"21072:116:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21089:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21100:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21082:6:29"},"nodeType":"YulFunctionCall","src":"21082:21:29"},"nodeType":"YulExpressionStatement","src":"21082:21:29"},{"nodeType":"YulAssignment","src":"21112:70:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21147:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"21155:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21167:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"21178:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21163:3:29"},"nodeType":"YulFunctionCall","src":"21163:18:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"21120:26:29"},"nodeType":"YulFunctionCall","src":"21120:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21112:4:29"}]}]},"name":"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21033:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21044:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21052:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21063:4:29","type":""}],"src":"20941:247:29"},{"body":{"nodeType":"YulBlock","src":"21271:167:29","statements":[{"body":{"nodeType":"YulBlock","src":"21317:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21326:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21329:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21319:6:29"},"nodeType":"YulFunctionCall","src":"21319:12:29"},"nodeType":"YulExpressionStatement","src":"21319:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21292:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"21301:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21288:3:29"},"nodeType":"YulFunctionCall","src":"21288:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"21313:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21284:3:29"},"nodeType":"YulFunctionCall","src":"21284:32:29"},"nodeType":"YulIf","src":"21281:52:29"},{"nodeType":"YulVariableDeclaration","src":"21342:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21361:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21355:5:29"},"nodeType":"YulFunctionCall","src":"21355:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21346:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21402:5:29"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"21380:21:29"},"nodeType":"YulFunctionCall","src":"21380:28:29"},"nodeType":"YulExpressionStatement","src":"21380:28:29"},{"nodeType":"YulAssignment","src":"21417:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"21427:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21417:6:29"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21237:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21248:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21260:6:29","type":""}],"src":"21193:245:29"},{"body":{"nodeType":"YulBlock","src":"21475:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21492:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21495:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21485:6:29"},"nodeType":"YulFunctionCall","src":"21485:88:29"},"nodeType":"YulExpressionStatement","src":"21485:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21589:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21592:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21582:6:29"},"nodeType":"YulFunctionCall","src":"21582:15:29"},"nodeType":"YulExpressionStatement","src":"21582:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21613:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21616:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21606:6:29"},"nodeType":"YulFunctionCall","src":"21606:15:29"},"nodeType":"YulExpressionStatement","src":"21606:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21443:184:29"},{"body":{"nodeType":"YulBlock","src":"21739:281:29","statements":[{"nodeType":"YulVariableDeclaration","src":"21749:51:29","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"21788:11:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21775:12:29"},"nodeType":"YulFunctionCall","src":"21775:25:29"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"21753:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"21948:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21957:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21960:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21950:6:29"},"nodeType":"YulFunctionCall","src":"21950:12:29"},"nodeType":"YulExpressionStatement","src":"21950:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"21823:18:29"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"21851:12:29"},"nodeType":"YulFunctionCall","src":"21851:14:29"},{"name":"base_ref","nodeType":"YulIdentifier","src":"21867:8:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21847:3:29"},"nodeType":"YulFunctionCall","src":"21847:29:29"},{"kind":"number","nodeType":"YulLiteral","src":"21878:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21843:3:29"},"nodeType":"YulFunctionCall","src":"21843:102:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21819:3:29"},"nodeType":"YulFunctionCall","src":"21819:127:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21812:6:29"},"nodeType":"YulFunctionCall","src":"21812:135:29"},"nodeType":"YulIf","src":"21809:155:29"},{"nodeType":"YulAssignment","src":"21973:41:29","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"21985:8:29"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"21995:18:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21981:3:29"},"nodeType":"YulFunctionCall","src":"21981:33:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"21973:4:29"}]}]},"name":"access_calldata_tail_t_struct$_MetadataPair_$5293_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"21704:8:29","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"21714:11:29","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"21730:4:29","type":""}],"src":"21632:388:29"},{"body":{"nodeType":"YulBlock","src":"22151:82:29","statements":[{"nodeType":"YulAssignment","src":"22161:66:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22205:5:29"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"22212:12:29"},"nodeType":"YulFunctionCall","src":"22212:14:29"}],"functionName":{"name":"abi_decode_struct_MetadataPair","nodeType":"YulIdentifier","src":"22174:30:29"},"nodeType":"YulFunctionCall","src":"22174:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"22161:9:29"}]}]},"name":"convert_t_struct$_MetadataPair_$5293_calldata_ptr_to_t_struct$_MetadataPair_$5293_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22127:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"22137:9:29","type":""}],"src":"22025:208:29"},{"body":{"nodeType":"YulBlock","src":"22334:1375:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22344:24:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22364:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22358:5:29"},"nodeType":"YulFunctionCall","src":"22358:10:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22348:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22411:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22413:16:29"},"nodeType":"YulFunctionCall","src":"22413:18:29"},"nodeType":"YulExpressionStatement","src":"22413:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22383:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22391:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22380:2:29"},"nodeType":"YulFunctionCall","src":"22380:30:29"},"nodeType":"YulIf","src":"22377:56:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22486:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22524:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22518:5:29"},"nodeType":"YulFunctionCall","src":"22518:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22492:25:29"},"nodeType":"YulFunctionCall","src":"22492:38:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"22532:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"22442:43:29"},"nodeType":"YulFunctionCall","src":"22442:97:29"},"nodeType":"YulExpressionStatement","src":"22442:97:29"},{"nodeType":"YulVariableDeclaration","src":"22548:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22565:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22552:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22575:23:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22594:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"22579:11:29","type":""}]},{"nodeType":"YulAssignment","src":"22607:24:29","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22620:11:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22607:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22677:775:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22691:94:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22710:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22718:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22706:3:29"},"nodeType":"YulFunctionCall","src":"22706:79:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"22695:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22798:49:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22842:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"22812:29:29"},"nodeType":"YulFunctionCall","src":"22812:35:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22802:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22860:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22869:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22864:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22947:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22972:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22990:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22995:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22986:3:29"},"nodeType":"YulFunctionCall","src":"22986:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22980:5:29"},"nodeType":"YulFunctionCall","src":"22980:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22965:6:29"},"nodeType":"YulFunctionCall","src":"22965:42:29"},"nodeType":"YulExpressionStatement","src":"22965:42:29"},{"nodeType":"YulAssignment","src":"23024:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23038:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"23046:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23034:3:29"},"nodeType":"YulFunctionCall","src":"23034:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23024:6:29"}]},{"nodeType":"YulAssignment","src":"23065:40:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23082:9:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"23093:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23078:3:29"},"nodeType":"YulFunctionCall","src":"23078:27:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23065:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22894:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22897:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22891:2:29"},"nodeType":"YulFunctionCall","src":"22891:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22906:28:29","statements":[{"nodeType":"YulAssignment","src":"22908:24:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22917:1:29"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"22920:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22913:3:29"},"nodeType":"YulFunctionCall","src":"22913:19:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22908:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"22887:3:29","statements":[]},"src":"22883:236:29"},{"body":{"nodeType":"YulBlock","src":"23167:226:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23185:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23212:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23217:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23208:3:29"},"nodeType":"YulFunctionCall","src":"23208:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23202:5:29"},"nodeType":"YulFunctionCall","src":"23202:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23189:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23252:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23264:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23291:1:29","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"23294:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23287:3:29"},"nodeType":"YulFunctionCall","src":"23287:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"23303:3:29","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23283:3:29"},"nodeType":"YulFunctionCall","src":"23283:24:29"},{"kind":"number","nodeType":"YulLiteral","src":"23309:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23279:3:29"},"nodeType":"YulFunctionCall","src":"23279:97:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23275:3:29"},"nodeType":"YulFunctionCall","src":"23275:102:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23260:3:29"},"nodeType":"YulFunctionCall","src":"23260:118:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23245:6:29"},"nodeType":"YulFunctionCall","src":"23245:134:29"},"nodeType":"YulExpressionStatement","src":"23245:134:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23138:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"23147:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23135:2:29"},"nodeType":"YulFunctionCall","src":"23135:19:29"},"nodeType":"YulIf","src":"23132:261:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23413:4:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23427:1:29","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"23430:6:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23423:3:29"},"nodeType":"YulFunctionCall","src":"23423:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"23439:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23419:3:29"},"nodeType":"YulFunctionCall","src":"23419:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23406:6:29"},"nodeType":"YulFunctionCall","src":"23406:36:29"},"nodeType":"YulExpressionStatement","src":"23406:36:29"}]},"nodeType":"YulCase","src":"22670:782:29","value":{"kind":"number","nodeType":"YulLiteral","src":"22675:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23469:234:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23483:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"23496:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23487:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23532:67:29","statements":[{"nodeType":"YulAssignment","src":"23550:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23569:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23574:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23565:3:29"},"nodeType":"YulFunctionCall","src":"23565:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23559:5:29"},"nodeType":"YulFunctionCall","src":"23559:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23550:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23513:6:29"},"nodeType":"YulIf","src":"23510:89:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23619:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23678:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"23685:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23625:52:29"},"nodeType":"YulFunctionCall","src":"23625:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23612:6:29"},"nodeType":"YulFunctionCall","src":"23612:81:29"},"nodeType":"YulExpressionStatement","src":"23612:81:29"}]},"nodeType":"YulCase","src":"23461:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22650:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22658:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22647:2:29"},"nodeType":"YulFunctionCall","src":"22647:14:29"},"nodeType":"YulSwitch","src":"22640:1063:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22319:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"22325:3:29","type":""}],"src":"22238:1471:29"},{"body":{"nodeType":"YulBlock","src":"23883:214:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23900:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23911:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23893:6:29"},"nodeType":"YulFunctionCall","src":"23893:21:29"},"nodeType":"YulExpressionStatement","src":"23893:21:29"},{"nodeType":"YulVariableDeclaration","src":"23923:59:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23955:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23967:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"23978:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23963:3:29"},"nodeType":"YulFunctionCall","src":"23963:18:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"23937:17:29"},"nodeType":"YulFunctionCall","src":"23937:45:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"23927:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24002:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24013:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23998:3:29"},"nodeType":"YulFunctionCall","src":"23998:18:29"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"24022:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"24030:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24018:3:29"},"nodeType":"YulFunctionCall","src":"24018:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23991:6:29"},"nodeType":"YulFunctionCall","src":"23991:50:29"},"nodeType":"YulExpressionStatement","src":"23991:50:29"},{"nodeType":"YulAssignment","src":"24050:41:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24076:6:29"},{"name":"tail_1","nodeType":"YulIdentifier","src":"24084:6:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24058:17:29"},"nodeType":"YulFunctionCall","src":"24058:33:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24050:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23844:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23855:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23863:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23874:4:29","type":""}],"src":"23714:383:29"},{"body":{"nodeType":"YulBlock","src":"24134:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24151:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24154:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24144:6:29"},"nodeType":"YulFunctionCall","src":"24144:88:29"},"nodeType":"YulExpressionStatement","src":"24144:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24248:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24251:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24241:6:29"},"nodeType":"YulFunctionCall","src":"24241:15:29"},"nodeType":"YulExpressionStatement","src":"24241:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24272:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24275:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24265:6:29"},"nodeType":"YulFunctionCall","src":"24265:15:29"},"nodeType":"YulExpressionStatement","src":"24265:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"24102:184:29"},{"body":{"nodeType":"YulBlock","src":"24338:148:29","statements":[{"body":{"nodeType":"YulBlock","src":"24429:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24431:16:29"},"nodeType":"YulFunctionCall","src":"24431:18:29"},"nodeType":"YulExpressionStatement","src":"24431:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24354:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"24361:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24351:2:29"},"nodeType":"YulFunctionCall","src":"24351:77:29"},"nodeType":"YulIf","src":"24348:103:29"},{"nodeType":"YulAssignment","src":"24460:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24471:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"24478:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24467:3:29"},"nodeType":"YulFunctionCall","src":"24467:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24460:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24320:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24330:3:29","type":""}],"src":"24291:195:29"},{"body":{"nodeType":"YulBlock","src":"24665:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24682:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24693:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24675:6:29"},"nodeType":"YulFunctionCall","src":"24675:21:29"},"nodeType":"YulExpressionStatement","src":"24675:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24727:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24712:3:29"},"nodeType":"YulFunctionCall","src":"24712:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"24732:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24705:6:29"},"nodeType":"YulFunctionCall","src":"24705:30:29"},"nodeType":"YulExpressionStatement","src":"24705:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24755:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24766:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24751:3:29"},"nodeType":"YulFunctionCall","src":"24751:18:29"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"24771:34:29","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24744:6:29"},"nodeType":"YulFunctionCall","src":"24744:62:29"},"nodeType":"YulExpressionStatement","src":"24744:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24826:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24837:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24822:3:29"},"nodeType":"YulFunctionCall","src":"24822:18:29"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"24842:14:29","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24815:6:29"},"nodeType":"YulFunctionCall","src":"24815:42:29"},"nodeType":"YulExpressionStatement","src":"24815:42:29"},{"nodeType":"YulAssignment","src":"24866:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24878:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24889:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24874:3:29"},"nodeType":"YulFunctionCall","src":"24874:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24866:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24642:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24656:4:29","type":""}],"src":"24491:408:29"},{"body":{"nodeType":"YulBlock","src":"25078:234:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25095:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25106:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25088:6:29"},"nodeType":"YulFunctionCall","src":"25088:21:29"},"nodeType":"YulExpressionStatement","src":"25088:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25129:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25140:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25125:3:29"},"nodeType":"YulFunctionCall","src":"25125:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"25145:2:29","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25118:6:29"},"nodeType":"YulFunctionCall","src":"25118:30:29"},"nodeType":"YulExpressionStatement","src":"25118:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25168:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25179:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25164:3:29"},"nodeType":"YulFunctionCall","src":"25164:18:29"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"25184:34:29","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25157:6:29"},"nodeType":"YulFunctionCall","src":"25157:62:29"},"nodeType":"YulExpressionStatement","src":"25157:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25239:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25250:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25235:3:29"},"nodeType":"YulFunctionCall","src":"25235:18:29"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"25255:14:29","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25228:6:29"},"nodeType":"YulFunctionCall","src":"25228:42:29"},"nodeType":"YulExpressionStatement","src":"25228:42:29"},{"nodeType":"YulAssignment","src":"25279:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25291:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25302:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25287:3:29"},"nodeType":"YulFunctionCall","src":"25287:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25279:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25055:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25069:4:29","type":""}],"src":"24904:408:29"},{"body":{"nodeType":"YulBlock","src":"25491:162:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25508:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25519:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25501:6:29"},"nodeType":"YulFunctionCall","src":"25501:21:29"},"nodeType":"YulExpressionStatement","src":"25501:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25542:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25553:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25538:3:29"},"nodeType":"YulFunctionCall","src":"25538:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"25558:2:29","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25531:6:29"},"nodeType":"YulFunctionCall","src":"25531:30:29"},"nodeType":"YulExpressionStatement","src":"25531:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25581:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25592:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25577:3:29"},"nodeType":"YulFunctionCall","src":"25577:18:29"},{"hexValue":"554e415554484f52495a4544","kind":"string","nodeType":"YulLiteral","src":"25597:14:29","type":"","value":"UNAUTHORIZED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25570:6:29"},"nodeType":"YulFunctionCall","src":"25570:42:29"},"nodeType":"YulExpressionStatement","src":"25570:42:29"},{"nodeType":"YulAssignment","src":"25621:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25633:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25644:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25629:3:29"},"nodeType":"YulFunctionCall","src":"25629:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25621:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25468:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25482:4:29","type":""}],"src":"25317:336:29"},{"body":{"nodeType":"YulBlock","src":"25705:149:29","statements":[{"body":{"nodeType":"YulBlock","src":"25732:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25734:16:29"},"nodeType":"YulFunctionCall","src":"25734:18:29"},"nodeType":"YulExpressionStatement","src":"25734:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25725:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25718:6:29"},"nodeType":"YulFunctionCall","src":"25718:13:29"},"nodeType":"YulIf","src":"25715:39:29"},{"nodeType":"YulAssignment","src":"25763:85:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25774:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"25781:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25770:3:29"},"nodeType":"YulFunctionCall","src":"25770:78:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25763:3:29"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25687:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25697:3:29","type":""}],"src":"25658:196:29"},{"body":{"nodeType":"YulBlock","src":"26033:246:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26050:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26061:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26043:6:29"},"nodeType":"YulFunctionCall","src":"26043:21:29"},"nodeType":"YulExpressionStatement","src":"26043:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26084:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26095:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26080:3:29"},"nodeType":"YulFunctionCall","src":"26080:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"26100:2:29","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26073:6:29"},"nodeType":"YulFunctionCall","src":"26073:30:29"},"nodeType":"YulExpressionStatement","src":"26073:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26123:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26134:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26119:3:29"},"nodeType":"YulFunctionCall","src":"26119:18:29"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"26139:34:29","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26112:6:29"},"nodeType":"YulFunctionCall","src":"26112:62:29"},"nodeType":"YulExpressionStatement","src":"26112:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26194:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26205:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26190:3:29"},"nodeType":"YulFunctionCall","src":"26190:18:29"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"26210:26:29","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26183:6:29"},"nodeType":"YulFunctionCall","src":"26183:54:29"},"nodeType":"YulExpressionStatement","src":"26183:54:29"},{"nodeType":"YulAssignment","src":"26246:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26258:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26269:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26254:3:29"},"nodeType":"YulFunctionCall","src":"26254:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26246:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26010:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26024:4:29","type":""}],"src":"25859:420:29"},{"body":{"nodeType":"YulBlock","src":"26458:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26475:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26486:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26468:6:29"},"nodeType":"YulFunctionCall","src":"26468:21:29"},"nodeType":"YulExpressionStatement","src":"26468:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26509:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26520:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26505:3:29"},"nodeType":"YulFunctionCall","src":"26505:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"26525:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26498:6:29"},"nodeType":"YulFunctionCall","src":"26498:30:29"},"nodeType":"YulExpressionStatement","src":"26498:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26548:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26559:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26544:3:29"},"nodeType":"YulFunctionCall","src":"26544:18:29"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"26564:26:29","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26537:6:29"},"nodeType":"YulFunctionCall","src":"26537:54:29"},"nodeType":"YulExpressionStatement","src":"26537:54:29"},{"nodeType":"YulAssignment","src":"26600:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26612:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26623:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26608:3:29"},"nodeType":"YulFunctionCall","src":"26608:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26600:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26435:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26449:4:29","type":""}],"src":"26284:348:29"},{"body":{"nodeType":"YulBlock","src":"26811:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26828:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26839:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26821:6:29"},"nodeType":"YulFunctionCall","src":"26821:21:29"},"nodeType":"YulExpressionStatement","src":"26821:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26862:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26873:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26858:3:29"},"nodeType":"YulFunctionCall","src":"26858:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"26878:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26851:6:29"},"nodeType":"YulFunctionCall","src":"26851:30:29"},"nodeType":"YulExpressionStatement","src":"26851:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26901:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26912:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26897:3:29"},"nodeType":"YulFunctionCall","src":"26897:18:29"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"26917:34:29","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26890:6:29"},"nodeType":"YulFunctionCall","src":"26890:62:29"},"nodeType":"YulExpressionStatement","src":"26890:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26972:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26983:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26968:3:29"},"nodeType":"YulFunctionCall","src":"26968:18:29"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"26988:11:29","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26961:6:29"},"nodeType":"YulFunctionCall","src":"26961:39:29"},"nodeType":"YulExpressionStatement","src":"26961:39:29"},{"nodeType":"YulAssignment","src":"27009:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27021:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27032:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27017:3:29"},"nodeType":"YulFunctionCall","src":"27017:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27009:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26788:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26802:4:29","type":""}],"src":"26637:405:29"},{"body":{"nodeType":"YulBlock","src":"27276:584:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27293:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27304:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27286:6:29"},"nodeType":"YulFunctionCall","src":"27286:21:29"},"nodeType":"YulExpressionStatement","src":"27286:21:29"},{"nodeType":"YulVariableDeclaration","src":"27316:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"27326:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27320:2:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27388:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27399:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27384:3:29"},"nodeType":"YulFunctionCall","src":"27384:18:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27414:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27408:5:29"},"nodeType":"YulFunctionCall","src":"27408:13:29"},{"name":"_1","nodeType":"YulIdentifier","src":"27423:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27404:3:29"},"nodeType":"YulFunctionCall","src":"27404:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27377:6:29"},"nodeType":"YulFunctionCall","src":"27377:50:29"},"nodeType":"YulExpressionStatement","src":"27377:50:29"},{"nodeType":"YulVariableDeclaration","src":"27436:44:29","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27466:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27474:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27462:3:29"},"nodeType":"YulFunctionCall","src":"27462:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27456:5:29"},"nodeType":"YulFunctionCall","src":"27456:24:29"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"27440:12:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27500:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27511:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27496:3:29"},"nodeType":"YulFunctionCall","src":"27496:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"27516:4:29","type":"","value":"0x80"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27489:6:29"},"nodeType":"YulFunctionCall","src":"27489:32:29"},"nodeType":"YulExpressionStatement","src":"27489:32:29"},{"nodeType":"YulVariableDeclaration","src":"27530:66:29","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"27562:12:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27580:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27591:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27576:3:29"},"nodeType":"YulFunctionCall","src":"27576:19:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"27544:17:29"},"nodeType":"YulFunctionCall","src":"27544:52:29"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"27534:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27616:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27627:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27612:3:29"},"nodeType":"YulFunctionCall","src":"27612:20:29"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27644:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27652:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27640:3:29"},"nodeType":"YulFunctionCall","src":"27640:15:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27634:5:29"},"nodeType":"YulFunctionCall","src":"27634:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27605:6:29"},"nodeType":"YulFunctionCall","src":"27605:52:29"},"nodeType":"YulExpressionStatement","src":"27605:52:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27677:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27688:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27673:3:29"},"nodeType":"YulFunctionCall","src":"27673:19:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27708:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27716:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27704:3:29"},"nodeType":"YulFunctionCall","src":"27704:15:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27698:5:29"},"nodeType":"YulFunctionCall","src":"27698:22:29"},{"name":"_1","nodeType":"YulIdentifier","src":"27722:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27694:3:29"},"nodeType":"YulFunctionCall","src":"27694:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27666:6:29"},"nodeType":"YulFunctionCall","src":"27666:60:29"},"nodeType":"YulExpressionStatement","src":"27666:60:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27757:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27742:3:29"},"nodeType":"YulFunctionCall","src":"27742:20:29"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"27768:6:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"27776:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27764:3:29"},"nodeType":"YulFunctionCall","src":"27764:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27735:6:29"},"nodeType":"YulFunctionCall","src":"27735:52:29"},"nodeType":"YulExpressionStatement","src":"27735:52:29"},{"nodeType":"YulAssignment","src":"27796:58:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27831:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"27839:6:29"},{"name":"tail_1","nodeType":"YulIdentifier","src":"27847:6:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"27804:26:29"},"nodeType":"YulFunctionCall","src":"27804:50:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27796:4:29"}]}]},"name":"abi_encode_tuple_t_struct$_RegisterNameParams_$5302_memory_ptr_t_bytes_calldata_ptr__to_t_struct$_RegisterNameParams_$5302_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27229:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27240:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27248:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27256:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27267:4:29","type":""}],"src":"27047:813:29"},{"body":{"nodeType":"YulBlock","src":"28039:177:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28056:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28067:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28049:6:29"},"nodeType":"YulFunctionCall","src":"28049:21:29"},"nodeType":"YulExpressionStatement","src":"28049:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28090:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28101:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28086:3:29"},"nodeType":"YulFunctionCall","src":"28086:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"28106:2:29","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28079:6:29"},"nodeType":"YulFunctionCall","src":"28079:30:29"},"nodeType":"YulExpressionStatement","src":"28079:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28129:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28140:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28125:3:29"},"nodeType":"YulFunctionCall","src":"28125:18:29"},{"hexValue":"47415445445f4d455441444154415f554e415554484f5249534544","kind":"string","nodeType":"YulLiteral","src":"28145:29:29","type":"","value":"GATED_METADATA_UNAUTHORISED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28118:6:29"},"nodeType":"YulFunctionCall","src":"28118:57:29"},"nodeType":"YulExpressionStatement","src":"28118:57:29"},{"nodeType":"YulAssignment","src":"28184:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28196:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28207:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28192:3:29"},"nodeType":"YulFunctionCall","src":"28192:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28184:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_690d813f825dd4dd92907e1429f9e9d01f0cb6239eb289ec82623ae817686b0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28016:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28030:4:29","type":""}],"src":"27865:351:29"},{"body":{"nodeType":"YulBlock","src":"28395:166:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28412:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28423:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28405:6:29"},"nodeType":"YulFunctionCall","src":"28405:21:29"},"nodeType":"YulExpressionStatement","src":"28405:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28446:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28457:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28442:3:29"},"nodeType":"YulFunctionCall","src":"28442:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"28462:2:29","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28435:6:29"},"nodeType":"YulFunctionCall","src":"28435:30:29"},"nodeType":"YulExpressionStatement","src":"28435:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28485:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28496:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28481:3:29"},"nodeType":"YulFunctionCall","src":"28481:18:29"},{"hexValue":"494e56414c49445f544f4b454e5f4944","kind":"string","nodeType":"YulLiteral","src":"28501:18:29","type":"","value":"INVALID_TOKEN_ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28474:6:29"},"nodeType":"YulFunctionCall","src":"28474:46:29"},"nodeType":"YulExpressionStatement","src":"28474:46:29"},{"nodeType":"YulAssignment","src":"28529:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28541:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28552:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28537:3:29"},"nodeType":"YulFunctionCall","src":"28537:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28529:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_806fc2f0c528614f6371ca4d5621d8076cd90c51a2211198fdc62e3aba768436__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28372:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28386:4:29","type":""}],"src":"28221:340:29"},{"body":{"nodeType":"YulBlock","src":"28750:894:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28760:12:29","value":{"kind":"number","nodeType":"YulLiteral","src":"28771:1:29","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"28764:3:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28781:30:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28804:6:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28798:5:29"},"nodeType":"YulFunctionCall","src":"28798:13:29"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"28785:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28820:50:29","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28860:9:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28834:25:29"},"nodeType":"YulFunctionCall","src":"28834:36:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28824:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28879:11:29","value":{"kind":"number","nodeType":"YulLiteral","src":"28889:1:29","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"28883:2:29","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28940:184:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28961:3:29"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28970:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28981:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28966:3:29"},"nodeType":"YulFunctionCall","src":"28966:82:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28954:6:29"},"nodeType":"YulFunctionCall","src":"28954:95:29"},"nodeType":"YulExpressionStatement","src":"28954:95:29"},{"nodeType":"YulAssignment","src":"29062:52:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29073:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29082:6:29"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29104:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29097:6:29"},"nodeType":"YulFunctionCall","src":"29097:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29090:6:29"},"nodeType":"YulFunctionCall","src":"29090:22:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29078:3:29"},"nodeType":"YulFunctionCall","src":"29078:35:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29069:3:29"},"nodeType":"YulFunctionCall","src":"29069:45:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29062:3:29"}]}]},"nodeType":"YulCase","src":"28933:191:29","value":{"kind":"number","nodeType":"YulLiteral","src":"28938:1:29","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"29140:349:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29161:1:29","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"29164:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29154:6:29"},"nodeType":"YulFunctionCall","src":"29154:17:29"},"nodeType":"YulExpressionStatement","src":"29154:17:29"},{"nodeType":"YulVariableDeclaration","src":"29184:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29194:4:29","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"29188:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29211:31:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29236:1:29","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"29239:2:29"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"29226:9:29"},"nodeType":"YulFunctionCall","src":"29226:16:29"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"29215:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29255:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29264:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"29259:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"29332:111:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29361:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"29366:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29357:3:29"},"nodeType":"YulFunctionCall","src":"29357:11:29"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"29376:7:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29370:5:29"},"nodeType":"YulFunctionCall","src":"29370:14:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29350:6:29"},"nodeType":"YulFunctionCall","src":"29350:35:29"},"nodeType":"YulExpressionStatement","src":"29350:35:29"},{"nodeType":"YulAssignment","src":"29402:27:29","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"29417:7:29"},{"name":"_1","nodeType":"YulIdentifier","src":"29426:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29413:3:29"},"nodeType":"YulFunctionCall","src":"29413:16:29"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"29402:7:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29289:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"29292:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29286:2:29"},"nodeType":"YulFunctionCall","src":"29286:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29300:19:29","statements":[{"nodeType":"YulAssignment","src":"29302:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29311:1:29"},{"name":"_2","nodeType":"YulIdentifier","src":"29314:2:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29307:3:29"},"nodeType":"YulFunctionCall","src":"29307:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"29302:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"29282:3:29","statements":[]},"src":"29278:165:29"},{"nodeType":"YulAssignment","src":"29456:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29467:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"29472:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29463:3:29"},"nodeType":"YulFunctionCall","src":"29463:16:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29456:3:29"}]}]},"nodeType":"YulCase","src":"29133:356:29","value":{"kind":"number","nodeType":"YulLiteral","src":"29138:1:29","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28910:9:29"},{"name":"_1","nodeType":"YulIdentifier","src":"28921:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28906:3:29"},"nodeType":"YulFunctionCall","src":"28906:18:29"},"nodeType":"YulSwitch","src":"28899:590:29"},{"nodeType":"YulVariableDeclaration","src":"29498:29:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29520:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29514:5:29"},"nodeType":"YulFunctionCall","src":"29514:13:29"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"29502:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29575:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"29583:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29571:3:29"},"nodeType":"YulFunctionCall","src":"29571:17:29"},{"name":"ret","nodeType":"YulIdentifier","src":"29590:3:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"29595:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"29536:34:29"},"nodeType":"YulFunctionCall","src":"29536:68:29"},"nodeType":"YulExpressionStatement","src":"29536:68:29"},{"nodeType":"YulAssignment","src":"29613:25:29","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"29624:3:29"},{"name":"length_1","nodeType":"YulIdentifier","src":"29629:8:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29620:3:29"},"nodeType":"YulFunctionCall","src":"29620:18:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29613:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28718:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28723:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28731:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28742:3:29","type":""}],"src":"28566:1078:29"},{"body":{"nodeType":"YulBlock","src":"29796:124:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29819:3:29"},{"name":"value0","nodeType":"YulIdentifier","src":"29824:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"29832:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"29806:12:29"},"nodeType":"YulFunctionCall","src":"29806:33:29"},"nodeType":"YulExpressionStatement","src":"29806:33:29"},{"nodeType":"YulVariableDeclaration","src":"29848:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29862:3:29"},{"name":"value1","nodeType":"YulIdentifier","src":"29867:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29858:3:29"},"nodeType":"YulFunctionCall","src":"29858:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29852:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"29890:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"29894:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29883:6:29"},"nodeType":"YulFunctionCall","src":"29883:13:29"},"nodeType":"YulExpressionStatement","src":"29883:13:29"},{"nodeType":"YulAssignment","src":"29905:9:29","value":{"name":"_1","nodeType":"YulIdentifier","src":"29912:2:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29905:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29764:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29769:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29777:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29788:3:29","type":""}],"src":"29649:271:29"},{"body":{"nodeType":"YulBlock","src":"30072:100:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30089:3:29"},{"name":"value0","nodeType":"YulIdentifier","src":"30094:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30082:6:29"},"nodeType":"YulFunctionCall","src":"30082:19:29"},"nodeType":"YulExpressionStatement","src":"30082:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30121:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"30126:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30117:3:29"},"nodeType":"YulFunctionCall","src":"30117:12:29"},{"name":"value1","nodeType":"YulIdentifier","src":"30131:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30110:6:29"},"nodeType":"YulFunctionCall","src":"30110:28:29"},"nodeType":"YulExpressionStatement","src":"30110:28:29"},{"nodeType":"YulAssignment","src":"30147:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30158:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"30163:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30154:3:29"},"nodeType":"YulFunctionCall","src":"30154:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30147:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30040:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30045:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30053:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30064:3:29","type":""}],"src":"29925:247:29"},{"body":{"nodeType":"YulBlock","src":"30326:124:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30349:3:29"},{"name":"value0","nodeType":"YulIdentifier","src":"30354:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"30362:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"30336:12:29"},"nodeType":"YulFunctionCall","src":"30336:33:29"},"nodeType":"YulExpressionStatement","src":"30336:33:29"},{"nodeType":"YulVariableDeclaration","src":"30378:26:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30392:3:29"},{"name":"value1","nodeType":"YulIdentifier","src":"30397:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30388:3:29"},"nodeType":"YulFunctionCall","src":"30388:16:29"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"30382:2:29","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"30420:2:29"},{"kind":"number","nodeType":"YulLiteral","src":"30424:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30413:6:29"},"nodeType":"YulFunctionCall","src":"30413:13:29"},"nodeType":"YulExpressionStatement","src":"30413:13:29"},{"nodeType":"YulAssignment","src":"30435:9:29","value":{"name":"_1","nodeType":"YulIdentifier","src":"30442:2:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30435:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30294:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30299:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30307:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30318:3:29","type":""}],"src":"30177:273:29"},{"body":{"nodeType":"YulBlock","src":"30636:218:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30653:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30664:2:29","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30646:6:29"},"nodeType":"YulFunctionCall","src":"30646:21:29"},"nodeType":"YulExpressionStatement","src":"30646:21:29"},{"nodeType":"YulAssignment","src":"30676:70:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30711:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"30719:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30742:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30727:3:29"},"nodeType":"YulFunctionCall","src":"30727:18:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"30684:26:29"},"nodeType":"YulFunctionCall","src":"30684:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30676:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30766:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30777:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30762:3:29"},"nodeType":"YulFunctionCall","src":"30762:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"30782:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30755:6:29"},"nodeType":"YulFunctionCall","src":"30755:34:29"},"nodeType":"YulExpressionStatement","src":"30755:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30809:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30820:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30805:3:29"},"nodeType":"YulFunctionCall","src":"30805:18:29"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30839:6:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30832:6:29"},"nodeType":"YulFunctionCall","src":"30832:14:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30825:6:29"},"nodeType":"YulFunctionCall","src":"30825:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30798:6:29"},"nodeType":"YulFunctionCall","src":"30798:50:29"},"nodeType":"YulExpressionStatement","src":"30798:50:29"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_bytes32_t_bool__to_t_string_memory_ptr_t_bytes32_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30581:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30592:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30600:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30608:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30616:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30627:4:29","type":""}],"src":"30455:399:29"},{"body":{"nodeType":"YulBlock","src":"31033:228:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31050:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31061:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31043:6:29"},"nodeType":"YulFunctionCall","src":"31043:21:29"},"nodeType":"YulExpressionStatement","src":"31043:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31084:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31095:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31080:3:29"},"nodeType":"YulFunctionCall","src":"31080:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"31100:2:29","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31073:6:29"},"nodeType":"YulFunctionCall","src":"31073:30:29"},"nodeType":"YulExpressionStatement","src":"31073:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31123:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31134:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31119:3:29"},"nodeType":"YulFunctionCall","src":"31119:18:29"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"31139:34:29","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31112:6:29"},"nodeType":"YulFunctionCall","src":"31112:62:29"},"nodeType":"YulExpressionStatement","src":"31112:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31194:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31205:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31190:3:29"},"nodeType":"YulFunctionCall","src":"31190:18:29"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"31210:8:29","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31183:6:29"},"nodeType":"YulFunctionCall","src":"31183:36:29"},"nodeType":"YulExpressionStatement","src":"31183:36:29"},{"nodeType":"YulAssignment","src":"31228:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31240:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31251:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31236:3:29"},"nodeType":"YulFunctionCall","src":"31236:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31228:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31010:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31024:4:29","type":""}],"src":"30859:402:29"},{"body":{"nodeType":"YulBlock","src":"31395:116:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31412:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31423:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31405:6:29"},"nodeType":"YulFunctionCall","src":"31405:21:29"},"nodeType":"YulExpressionStatement","src":"31405:21:29"},{"nodeType":"YulAssignment","src":"31435:70:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31470:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"31478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31490:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31501:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31486:3:29"},"nodeType":"YulFunctionCall","src":"31486:18:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"31443:26:29"},"nodeType":"YulFunctionCall","src":"31443:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31435:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31356:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31367:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31375:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31386:4:29","type":""}],"src":"31266:245:29"},{"body":{"nodeType":"YulBlock","src":"31673:159:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31690:9:29"},{"name":"value0","nodeType":"YulIdentifier","src":"31701:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31683:6:29"},"nodeType":"YulFunctionCall","src":"31683:25:29"},"nodeType":"YulExpressionStatement","src":"31683:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31728:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31739:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31724:3:29"},"nodeType":"YulFunctionCall","src":"31724:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"31744:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31717:6:29"},"nodeType":"YulFunctionCall","src":"31717:30:29"},"nodeType":"YulExpressionStatement","src":"31717:30:29"},{"nodeType":"YulAssignment","src":"31756:70:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31791:6:29"},{"name":"value2","nodeType":"YulIdentifier","src":"31799:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31811:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31822:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31807:3:29"},"nodeType":"YulFunctionCall","src":"31807:18:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"31764:26:29"},"nodeType":"YulFunctionCall","src":"31764:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31756:4:29"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31626:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31637:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31645:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31653:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31664:4:29","type":""}],"src":"31516:316:29"},{"body":{"nodeType":"YulBlock","src":"32011:233:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32028:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32039:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32021:6:29"},"nodeType":"YulFunctionCall","src":"32021:21:29"},"nodeType":"YulExpressionStatement","src":"32021:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32062:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32073:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32058:3:29"},"nodeType":"YulFunctionCall","src":"32058:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"32078:2:29","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32051:6:29"},"nodeType":"YulFunctionCall","src":"32051:30:29"},"nodeType":"YulExpressionStatement","src":"32051:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32101:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32112:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32097:3:29"},"nodeType":"YulFunctionCall","src":"32097:18:29"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"32117:34:29","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32090:6:29"},"nodeType":"YulFunctionCall","src":"32090:62:29"},"nodeType":"YulExpressionStatement","src":"32090:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32172:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32183:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32168:3:29"},"nodeType":"YulFunctionCall","src":"32168:18:29"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"32188:13:29","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32161:6:29"},"nodeType":"YulFunctionCall","src":"32161:41:29"},"nodeType":"YulExpressionStatement","src":"32161:41:29"},{"nodeType":"YulAssignment","src":"32211:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32223:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32234:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32219:3:29"},"nodeType":"YulFunctionCall","src":"32219:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32211:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31988:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32002:4:29","type":""}],"src":"31837:407:29"},{"body":{"nodeType":"YulBlock","src":"32295:163:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32305:28:29","value":{"kind":"number","nodeType":"YulLiteral","src":"32315:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"32309:2:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32342:29:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32361:5:29"},{"name":"_1","nodeType":"YulIdentifier","src":"32368:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32357:3:29"},"nodeType":"YulFunctionCall","src":"32357:14:29"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"32346:7:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32399:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32401:16:29"},"nodeType":"YulFunctionCall","src":"32401:18:29"},"nodeType":"YulExpressionStatement","src":"32401:18:29"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"32386:7:29"},{"name":"_1","nodeType":"YulIdentifier","src":"32395:2:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32383:2:29"},"nodeType":"YulFunctionCall","src":"32383:15:29"},"nodeType":"YulIf","src":"32380:41:29"},{"nodeType":"YulAssignment","src":"32430:22:29","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"32441:7:29"},{"kind":"number","nodeType":"YulLiteral","src":"32450:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32437:3:29"},"nodeType":"YulFunctionCall","src":"32437:15:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32430:3:29"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32277:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32287:3:29","type":""}],"src":"32249:209:29"},{"body":{"nodeType":"YulBlock","src":"32637:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32654:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32665:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32647:6:29"},"nodeType":"YulFunctionCall","src":"32647:21:29"},"nodeType":"YulExpressionStatement","src":"32647:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32688:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32699:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32684:3:29"},"nodeType":"YulFunctionCall","src":"32684:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"32704:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32677:6:29"},"nodeType":"YulFunctionCall","src":"32677:30:29"},"nodeType":"YulExpressionStatement","src":"32677:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32727:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32738:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32723:3:29"},"nodeType":"YulFunctionCall","src":"32723:18:29"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32743:34:29","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32716:6:29"},"nodeType":"YulFunctionCall","src":"32716:62:29"},"nodeType":"YulExpressionStatement","src":"32716:62:29"},{"nodeType":"YulAssignment","src":"32787:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32799:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32810:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32795:3:29"},"nodeType":"YulFunctionCall","src":"32795:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32787:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32614:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32628:4:29","type":""}],"src":"32463:356:29"},{"body":{"nodeType":"YulBlock","src":"32998:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33015:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33026:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33008:6:29"},"nodeType":"YulFunctionCall","src":"33008:21:29"},"nodeType":"YulExpressionStatement","src":"33008:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33049:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33060:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33045:3:29"},"nodeType":"YulFunctionCall","src":"33045:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"33065:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33038:6:29"},"nodeType":"YulFunctionCall","src":"33038:30:29"},"nodeType":"YulExpressionStatement","src":"33038:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33088:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33099:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33084:3:29"},"nodeType":"YulFunctionCall","src":"33084:18:29"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"33104:34:29","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33077:6:29"},"nodeType":"YulFunctionCall","src":"33077:62:29"},"nodeType":"YulExpressionStatement","src":"33077:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33159:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33170:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33155:3:29"},"nodeType":"YulFunctionCall","src":"33155:18:29"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"33175:15:29","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33148:6:29"},"nodeType":"YulFunctionCall","src":"33148:43:29"},"nodeType":"YulExpressionStatement","src":"33148:43:29"},{"nodeType":"YulAssignment","src":"33200:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33212:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33223:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33208:3:29"},"nodeType":"YulFunctionCall","src":"33208:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33200:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32975:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32989:4:29","type":""}],"src":"32824:409:29"},{"body":{"nodeType":"YulBlock","src":"33412:158:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33429:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33440:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33422:6:29"},"nodeType":"YulFunctionCall","src":"33422:21:29"},"nodeType":"YulExpressionStatement","src":"33422:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33463:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33474:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33459:3:29"},"nodeType":"YulFunctionCall","src":"33459:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"33479:1:29","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33452:6:29"},"nodeType":"YulFunctionCall","src":"33452:29:29"},"nodeType":"YulExpressionStatement","src":"33452:29:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33501:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33512:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33497:3:29"},"nodeType":"YulFunctionCall","src":"33497:18:29"},{"hexValue":"4e4f545f4f574e4552","kind":"string","nodeType":"YulLiteral","src":"33517:11:29","type":"","value":"NOT_OWNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33490:6:29"},"nodeType":"YulFunctionCall","src":"33490:39:29"},"nodeType":"YulExpressionStatement","src":"33490:39:29"},{"nodeType":"YulAssignment","src":"33538:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33550:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33561:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33546:3:29"},"nodeType":"YulFunctionCall","src":"33546:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33538:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d4d6719c9f6bf1f398a61e7ceb8dff26d48346602421236409d0fb0b222f65b2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33389:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33403:4:29","type":""}],"src":"33238:332:29"},{"body":{"nodeType":"YulBlock","src":"33656:103:29","statements":[{"body":{"nodeType":"YulBlock","src":"33702:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33711:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33714:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33704:6:29"},"nodeType":"YulFunctionCall","src":"33704:12:29"},"nodeType":"YulExpressionStatement","src":"33704:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33677:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"33686:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33673:3:29"},"nodeType":"YulFunctionCall","src":"33673:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"33698:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33669:3:29"},"nodeType":"YulFunctionCall","src":"33669:32:29"},"nodeType":"YulIf","src":"33666:52:29"},{"nodeType":"YulAssignment","src":"33727:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33743:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33737:5:29"},"nodeType":"YulFunctionCall","src":"33737:16:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33727:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33622:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33633:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33645:6:29","type":""}],"src":"33575:184:29"},{"body":{"nodeType":"YulBlock","src":"33938:236:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33955:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33966:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33948:6:29"},"nodeType":"YulFunctionCall","src":"33948:21:29"},"nodeType":"YulExpressionStatement","src":"33948:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33989:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34000:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33985:3:29"},"nodeType":"YulFunctionCall","src":"33985:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"34005:2:29","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33978:6:29"},"nodeType":"YulFunctionCall","src":"33978:30:29"},"nodeType":"YulExpressionStatement","src":"33978:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34028:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34039:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34024:3:29"},"nodeType":"YulFunctionCall","src":"34024:18:29"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"34044:34:29","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34017:6:29"},"nodeType":"YulFunctionCall","src":"34017:62:29"},"nodeType":"YulExpressionStatement","src":"34017:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34099:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34110:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34095:3:29"},"nodeType":"YulFunctionCall","src":"34095:18:29"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"34115:16:29","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34088:6:29"},"nodeType":"YulFunctionCall","src":"34088:44:29"},"nodeType":"YulExpressionStatement","src":"34088:44:29"},{"nodeType":"YulAssignment","src":"34141:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34153:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34164:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34149:3:29"},"nodeType":"YulFunctionCall","src":"34149:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34141:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33915:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33929:4:29","type":""}],"src":"33764:410:29"},{"body":{"nodeType":"YulBlock","src":"34353:231:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34370:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34381:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34363:6:29"},"nodeType":"YulFunctionCall","src":"34363:21:29"},"nodeType":"YulExpressionStatement","src":"34363:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34404:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34415:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34400:3:29"},"nodeType":"YulFunctionCall","src":"34400:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"34420:2:29","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34393:6:29"},"nodeType":"YulFunctionCall","src":"34393:30:29"},"nodeType":"YulExpressionStatement","src":"34393:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34443:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34454:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34439:3:29"},"nodeType":"YulFunctionCall","src":"34439:18:29"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"34459:34:29","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34432:6:29"},"nodeType":"YulFunctionCall","src":"34432:62:29"},"nodeType":"YulExpressionStatement","src":"34432:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34514:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34525:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34510:3:29"},"nodeType":"YulFunctionCall","src":"34510:18:29"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"34530:11:29","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34503:6:29"},"nodeType":"YulFunctionCall","src":"34503:39:29"},"nodeType":"YulExpressionStatement","src":"34503:39:29"},{"nodeType":"YulAssignment","src":"34551:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34563:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34574:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34559:3:29"},"nodeType":"YulFunctionCall","src":"34559:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34551:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34330:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34344:4:29","type":""}],"src":"34179:405:29"},{"body":{"nodeType":"YulBlock","src":"34763:168:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34780:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34791:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34773:6:29"},"nodeType":"YulFunctionCall","src":"34773:21:29"},"nodeType":"YulExpressionStatement","src":"34773:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34814:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34825:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34810:3:29"},"nodeType":"YulFunctionCall","src":"34810:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"34830:2:29","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34803:6:29"},"nodeType":"YulFunctionCall","src":"34803:30:29"},"nodeType":"YulExpressionStatement","src":"34803:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34853:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34864:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34849:3:29"},"nodeType":"YulFunctionCall","src":"34849:18:29"},{"hexValue":"4e414d455f4e4f545f415641494c41424c45","kind":"string","nodeType":"YulLiteral","src":"34869:20:29","type":"","value":"NAME_NOT_AVAILABLE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34842:6:29"},"nodeType":"YulFunctionCall","src":"34842:48:29"},"nodeType":"YulExpressionStatement","src":"34842:48:29"},{"nodeType":"YulAssignment","src":"34899:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34911:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34922:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34907:3:29"},"nodeType":"YulFunctionCall","src":"34907:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34899:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebd31dcb44615cb17d73824c7a1cd3c2bb0eba2c267afdbb3e21263895a0cab2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34740:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34754:4:29","type":""}],"src":"34589:342:29"},{"body":{"nodeType":"YulBlock","src":"35095:159:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35112:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35123:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35105:6:29"},"nodeType":"YulFunctionCall","src":"35105:21:29"},"nodeType":"YulExpressionStatement","src":"35105:21:29"},{"nodeType":"YulAssignment","src":"35135:70:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35170:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"35178:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35190:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35201:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35186:3:29"},"nodeType":"YulFunctionCall","src":"35186:18:29"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"35143:26:29"},"nodeType":"YulFunctionCall","src":"35143:62:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35135:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35225:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35236:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35221:3:29"},"nodeType":"YulFunctionCall","src":"35221:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"35241:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35214:6:29"},"nodeType":"YulFunctionCall","src":"35214:34:29"},"nodeType":"YulExpressionStatement","src":"35214:34:29"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35048:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35059:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35067:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35075:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35086:4:29","type":""}],"src":"34936:318:29"},{"body":{"nodeType":"YulBlock","src":"35433:166:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35450:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35461:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35443:6:29"},"nodeType":"YulFunctionCall","src":"35443:21:29"},"nodeType":"YulExpressionStatement","src":"35443:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35484:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35495:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35480:3:29"},"nodeType":"YulFunctionCall","src":"35480:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"35500:2:29","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35473:6:29"},"nodeType":"YulFunctionCall","src":"35473:30:29"},"nodeType":"YulExpressionStatement","src":"35473:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35523:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35534:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35519:3:29"},"nodeType":"YulFunctionCall","src":"35519:18:29"},{"hexValue":"544f4b454e5f4e4f545f4d494e544544","kind":"string","nodeType":"YulLiteral","src":"35539:18:29","type":"","value":"TOKEN_NOT_MINTED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35512:6:29"},"nodeType":"YulFunctionCall","src":"35512:46:29"},"nodeType":"YulExpressionStatement","src":"35512:46:29"},{"nodeType":"YulAssignment","src":"35567:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35579:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35590:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35575:3:29"},"nodeType":"YulFunctionCall","src":"35575:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35567:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c16e8dd559ff445903b31b38ace05f162c07cc8b27da39dd23f80f3dba5b68b1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35410:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35424:4:29","type":""}],"src":"35259:340:29"},{"body":{"nodeType":"YulBlock","src":"35778:175:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35795:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35806:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35788:6:29"},"nodeType":"YulFunctionCall","src":"35788:21:29"},"nodeType":"YulExpressionStatement","src":"35788:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35829:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35840:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35825:3:29"},"nodeType":"YulFunctionCall","src":"35825:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"35845:2:29","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35818:6:29"},"nodeType":"YulFunctionCall","src":"35818:30:29"},"nodeType":"YulExpressionStatement","src":"35818:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35868:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35879:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35864:3:29"},"nodeType":"YulFunctionCall","src":"35864:18:29"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"35884:27:29","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35857:6:29"},"nodeType":"YulFunctionCall","src":"35857:55:29"},"nodeType":"YulExpressionStatement","src":"35857:55:29"},{"nodeType":"YulAssignment","src":"35921:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35933:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"35944:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35929:3:29"},"nodeType":"YulFunctionCall","src":"35929:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35921:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35755:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35769:4:29","type":""}],"src":"35604:349:29"},{"body":{"nodeType":"YulBlock","src":"36132:166:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36149:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36160:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36142:6:29"},"nodeType":"YulFunctionCall","src":"36142:21:29"},"nodeType":"YulExpressionStatement","src":"36142:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36183:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36194:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36179:3:29"},"nodeType":"YulFunctionCall","src":"36179:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"36199:2:29","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36172:6:29"},"nodeType":"YulFunctionCall","src":"36172:30:29"},"nodeType":"YulExpressionStatement","src":"36172:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36222:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36233:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36218:3:29"},"nodeType":"YulFunctionCall","src":"36218:18:29"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"36238:18:29","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36211:6:29"},"nodeType":"YulFunctionCall","src":"36211:46:29"},"nodeType":"YulExpressionStatement","src":"36211:46:29"},{"nodeType":"YulAssignment","src":"36266:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36278:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36289:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36274:3:29"},"nodeType":"YulFunctionCall","src":"36274:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36266:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36109:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36123:4:29","type":""}],"src":"35958:340:29"},{"body":{"nodeType":"YulBlock","src":"36477:227:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36494:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36505:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36487:6:29"},"nodeType":"YulFunctionCall","src":"36487:21:29"},"nodeType":"YulExpressionStatement","src":"36487:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36528:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36539:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36524:3:29"},"nodeType":"YulFunctionCall","src":"36524:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"36544:2:29","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36517:6:29"},"nodeType":"YulFunctionCall","src":"36517:30:29"},"nodeType":"YulExpressionStatement","src":"36517:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36567:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36578:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36563:3:29"},"nodeType":"YulFunctionCall","src":"36563:18:29"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"36583:34:29","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36556:6:29"},"nodeType":"YulFunctionCall","src":"36556:62:29"},"nodeType":"YulExpressionStatement","src":"36556:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36638:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36649:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36634:3:29"},"nodeType":"YulFunctionCall","src":"36634:18:29"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"36654:7:29","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36627:6:29"},"nodeType":"YulFunctionCall","src":"36627:35:29"},"nodeType":"YulExpressionStatement","src":"36627:35:29"},{"nodeType":"YulAssignment","src":"36671:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36683:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36694:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36679:3:29"},"nodeType":"YulFunctionCall","src":"36679:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36671:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36454:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36468:4:29","type":""}],"src":"36303:401:29"},{"body":{"nodeType":"YulBlock","src":"36883:226:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36900:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36911:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36893:6:29"},"nodeType":"YulFunctionCall","src":"36893:21:29"},"nodeType":"YulExpressionStatement","src":"36893:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36934:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36945:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36930:3:29"},"nodeType":"YulFunctionCall","src":"36930:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"36950:2:29","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36923:6:29"},"nodeType":"YulFunctionCall","src":"36923:30:29"},"nodeType":"YulExpressionStatement","src":"36923:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36973:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"36984:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36969:3:29"},"nodeType":"YulFunctionCall","src":"36969:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"36989:34:29","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36962:6:29"},"nodeType":"YulFunctionCall","src":"36962:62:29"},"nodeType":"YulExpressionStatement","src":"36962:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37044:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37055:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37040:3:29"},"nodeType":"YulFunctionCall","src":"37040:18:29"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"37060:6:29","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37033:6:29"},"nodeType":"YulFunctionCall","src":"37033:34:29"},"nodeType":"YulExpressionStatement","src":"37033:34:29"},{"nodeType":"YulAssignment","src":"37076:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37088:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37099:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37084:3:29"},"nodeType":"YulFunctionCall","src":"37084:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37076:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36860:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36874:4:29","type":""}],"src":"36709:400:29"},{"body":{"nodeType":"YulBlock","src":"37288:235:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37305:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37316:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37298:6:29"},"nodeType":"YulFunctionCall","src":"37298:21:29"},"nodeType":"YulExpressionStatement","src":"37298:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37339:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37350:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37335:3:29"},"nodeType":"YulFunctionCall","src":"37335:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"37355:2:29","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37328:6:29"},"nodeType":"YulFunctionCall","src":"37328:30:29"},"nodeType":"YulExpressionStatement","src":"37328:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37378:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37389:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37374:3:29"},"nodeType":"YulFunctionCall","src":"37374:18:29"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"37394:34:29","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37367:6:29"},"nodeType":"YulFunctionCall","src":"37367:62:29"},"nodeType":"YulExpressionStatement","src":"37367:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37449:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37460:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37445:3:29"},"nodeType":"YulFunctionCall","src":"37445:18:29"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"37465:15:29","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37438:6:29"},"nodeType":"YulFunctionCall","src":"37438:43:29"},"nodeType":"YulExpressionStatement","src":"37438:43:29"},{"nodeType":"YulAssignment","src":"37490:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37502:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37513:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37498:3:29"},"nodeType":"YulFunctionCall","src":"37498:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37490:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37265:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37279:4:29","type":""}],"src":"37114:409:29"},{"body":{"nodeType":"YulBlock","src":"37702:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37719:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37730:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37712:6:29"},"nodeType":"YulFunctionCall","src":"37712:21:29"},"nodeType":"YulExpressionStatement","src":"37712:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37753:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37764:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37749:3:29"},"nodeType":"YulFunctionCall","src":"37749:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"37769:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37742:6:29"},"nodeType":"YulFunctionCall","src":"37742:30:29"},"nodeType":"YulExpressionStatement","src":"37742:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37792:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37803:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37788:3:29"},"nodeType":"YulFunctionCall","src":"37788:18:29"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"37808:22:29","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37781:6:29"},"nodeType":"YulFunctionCall","src":"37781:50:29"},"nodeType":"YulExpressionStatement","src":"37781:50:29"},{"nodeType":"YulAssignment","src":"37840:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37852:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37863:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37848:3:29"},"nodeType":"YulFunctionCall","src":"37848:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37840:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37679:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37693:4:29","type":""}],"src":"37528:344:29"},{"body":{"nodeType":"YulBlock","src":"38051:240:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38068:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38079:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38061:6:29"},"nodeType":"YulFunctionCall","src":"38061:21:29"},"nodeType":"YulExpressionStatement","src":"38061:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38102:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38113:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38098:3:29"},"nodeType":"YulFunctionCall","src":"38098:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"38118:2:29","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38091:6:29"},"nodeType":"YulFunctionCall","src":"38091:30:29"},"nodeType":"YulExpressionStatement","src":"38091:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38141:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38152:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38137:3:29"},"nodeType":"YulFunctionCall","src":"38137:18:29"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"38157:34:29","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38130:6:29"},"nodeType":"YulFunctionCall","src":"38130:62:29"},"nodeType":"YulExpressionStatement","src":"38130:62:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38212:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38223:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38208:3:29"},"nodeType":"YulFunctionCall","src":"38208:18:29"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"38228:20:29","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38201:6:29"},"nodeType":"YulFunctionCall","src":"38201:48:29"},"nodeType":"YulExpressionStatement","src":"38201:48:29"},{"nodeType":"YulAssignment","src":"38258:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38270:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38281:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38266:3:29"},"nodeType":"YulFunctionCall","src":"38266:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38258:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38028:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38042:4:29","type":""}],"src":"37877:414:29"},{"body":{"nodeType":"YulBlock","src":"38499:309:29","statements":[{"nodeType":"YulVariableDeclaration","src":"38509:52:29","value":{"kind":"number","nodeType":"YulLiteral","src":"38519:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"38513:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38577:9:29"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38592:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"38600:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38588:3:29"},"nodeType":"YulFunctionCall","src":"38588:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38570:6:29"},"nodeType":"YulFunctionCall","src":"38570:34:29"},"nodeType":"YulExpressionStatement","src":"38570:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38624:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38635:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38620:3:29"},"nodeType":"YulFunctionCall","src":"38620:18:29"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38644:6:29"},{"name":"_1","nodeType":"YulIdentifier","src":"38652:2:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38640:3:29"},"nodeType":"YulFunctionCall","src":"38640:15:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38613:6:29"},"nodeType":"YulFunctionCall","src":"38613:43:29"},"nodeType":"YulExpressionStatement","src":"38613:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38676:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38687:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38672:3:29"},"nodeType":"YulFunctionCall","src":"38672:18:29"},{"name":"value2","nodeType":"YulIdentifier","src":"38692:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38665:6:29"},"nodeType":"YulFunctionCall","src":"38665:34:29"},"nodeType":"YulExpressionStatement","src":"38665:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38719:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38730:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38715:3:29"},"nodeType":"YulFunctionCall","src":"38715:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"38735:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38708:6:29"},"nodeType":"YulFunctionCall","src":"38708:31:29"},"nodeType":"YulExpressionStatement","src":"38708:31:29"},{"nodeType":"YulAssignment","src":"38748:54:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38774:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38786:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"38797:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38782:3:29"},"nodeType":"YulFunctionCall","src":"38782:19:29"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"38756:17:29"},"nodeType":"YulFunctionCall","src":"38756:46:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38748:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38444:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38455:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38463:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38471:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38479:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38490:4:29","type":""}],"src":"38296:512:29"},{"body":{"nodeType":"YulBlock","src":"38893:169:29","statements":[{"body":{"nodeType":"YulBlock","src":"38939:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38948:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38951:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38941:6:29"},"nodeType":"YulFunctionCall","src":"38941:12:29"},"nodeType":"YulExpressionStatement","src":"38941:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"38914:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"38923:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38910:3:29"},"nodeType":"YulFunctionCall","src":"38910:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"38935:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38906:3:29"},"nodeType":"YulFunctionCall","src":"38906:32:29"},"nodeType":"YulIf","src":"38903:52:29"},{"nodeType":"YulVariableDeclaration","src":"38964:29:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38983:9:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38977:5:29"},"nodeType":"YulFunctionCall","src":"38977:16:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"38968:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39026:5:29"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"39002:23:29"},"nodeType":"YulFunctionCall","src":"39002:30:29"},"nodeType":"YulExpressionStatement","src":"39002:30:29"},{"nodeType":"YulAssignment","src":"39041:15:29","value":{"name":"value","nodeType":"YulIdentifier","src":"39051:5:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"39041:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38859:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"38870:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"38882:6:29","type":""}],"src":"38813:249:29"},{"body":{"nodeType":"YulBlock","src":"39204:150:29","statements":[{"nodeType":"YulVariableDeclaration","src":"39214:27:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39234:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39228:5:29"},"nodeType":"YulFunctionCall","src":"39228:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"39218:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39289:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"39297:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39285:3:29"},"nodeType":"YulFunctionCall","src":"39285:17:29"},{"name":"pos","nodeType":"YulIdentifier","src":"39304:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"39309:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"39250:34:29"},"nodeType":"YulFunctionCall","src":"39250:66:29"},"nodeType":"YulExpressionStatement","src":"39250:66:29"},{"nodeType":"YulAssignment","src":"39325:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39336:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"39341:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39332:3:29"},"nodeType":"YulFunctionCall","src":"39332:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39325:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39180:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39185:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39196:3:29","type":""}],"src":"39067:287:29"},{"body":{"nodeType":"YulBlock","src":"39533:182:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39550:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39561:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39543:6:29"},"nodeType":"YulFunctionCall","src":"39543:21:29"},"nodeType":"YulExpressionStatement","src":"39543:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39584:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39595:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39580:3:29"},"nodeType":"YulFunctionCall","src":"39580:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"39600:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39573:6:29"},"nodeType":"YulFunctionCall","src":"39573:30:29"},"nodeType":"YulExpressionStatement","src":"39573:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39623:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39634:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39619:3:29"},"nodeType":"YulFunctionCall","src":"39619:18:29"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"39639:34:29","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39612:6:29"},"nodeType":"YulFunctionCall","src":"39612:62:29"},"nodeType":"YulExpressionStatement","src":"39612:62:29"},{"nodeType":"YulAssignment","src":"39683:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39695:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39706:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39691:3:29"},"nodeType":"YulFunctionCall","src":"39691:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39683:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39510:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39524:4:29","type":""}],"src":"39359:356:29"},{"body":{"nodeType":"YulBlock","src":"39894:178:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39911:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39922:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39904:6:29"},"nodeType":"YulFunctionCall","src":"39904:21:29"},"nodeType":"YulExpressionStatement","src":"39904:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39945:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39956:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39941:3:29"},"nodeType":"YulFunctionCall","src":"39941:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"39961:2:29","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39934:6:29"},"nodeType":"YulFunctionCall","src":"39934:30:29"},"nodeType":"YulExpressionStatement","src":"39934:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39984:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39995:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39980:3:29"},"nodeType":"YulFunctionCall","src":"39980:18:29"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"40000:30:29","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39973:6:29"},"nodeType":"YulFunctionCall","src":"39973:58:29"},"nodeType":"YulExpressionStatement","src":"39973:58:29"},{"nodeType":"YulAssignment","src":"40040:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40052:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40063:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40048:3:29"},"nodeType":"YulFunctionCall","src":"40048:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40040:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39871:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39885:4:29","type":""}],"src":"39720:352:29"},{"body":{"nodeType":"YulBlock","src":"40251:179:29","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40268:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40279:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40261:6:29"},"nodeType":"YulFunctionCall","src":"40261:21:29"},"nodeType":"YulExpressionStatement","src":"40261:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40302:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40313:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40298:3:29"},"nodeType":"YulFunctionCall","src":"40298:18:29"},{"kind":"number","nodeType":"YulLiteral","src":"40318:2:29","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40291:6:29"},"nodeType":"YulFunctionCall","src":"40291:30:29"},"nodeType":"YulExpressionStatement","src":"40291:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40341:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40352:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40337:3:29"},"nodeType":"YulFunctionCall","src":"40337:18:29"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"40357:31:29","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40330:6:29"},"nodeType":"YulFunctionCall","src":"40330:59:29"},"nodeType":"YulExpressionStatement","src":"40330:59:29"},{"nodeType":"YulAssignment","src":"40398:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40410:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40421:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40406:3:29"},"nodeType":"YulFunctionCall","src":"40406:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40398:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40228:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40242:4:29","type":""}],"src":"40077:353:29"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_struct$_MetadataPair_$5293_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_bytes32t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        value3 := abi_decode_address(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_struct_MetadataPair(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        let _1 := 0xffffffffffffffff\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        let offset := calldataload(headStart)\n        if gt(offset, _1) { revert(0, 0) }\n        mstore(memPtr, abi_decode_string(add(headStart, offset), end))\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(memPtr, 32), abi_decode_string(add(headStart, offset_1), end))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_struct$_MetadataPair_$5293_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _2)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            mstore(dst, abi_decode_struct_MetadataPair(add(add(_3, innerOffset), _1), dataEnd))\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_bytes32t_boolt_string_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value3 := value\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        value6 := abi_decode_address(add(headStart, 128))\n        let offset_2 := calldataload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_string_calldata(add(headStart, offset_2), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_132cade136e5864ed6f6f60db47cb872f3bd8363cd38183a10b735188ba5ff5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"METADATA_UNAUTHORISED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_bytes32_t_string_calldata_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_e8c2668cf5613591a63097d745c1056f2cf549c1828ed9c12921c3c543d25b61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"TRANSFER_NOT_ALLOWED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b57486942432b5ec89eaefbe7911ae2e63f871808daa7bd2261d2d6bdfa6e7e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NODE_NOT_ALLOWED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_struct$_MetadataPair_$5293_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function convert_t_struct$_MetadataPair_$5293_calldata_ptr_to_t_struct$_MetadataPair_$5293_memory_ptr(value) -> converted\n    {\n        converted := abi_decode_struct_MetadataPair(value, calldatasize())\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_RegisterNameParams_$5302_memory_ptr_t_bytes_calldata_ptr__to_t_struct$_RegisterNameParams_$5302_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(mload(value0), _1))\n        let memberValue0 := mload(add(value0, 0x20))\n        mstore(add(headStart, 96), 0x80)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 192))\n        mstore(add(headStart, 0x80), mload(add(value0, 64)))\n        mstore(add(headStart, 160), and(mload(add(value0, 96)), _1))\n        mstore(add(headStart, 0x20), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value1, value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_690d813f825dd4dd92907e1429f9e9d01f0cb6239eb289ec82623ae817686b0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"GATED_METADATA_UNAUTHORISED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_806fc2f0c528614f6371ca4d5621d8076cd90c51a2211198fdc62e3aba768436__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"INVALID_TOKEN_ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_bytes32_t_bool__to_t_string_memory_ptr_t_bytes32_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := 0xffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d4d6719c9f6bf1f398a61e7ceb8dff26d48346602421236409d0fb0b222f65b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"NOT_OWNER\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebd31dcb44615cb17d73824c7a1cd3c2bb0eba2c267afdbb3e21263895a0cab2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"NAME_NOT_AVAILABLE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c16e8dd559ff445903b31b38ace05f162c07cc8b27da39dd23f80f3dba5b68b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"TOKEN_NOT_MINTED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1105":[{"length":32,"start":5099},{"length":32,"start":5275},{"length":32,"start":6019},{"length":32,"start":6195},{"length":32,"start":6520}]},"linkReferences":{},"object":"6080604052600436106102e75760003560e01c80636352211e11610184578063a9735f94116100d6578063cb4799f21161008a578063e985e9c511610064578063e985e9c5146108a4578063f2fde38b146108fa578063f97c6dae1461091a57600080fd5b8063cb4799f21461082c578063d619cee51461084c578063d9a9eb241461086c57600080fd5b8063b88d4fde116100bb578063b88d4fde146107cc578063c87b56dd146107ec578063cad6b9011461080c57600080fd5b8063a9735f941461077e578063b33dab09146107ac57600080fd5b8063898572a61161013857806395d89b411161011257806395d89b411461072957806396977c1b1461073e578063a22cb4651461075e57600080fd5b8063898572a6146106b05780638da5cb5b146106de5780638e73361e1461070957600080fd5b8063715018a611610169578063715018a6146106665780637c7efe6b1461067b5780638456cb591461069b57600080fd5b80636352211e1461062657806370a082311461064657600080fd5b806323b872dd1161023d57806342842e0e116101f157806352d1902d116101cb57806352d1902d146105b457806357ad9c90146105c95780635c975abb1461060d57600080fd5b806342842e0e1461056157806342966c68146105815780634f1ef286146105a157600080fd5b806326ec9ad81161022257806326ec9ad81461050c5780633659cfe61461052c5780633f4ba83a1461054c57600080fd5b806323b872dd146104cc5780632595eacb146104ec57600080fd5b8063081812fc1161029f57806316404d011161027957806316404d011461045b57806318160ddd1461048c5780631f0509e0146104ac57600080fd5b8063081812fc146103a5578063095ea7b3146103ea5780630ae16e531461040a57600080fd5b80630739d191116102d05780630739d19114610343578063077f224a1461036357806307b472c41461038557600080fd5b806301ffc9a7146102ec57806306fdde0314610321575b600080fd5b3480156102f857600080fd5b5061030c610307366004614363565b61093a565b60405190151581526020015b60405180910390f35b34801561032d57600080fd5b50610336610a1f565b60405161031891906143ee565b34801561034f57600080fd5b5061033661035e36600461450d565b610ab1565b34801561036f57600080fd5b5061038361037e3660046145c6565b610b92565b005b34801561039157600080fd5b506103836103a0366004614647565b610dc2565b3480156103b157600080fd5b506103c56103c0366004614647565b610e3f565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610318565b3480156103f657600080fd5b50610383610405366004614660565b610e73565b34801561041657600080fd5b50610442610425366004614647565b6101626020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610318565b34801561046757600080fd5b5061030c610476366004614647565b61018d6020526000908152604090205460ff1681565b34801561049857600080fd5b5061018f545b604051908152602001610318565b3480156104b857600080fd5b506103836104c736600461468a565b610fff565b3480156104d857600080fd5b506103836104e73660046146d6565b611062565b3480156104f857600080fd5b5061030c610507366004614712565b6110db565b34801561051857600080fd5b5061038361052736600461475e565b61126f565b34801561053857600080fd5b506103836105473660046147dd565b6113d4565b34801561055857600080fd5b506103836115d9565b34801561056d57600080fd5b5061038361057c3660046146d6565b6115eb565b34801561058d57600080fd5b5061038361059c366004614647565b611664565b6103836105af3660046147f8565b61176c565b3480156105c057600080fd5b5061049e61195e565b3480156105d557600080fd5b506103c56105e4366004614647565b61018c6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561061957600080fd5b5061012d5460ff1661030c565b34801561063257600080fd5b506103c5610641366004614647565b611a4a565b34801561065257600080fd5b5061049e6106613660046147dd565b611ad6565b34801561067257600080fd5b50610383611ba4565b34801561068757600080fd5b5061049e610696366004614830565b611bb6565b3480156106a757600080fd5b50610383611cf8565b3480156106bc57600080fd5b5061049e6106cb366004614647565b61018e6020526000908152604090205481565b3480156106ea57600080fd5b5060975473ffffffffffffffffffffffffffffffffffffffff166103c5565b34801561071557600080fd5b50610383610724366004614647565b611d08565b34801561073557600080fd5b50610336611d81565b34801561074a57600080fd5b50610336610759366004614647565b611d90565b34801561076a57600080fd5b506103836107793660046148cb565b611e2b565b34801561078a57600080fd5b5061049e610799366004614647565b6101906020526000908152604090205481565b3480156107b857600080fd5b506103836107c736600461498c565b611e36565b3480156107d857600080fd5b506103836107e7366004614a5b565b611f8b565b3480156107f857600080fd5b50610336610807366004614647565b612005565b34801561081857600080fd5b5061049e610827366004614712565b6120e0565b34801561083857600080fd5b5061033661084736600461468a565b612152565b34801561085857600080fd5b5061049e610867366004614ac3565b612236565b34801561087857600080fd5b50610442610887366004614647565b6101606020526000908152604090205467ffffffffffffffff1681565b3480156108b057600080fd5b5061030c6108bf366004614b91565b73ffffffffffffffffffffffffffffffffffffffff9182166000908152606a6020908152604080832093909416825291909152205460ff1690565b34801561090657600080fd5b506103836109153660046147dd565b612341565b34801561092657600080fd5b50610383610935366004614bc4565b6123f5565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806109cd57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b80610a1957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060658054610a2e90614c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5a90614c1e565b8015610aa75780601f10610a7c57610100808354040283529160200191610aa7565b820191906000526020600020905b815481529060010190602001808311610a8a57829003601f168201915b5050505050905090565b6000828152610162602090815260408083205467ffffffffffffffff168352610161825280832085845290915290819020905160609190610af3908490614c71565b90815260200160405180910390208054610b0c90614c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3890614c1e565b8015610b855780601f10610b5a57610100808354040283529160200191610b85565b820191906000526020600020905b815481529060010190602001808311610b6857829003601f168201915b5050505050905092915050565b600054610100900460ff1615808015610bb25750600054600160ff909116105b80610bcc5750303b158015610bcc575060005460ff166001145b610c5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610cbb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610d2e86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a01819004810282018101909252888152925088915087908190840183828082843760009201919091525061253192505050565b610d366125d2565b610d3e612669565b610d46612708565b610d4e6127a7565b610d578261282d565b8015610dba57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b80610dcc816128a4565b610e32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d455441444154415f554e415554484f524953454400000000000000000000006044820152606401610c54565b610e3b826128b0565b5050565b6000610e4a8261293d565b5060009081526069602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610e7e82611a4a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610c54565b3373ffffffffffffffffffffffffffffffffffffffff82161480610f645750610f6481336108bf565b610ff0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610c54565b610ffa83836129c8565b505050565b611007612a68565b600083815261018b60205260409020611021828483614cd3565b507fe091ab4d07f328dfaf2dcd8b50b82e02d05cf20d71197646ac6b2611395947b783838360405161105593929190614e36565b60405180910390a1505050565b61012d5460ff16156110d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f4e4f545f414c4c4f5745440000000000000000000000006044820152606401610c54565b610ffa838383612ae9565b600081815261018d602052604081205460ff16611154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e4f44455f4e4f545f414c4c4f574544000000000000000000000000000000006044820152606401610c54565b60006111618585856120e0565b60008181526067602052604090205490915073ffffffffffffffffffffffffffffffffffffffff1661126257600083815261018c602052604090205473ffffffffffffffffffffffffffffffffffffffff168015611257576040517f7ac3e6ea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821690637ac3e6ea9061120d9089908990600401614e59565b602060405180830381865afa15801561122a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124e9190614e6d565b92505050611268565b600192505050611268565b60009150505b9392505050565b82611279816128a4565b6112df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d455441444154415f554e415554484f524953454400000000000000000000006044820152606401610c54565b60005b828110156113cd5760008484838181106112fe576112fe614e8a565b90506020028101906113109190614eb9565b61131990614eed565b6020808201516000898152610160835260408082205467ffffffffffffffff16825261015f84528082208b8352909352829020835192519394509092909161136091614c71565b9081526020016040518091039020908161137a9190614ef9565b508051602082015160405188927f601d4b2f0f06545c0f60d4f70e3bc5d78db246f7b66aaeb1ea23a56aa854c670926113b292615013565b60405180910390a250806113c581615067565b9150506112e2565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610c54565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661150e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146115b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610c54565b6115ba81612b8a565b604080516000808252602082019092526115d691839190612c27565b50565b6115e1612a68565b6115e9612e26565b565b61012d5460ff1615611659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f4e4f545f414c4c4f5745440000000000000000000000006044820152606401610c54565b610ffa838383612e7e565b61166e3382612e99565b6116d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610c54565b6116dd816128b0565b6116e681612f59565b600081815261018e60205260408120556116ff81612fe6565b61018f6000815461170f9061509f565b90915550600081815261019060205260408120805483927f410c5c259085cde81fedf70c1aa308ec839373c26e9b7ada6560a2aca0254eb6929161175290615067565b91829055506040519081526020015b60405180910390a250565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610c54565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118a67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614611949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610c54565b61195282612b8a565b610e3b82826001612c27565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614611a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610c54565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60008181526067602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610a19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610c54565b600073ffffffffffffffffffffffffffffffffffffffff8216611b7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610c54565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526068602052604090205490565b611bac612a68565b6115e9600061282d565b600084815261018c602052604081205473ffffffffffffffffffffffffffffffffffffffff168015611ce057600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020810189905273ffffffffffffffffffffffffffffffffffffffff80891660409283015290517fcab80ede00000000000000000000000000000000000000000000000000000000815291925083169063cab80ede90611cac908490899089906004016150d4565b600060405180830381600087803b158015611cc657600080fd5b505af1158015611cda573d6000803e3d6000fd5b50505050505b611cec888888886130be565b98975050505050505050565b611d00612a68565b6115e96127a7565b80611d12816131cf565b611d78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f47415445445f4d455441444154415f554e415554484f524953454400000000006044820152606401610c54565b610e3b82612f59565b606060668054610a2e90614c1e565b61018b6020526000908152604090208054611daa90614c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054611dd690614c1e565b8015611e235780601f10611df857610100808354040283529160200191611e23565b820191906000526020600020905b815481529060010190602001808311611e0657829003601f168201915b505050505081565b610e3b338383613297565b81611e40816131cf565b611ea6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f47415445445f4d455441444154415f554e415554484f524953454400000000006044820152606401610c54565b60005b8251811015611f85576000838281518110611ec657611ec6614e8a565b602090810291909101810151808201516000888152610162845260408082205467ffffffffffffffff16825261016185528082208a83529094528390208251935192945090929091611f189190614c71565b90815260200160405180910390209081611f329190614ef9565b508051602082015160405187927f29d4cd326b134d55e630ceb2871cea5e243b89bc9667e0c840b5da53b26ffd6a92611f6a92615013565b60405180910390a25080611f7d81615067565b915050611ea9565b50505050565b61012d5460ff1615611ff9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f4e4f545f414c4c4f5745440000000000000000000000006044820152606401610c54565b611f85848484846133c4565b60008181526067602052604090205460609073ffffffffffffffffffffffffffffffffffffffff16612093576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f494e56414c49445f544f4b454e5f4944000000000000000000000000000000006044820152606401610c54565b600082815261018e6020908152604080832054835261018b90915290206120b983613466565b6040516020016120ca929190615147565b6040516020818303038152906040529050919050565b6000808285856040516120f49291906151ec565b6040519081900381206121139291602001918252602082015260400190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012095945050505050565b6000838152610160602090815260408083205467ffffffffffffffff16835261015f82528083208684529091529081902090516060919061219690859085906151ec565b908152602001604051809103902080546121af90614c1e565b80601f01602080910402602001604051908101604052809291908181526020018280546121db90614c1e565b80156122285780601f106121fd57610100808354040283529160200191612228565b820191906000526020600020905b81548152906001019060200180831161220b57829003601f168201915b505050505090509392505050565b6000612240612a68565b878a8a6040516122519291906151ec565b6040519081900381206122709291602001918252602082015260400190565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181528282528051602091820120600081815261018d90925291902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168a1515179055915081907ffbbc4187cf8cd340d071ee02e4e44eb8e04903a03649ef31a26e38798390351d90612315908d908d908d908d906151fc565b60405180910390a2612328818787610fff565b612334818585856123f5565b9998505050505050505050565b612349612a68565b73ffffffffffffffffffffffffffffffffffffffff81166123ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610c54565b6115d68161282d565b6123fd612a68565b600084815261018c6020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516908117909155156124d9576040517f42a0d9b400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906342a0d9b4906124a69085908590600401614e59565b600060405180830381600087803b1580156124c057600080fd5b505af11580156124d4573d6000803e3d6000fd5b505050505b8273ffffffffffffffffffffffffffffffffffffffff167f057da1406f81e1f47cda5874100d33118bf695f202882aacc5ca6d45ca91744985848460405161252393929190614e36565b60405180910390a250505050565b600054610100900460ff166125c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b610e3b82826134d3565b600054610100900460ff166115e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b600054610100900460ff16612700576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b6115e9613583565b600054610100900460ff1661279f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b6115e9613623565b6127af6136e5565b61012d80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586128033390565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6097805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610a193383612e99565b600081815261016060205260408120805467ffffffffffffffff16916128d583615228565b82546101009290920a67ffffffffffffffff818102199093169183160217909155600083815261016060209081526040918290205491519190921681528392507f3773c27b7f05829d86b67403e26562fb9d776452b918d74b238bfdc1203bf0ed9101611761565b60008181526067602052604090205473ffffffffffffffffffffffffffffffffffffffff166115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610c54565b600081815260696020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190612a2282611a4a565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60975473ffffffffffffffffffffffffffffffffffffffff1633146115e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c54565b612af33382612e99565b612b7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610c54565b610ffa838383613753565b33612baa60975473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e4f545f4f574e455200000000000000000000000000000000000000000000006044820152606401610c54565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612c5a57610ffa83613a4e565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612cdf575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612cdc9181019061524f565b60015b612d6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610c54565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612e1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610c54565b50610ffa838383613b58565b612e2e613b7d565b61012d80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33612803565b610ffa83838360405180602001604052806000815250611f8b565b600080612ea583611a4a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612f13575073ffffffffffffffffffffffffffffffffffffffff8082166000908152606a602090815260408083209388168352929052205460ff165b80612f5157508373ffffffffffffffffffffffffffffffffffffffff16612f3984610e3f565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b600081815261016260205260408120805467ffffffffffffffff1691612f7e83615228565b82546101009290920a67ffffffffffffffff818102199093169183160217909155600083815261016260209081526040918290205491519190921681528392507fc87757beabcc5d61e477f4ffafb24461a0eb17e06d5bbf82354b4df70f3580c39101611761565b6000612ff182611a4a565b9050612ffc82611a4a565b600083815260696020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff85168085526068845282852080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006130cb8585856110db565b613131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4e414d455f4e4f545f415641494c41424c4500000000000000000000000000006044820152606401610c54565b600061313e8686866120e0565b905061314a8382613bea565b61018f6000815461315a90615067565b90915550600081815261018e6020526040908190208590555173ffffffffffffffffffffffffffffffffffffffff84169082907ffe530e3b4b61411a7dd546adc0e6736d4255abefc6b610401d26068e02dd495e906131be908a908a908a90615268565b60405180910390a395945050505050565b60008181526067602052604081205473ffffffffffffffffffffffffffffffffffffffff1661325a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f544f4b454e5f4e4f545f4d494e544544000000000000000000000000000000006044820152606401610c54565b3361327a60975473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff161492915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361332c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610c54565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152606a602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6133ce3383612e99565b61345a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610c54565b611f8584848484613c04565b604080516080810191829052607f0190826030600a8206018353600a90045b80156134a357600183039250600a81066030018353600a9004613485565b508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b600054610100900460ff1661356a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b60656135768382614ef9565b506066610ffa8282614ef9565b600054610100900460ff1661361a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b6115e93361282d565b600054610100900460ff166136ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610c54565b61012d80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b61012d5460ff16156115e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610c54565b8273ffffffffffffffffffffffffffffffffffffffff1661377382611a4a565b73ffffffffffffffffffffffffffffffffffffffff1614613816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610c54565b73ffffffffffffffffffffffffffffffffffffffff82166138b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610c54565b8273ffffffffffffffffffffffffffffffffffffffff166138d882611a4a565b73ffffffffffffffffffffffffffffffffffffffff161461397b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610c54565b600081815260696020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526068855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff81163b613af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610c54565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b613b6183613ca7565b600082511180613b6e5750805b15610ffa57611f858383613cf4565b61012d5460ff166115e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610c54565b610e3b828260405180602001604052806000815250613d19565b613c0f848484613753565b613c1b84848484613dbc565b611f85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610c54565b613cb081613a4e565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061126883836040518060600160405280602781526020016152e960279139613fac565b613d238383614031565b613d306000848484613dbc565b610ffa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610c54565b600073ffffffffffffffffffffffffffffffffffffffff84163b15613fa4576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290613e3390339089908890889060040161528c565b6020604051808303816000875af1925050508015613e8c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252613e89918101906152cb565b60015b613f59573d808015613eba576040519150601f19603f3d011682016040523d82523d6000602084013e613ebf565b606091505b508051600003613f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610c54565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050612f51565b506001612f51565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051613fd69190614c71565b600060405180830381855af49150503d8060008114614011576040519150601f19603f3d011682016040523d82523d6000602084013e614016565b606091505b509150915061402786838387614256565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff82166140ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610c54565b60008181526067602052604090205473ffffffffffffffffffffffffffffffffffffffff161561413a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c54565b60008181526067602052604090205473ffffffffffffffffffffffffffffffffffffffff16156141c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610c54565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260686020908152604080832080546001019055848352606790915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606083156142ec5782516000036142e55773ffffffffffffffffffffffffffffffffffffffff85163b6142e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c54565b5081612f51565b612f5183838151156143015781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5491906143ee565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146115d657600080fd5b60006020828403121561437557600080fd5b813561126881614335565b60005b8381101561439b578181015183820152602001614383565b50506000910152565b600081518084526143bc816020860160208601614380565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061126860208301846143a4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561447757614477614401565b604052919050565b600082601f83011261449057600080fd5b813567ffffffffffffffff8111156144aa576144aa614401565b6144db60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601614430565b8181528460208386010111156144f057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561452057600080fd5b82359150602083013567ffffffffffffffff81111561453e57600080fd5b61454a8582860161447f565b9150509250929050565b60008083601f84011261456657600080fd5b50813567ffffffffffffffff81111561457e57600080fd5b60208301915083602082850101111561459657600080fd5b9250929050565b803573ffffffffffffffffffffffffffffffffffffffff811681146145c157600080fd5b919050565b6000806000806000606086880312156145de57600080fd5b853567ffffffffffffffff808211156145f657600080fd5b61460289838a01614554565b9097509550602088013591508082111561461b57600080fd5b5061462888828901614554565b909450925061463b90506040870161459d565b90509295509295909350565b60006020828403121561465957600080fd5b5035919050565b6000806040838503121561467357600080fd5b61467c8361459d565b946020939093013593505050565b60008060006040848603121561469f57600080fd5b83359250602084013567ffffffffffffffff8111156146bd57600080fd5b6146c986828701614554565b9497909650939450505050565b6000806000606084860312156146eb57600080fd5b6146f48461459d565b92506147026020850161459d565b9150604084013590509250925092565b60008060006040848603121561472757600080fd5b833567ffffffffffffffff81111561473e57600080fd5b61474a86828701614554565b909790965060209590950135949350505050565b60008060006040848603121561477357600080fd5b83359250602084013567ffffffffffffffff8082111561479257600080fd5b818601915086601f8301126147a657600080fd5b8135818111156147b557600080fd5b8760208260051b85010111156147ca57600080fd5b6020830194508093505050509250925092565b6000602082840312156147ef57600080fd5b6112688261459d565b6000806040838503121561480b57600080fd5b6148148361459d565b9150602083013567ffffffffffffffff81111561453e57600080fd5b6000806000806000806080878903121561484957600080fd5b863567ffffffffffffffff8082111561486157600080fd5b61486d8a838b01614554565b90985096506020890135955086915061488860408a0161459d565b9450606089013591508082111561489e57600080fd5b506148ab89828a01614554565b979a9699509497509295939492505050565b80151581146115d657600080fd5b600080604083850312156148de57600080fd5b6148e78361459d565b915060208301356148f7816148bd565b809150509250929050565b60006040828403121561491457600080fd5b6040516040810167ffffffffffffffff828210818311171561493857614938614401565b81604052829350843591508082111561495057600080fd5b61495c8683870161447f565b8352602085013591508082111561497257600080fd5b5061497f8582860161447f565b6020830152505092915050565b6000806040838503121561499f57600080fd5b8235915060208084013567ffffffffffffffff808211156149bf57600080fd5b818601915086601f8301126149d357600080fd5b8135818111156149e5576149e5614401565b8060051b6149f4858201614430565b918252838101850191858101908a841115614a0e57600080fd5b86860192505b83831015614a4a57823585811115614a2c5760008081fd5b614a3a8c89838a0101614902565b8352509186019190860190614a14565b809750505050505050509250929050565b60008060008060808587031215614a7157600080fd5b614a7a8561459d565b9350614a886020860161459d565b925060408501359150606085013567ffffffffffffffff811115614aab57600080fd5b614ab78782880161447f565b91505092959194509250565b600080600080600080600080600060c08a8c031215614ae157600080fd5b893567ffffffffffffffff80821115614af957600080fd5b614b058d838e01614554565b909b50995060208c0135985060408c01359150614b21826148bd565b90965060608b01359080821115614b3757600080fd5b614b438d838e01614554565b9097509550859150614b5760808d0161459d565b945060a08c0135915080821115614b6d57600080fd5b50614b7a8c828d01614554565b915080935050809150509295985092959850929598565b60008060408385031215614ba457600080fd5b614bad8361459d565b9150614bbb6020840161459d565b90509250929050565b60008060008060608587031215614bda57600080fd5b84359350614bea6020860161459d565b9250604085013567ffffffffffffffff811115614c0657600080fd5b614c1287828801614554565b95989497509550505050565b600181811c90821680614c3257607f821691505b602082108103614c6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008251614c83818460208701614380565b9190910192915050565b601f821115610ffa57600081815260208120601f850160051c81016020861015614cb45750805b601f850160051c820191505b81811015610dba57828155600101614cc0565b67ffffffffffffffff831115614ceb57614ceb614401565b614cff83614cf98354614c1e565b83614c8d565b6000601f841160018114614d515760008515614d1b5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556113cd565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015614da05786850135825560209485019460019092019101614d80565b5086821015614ddb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b838152604060208201526000614e50604083018486614ded565b95945050505050565b602081526000612f51602083018486614ded565b600060208284031215614e7f57600080fd5b8151611268816148bd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112614c8357600080fd5b6000610a193683614902565b815167ffffffffffffffff811115614f1357614f13614401565b614f2781614f218454614c1e565b84614c8d565b602080601f831160018114614f7a5760008415614f445750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610dba565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015614fc757888601518255948401946001909101908401614fa8565b508582101561500357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061502660408301856143a4565b8281036020840152614e5081856143a4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361509857615098615038565b5060010190565b6000816150ae576150ae615038565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60408152600073ffffffffffffffffffffffffffffffffffffffff80865116604084015260208601516080606085015261511160c08501826143a4565b9050604087015160808501528160608801511660a0850152838103602085015261513c818688614ded565b979650505050505050565b600080845461515581614c1e565b6001828116801561516d57600181146151a0576151cf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841687528215158302870194506151cf565b8860005260208060002060005b858110156151c65781548a8201529084019082016151ad565b50505082870194505b5050505083516151e3818360208801614380565b01949350505050565b8183823760009101908152919050565b606081526000615210606083018688614ded565b60208301949094525090151560409091015292915050565b600067ffffffffffffffff80831681810361524557615245615038565b6001019392505050565b60006020828403121561526157600080fd5b5051919050565b60408152600061527c604083018587614ded565b9050826020830152949350505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152508360408301526080606083015261402760808301846143a4565b6000602082840312156152dd57600080fd5b81516112688161433556fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206841170595ab2f0914845d74065c63b072a81451efa2351d012eec165ad0b3fe64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2E7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x184 JUMPI DUP1 PUSH4 0xA9735F94 GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xCB4799F2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xF97C6DAE EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB4799F2 EQ PUSH2 0x82C JUMPI DUP1 PUSH4 0xD619CEE5 EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0xD9A9EB24 EQ PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x7EC JUMPI DUP1 PUSH4 0xCAD6B901 EQ PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9735F94 EQ PUSH2 0x77E JUMPI DUP1 PUSH4 0xB33DAB09 EQ PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x898572A6 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x96977C1B EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x898572A6 EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x8E73361E EQ PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x7C7EFE6B EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x23D JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x57AD9C90 EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26EC9AD8 GT PUSH2 0x222 JUMPI DUP1 PUSH4 0x26EC9AD8 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x2595EACB EQ PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x29F JUMPI DUP1 PUSH4 0x16404D01 GT PUSH2 0x279 JUMPI DUP1 PUSH4 0x16404D01 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x1F0509E0 EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xAE16E53 EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x739D191 GT PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x739D191 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x7B472C4 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x321 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x4363 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x43EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x450D JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x45C6 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0xDC2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x4660 JUMP JUMPDEST PUSH2 0xE73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x4C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x468A JUMP JUMPDEST PUSH2 0xFFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x46D6 JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x4712 JUMP JUMPDEST PUSH2 0x10DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x475E JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DD JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x15D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x46D6 JUMP JUMPDEST PUSH2 0x15EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1664 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x47F8 JUMP JUMPDEST PUSH2 0x176C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x195E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x30C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 PUSH2 0x641 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1A4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DD JUMP JUMPDEST PUSH2 0x1AD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x1BA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x696 CALLDATASIZE PUSH1 0x4 PUSH2 0x4830 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x1CF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x6CB CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x18E PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x724 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1D08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x1D81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x759 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x1D90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x779 CALLDATASIZE PUSH1 0x4 PUSH2 0x48CB JUMP JUMPDEST PUSH2 0x1E2B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x799 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x7C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x498C JUMP JUMPDEST PUSH2 0x1E36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x7E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A5B JUMP JUMPDEST PUSH2 0x1F8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x807 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x2005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x827 CALLDATASIZE PUSH1 0x4 PUSH2 0x4712 JUMP JUMPDEST PUSH2 0x20E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0x847 CALLDATASIZE PUSH1 0x4 PUSH2 0x468A JUMP JUMPDEST PUSH2 0x2152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49E PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AC3 JUMP JUMPDEST PUSH2 0x2236 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x4647 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x8BF CALLDATASIZE PUSH1 0x4 PUSH2 0x4B91 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x47DD JUMP JUMPDEST PUSH2 0x2341 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x935 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BC4 JUMP JUMPDEST PUSH2 0x23F5 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x9CD JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0xA19 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5A SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x162 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH2 0x161 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0xAF3 SWAP1 DUP5 SWAP1 PUSH2 0x4C71 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB0C SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB38 SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xBB2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xBCC JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBCC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD2E DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2531 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD36 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0xD3E PUSH2 0x2669 JUMP JUMPDEST PUSH2 0xD46 PUSH2 0x2708 JUMP JUMPDEST PUSH2 0xD4E PUSH2 0x27A7 JUMP JUMPDEST PUSH2 0xD57 DUP3 PUSH2 0x282D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xDCC DUP2 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0xE32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D455441444154415F554E415554484F52495345440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 PUSH2 0x28B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4A DUP3 PUSH2 0x293D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7E DUP3 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ DUP1 PUSH2 0xF64 JUMPI POP PUSH2 0xF64 DUP2 CALLER PUSH2 0x8BF JUMP JUMPDEST PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 PUSH2 0x29C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x18B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1021 DUP3 DUP5 DUP4 PUSH2 0x4CD3 JUMP JUMPDEST POP PUSH32 0xE091AB4D07F328DFAF2DCD8B50B82E02D05CF20D71197646AC6B2611395947B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1055 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4E4F545F414C4C4F574544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x2AE9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F44455F4E4F545F414C4C4F57454400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP6 DUP6 DUP6 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1262 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1257 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7AC3E6EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x7AC3E6EA SWAP1 PUSH2 0x120D SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x4E6D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x1279 DUP2 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x12DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D455441444154415F554E415554484F52495345440000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x4E8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1310 SWAP2 SWAP1 PUSH2 0x4EB9 JUMP JUMPDEST PUSH2 0x1319 SWAP1 PUSH2 0x4EED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH2 0x160 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH2 0x15F DUP5 MSTORE DUP1 DUP3 KECCAK256 DUP12 DUP4 MSTORE SWAP1 SWAP4 MSTORE DUP3 SWAP1 KECCAK256 DUP4 MLOAD SWAP3 MLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x1360 SWAP2 PUSH2 0x4C71 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x4EF9 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD DUP9 SWAP3 PUSH32 0x601D4B2F0F06545C0F60D4F70E3BC5D78DB246F7B66AAEB1EA23A56AA854C670 SWAP3 PUSH2 0x13B2 SWAP3 PUSH2 0x5013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 PUSH2 0x13C5 DUP2 PUSH2 0x5067 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15BA DUP2 PUSH2 0x2B8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x15D6 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2C27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15E1 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x2E26 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4E4F545F414C4C4F574544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x2E7E JUMP JUMPDEST PUSH2 0x166E CALLER DUP3 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x16D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x28B0 JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18E PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x16FF DUP2 PUSH2 0x2FE6 JUMP JUMPDEST PUSH2 0x18F PUSH1 0x0 DUP2 SLOAD PUSH2 0x170F SWAP1 PUSH2 0x509F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x190 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 PUSH32 0x410C5C259085CDE81FEDF70C1AA308EC839373C26E9B7ADA6560A2ACA0254EB6 SWAP3 SWAP2 PUSH2 0x1752 SWAP1 PUSH2 0x5067 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1831 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A6 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1949 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1952 DUP3 PUSH2 0x2B8A JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH1 0x1 PUSH2 0x2C27 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1B7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BAC PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x15E9 PUSH1 0x0 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND PUSH1 0x40 SWAP3 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xCAB80EDE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0xCAB80EDE SWAP1 PUSH2 0x1CAC SWAP1 DUP5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x50D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x1CEC DUP9 DUP9 DUP9 DUP9 PUSH2 0x30BE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D00 PUSH2 0x2A68 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x27A7 JUMP JUMPDEST DUP1 PUSH2 0x1D12 DUP2 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47415445445F4D455441444154415F554E415554484F52495345440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 PUSH2 0x2F59 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH2 0x4C1E JUMP JUMPDEST PUSH2 0x18B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1DAA SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DD6 SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E23 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DF8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E06 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xE3B CALLER DUP4 DUP4 PUSH2 0x3297 JUMP JUMPDEST DUP2 PUSH2 0x1E40 DUP2 PUSH2 0x31CF JUMP JUMPDEST PUSH2 0x1EA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47415445445F4D455441444154415F554E415554484F52495345440000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EC6 JUMPI PUSH2 0x1EC6 PUSH2 0x4E8A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP1 DUP3 ADD MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH2 0x162 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH2 0x161 DUP6 MSTORE DUP1 DUP3 KECCAK256 DUP11 DUP4 MSTORE SWAP1 SWAP5 MSTORE DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP4 MLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH2 0x1F18 SWAP2 SWAP1 PUSH2 0x4C71 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x1F32 SWAP2 SWAP1 PUSH2 0x4EF9 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 MLOAD DUP8 SWAP3 PUSH32 0x29D4CD326B134D55E630CEB2871CEA5E243B89BC9667E0C840B5DA53B26FFD6A SWAP3 PUSH2 0x1F6A SWAP3 PUSH2 0x5013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 PUSH2 0x1F7D DUP2 PUSH2 0x5067 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4E4F545F414C4C4F574544000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1F85 DUP5 DUP5 DUP5 DUP5 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F544F4B454E5F494400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH2 0x18E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH2 0x18B SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x20B9 DUP4 PUSH2 0x3466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20CA SWAP3 SWAP2 SWAP1 PUSH2 0x5147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20F4 SWAP3 SWAP2 SWAP1 PUSH2 0x51EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x2113 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH2 0x15F DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x2196 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x51EC JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x21AF SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DB SWAP1 PUSH2 0x4C1E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2240 PUSH2 0x2A68 JUMP JUMPDEST DUP8 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2251 SWAP3 SWAP2 SWAP1 PUSH2 0x51EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x2270 SWAP3 SWAP2 PUSH1 0x20 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18D SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP11 ISZERO ISZERO OR SWAP1 SSTORE SWAP2 POP DUP2 SWAP1 PUSH32 0xFBBC4187CF8CD340D071EE02E4E44EB8E04903A03649EF31A26E38798390351D SWAP1 PUSH2 0x2315 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH2 0x51FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x2328 DUP2 DUP8 DUP8 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x2334 DUP2 DUP6 DUP6 DUP6 PUSH2 0x23F5 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2349 PUSH2 0x2A68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x23EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15D6 DUP2 PUSH2 0x282D JUMP JUMPDEST PUSH2 0x23FD PUSH2 0x2A68 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH2 0x18C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ISZERO PUSH2 0x24D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x42A0D9B400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x42A0D9B4 SWAP1 PUSH2 0x24A6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x57DA1406F81E1F47CDA5874100D33118BF695F202882AACC5CA6D45CA917449 DUP6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2523 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x25C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH2 0x34D3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x3583 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x279F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15E9 PUSH2 0x3623 JUMP JUMPDEST PUSH2 0x27AF PUSH2 0x36E5 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2803 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA19 CALLER DUP4 PUSH2 0x2E99 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 PUSH2 0x28D5 DUP4 PUSH2 0x5228 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND DUP2 MSTORE DUP4 SWAP3 POP PUSH32 0x3773C27B7F05829D86B67403E26562FB9D776452B918D74B238BFDC1203BF0ED SWAP2 ADD PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2A22 DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x2AF3 CALLER DUP3 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x2B7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x3753 JUMP JUMPDEST CALLER PUSH2 0x2BAA PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4F545F4F574E45520000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C5A JUMPI PUSH2 0xFFA DUP4 PUSH2 0x3A4E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2CDF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2CDC SWAP2 DUP2 ADD SWAP1 PUSH2 0x524F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2D6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x2E1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST POP PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH2 0x3B58 JUMP JUMPDEST PUSH2 0x2E2E PUSH2 0x3B7D JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0x2803 JUMP JUMPDEST PUSH2 0xFFA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA5 DUP4 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2F13 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x2F51 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F39 DUP5 PUSH2 0xE3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x162 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 PUSH2 0x2F7E DUP4 PUSH2 0x5228 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH2 0x162 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND DUP2 MSTORE DUP4 SWAP3 POP PUSH32 0xC87757BEABCC5D61E477F4FFAFB24461A0EB17E06D5BBF82354B4DF70F3580C3 SWAP2 ADD PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF1 DUP3 PUSH2 0x1A4A JUMP JUMPDEST SWAP1 POP PUSH2 0x2FFC DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x68 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x67 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CB DUP6 DUP6 DUP6 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x3131 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E414D455F4E4F545F415641494C41424C450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313E DUP7 DUP7 DUP7 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x314A DUP4 DUP3 PUSH2 0x3BEA JUMP JUMPDEST PUSH2 0x18F PUSH1 0x0 DUP2 SLOAD PUSH2 0x315A SWAP1 PUSH2 0x5067 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x18E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 DUP3 SWAP1 PUSH32 0xFE530E3B4B61411A7DD546ADC0E6736D4255ABEFC6B610401D26068E02DD495E SWAP1 PUSH2 0x31BE SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x5268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x325A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E5F4E4F545F4D494E54454400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST CALLER PUSH2 0x327A PUSH1 0x97 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x332C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x33CE CALLER DUP4 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x345A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x1F85 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3C04 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x7F ADD SWAP1 DUP3 PUSH1 0x30 PUSH1 0xA DUP3 MOD ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV JUMPDEST DUP1 ISZERO PUSH2 0x34A3 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV PUSH2 0x3485 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x356A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x65 PUSH2 0x3576 DUP4 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST POP PUSH1 0x66 PUSH2 0xFFA DUP3 DUP3 PUSH2 0x4EF9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x361A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x15E9 CALLER PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x36BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x12D DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3773 DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3816 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x38B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38D8 DUP3 PUSH2 0x1A4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x397B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x3AF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3B61 DUP4 PUSH2 0x3CA7 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3B6E JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFFA JUMPI PUSH2 0x1F85 DUP4 DUP4 PUSH2 0x3CF4 JUMP JUMPDEST PUSH2 0x12D SLOAD PUSH1 0xFF AND PUSH2 0x15E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3D19 JUMP JUMPDEST PUSH2 0x3C0F DUP5 DUP5 DUP5 PUSH2 0x3753 JUMP JUMPDEST PUSH2 0x3C1B DUP5 DUP5 DUP5 DUP5 PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0x1F85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x3CB0 DUP2 PUSH2 0x3A4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1268 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x52E9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x3FAC JUMP JUMPDEST PUSH2 0x3D23 DUP4 DUP4 PUSH2 0x4031 JUMP JUMPDEST PUSH2 0x3D30 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x3DBC JUMP JUMPDEST PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3FA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x3E33 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x528C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3E8C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3E89 SWAP2 DUP2 ADD SWAP1 PUSH2 0x52CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3F59 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x3EBA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3EBF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x3F51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC54 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP PUSH2 0x2F51 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x2F51 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x3FD6 SWAP2 SWAP1 PUSH2 0x4C71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4011 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4016 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4027 DUP7 DUP4 DUP4 DUP8 PUSH2 0x4256 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x40AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x413A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x41C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x42EC JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x42E5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x42E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC54 JUMP JUMPDEST POP DUP2 PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0x2F51 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x4301 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x43EE JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1268 DUP2 PUSH2 0x4335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x439B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4383 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x43BC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4380 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43A4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4477 JUMPI PUSH2 0x4477 PUSH2 0x4401 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44AA JUMPI PUSH2 0x44AA PUSH2 0x4401 JUMP JUMPDEST PUSH2 0x44DB PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x4430 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x44F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x454A DUP6 DUP3 DUP7 ADD PUSH2 0x447F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x457E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x45C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x45DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x45F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4602 DUP10 DUP4 DUP11 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x461B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4628 DUP9 DUP3 DUP10 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x463B SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x459D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x467C DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x469F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C9 DUP7 DUP3 DUP8 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x46EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46F4 DUP5 PUSH2 0x459D JUMP JUMPDEST SWAP3 POP PUSH2 0x4702 PUSH1 0x20 DUP6 ADD PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x473E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x474A DUP7 DUP3 DUP8 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x47A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x47B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x47CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1268 DUP3 PUSH2 0x459D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x480B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4814 DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x453E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486D DUP11 DUP4 DUP12 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP6 POP DUP7 SWAP2 POP PUSH2 0x4888 PUSH1 0x40 DUP11 ADD PUSH2 0x459D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x489E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48AB DUP10 DUP3 DUP11 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48E7 DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x48F7 DUP2 PUSH2 0x48BD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP3 LT DUP2 DUP4 GT OR ISZERO PUSH2 0x4938 JUMPI PUSH2 0x4938 PUSH2 0x4401 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 SWAP4 POP DUP5 CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x495C DUP7 DUP4 DUP8 ADD PUSH2 0x447F JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497F DUP6 DUP3 DUP7 ADD PUSH2 0x447F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x499F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x49BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x49D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x49E5 JUMPI PUSH2 0x49E5 PUSH2 0x4401 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x49F4 DUP6 DUP3 ADD PUSH2 0x4430 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP6 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x4A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x4A4A JUMPI DUP3 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x4A2C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4A3A DUP13 DUP10 DUP4 DUP11 ADD ADD PUSH2 0x4902 JUMP JUMPDEST DUP4 MSTORE POP SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x4A14 JUMP JUMPDEST DUP1 SWAP8 POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A7A DUP6 PUSH2 0x459D JUMP JUMPDEST SWAP4 POP PUSH2 0x4A88 PUSH1 0x20 DUP7 ADD PUSH2 0x459D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AB7 DUP8 DUP3 DUP9 ADD PUSH2 0x447F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B05 DUP14 DUP4 DUP15 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x4B21 DUP3 PUSH2 0x48BD JUMP JUMPDEST SWAP1 SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x4B37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B43 DUP14 DUP4 DUP15 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x4B57 PUSH1 0x80 DUP14 ADD PUSH2 0x459D JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B7A DUP13 DUP3 DUP14 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BAD DUP4 PUSH2 0x459D JUMP JUMPDEST SWAP2 POP PUSH2 0x4BBB PUSH1 0x20 DUP5 ADD PUSH2 0x459D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x4BEA PUSH1 0x20 DUP7 ADD PUSH2 0x459D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C12 DUP8 DUP3 DUP9 ADD PUSH2 0x4554 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4C32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4C6B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4C83 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4380 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4CB4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDBA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4CC0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x4CEB JUMPI PUSH2 0x4CEB PUSH2 0x4401 JUMP JUMPDEST PUSH2 0x4CFF DUP4 PUSH2 0x4CF9 DUP4 SLOAD PUSH2 0x4C1E JUMP JUMPDEST DUP4 PUSH2 0x4C8D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D51 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4D1B JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4DA0 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4D80 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x4DDB JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4E50 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x4DED JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2F51 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1268 DUP2 PUSH2 0x48BD JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x4C83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA19 CALLDATASIZE DUP4 PUSH2 0x4902 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F13 JUMPI PUSH2 0x4F13 PUSH2 0x4401 JUMP JUMPDEST PUSH2 0x4F27 DUP2 PUSH2 0x4F21 DUP5 SLOAD PUSH2 0x4C1E JUMP JUMPDEST DUP5 PUSH2 0x4C8D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4F7A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4F44 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4FC7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4FA8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5003 JUMPI DUP8 DUP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5026 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x43A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4E50 DUP2 DUP6 PUSH2 0x43A4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x5098 JUMPI PUSH2 0x5098 PUSH2 0x5038 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x50AE JUMPI PUSH2 0x50AE PUSH2 0x5038 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x5111 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x43A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE DUP2 PUSH1 0x60 DUP9 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x513C DUP2 DUP7 DUP9 PUSH2 0x4DED JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x5155 DUP2 PUSH2 0x4C1E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x516D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x51A0 JUMPI PUSH2 0x51CF JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x51CF JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x51C6 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x51AD JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x51E3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x4380 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5210 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x4DED JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x5245 JUMPI PUSH2 0x5245 PUSH2 0x5038 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x527C PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x4DED JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4027 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x43A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1268 DUP2 PUSH2 0x4335 JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220684117 SDIV SWAP6 0xAB 0x2F MULMOD EQ DUP5 0x5D PUSH21 0x65C63B072A81451EFA2351D012EEC165AD0B3FE64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"772:11196:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:344:10;;;;;;;;;;-1:-1:-1;1987:344:10;;;;;:::i;:::-;;:::i;:::-;;;611:14:29;;604:22;586:41;;574:2;559:18;1987:344:10;;;;;;;;2932:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4704:183:27:-;;;;;;;;;;-1:-1:-1;4704:183:27;;;;;:::i;:::-;;:::i;4441:357:28:-;;;;;;;;;;-1:-1:-1;4441:357:28;;;;;:::i;:::-;;:::i;:::-;;2474:119:27;;;;;;;;;;-1:-1:-1;2474:119:27;;;;;:::i;:::-;;:::i;4407:167:10:-;;;;;;;;;;-1:-1:-1;4407:167:10;;;;;:::i;:::-;;:::i;:::-;;;4686:42:29;4674:55;;;4656:74;;4644:2;4629:18;4407:167:10;4510:226:29;3929:417:10;;;;;;;;;;-1:-1:-1;3929:417:10;;;;;:::i;:::-;;:::i;670:55:27:-;;;;;;;;;;-1:-1:-1;670:55:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5174:18:29;5162:31;;;5144:50;;5132:2;5117:18;670:55:27;5000:200:29;1533:50:28;;;;;;;;;;-1:-1:-1;1533:50:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;8933:97;;;;;;;;;;-1:-1:-1;9013:10:28;;8933:97;;;5536:25:29;;;5524:2;5509:18;8933:97:28;5390:177:29;9270:160:28;;;;;;;;;;-1:-1:-1;9270:160:28;;;;;:::i;:::-;;:::i;7167:187::-;;;;;;;;;;-1:-1:-1;7167:187:28;;;;;:::i;:::-;;:::i;5179:525::-;;;;;;;;;;-1:-1:-1;5179:525:28;;;;;:::i;:::-;;:::i;3104:391:27:-;;;;;;;;;;-1:-1:-1;3104:391:27;;;;;:::i;:::-;;:::i;3387:195:8:-;;;;;;;;;;-1:-1:-1;3387:195:8;;;;;:::i;:::-;;:::i;9992:65:28:-;;;;;;;;;;;;;:::i;7398:195::-;;;;;;;;;;-1:-1:-1;7398:195:28;;;;;:::i;:::-;;:::i;6608:330::-;;;;;;;;;;-1:-1:-1;6608:330:28;;;;;:::i;:::-;;:::i;3901:220:8:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;1314:46:28:-;;;;;;;;;;-1:-1:-1;1314:46:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;1858:84:9;;;;;;;;;;-1:-1:-1;1928:7:9;;;;1858:84;;2651:219:10;;;;;;;;;;-1:-1:-1;2651:219:10;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;;;;;-1:-1:-1;2390:204:10;;;;;:::i;:::-;;:::i;2064:101:2:-;;;;;;;;;;;;;:::i;6034:471:28:-;;;;;;;;;;-1:-1:-1;6034:471:28;;;;;:::i;:::-;;:::i;9864:61::-;;;;;;;;;;;;;:::i;1653:42::-;;;;;;;;;;-1:-1:-1;1653:42:28;;;;;:::i;:::-;;;;;;;;;;;;;;1441:85:2;;;;;;;;;;-1:-1:-1;1513:6:2;;;;1441:85;;2719:134:27;;;;;;;;;;-1:-1:-1;2719:134:27;;;;;:::i;:::-;;:::i;3094:102:10:-;;;;;;;;;;;;;:::i;1159:47:28:-;;;;;;;;;;-1:-1:-1;1159:47:28;;;;;:::i;:::-;;:::i;4641:153:10:-;;;;;;;;;;-1:-1:-1;4641:153:10;;;;;:::i;:::-;;:::i;1866:45:28:-;;;;;;;;;;-1:-1:-1;1866:45:28;;;;;:::i;:::-;;;;;;;;;;;;;;3676:412:27;;;;;;;;;;-1:-1:-1;3676:412:27;;;;;:::i;:::-;;:::i;7637:220:28:-;;;;;;;;;;-1:-1:-1;7637:220:28;;;;;:::i;:::-;;:::i;7995:236::-;;;;;;;;;;-1:-1:-1;7995:236:28;;;;;:::i;:::-;;:::i;8542:227::-;;;;;;;;;;-1:-1:-1;8542:227:28;;;;;:::i;:::-;;:::i;4307:172:27:-;;;;;;;;;;-1:-1:-1;4307:172:27;;;;;:::i;:::-;;:::i;10262:620:28:-;;;;;;;;;;-1:-1:-1;10262:620:28;;;;;:::i;:::-;;:::i;527:50:27:-;;;;;;;;;;-1:-1:-1;527:50:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;4860:162:10;;;;;;;;;;-1:-1:-1;4860:162:10;;;;;:::i;:::-;4980:25;;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162;2314:198:2;;;;;;;;;;-1:-1:-1;2314:198:2;;;;;:::i;:::-;;:::i;9497:302:28:-;;;;;;;;;;-1:-1:-1;9497:302:28;;;;;:::i;:::-;;:::i;1987:344:10:-;2111:4;2146:51;;;2161:36;2146:51;;:126;;-1:-1:-1;2213:59:10;;;2228:44;2213:59;2146:126;:178;;;-1:-1:-1;1183:36:18;1168:51;;;;2288:36:10;2127:197;1987:344;-1:-1:-1;;1987:344:10:o;2932:98::-;2986:13;3018:5;3011:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:98;:::o;4704:183:27:-;4819:47;4835:30;;;:21;:30;;;;;;;;;;;4819:47;;:15;:47;;;;;:56;;;;;;;;;;:61;;4787:13;;4819:56;:61;;4876:3;;4819:61;:::i;:::-;;;;;;;;;;;;;4812:68;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4704:183;;;;:::o;4441:357:28:-;3279:19:7;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:7;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:7;1713:19:14;:23;;;3387:66:7;;-1:-1:-1;3436:12:7;;;;;:17;3387:66;3325:201;;;;;;;15762:2:29;3325:201:7;;;15744:21:29;15801:2;15781:18;;;15774:30;15840:34;15820:18;;;15813:62;15911:16;15891:18;;;15884:44;15945:19;;3325:201:7;;;;;;;;;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;4611:39:28::1;4625:10;;4611:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;4611:39:28::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;4637:12:28;;-1:-1:-1;4637:12:28;;;;4611:39;::::1;4637:12:::0;;;;4611:39;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;4611:13:28::1;::::0;-1:-1:-1;;;4611:39:28:i:1;:::-;4660:24;:22;:24::i;:::-;4694:16;:14;:16::i;:::-;4720:17;:15;:17::i;:::-;4747:8;:6;:8::i;:::-;4765:26;4784:6;4765:18;:26::i;:::-;3651:14:7::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;16127:36:29;;3721:14:7;;16115:2:29;16100:18;3721:14:7;;;;;;;3647:99;3269:483;4441:357:28;;;;;:::o;2474:119:27:-;2543:7;1953:30;1975:7;1953:21;:30::i;:::-;1945:64;;;;;;;16376:2:29;1945:64:27;;;16358:21:29;16415:2;16395:18;;;16388:30;16454:23;16434:18;;;16427:51;16495:18;;1945:64:27;16174:345:29;1945:64:27;2562:24:::1;2578:7;2562:15;:24::i;:::-;2474:119:::0;;:::o;4407:167:10:-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:10;;;;:15;:24;;;;;;;;;4407:167::o;3929:417::-;4009:13;4025:34;4051:7;4025:25;:34::i;:::-;4009:50;;4083:5;4077:11;;:2;:11;;;4069:57;;;;;;;16726:2:29;4069:57:10;;;16708:21:29;16765:2;16745:18;;;16738:30;16804:34;16784:18;;;16777:62;16875:3;16855:18;;;16848:31;16896:19;;4069:57:10;16524:397:29;4069:57:10;929:10:15;4158:21:10;;;;;:62;;-1:-1:-1;4183:37:10;4200:5;929:10:15;4860:162:10;:::i;4183:37::-;4137:170;;;;;;;17128:2:29;4137:170:10;;;17110:21:29;17167:2;17147:18;;;17140:30;17206:34;17186:18;;;17179:62;17277:31;17257:18;;;17250:59;17326:19;;4137:170:10;16926:425:29;4137:170:10;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3999:347;3929:417;;:::o;9270:160:28:-;1334:13:2;:11;:13::i;:::-;9357:19:28::1;::::0;;;:13:::1;:19;::::0;;;;:25:::1;9379:3:::0;;9357:19;:25:::1;:::i;:::-;;9397:26;9413:4;9419:3;;9397:26;;;;;;;;:::i;:::-;;;;;;;;9270:160:::0;;;:::o;7167:187::-;1928:7:9;;;;7266:9:28;7258:42;;;;;;;20449:2:29;7258:42:28;;;20431:21:29;20488:2;20468:18;;;20461:30;20527:22;20507:18;;;20500:50;20567:18;;7258:42:28;20247:344:29;7258:42:28;7310:37;7329:4;7335:2;7339:7;7310:18;:37::i;5179:525::-;5262:4;5286:30;;;:18;:30;;;;;;;;5278:59;;;;;;;20798:2:29;5278:59:28;;;20780:21:29;20837:2;20817:18;;;20810:30;20876:18;20856;;;20849:46;20912:18;;5278:59:28;20596:340:29;5278:59:28;5347:15;5365:29;5376:5;;5383:10;5365;:29::i;:::-;7657:4:10;7266:16;;;:7;:16;;;;;;5347:47:28;;-1:-1:-1;7266:16:10;;5404:272:28;;5441:18;5462:23;;;:11;:23;;;;;;;;5503:24;;5499:167;;5554:47;;;;;:40;;;;;;:47;;5595:5;;;;5554:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5547:54;;;;;;5499:167;5647:4;5640:11;;;;;;5404:272;5692:5;5685:12;;;5179:525;;;;;;:::o;3104:391:27:-;3209:7;1953:30;1975:7;1953:21;:30::i;:::-;1945:64;;;;;;;16376:2:29;1945:64:27;;;16358:21:29;16415:2;16395:18;;;16388:30;16454:23;16434:18;;;16427:51;16495:18;;1945:64:27;16174:345:29;1945:64:27;3233:9:::1;3228:261;3248:16:::0;;::::1;3228:261;;;3285:34;3322:5;;3328:1;3322:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3285:45;;;:::i;:::-;3403:10;::::0;;::::1;::::0;3344:37:::1;3355:25:::0;;;:16:::1;:25:::0;;;;;;;::::1;;3344:37:::0;;:10:::1;:37:::0;;;;;:46;;;;;;;;;3391:8;;3344:56;;3285:45;;-1:-1:-1;3403:10:27;;3344:46;;:56:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;:69;;;;;;:::i;:::-;-1:-1:-1::0;3457:8:27;;3467:10:::1;::::0;::::1;::::0;3432:46:::1;::::0;3448:7;;3432:46:::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;-1:-1:-1::0;3266:3:27;::::1;::::0;::::1;:::i;:::-;;;;3228:261;;;;3104:391:::0;;;;:::o;3387:195:8:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;24693:2:29;1873:80:8;;;24675:21:29;24732:2;24712:18;;;24705:30;24771:34;24751:18;;;24744:62;24842:14;24822:18;;;24815:42;24874:19;;1873:80:8;24491:408:29;1873:80:8;1995:6;1971:30;;:20;1312:66:5;1536:65;;;;1457:151;1971:20:8;:30;;;1963:87;;;;;;;25106:2:29;1963:87:8;;;25088:21:29;25145:2;25125:18;;;25118:30;25184:34;25164:18;;;25157:62;25255:14;25235:18;;;25228:42;25287:19;;1963:87:8;24904:408:29;1963:87:8;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;9992:65:28:-;1334:13:2;:11;:13::i;:::-;10040:10:28::1;:8;:10::i;:::-;9992:65::o:0;7398:195::-;1928:7:9;;;;7501:9:28;7493:42;;;;;;;20449:2:29;7493:42:28;;;20431:21:29;20488:2;20468:18;;;20461:30;20527:22;20507:18;;;20500:50;20567:18;;7493:42:28;20247:344:29;7493:42:28;7545:41;7568:4;7574:2;7578:7;7545:22;:41::i;6608:330::-;6666:39;6685:10;6697:7;6666:18;:39::i;:::-;6658:64;;;;;;;25519:2:29;6658:64:28;;;25501:21:29;25558:2;25538:18;;;25531:30;25597:14;25577:18;;;25570:42;25629:18;;6658:64:28;25317:336:29;6658:64:28;6732:24;6748:7;6732:15;:24::i;:::-;6766:29;6787:7;6766:20;:29::i;:::-;6812:16;;;;:7;:16;;;;;6805:23;6838:20;6820:7;6838:11;:20::i;:::-;6870:10;;6868:12;;;;;:::i;:::-;;;;-1:-1:-1;6911:19:28;;;;:10;:19;;;;;6909:21;;6900:7;;6895:36;;6911:19;6909:21;;;:::i;:::-;;;;;-1:-1:-1;6895:36:28;;5536:25:29;;;5524:2;5509:18;6895:36:28;;;;;;;;6608:330;:::o;3901:220:8:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;24693:2:29;1873:80:8;;;24675:21:29;24732:2;24712:18;;;24705:30;24771:34;24751:18;;;24744:62;24842:14;24822:18;;;24815:42;24874:19;;1873:80:8;24491:408:29;1873:80:8;1995:6;1971:30;;:20;1312:66:5;1536:65;;;;1457:151;1971:20:8;:30;;;1963:87;;;;;;;25106:2:29;1963:87:8;;;25088:21:29;25145:2;25125:18;;;25118:30;25184:34;25164:18;;;25157:62;25255:14;25235:18;;;25228:42;25287:19;;1963:87:8;24904:408:29;1963:87:8;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;3006:131::-:0;3084:7;2324:4;2316:23;2333:6;2316:23;;2308:92;;;;;;;26061:2:29;2308:92:8;;;26043:21:29;26100:2;26080:18;;;26073:30;26139:34;26119:18;;;26112:62;26210:26;26190:18;;;26183:54;26254:19;;2308:92:8;25859:420:29;2308:92:8;-1:-1:-1;1312:66:5::1;3006:131:8::0;:::o;2651:219:10:-;2723:7;7266:16;;;:7;:16;;;;;;;;;2785:56;;;;;;;26486:2:29;2785:56:10;;;26468:21:29;26525:2;26505:18;;;26498:30;26564:26;26544:18;;;26537:54;26608:18;;2785:56:10;26284:348:29;2390:204:10;2462:7;2489:19;;;2481:73;;;;;;;26839:2:29;2481:73:10;;;26821:21:29;26878:2;26858:18;;;26851:30;26917:34;26897:18;;;26890:62;26988:11;26968:18;;;26961:39;27017:19;;2481:73:10;26637:405:29;2481:73:10;-1:-1:-1;2571:16:10;;;;;;:9;:16;;;;;;;2390:204::o;2064:101:2:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;6034:471:28:-:0;6149:7;6189:23;;;:11;:23;;;;;;;;6226:24;;6222:228;;6266:42;6311:63;;;;;;;;6340:10;6311:63;;;;;;6352:5;;6311:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6311:63:28;;;-1:-1:-1;6311:63:28;;;;;;;;;;;;;;;6388:51;;;;;6266:108;;-1:-1:-1;6388:34:28;;;;;:51;;6266:108;;6431:7;;;;6388:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6252:198;6222:228;6466:32;6476:5;;6483:10;6495:2;6466:9;:32::i;:::-;6459:39;6034:471;-1:-1:-1;;;;;;;;6034:471:28:o;9864:61::-;1334:13:2;:11;:13::i;:::-;9910:8:28::1;:6;:8::i;2719:134:27:-:0;2798:7;2093:35;2120:7;2093:26;:35::i;:::-;2085:75;;;;;;;28067:2:29;2085:75:27;;;28049:21:29;28106:2;28086:18;;;28079:30;28145:29;28125:18;;;28118:57;28192:18;;2085:75:27;27865:351:29;2085:75:27;2817:29:::1;2838:7;2817:20;:29::i;3094:102:10:-:0;3150:13;3182:7;3175:14;;;;;:::i;1159:47:28:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4641:153:10:-;4735:52;929:10:15;4768:8:10;4778;4735:18;:52::i;3676:412:27:-;3787:7;2093:35;2120:7;2093:26;:35::i;:::-;2085:75;;;;;;;28067:2:29;2085:75:27;;;28049:21:29;28106:2;28086:18;;;28079:30;28145:29;28125:18;;;28118:57;28192:18;;2085:75:27;27865:351:29;2085:75:27;3811:9:::1;3806:276;3830:5;:12;3826:1;:16;3806:276;;;3863:34;3900:5;3906:1;3900:8;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;3991:10;;::::1;::::0;3922:47:::1;3938:30:::0;;;:21:::1;:30:::0;;;;;;;::::1;;3922:47:::0;;:15:::1;:47:::0;;;;;:56;;;;;;;;;3979:8;;3922:66;;3900:8;;-1:-1:-1;3991:10:27;;3922:56;;:66:::1;::::0;3979:8;3922:66:::1;:::i;:::-;;;;;;;;;;;;;:79;;;;;;:::i;:::-;-1:-1:-1::0;4050:8:27;;4060:10:::1;::::0;::::1;::::0;4020:51:::1;::::0;4041:7;;4020:51:::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;-1:-1:-1::0;3844:3:27;::::1;::::0;::::1;:::i;:::-;;;;3806:276;;;;3676:412:::0;;;:::o;7637:220:28:-;1928:7:9;;;;7759:9:28;7751:42;;;;;;;20449:2:29;7751:42:28;;;20431:21:29;20488:2;20468:18;;;20461:30;20527:22;20507:18;;;20500:50;20567:18;;7751:42:28;20247:344:29;7751:42:28;7803:47;7826:4;7832:2;7836:7;7845:4;7803:22;:47::i;7995:236::-;7657:4:10;7266:16;;;:7;:16;;;;;;8060:13:28;;7266:16:10;;8085:45:28;;;;;;;28423:2:29;8085:45:28;;;28405:21:29;28462:2;28442:18;;;28435:30;28501:18;28481;;;28474:46;28537:18;;8085:45:28;28221:340:29;8085:45:28;8171:31;8185:16;;;:7;:16;;;;;;;;;8171:31;;:13;:31;;;;;8204:18;8193:7;8204:16;:18::i;:::-;8154:69;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8140:84;;7995:236;;;:::o;8542:227::-;8626:7;8645:16;8691:10;8719:5;;8703:23;;;;;;;:::i;:::-;;;;;;;;;8674:53;;;;;30082:19:29;;;30126:2;30117:12;;30110:28;30163:2;30154:12;;29925:247;8674:53:28;;;;;;;;;;;;;;8664:64;;8674:53;8664:64;;;;;8542:227;-1:-1:-1;;;;;8542:227:28:o;4307:172:27:-;4421:37;4432:25;;;:16;:25;;;;;;;;;;;4421:37;;:10;:37;;;;;:46;;;;;;;;;;:51;;4389:13;;4421:46;:51;;4468:3;;;;4421:51;:::i;:::-;;;;;;;;;;;;;4414:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4307:172;;;;;:::o;10262:620:28:-;10499:19;1334:13:2;:11;:13::i;:::-;10571:10:28::1;10599:5;;10583:23;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;10554:53:::1;::::0;;::::1;;30082:19:29::0;;;30126:2;30117:12;;30110:28;30163:2;30154:12;;29925:247;10554:53:28::1;;::::0;;;;::::1;::::0;;;;;;;10544:64;;10554:53:::1;10544:64:::0;;::::1;::::0;10618:31:::1;::::0;;;:18:::1;:31:::0;;;;;;:39;;;::::1;::::0;::::1;;;::::0;;10544:64;-1:-1:-1;10544:64:28;;10672:59:::1;::::0;::::1;::::0;10706:5;;;;10713:10;;10618:39;;10672:59:::1;:::i;:::-;;;;;;;;10741:42;10757:11;10770:12;;10741:15;:42::i;:::-;10793:54;10807:11;10820:10;10832:14;;10793:13;:54::i;:::-;10262:620:::0;;;;;;;;;;;:::o;2314:198:2:-;1334:13;:11;:13::i;:::-;2402:22:::1;::::0;::::1;2394:73;;;::::0;::::1;::::0;;31061:2:29;2394:73:2::1;::::0;::::1;31043:21:29::0;31100:2;31080:18;;;31073:30;31139:34;31119:18;;;31112:62;31210:8;31190:18;;;31183:36;31236:19;;2394:73:2::1;30859:402:29::0;2394:73:2::1;2477:28;2496:8;2477:18;:28::i;9497:302:28:-:0;1334:13:2;:11;:13::i;:::-;9603:17:28::1;::::0;;;:11:::1;:17;::::0;;;;:31;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;9648:25;9644:96:::1;;9689:40;::::0;;;;:34:::1;::::0;::::1;::::0;::::1;::::0;:40:::1;::::0;9724:4;;;;9689:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;9644:96;9774:11;9754:38;;;9768:4;9787;;9754:38;;;;;;;;:::i;:::-;;;;;;;;9497:302:::0;;;;:::o;1605:149:10:-;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;5366:69:7;1708:39:10::1;1732:5;1739:7;1708:23;:39::i;1042:67:8:-:0;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;1003:95:2;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;5366:69:7;1065:26:2::1;:24;:26::i;1063:97:9:-:0;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;5366:69:7;1126:27:9::1;:25;:27::i;2429:115::-:0;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;;::::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:15::0;;850:96;2524:12:9::1;2517:20;::::0;4686:42:29;4674:55;;;4656:74;;4644:2;4629:18;2517:20:9::1;;;;;;;2429:115::o:0;2666:187:2:-;2758:6;;;;2774:17;;;;;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;11614:155:28:-;11694:4;11717:45;11742:10;11754:7;11717:24;:45::i;5256:176:27:-;5325:25;;;;:16;:25;;;;;:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5399:25:27;;;:16;:25;;;;;;;;;;5367:58;;5399:25;;;;5144:50:29;;5399:25:27;;-1:-1:-1;5367:58:27;;5117:18:29;5367:58:27;5000:200:29;13778:133:10;7657:4;7266:16;;;:7;:16;;;;;;;;13851:53;;;;;;;26486:2:29;13851:53:10;;;26468:21:29;26525:2;26505:18;;;26498:30;26564:26;26544:18;;;26537:54;26608:18;;13851:53:10;26284:348:29;13099:182:10;13173:24;;;;:15;:24;;;;;:29;;;;;;;;;;;;;:24;;13226:34;13173:24;13226:25;:34::i;:::-;13217:57;;;;;;;;;;;;13099:182;;:::o;1599:130:2:-;1513:6;;1662:23;1513:6;929:10:15;1662:23:2;1654:68;;;;;;;32665:2:29;1654:68:2;;;32647:21:29;;;32684:18;;;32677:30;32743:34;32723:18;;;32716:62;32795:18;;1654:68:2;32463:356:29;5084:296:10;5243:41;929:10:15;5276:7:10;5243:18;:41::i;:::-;5235:99;;;;;;;33026:2:29;5235:99:10;;;33008:21:29;33065:2;33045:18;;;33038:30;33104:34;33084:18;;;33077:62;33175:15;33155:18;;;33148:43;33208:19;;5235:99:10;32824:409:29;5235:99:10;5345:28;5355:4;5361:2;5365:7;5345:9;:28::i;11071:119:28:-;11159:10;11148:7;1513:6:2;;;;;1441:85;11148:7:28;:21;;;11140:43;;;;;;;33440:2:29;11140:43:28;;;33422:21:29;33479:1;33459:18;;;33452:29;33517:11;33497:18;;;33490:39;33546:18;;11140:43:28;33238:332:29;2820:944:5;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;3383:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;;;;33966:2:29;3610:56:5;;;33948:21:29;34005:2;33985:18;;;33978:30;34044:34;34024:18;;;34017:62;34115:16;34095:18;;;34088:44;34149:19;;3610:56:5;33764:410:29;3379:302:5;1312:66;3496:28;;3488:82;;;;;;;34381:2:29;3488:82:5;;;34363:21:29;34420:2;34400:18;;;34393:30;34459:34;34439:18;;;34432:62;34530:11;34510:18;;;34503:39;34559:19;;3488:82:5;34179:405:29;3488:82:5;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2676:117:9:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;;::::1;::::0;;2764:22:::1;929:10:15::0;2773:12:9::1;850:96:15::0;5446:149:10;5549:39;5566:4;5572:2;5576:7;5549:39;;;;;;;;;;;;:16;:39::i;7876:272::-;7969:4;7985:13;8001:34;8027:7;8001:25;:34::i;:::-;7985:50;;8064:5;8053:16;;:7;:16;;;:52;;;-1:-1:-1;4980:25:10;;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8073:32;8053:87;;;;8133:7;8109:31;;:20;8121:7;8109:11;:20::i;:::-;:31;;;8053:87;8045:96;7876:272;-1:-1:-1;;;;7876:272:10:o;5438:196:27:-;5512:30;;;;:21;:30;;;;;:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5596:30:27;;;:21;:30;;;;;;;;;;5559:68;;5596:30;;;;5144:50:29;;5596:30:27;;-1:-1:-1;5559:68:27;;5117:18:29;5559:68:27;5000:200:29;10654:784:10;10713:13;10729:34;10755:7;10729:25;:34::i;:::-;10713:50;;10935:34;10961:7;10935:25;:34::i;:::-;11014:24;;;;:15;:24;;;;;;;;11007:31;;;;;;;;;;11254:16;;;;;:9;:16;;;;;:21;;;;;;11302:16;;;:7;:16;;;;;;11295:23;;;;;;;11334:36;10927:42;;-1:-1:-1;11030:7:10;;11334:36;;11014:24;;11334:36;2474:119:27;;:::o;11196:412:28:-;11288:7;11315:28;11325:5;;11332:10;11315:9;:28::i;:::-;11307:59;;;;;;;34791:2:29;11307:59:28;;;34773:21:29;34830:2;34810:18;;;34803:30;34869:20;34849:18;;;34842:48;34907:18;;11307:59:28;34589:342:29;11307:59:28;11376:15;11394:29;11405:5;;11412:10;11394;:29::i;:::-;11376:47;;11433:28;11449:2;11453:7;11433:15;:28::i;:::-;11473:10;;11471:12;;;;;:::i;:::-;;;;-1:-1:-1;11493:16:28;;;;:7;:16;;;;;;;:29;;;11537:40;;;;;11501:7;;11537:40;;;;11546:5;;;;11512:10;;11537:40;:::i;:::-;;;;;;;;11594:7;11196:412;-1:-1:-1;;;;;11196:412:28:o;11775:191::-;11860:4;7266:16:10;;;:7;:16;;;;;;;;11876:45:28;;;;;;;35461:2:29;11876:45:28;;;35443:21:29;35500:2;35480:18;;;35473:30;35539:18;35519;;;35512:46;35575:18;;11876:45:28;35259:340:29;11876:45:28;11949:10;11938:7;1513:6:2;;;;;1441:85;11938:7:28;:21;;;;11775:191;-1:-1:-1;;11775:191:28:o;13417:277:10:-;13537:8;13528:17;;:5;:17;;;13520:55;;;;;;;35806:2:29;13520:55:10;;;35788:21:29;35845:2;35825:18;;;35818:30;35884:27;35864:18;;;35857:55;35929:18;;13520:55:10;35604:349:29;13520:55:10;13585:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;13646:41;;586::29;;;13646::10;;559:18:29;13646:41:10;;;;;;;13417:277;;;:::o;5661:276::-;5791:41;929:10:15;5824:7:10;5791:18;:41::i;:::-;5783:99;;;;;;;33026:2:29;5783:99:10;;;33008:21:29;33065:2;33045:18;;;33038:30;33104:34;33084:18;;;33077:62;33175:15;33155:18;;;33148:43;33208:19;;5783:99:10;32824:409:29;5783:99:10;5892:38;5906:4;5912:2;5916:7;5925:4;5892:13;:38::i;222:1916:26:-;684:4;678:11;;691:3;674:21;;767:17;;;;1448:11;;;1329:5;1578:2;1592;1582:13;;1574:22;1448:11;1561:36;1632:2;1622:13;;1223:682;1650:4;1223:682;;;1836:1;1831:3;1827:11;1820:18;;1886:2;1880:4;1876:13;1872:2;1868:22;1863:3;1855:36;1743:2;1733:13;;1223:682;;;-1:-1:-1;1932:13:26;;;2045:12;;;;2103:19;;;2045:12;222:1916;-1:-1:-1;222:1916:26:o;1760:160:10:-;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;5366:69:7;1873:5:10::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:10::1;:17;1906:7:::0;1896;:17:::1;:::i;1104:111:2:-:0;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;5366:69:7;1176:32:2::1;929:10:15::0;1176:18:2::1;:32::i;1166:95:9:-:0;5374:13:7;;;;;;;5366:69;;;;;;;32039:2:29;5366:69:7;;;32021:21:29;32078:2;32058:18;;;32051:30;32117:34;32097:18;;;32090:62;32188:13;32168:18;;;32161:41;32219:19;;5366:69:7;31837:407:29;5366:69:7;1239:7:9::1;:15:::0;;;::::1;::::0;;1166:95::o;2010:106::-;1928:7;;;;2079:9;2071:38;;;;;;;36160:2:29;2071:38:9;;;36142:21:29;36199:2;36179:18;;;36172:30;36238:18;36218;;;36211:46;36274:18;;2071:38:9;35958:340:29;11762:1225:10;11897:4;11859:42;;:34;11885:7;11859:25;:34::i;:::-;:42;;;11851:92;;;;;;;36505:2:29;11851:92:10;;;36487:21:29;36544:2;36524:18;;;36517:30;36583:34;36563:18;;;36556:62;36654:7;36634:18;;;36627:35;36679:19;;11851:92:10;36303:401:29;11851:92:10;11961:16;;;11953:65;;;;;;;36911:2:29;11953:65:10;;;36893:21:29;36950:2;36930:18;;;36923:30;36989:34;36969:18;;;36962:62;37060:6;37040:18;;;37033:34;37084:19;;11953:65:10;36709:400:29;11953:65:10;12209:4;12171:42;;:34;12197:7;12171:25;:34::i;:::-;:42;;;12163:92;;;;;;;36505:2:29;12163:92:10;;;36487:21:29;36544:2;36524:18;;;36517:30;36583:34;36563:18;;;36556:62;36654:7;36634:18;;;36627:35;36679:19;;12163:92:10;36303:401:29;12163:92:10;12324:24;;;;:15;:24;;;;;;;;12317:31;;;;;;;;;;12792:15;;;;;;:9;:15;;;;;:20;;;;;;12826:13;;;;;;;;;:18;;12317:31;12826:18;;;12864:16;;;:7;:16;;;;;;:21;;;;;;;;;;12901:27;;12340:7;;12901:27;;;3999:347;3929:417;;:::o;1699:281:5:-;1713:19:14;;;;1772:106:5;;;;;;;37316:2:29;1772:106:5;;;37298:21:29;37355:2;37335:18;;;37328:30;37394:34;37374:18;;;37367:62;37465:15;37445:18;;;37438:43;37498:19;;1772:106:5;37114:409:29;1772:106:5;1312:66;1888:85;;;;;;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;2188:106:9:-;1928:7;;;;2246:41;;;;;;;37730:2:29;2246:41:9;;;37712:21:29;37769:2;37749:18;;;37742:30;37808:22;37788:18;;;37781:50;37848:18;;2246:41:9;37528:344:29;8478:108:10;8553:26;8563:2;8567:7;8553:26;;;;;;;;;;;;:9;:26::i;6798:267::-;6910:28;6920:4;6926:2;6930:7;6910:9;:28::i;:::-;6956:47;6979:4;6985:2;6989:7;6998:4;6956:22;:47::i;:::-;6948:110;;;;;;;38079:2:29;6948:110:10;;;38061:21:29;38118:2;38098:18;;;38091:30;38157:34;38137:18;;;38130:62;38228:20;38208:18;;;38201:48;38266:19;;6948:110:10;37877:414:29;2086:152:5;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;;;;;;;;;;2086:152;:::o;6685:198:14:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;8807:279:10:-;8901:18;8907:2;8911:7;8901:5;:18::i;:::-;8950:53;8981:1;8985:2;8989:7;8998:4;8950:22;:53::i;:::-;8929:150;;;;;;;38079:2:29;8929:150:10;;;38061:21:29;38118:2;38098:18;;;38091:30;38157:34;38137:18;;;38130:62;38228:20;38208:18;;;38201:48;38266:19;;8929:150:10;37877:414:29;14463:853:10;14612:4;14632:13;;;1713:19:14;:23;14628:682:10;;14667:82;;;;;:47;;;;;;:82;;929:10:15;;14729:4:10;;14735:7;;14744:4;;14667:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14667:82:10;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14663:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14927:6;:13;14944:1;14927:18;14923:321;;14969:60;;;;;38079:2:29;14969:60:10;;;38061:21:29;38118:2;38098:18;;;38091:30;38157:34;38137:18;;;38130:62;38228:20;38208:18;;;38201:48;38266:19;;14969:60:10;37877:414:29;14923:321:10;15196:6;15190:13;15181:6;15177:2;15173:15;15166:38;14663:595;14799:62;;14809:52;14799:62;;-1:-1:-1;14792:69:10;;14628:682;-1:-1:-1;15295:4:10;15288:11;;7069:325:14;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:14:o;9408:920:10:-;9487:16;;;9479:61;;;;;;;39561:2:29;9479:61:10;;;39543:21:29;;;39580:18;;;39573:30;39639:34;39619:18;;;39612:62;39691:18;;9479:61:10;39359:356:29;9479:61:10;7657:4;7266:16;;;:7;:16;;;;;;;;7680:31;9550:58;;;;;;;39922:2:29;9550:58:10;;;39904:21:29;39961:2;39941:18;;;39934:30;40000;39980:18;;;39973:58;40048:18;;9550:58:10;39720:352:29;9550:58:10;7657:4;7266:16;;;:7;:16;;;;;;;;7680:31;9754:58;;;;;;;39922:2:29;9754:58:10;;;39904:21:29;39961:2;39941:18;;;39934:30;40000;39980:18;;;39973:58;40048:18;;9754:58:10;39720:352:29;9754:58:10;10154:13;;;;;;;:9;:13;;;;;;;;:18;;10171:1;10154:18;;;10193:16;;;:7;:16;;;;;;:21;;;;;;;;10230:33;10201:7;;10154:13;;10230:33;;10154:13;;10230:33;2474:119:27;;:::o;7682:628:14:-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;1713:19;;;;8124:60;;;;;;;40279:2:29;8124:60:14;;;40261:21:29;40318:2;40298:18;;;40291:30;40357:31;40337:18;;;40330:59;40406:18;;8124:60:14;40077:353:29;8124:60:14;-1:-1:-1;8219:10:14;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;14:177:29:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:29;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:29:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:184::-;1505:77;1502:1;1495:88;1602:4;1599:1;1592:15;1626:4;1623:1;1616:15;1642:334;1713:2;1707:9;1769:2;1759:13;;1774:66;1755:86;1743:99;;1872:18;1857:34;;1893:22;;;1854:62;1851:88;;;1919:18;;:::i;:::-;1955:2;1948:22;1642:334;;-1:-1:-1;1642:334:29:o;1981:590::-;2024:5;2077:3;2070:4;2062:6;2058:17;2054:27;2044:55;;2095:1;2092;2085:12;2044:55;2131:6;2118:20;2157:18;2153:2;2150:26;2147:52;;;2179:18;;:::i;:::-;2223:114;2331:4;2262:66;2255:4;2251:2;2247:13;2243:86;2239:97;2223:114;:::i;:::-;2362:2;2353:7;2346:19;2408:3;2401:4;2396:2;2388:6;2384:15;2380:26;2377:35;2374:55;;;2425:1;2422;2415:12;2374:55;2490:2;2483:4;2475:6;2471:17;2464:4;2455:7;2451:18;2438:55;2538:1;2513:16;;;2531:4;2509:27;2502:38;;;;2517:7;1981:590;-1:-1:-1;;;1981:590:29:o;2576:390::-;2654:6;2662;2715:2;2703:9;2694:7;2690:23;2686:32;2683:52;;;2731:1;2728;2721:12;2683:52;2767:9;2754:23;2744:33;;2828:2;2817:9;2813:18;2800:32;2855:18;2847:6;2844:30;2841:50;;;2887:1;2884;2877:12;2841:50;2910;2952:7;2943:6;2932:9;2928:22;2910:50;:::i;:::-;2900:60;;;2576:390;;;;;:::o;2971:348::-;3023:8;3033:6;3087:3;3080:4;3072:6;3068:17;3064:27;3054:55;;3105:1;3102;3095:12;3054:55;-1:-1:-1;3128:20:29;;3171:18;3160:30;;3157:50;;;3203:1;3200;3193:12;3157:50;3240:4;3232:6;3228:17;3216:29;;3292:3;3285:4;3276:6;3268;3264:19;3260:30;3257:39;3254:59;;;3309:1;3306;3299:12;3254:59;2971:348;;;;;:::o;3324:196::-;3392:20;;3452:42;3441:54;;3431:65;;3421:93;;3510:1;3507;3500:12;3421:93;3324:196;;;:::o;3525:795::-;3626:6;3634;3642;3650;3658;3711:2;3699:9;3690:7;3686:23;3682:32;3679:52;;;3727:1;3724;3717:12;3679:52;3767:9;3754:23;3796:18;3837:2;3829:6;3826:14;3823:34;;;3853:1;3850;3843:12;3823:34;3892:59;3943:7;3934:6;3923:9;3919:22;3892:59;:::i;:::-;3970:8;;-1:-1:-1;3866:85:29;-1:-1:-1;4058:2:29;4043:18;;4030:32;;-1:-1:-1;4074:16:29;;;4071:36;;;4103:1;4100;4093:12;4071:36;;4142:61;4195:7;4184:8;4173:9;4169:24;4142:61;:::i;:::-;4222:8;;-1:-1:-1;4116:87:29;-1:-1:-1;4276:38:29;;-1:-1:-1;4310:2:29;4295:18;;4276:38;:::i;:::-;4266:48;;3525:795;;;;;;;;:::o;4325:180::-;4384:6;4437:2;4425:9;4416:7;4412:23;4408:32;4405:52;;;4453:1;4450;4443:12;4405:52;-1:-1:-1;4476:23:29;;4325:180;-1:-1:-1;4325:180:29:o;4741:254::-;4809:6;4817;4870:2;4858:9;4849:7;4845:23;4841:32;4838:52;;;4886:1;4883;4876:12;4838:52;4909:29;4928:9;4909:29;:::i;:::-;4899:39;4985:2;4970:18;;;;4957:32;;-1:-1:-1;;;4741:254:29:o;5572:479::-;5652:6;5660;5668;5721:2;5709:9;5700:7;5696:23;5692:32;5689:52;;;5737:1;5734;5727:12;5689:52;5773:9;5760:23;5750:33;;5834:2;5823:9;5819:18;5806:32;5861:18;5853:6;5850:30;5847:50;;;5893:1;5890;5883:12;5847:50;5932:59;5983:7;5974:6;5963:9;5959:22;5932:59;:::i;:::-;5572:479;;6010:8;;-1:-1:-1;5906:85:29;;-1:-1:-1;;;;5572:479:29:o;6056:328::-;6133:6;6141;6149;6202:2;6190:9;6181:7;6177:23;6173:32;6170:52;;;6218:1;6215;6208:12;6170:52;6241:29;6260:9;6241:29;:::i;:::-;6231:39;;6289:38;6323:2;6312:9;6308:18;6289:38;:::i;:::-;6279:48;;6374:2;6363:9;6359:18;6346:32;6336:42;;6056:328;;;;;:::o;6389:479::-;6469:6;6477;6485;6538:2;6526:9;6517:7;6513:23;6509:32;6506:52;;;6554:1;6551;6544:12;6506:52;6594:9;6581:23;6627:18;6619:6;6616:30;6613:50;;;6659:1;6656;6649:12;6613:50;6698:59;6749:7;6740:6;6729:9;6725:22;6698:59;:::i;:::-;6776:8;;6672:85;;-1:-1:-1;6858:2:29;6843:18;;;;6830:32;;6389:479;-1:-1:-1;;;;6389:479:29:o;6873:715::-;7000:6;7008;7016;7069:2;7057:9;7048:7;7044:23;7040:32;7037:52;;;7085:1;7082;7075:12;7037:52;7121:9;7108:23;7098:33;;7182:2;7171:9;7167:18;7154:32;7205:18;7246:2;7238:6;7235:14;7232:34;;;7262:1;7259;7252:12;7232:34;7300:6;7289:9;7285:22;7275:32;;7345:7;7338:4;7334:2;7330:13;7326:27;7316:55;;7367:1;7364;7357:12;7316:55;7407:2;7394:16;7433:2;7425:6;7422:14;7419:34;;;7449:1;7446;7439:12;7419:34;7502:7;7497:2;7487:6;7484:1;7480:14;7476:2;7472:23;7468:32;7465:45;7462:65;;;7523:1;7520;7513:12;7462:65;7554:2;7550;7546:11;7536:21;;7576:6;7566:16;;;;;6873:715;;;;;:::o;7593:186::-;7652:6;7705:2;7693:9;7684:7;7680:23;7676:32;7673:52;;;7721:1;7718;7711:12;7673:52;7744:29;7763:9;7744:29;:::i;7784:395::-;7861:6;7869;7922:2;7910:9;7901:7;7897:23;7893:32;7890:52;;;7938:1;7935;7928:12;7890:52;7961:29;7980:9;7961:29;:::i;:::-;7951:39;;8041:2;8030:9;8026:18;8013:32;8068:18;8060:6;8057:30;8054:50;;;8100:1;8097;8090:12;8366:863;8475:6;8483;8491;8499;8507;8515;8568:3;8556:9;8547:7;8543:23;8539:33;8536:53;;;8585:1;8582;8575:12;8536:53;8625:9;8612:23;8654:18;8695:2;8687:6;8684:14;8681:34;;;8711:1;8708;8701:12;8681:34;8750:59;8801:7;8792:6;8781:9;8777:22;8750:59;:::i;:::-;8828:8;;-1:-1:-1;8724:85:29;-1:-1:-1;8910:2:29;8895:18;;8882:32;;-1:-1:-1;8724:85:29;;-1:-1:-1;8933:38:29;8967:2;8952:18;;8933:38;:::i;:::-;8923:48;;9024:2;9013:9;9009:18;8996:32;8980:48;;9053:2;9043:8;9040:16;9037:36;;;9069:1;9066;9059:12;9037:36;;9108:61;9161:7;9150:8;9139:9;9135:24;9108:61;:::i;:::-;8366:863;;;;-1:-1:-1;8366:863:29;;-1:-1:-1;8366:863:29;;9188:8;;8366:863;-1:-1:-1;;;8366:863:29:o;9234:118::-;9320:5;9313:13;9306:21;9299:5;9296:32;9286:60;;9342:1;9339;9332:12;9357:315;9422:6;9430;9483:2;9471:9;9462:7;9458:23;9454:32;9451:52;;;9499:1;9496;9489:12;9451:52;9522:29;9541:9;9522:29;:::i;:::-;9512:39;;9601:2;9590:9;9586:18;9573:32;9614:28;9636:5;9614:28;:::i;:::-;9661:5;9651:15;;;9357:315;;;;;:::o;9677:732::-;9736:5;9784:4;9772:9;9767:3;9763:19;9759:30;9756:50;;;9802:1;9799;9792:12;9756:50;9835:4;9829:11;9879:4;9871:6;9867:17;9903:18;9971:6;9959:10;9956:22;9951:2;9939:10;9936:18;9933:46;9930:72;;;9982:18;;:::i;:::-;10024:10;10018:4;10011:24;10053:6;10044:15;;10095:9;10082:23;10068:37;;10128:2;10120:6;10117:14;10114:34;;;10144:1;10141;10134:12;10114:34;10172:46;10214:3;10205:6;10194:9;10190:22;10172:46;:::i;:::-;10164:6;10157:62;10272:2;10261:9;10257:18;10244:32;10228:48;;10301:2;10291:8;10288:16;10285:36;;;10317:1;10314;10307:12;10285:36;;10354:48;10398:3;10387:8;10376:9;10372:24;10354:48;:::i;:::-;10349:2;10341:6;10337:15;10330:73;;;9677:732;;;;:::o;10414:1268::-;10537:6;10545;10598:2;10586:9;10577:7;10573:23;10569:32;10566:52;;;10614:1;10611;10604:12;10566:52;10650:9;10637:23;10627:33;;10679:2;10732;10721:9;10717:18;10704:32;10755:18;10796:2;10788:6;10785:14;10782:34;;;10812:1;10809;10802:12;10782:34;10850:6;10839:9;10835:22;10825:32;;10895:7;10888:4;10884:2;10880:13;10876:27;10866:55;;10917:1;10914;10907:12;10866:55;10953:2;10940:16;10975:2;10971;10968:10;10965:36;;;10981:18;;:::i;:::-;11027:2;11024:1;11020:10;11050:28;11074:2;11070;11066:11;11050:28;:::i;:::-;11112:15;;;11182:11;;;11178:20;;;11143:12;;;;11210:19;;;11207:39;;;11242:1;11239;11232:12;11207:39;11274:2;11270;11266:11;11255:22;;11286:366;11302:6;11297:3;11294:15;11286:366;;;11388:3;11375:17;11424:2;11411:11;11408:19;11405:109;;;11468:1;11497:2;11493;11486:14;11405:109;11539:70;11601:7;11596:2;11582:11;11578:2;11574:20;11570:29;11539:70;:::i;:::-;11527:83;;-1:-1:-1;11319:12:29;;;;11630;;;;11286:366;;;11671:5;11661:15;;;;;;;;;10414:1268;;;;;:::o;11687:538::-;11782:6;11790;11798;11806;11859:3;11847:9;11838:7;11834:23;11830:33;11827:53;;;11876:1;11873;11866:12;11827:53;11899:29;11918:9;11899:29;:::i;:::-;11889:39;;11947:38;11981:2;11970:9;11966:18;11947:38;:::i;:::-;11937:48;;12032:2;12021:9;12017:18;12004:32;11994:42;;12087:2;12076:9;12072:18;12059:32;12114:18;12106:6;12103:30;12100:50;;;12146:1;12143;12136:12;12100:50;12169;12211:7;12202:6;12191:9;12187:22;12169:50;:::i;:::-;12159:60;;;11687:538;;;;;;;:::o;12714:1283::-;12850:6;12858;12866;12874;12882;12890;12898;12906;12914;12967:3;12955:9;12946:7;12942:23;12938:33;12935:53;;;12984:1;12981;12974:12;12935:53;13024:9;13011:23;13053:18;13094:2;13086:6;13083:14;13080:34;;;13110:1;13107;13100:12;13080:34;13149:59;13200:7;13191:6;13180:9;13176:22;13149:59;:::i;:::-;13227:8;;-1:-1:-1;13123:85:29;-1:-1:-1;13309:2:29;13294:18;;13281:32;;-1:-1:-1;13363:2:29;13348:18;;13335:32;;-1:-1:-1;13376:28:29;13335:32;13376:28;:::i;:::-;13423:5;;-1:-1:-1;13481:2:29;13466:18;;13453:32;;13497:16;;;13494:36;;;13526:1;13523;13516:12;13494:36;13565:61;13618:7;13607:8;13596:9;13592:24;13565:61;:::i;:::-;13645:8;;-1:-1:-1;13539:87:29;-1:-1:-1;13539:87:29;;-1:-1:-1;13699:39:29;13733:3;13718:19;;13699:39;:::i;:::-;13689:49;;13791:3;13780:9;13776:19;13763:33;13747:49;;13821:2;13811:8;13808:16;13805:36;;;13837:1;13834;13827:12;13805:36;;13876:61;13929:7;13918:8;13907:9;13903:24;13876:61;:::i;:::-;13850:87;;13956:8;13946:18;;;13983:8;13973:18;;;12714:1283;;;;;;;;;;;:::o;14002:260::-;14070:6;14078;14131:2;14119:9;14110:7;14106:23;14102:32;14099:52;;;14147:1;14144;14137:12;14099:52;14170:29;14189:9;14170:29;:::i;:::-;14160:39;;14218:38;14252:2;14241:9;14237:18;14218:38;:::i;:::-;14208:48;;14002:260;;;;;:::o;14267:552::-;14355:6;14363;14371;14379;14432:2;14420:9;14411:7;14407:23;14403:32;14400:52;;;14448:1;14445;14438:12;14400:52;14484:9;14471:23;14461:33;;14513:38;14547:2;14536:9;14532:18;14513:38;:::i;:::-;14503:48;;14602:2;14591:9;14587:18;14574:32;14629:18;14621:6;14618:30;14615:50;;;14661:1;14658;14651:12;14615:50;14700:59;14751:7;14742:6;14731:9;14727:22;14700:59;:::i;:::-;14267:552;;;;-1:-1:-1;14778:8:29;-1:-1:-1;;;;14267:552:29:o;14824:437::-;14903:1;14899:12;;;;14946;;;14967:61;;15021:4;15013:6;15009:17;14999:27;;14967:61;15074:2;15066:6;15063:14;15043:18;15040:38;15037:218;;15111:77;15108:1;15101:88;15212:4;15209:1;15202:15;15240:4;15237:1;15230:15;15037:218;;14824:437;;;:::o;15266:289::-;15397:3;15435:6;15429:13;15451:66;15510:6;15505:3;15498:4;15490:6;15486:17;15451:66;:::i;:::-;15533:16;;;;;15266:289;-1:-1:-1;;15266:289:29:o;17482:545::-;17584:2;17579:3;17576:11;17573:448;;;17620:1;17645:5;17641:2;17634:17;17690:4;17686:2;17676:19;17760:2;17748:10;17744:19;17741:1;17737:27;17731:4;17727:38;17796:4;17784:10;17781:20;17778:47;;;-1:-1:-1;17819:4:29;17778:47;17874:2;17869:3;17865:12;17862:1;17858:20;17852:4;17848:31;17838:41;;17929:82;17947:2;17940:5;17937:13;17929:82;;;17992:17;;;17973:1;17962:13;17929:82;;18263:1325;18387:18;18382:3;18379:27;18376:53;;;18409:18;;:::i;:::-;18438:94;18528:3;18488:38;18520:4;18514:11;18488:38;:::i;:::-;18482:4;18438:94;:::i;:::-;18558:1;18583:2;18578:3;18575:11;18600:1;18595:735;;;;19374:1;19391:3;19388:93;;;-1:-1:-1;19447:19:29;;;19434:33;19388:93;18169:66;18160:1;18156:11;;;18152:84;18148:89;18138:100;18244:1;18240:11;;;18135:117;19494:78;;18568:1014;;18595:735;17429:1;17422:14;;;17466:4;17453:18;;18640:66;18631:76;;;18791:9;18813:229;18827:7;18824:1;18821:14;18813:229;;;18916:19;;;18903:33;18888:49;;19023:4;19008:20;;;;18976:1;18964:14;;;;18843:12;18813:229;;;18817:3;19070;19061:7;19058:16;19055:219;;;19190:66;19184:3;19178;19175:1;19171:11;19167:21;19163:94;19159:99;19146:9;19141:3;19137:19;19124:33;19120:139;19112:6;19105:155;19055:219;;;19317:1;19311:3;19308:1;19304:11;19300:19;19294:4;19287:33;18568:1014;;18263:1325;;;:::o;19593:326::-;19682:6;19677:3;19670:19;19734:6;19727:5;19720:4;19715:3;19711:14;19698:43;;19786:1;19779:4;19770:6;19765:3;19761:16;19757:27;19750:38;19652:3;19908:4;19838:66;19833:2;19825:6;19821:15;19817:88;19812:3;19808:98;19804:109;19797:116;;19593:326;;;;:::o;19924:318::-;20111:6;20100:9;20093:25;20154:2;20149;20138:9;20134:18;20127:30;20074:4;20174:62;20232:2;20221:9;20217:18;20209:6;20201;20174:62;:::i;:::-;20166:70;19924:318;-1:-1:-1;;;;;19924:318:29:o;20941:247::-;21100:2;21089:9;21082:21;21063:4;21120:62;21178:2;21167:9;21163:18;21155:6;21147;21120:62;:::i;21193:245::-;21260:6;21313:2;21301:9;21292:7;21288:23;21284:32;21281:52;;;21329:1;21326;21319:12;21281:52;21361:9;21355:16;21380:28;21402:5;21380:28;:::i;21443:184::-;21495:77;21492:1;21485:88;21592:4;21589:1;21582:15;21616:4;21613:1;21606:15;21632:388;21730:4;21788:11;21775:25;21878:66;21867:8;21851:14;21847:29;21843:102;21823:18;21819:127;21809:155;;21960:1;21957;21950:12;22025:208;22137:9;22174:53;22212:14;22205:5;22174:53;:::i;22238:1471::-;22364:3;22358:10;22391:18;22383:6;22380:30;22377:56;;;22413:18;;:::i;:::-;22442:97;22532:6;22492:38;22524:4;22518:11;22492:38;:::i;:::-;22486:4;22442:97;:::i;:::-;22594:4;;22658:2;22647:14;;22675:1;22670:782;;;;23496:1;23513:6;23510:89;;;-1:-1:-1;23565:19:29;;;23559:26;23510:89;18169:66;18160:1;18156:11;;;18152:84;18148:89;18138:100;18244:1;18240:11;;;18135:117;23612:81;;22640:1063;;22670:782;17429:1;17422:14;;;17466:4;17453:18;;22718:66;22706:79;;;22883:236;22897:7;22894:1;22891:14;22883:236;;;22986:19;;;22980:26;22965:42;;23078:27;;;;23046:1;23034:14;;;;22913:19;;22883:236;;;22887:3;23147:6;23138:7;23135:19;23132:261;;;23208:19;;;23202:26;23309:66;23291:1;23287:14;;;23303:3;23283:24;23279:97;23275:102;23260:118;23245:134;;23132:261;-1:-1:-1;;;;;23439:1:29;23423:14;;;23419:22;23406:36;;-1:-1:-1;22238:1471:29:o;23714:383::-;23911:2;23900:9;23893:21;23874:4;23937:45;23978:2;23967:9;23963:18;23955:6;23937:45;:::i;:::-;24030:9;24022:6;24018:22;24013:2;24002:9;23998:18;23991:50;24058:33;24084:6;24076;24058:33;:::i;24102:184::-;24154:77;24151:1;24144:88;24251:4;24248:1;24241:15;24275:4;24272:1;24265:15;24291:195;24330:3;24361:66;24354:5;24351:77;24348:103;;24431:18;;:::i;:::-;-1:-1:-1;24478:1:29;24467:13;;24291:195::o;25658:196::-;25697:3;25725:5;25715:39;;25734:18;;:::i;:::-;-1:-1:-1;25781:66:29;25770:78;;25658:196::o;27047:813::-;27304:2;27293:9;27286:21;27267:4;27326:42;27423:2;27414:6;27408:13;27404:22;27399:2;27388:9;27384:18;27377:50;27474:4;27466:6;27462:17;27456:24;27516:4;27511:2;27500:9;27496:18;27489:32;27544:52;27591:3;27580:9;27576:19;27562:12;27544:52;:::i;:::-;27530:66;;27652:2;27644:6;27640:15;27634:22;27627:4;27616:9;27612:20;27605:52;27722:2;27716;27708:6;27704:15;27698:22;27694:31;27688:3;27677:9;27673:19;27666:60;27776:9;27768:6;27764:22;27757:4;27746:9;27742:20;27735:52;27804:50;27847:6;27839;27831;27804:50;:::i;:::-;27796:58;27047:813;-1:-1:-1;;;;;;;27047:813:29:o;28566:1078::-;28742:3;28771:1;28804:6;28798:13;28834:36;28860:9;28834:36;:::i;:::-;28889:1;28906:18;;;28933:191;;;;29138:1;29133:356;;;;28899:590;;28933:191;28981:66;28970:9;28966:82;28961:3;28954:95;29104:6;29097:14;29090:22;29082:6;29078:35;29073:3;29069:45;29062:52;;28933:191;;29133:356;29164:6;29161:1;29154:17;29194:4;29239:2;29236:1;29226:16;29264:1;29278:165;29292:6;29289:1;29286:13;29278:165;;;29370:14;;29357:11;;;29350:35;29413:16;;;;29307:10;;29278:165;;;29282:3;;;29472:6;29467:3;29463:16;29456:23;;28899:590;;;;;29520:6;29514:13;29536:68;29595:8;29590:3;29583:4;29575:6;29571:17;29536:68;:::i;:::-;29620:18;;28566:1078;-1:-1:-1;;;;28566:1078:29:o;29649:271::-;29832:6;29824;29819:3;29806:33;29788:3;29858:16;;29883:13;;;29858:16;29649:271;-1:-1:-1;29649:271:29:o;30455:399::-;30664:2;30653:9;30646:21;30627:4;30684:62;30742:2;30731:9;30727:18;30719:6;30711;30684:62;:::i;:::-;30777:2;30762:18;;30755:34;;;;-1:-1:-1;30832:14:29;;30825:22;30820:2;30805:18;;;30798:50;30676:70;30455:399;-1:-1:-1;;30455:399:29:o;32249:209::-;32287:3;32315:18;32368:2;32361:5;32357:14;32395:2;32386:7;32383:15;32380:41;;32401:18;;:::i;:::-;32450:1;32437:15;;32249:209;-1:-1:-1;;;32249:209:29:o;33575:184::-;33645:6;33698:2;33686:9;33677:7;33673:23;33669:32;33666:52;;;33714:1;33711;33704:12;33666:52;-1:-1:-1;33737:16:29;;33575:184;-1:-1:-1;33575:184:29:o;34936:318::-;35123:2;35112:9;35105:21;35086:4;35143:62;35201:2;35190:9;35186:18;35178:6;35170;35143:62;:::i;:::-;35135:70;;35241:6;35236:2;35225:9;35221:18;35214:34;34936:318;;;;;;:::o;38296:512::-;38490:4;38519:42;38600:2;38592:6;38588:15;38577:9;38570:34;38652:2;38644:6;38640:15;38635:2;38624:9;38620:18;38613:43;;38692:6;38687:2;38676:9;38672:18;38665:34;38735:3;38730:2;38719:9;38715:18;38708:31;38756:46;38797:3;38786:9;38782:19;38774:6;38756:46;:::i;38813:249::-;38882:6;38935:2;38923:9;38914:7;38910:23;38906:32;38903:52;;;38951:1;38948;38941:12;38903:52;38983:9;38977:16;39002:30;39026:5;39002:30;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"4263400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowNode(string,bytes32,bool,string,address,bytes)":"infinite","allowedParentNodes(bytes32)":"2507","approve(address,uint256)":"infinite","available(string,bytes32)":"infinite","balanceOf(address)":"2644","baseTokenURIs(bytes32)":"infinite","batchSetGatedMetadatas(uint256,(string,string)[])":"infinite","batchSetMetadatas(uint256,(string,string)[])":"infinite","burn(uint256)":"infinite","burnCounts(uint256)":"2506","clearGatedMetadatas(uint256)":"34921","clearMetadatas(uint256)":"infinite","gatedMetadataVersions(uint256)":"2566","getApproved(uint256)":"4757","getGatedMetadata(uint256,string)":"infinite","getMetadata(uint256,string)":"infinite","getTokenId(string,bytes32)":"infinite","initialize(string,string,address)":"infinite","isApprovedForAll(address,address)":"infinite","metadataVersions(uint256)":"2564","middlewares(bytes32)":"2542","name()":"infinite","owner()":"2397","ownerOf(uint256)":"2583","parents(uint256)":"2506","pause()":"infinite","paused()":"2404","proxiableUUID()":"infinite","register(string,bytes32,address,bytes)":"infinite","renounceOwnership()":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26772","setBaseTokenURI(bytes32,string)":"infinite","setMiddleware(bytes32,address,bytes)":"infinite","supportsInterface(bytes4)":"502","symbol()":"infinite","tokenURI(uint256)":"infinite","totalSupply()":"2371","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28361","unpause()":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_isGatedMetadataAuthorised(uint256)":"infinite","_isMetadataAuthorised(uint256)":"infinite","_register(string calldata,bytes32,address)":"infinite"}},"methodIdentifiers":{"allowNode(string,bytes32,bool,string,address,bytes)":"d619cee5","allowedParentNodes(bytes32)":"16404d01","approve(address,uint256)":"095ea7b3","available(string,bytes32)":"2595eacb","balanceOf(address)":"70a08231","baseTokenURIs(bytes32)":"96977c1b","batchSetGatedMetadatas(uint256,(string,string)[])":"b33dab09","batchSetMetadatas(uint256,(string,string)[])":"26ec9ad8","burn(uint256)":"42966c68","burnCounts(uint256)":"a9735f94","clearGatedMetadatas(uint256)":"8e73361e","clearMetadatas(uint256)":"07b472c4","gatedMetadataVersions(uint256)":"0ae16e53","getApproved(uint256)":"081812fc","getGatedMetadata(uint256,string)":"0739d191","getMetadata(uint256,string)":"cb4799f2","getTokenId(string,bytes32)":"cad6b901","initialize(string,string,address)":"077f224a","isApprovedForAll(address,address)":"e985e9c5","metadataVersions(uint256)":"d9a9eb24","middlewares(bytes32)":"57ad9c90","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","parents(uint256)":"898572a6","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","register(string,bytes32,address,bytes)":"7c7efe6b","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseTokenURI(bytes32,string)":"1f0509e0","setMiddleware(bytes32,address,bytes)":"f97c6dae","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"BaseTokenURISet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnCount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"GatedMetadataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newVersion\",\"type\":\"uint64\"}],\"name\":\"GatedMetadataVersionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"MetadataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newVersion\",\"type\":\"uint64\"}],\"name\":\"MetadataVersionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"middleware\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"MiddlewareSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"NodeAllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"middleware\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"middlewareData\",\"type\":\"bytes\"}],\"name\":\"allowNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"allowedNode\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"allowedParentNodes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"baseTokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.MetadataPair[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"batchSetGatedMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.MetadataPair[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"batchSetMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"burnCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"clearGatedMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"clearMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gatedMetadataVersions\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getGatedMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"metadataVersions\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"middlewares\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"parents\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preData\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_middleware\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setMiddleware\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BaseTokenURISet(bytes32,string)\":{\"details\":\"Emit an event when a base token URI is set.\",\"params\":{\"node\":\"The node to set the base token URI for\",\"uri\":\"The base token URI\"}},\"Burn(uint256,uint256)\":{\"details\":\"Emit an event when a realmId is burned.\",\"params\":{\"burnCount\":\"The number of burning for the tokenId\",\"tokenId\":\"The tokenId of the realmId\"}},\"MiddlewareSet(bytes32,address,bytes)\":{\"details\":\"Emit an event when a middleware is set.\",\"params\":{\"data\":\"The data of the middleware\",\"middleware\":\"The middleware contract address\",\"node\":\"The node to set the middleware for\"}},\"NodeAllowanceChanged(bytes32,string,bytes32,bool)\":{\"details\":\"Emit an event when a node allowance changed.\",\"params\":{\"allowed\":\"The new state of allowance\",\"label\":\"The label of the node\",\"node\":\"The node\",\"parentNode\":\"The parent node of the node\"}},\"Register(string,bytes32,uint256,address)\":{\"details\":\"Emit an event when a realmId is registered. For example, when \\\"user.realm\\\" is registered, the name is \\\"user\\\" and the parent node is namehash(\\\"realm\\\").\",\"params\":{\"name\":\"The name of the realmId\",\"parentNode\":\"The parent node of the realmId\",\"to\":\"The address that owns the realmId\",\"tokenId\":\"The tokenId of the realmId\"}}},\"kind\":\"dev\",\"methods\":{\"allowNode(string,bytes32,bool,string,address,bytes)\":{\"details\":\"allowNode(\\\"moca\\\", bytes32(0)) to allow \\\".moca\\\"\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"available(string,bytes32)\":{\"params\":{\"_name\":\"The name to check\",\"parentNode\":\"The parent node of the realmId\"}},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchSetGatedMetadatas(uint256,(string,string)[])\":{\"params\":{\"pairs\":\"The kv pairs to set.\",\"tokenId\":\"The token to update.\"}},\"batchSetMetadatas(uint256,(string,string)[])\":{\"params\":{\"pairs\":\"The kv pairs to set.\",\"tokenId\":\"The token to update.\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The token id to burn.\"}},\"clearGatedMetadatas(uint256)\":{\"params\":{\"tokenId\":\"token to clear metadata.\"}},\"clearMetadatas(uint256)\":{\"params\":{\"tokenId\":\"token to clear metadata.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getGatedMetadata(uint256,string)\":{\"params\":{\"key\":\"The metadata key to query.\",\"tokenId\":\"The token to query.\"},\"returns\":{\"_0\":\"The associated metadata.\"}},\"getMetadata(uint256,string)\":{\"params\":{\"key\":\"The metadata key to query.\",\"tokenId\":\"The token to query.\"},\"returns\":{\"_0\":\"The associated metadata.\"}},\"getTokenId(string,bytes32)\":{\"returns\":{\"_0\":\"uint256 The token id.\"}},\"initialize(string,string,address)\":{\"params\":{\"_tokenName\":\"The ERC-721 name of the fname token\",\"_tokenSymbol\":\"The ERC-721 symbol of the fname token\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"register(string,bytes32,address,bytes)\":{\"params\":{\"_name\":\"The name to register\",\"parentNode\":\"The parent node of the realmId\",\"preData\":\"The register data for preprocess.\",\"to\":\"The address that will own the realmId\"},\"returns\":{\"_0\":\"uint256   Minted tokenId\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"The uint256 tokenId of the realmId\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"uint256 The total supply.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowNode(string,bytes32,bool,string,address,bytes)\":{\"notice\":\"allows node. E.g. '.moca', '.music'. So that users can register realmId like 'abc.moca', 'abc.music'.\"},\"allowedParentNodes(bytes32)\":{\"notice\":\"The allowed parent nodes of the realmId. e.g. namehash('moca'), namehash('music') https://eips.ethereum.org/EIPS/eip-137\"},\"available(string,bytes32)\":{\"notice\":\"Checks if a realmId is available for registration.\"},\"baseTokenURIs(bytes32)\":{\"notice\":\"Token URI prefix.\"},\"batchSetGatedMetadatas(uint256,(string,string)[])\":{\"notice\":\"Sets the gated metadatas associated with an token and keys.\"},\"batchSetMetadatas(uint256,(string,string)[])\":{\"notice\":\"Sets the metadatas associated with an token and keys. Only can be called by the owner or approved operators of that token.\"},\"burn(uint256)\":{\"notice\":\"Burns a token.\"},\"burnCounts(uint256)\":{\"notice\":\"The number of burning for a tokenId.\"},\"clearGatedMetadatas(uint256)\":{\"notice\":\"Clears all gated metadata on a token.\"},\"clearMetadatas(uint256)\":{\"notice\":\"Clears all metadata on a token.\"},\"getGatedMetadata(uint256,string)\":{\"notice\":\"Returns the gated metadata associated with an token and key.\"},\"getMetadata(uint256,string)\":{\"notice\":\"Returns the metadata associated with an token and key.\"},\"getTokenId(string,bytes32)\":{\"notice\":\"Gets token id of the gievn name and parent node.\"},\"initialize(string,string,address)\":{\"notice\":\"Initialize default storage values and inherited contracts. This should be called         once after the contract is deployed via the ERC1967 proxy.\"},\"middlewares(bytes32)\":{\"notice\":\"Middleware contract that processes before and after the registration.\"},\"parents(uint256)\":{\"notice\":\"The parent node of the tokenId.\"},\"pause()\":{\"notice\":\"Pauses all token transfers.\"},\"register(string,bytes32,address,bytes)\":{\"notice\":\"Mints a new realmId.\"},\"setBaseTokenURI(bytes32,string)\":{\"notice\":\"Sets the base token uri.\"},\"setMiddleware(bytes32,address,bytes)\":{\"notice\":\"Sets the middleware and data.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns a distinct URI for a tokenId\"},\"totalSupply()\":{\"notice\":\"Gets total number of tokens in existence, burned tokens will reduce the count.\"},\"unpause()\":{\"notice\":\"Unpauses all token transfers.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/realmIdContract/RealmId.sol\":\"RealmId\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721Upgradeable.sol\\\";\\nimport \\\"./IERC721ReceiverUpgradeable.sol\\\";\\nimport \\\"./extensions/IERC721MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\\n    using AddressUpgradeable for address;\\n    using StringsUpgradeable for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC721_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\\n        return\\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721Upgradeable.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721Upgradeable.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[44] private __gap;\\n}\\n\",\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Upgradeable.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/MathUpgradeable.sol\\\";\\nimport \\\"./math/SignedMathUpgradeable.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = MathUpgradeable.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMathUpgradeable.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary MathUpgradeable {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMathUpgradeable {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\"},\"contracts/MocaPoints/interface/IMiddleware.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"../realmIdContract/DataTypes.sol\\\";\\n\\ninterface IMiddleware {\\n    /**\\n     * @notice Sets data for middleware.\\n     *\\n     * @param data Extra data to set.\\n     */\\n    function setMwData(bytes calldata data) external;\\n\\n    /**\\n     * @notice Process that runs before the name creation happens.\\n     *\\n     * @param params The params for creating name.\\n     * @param data Extra data to process.\\n     */\\n    function preProcess(DataTypes.RegisterNameParams calldata params, bytes calldata data) external payable;\\n\\n    /**\\n     * @notice Validates the name pattern.\\n     *\\n     * @param name The name to validate.\\n     */\\n    function namePatternValid(string calldata name) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6a394cbf28fc4f380c64e69fce8a41633d0e160d2006f35112c55bcad7bca62b\",\"license\":\"GPL-3.0-or-later\"},\"contracts/MocaPoints/realmIdContract/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nlibrary DataTypes {\\n    struct EIP712Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 deadline;\\n    }\\n\\n    struct MetadataPair {\\n        string key;\\n        string value;\\n    }\\n\\n    struct RegisterNameParams {\\n        address msgSender;\\n        string name;\\n        bytes32 parentNode;\\n        address to;\\n    }\\n\\n    struct RegisterCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 durationYear;\\n    }\\n\\n    struct RenewCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        uint256 durationYear;\\n    }\\n\\n    struct BidCyberIdParams {\\n        address msgSender;\\n        string cid;\\n        address to;\\n        uint256 auctionStartTimestamp;\\n    }\\n}\\n\",\"keccak256\":\"0x4fdc1a70f1a279e7221180af577db51e638cc7e2d9ecd4a0300914dd61001606\",\"license\":\"GPL-3.0-or-later\"},\"contracts/MocaPoints/realmIdContract/LibString.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\n// adapted from 721A contracts\\nlibrary LibString {\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory ptr) {\\n        assembly {\\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\\n            // but we allocate 128 bytes to keep the free memory pointer 32-byte word aliged.\\n            // We will need 1 32-byte word to store the length,\\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 32 + 3 * 32 = 128.\\n            ptr := add(mload(0x40), 128)\\n            // Update the free memory pointer to allocate.\\n            mstore(0x40, ptr)\\n            // Cache the end of the memory to calculate the length later.\\n            let end := ptr\\n            // We write the string from the rightmost digit to the leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            // Costs a bit more than early returning for the zero case,\\n            // but cheaper in terms of deployment and overall runtime costs.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                let temp := value\\n                // Move the pointer 1 byte leftwards to point to an empty character slot.\\n                ptr := sub(ptr, 1)\\n                // Write the character to the pointer. 48 is the ASCII index of '0'.\\n                mstore8(ptr, add(48, mod(temp, 10)))\\n                temp := div(temp, 10)\\n            } temp {\\n                // Keep dividing `temp` until zero.\\n                temp := div(temp, 10)\\n            } {\\n                // Body of the for loop.\\n                ptr := sub(ptr, 1)\\n                mstore8(ptr, add(48, mod(temp, 10)))\\n            }\\n            let length := sub(end, ptr)\\n            // Move the pointer 32 bytes leftwards to make room for the length.\\n            ptr := sub(ptr, 32)\\n            // Store the length.\\n            mstore(ptr, length)\\n        }\\n    }\\n\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory str) {\\n        assembly {\\n            let start := mload(0x40)\\n            // We need length * 2 bytes for the digits, 2 bytes for the prefix,\\n            // and 32 bytes for the length. We add 32 to the total and round down\\n            // to a multiple of 32. (32 + 2 + 32) = 66.\\n            str := add(start, and(add(shl(1, length), 66), not(31)))\\n\\n            // Cache the end to calculate the length later.\\n            let end := str\\n\\n            // Allocate the memory.\\n            mstore(0x40, str)\\n\\n            let temp := value\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n                length := sub(length, 1)\\n            } length {\\n                length := sub(length, 1)\\n            } {\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            }\\n\\n            if temp {\\n                mstore(0x00, \\\"\\\\x08\\\\xc3\\\\x79\\\\xa0\\\") // Function selector of the error method.\\n                mstore(0x04, 0x20) // Offset of the error string.\\n                mstore(0x24, 23) // Length of the error string.\\n                mstore(0x44, \\\"HEX_LENGTH_INSUFFICIENT\\\") // The error string.\\n                revert(0x00, 0x64) // Revert with (offset, size).\\n            }\\n\\n            // Compute the string's length.\\n            let strLength := add(sub(end, str), 2)\\n            // Move the pointer and write the \\\"0x\\\" prefix.\\n            str := sub(str, 32)\\n            mstore(str, 0x3078)\\n            // Move the pointer and write the length.\\n            str := sub(str, 2)\\n            mstore(str, strLength)\\n        }\\n    }\\n\\n    function toHexString(uint256 value) internal pure returns (string memory str) {\\n        assembly {\\n            let start := mload(0x40)\\n            // We need 32 bytes for the length, 2 bytes for the prefix,\\n            // and 64 bytes for the digits.\\n            // The next multiple of 32 above (32 + 2 + 64) is 128.\\n            str := add(start, 128)\\n\\n            // Cache the end to calculate the length later.\\n            let end := str\\n\\n            // Allocate the memory.\\n            mstore(0x40, str)\\n\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                let temp := value\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            } temp {\\n                // prettier-ignore\\n            } {\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            }\\n\\n            // Compute the string's length.\\n            let strLength := add(sub(end, str), 2)\\n            // Move the pointer and write the \\\"0x\\\" prefix.\\n            str := sub(str, 32)\\n            mstore(str, 0x3078)\\n            // Move the pointer and write the length.\\n            str := sub(str, 2)\\n            mstore(str, strLength)\\n        }\\n    }\\n\\n    function toHexString(address value) internal pure returns (string memory str) {\\n        assembly {\\n            let start := mload(0x40)\\n            // We need 32 bytes for the length, 2 bytes for the prefix,\\n            // and 40 bytes for the digits.\\n            // The next multiple of 32 above (32 + 2 + 40) is 96.\\n            str := add(start, 96)\\n\\n            // Allocate the memory.\\n            mstore(0x40, str)\\n\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            for {\\n                // Initialize and perform the first pass without check.\\n                let length := 20\\n                let temp := value\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n                length := sub(length, 1)\\n            } length {\\n                length := sub(length, 1)\\n            } {\\n                str := sub(str, 2)\\n                mstore8(add(str, 1), byte(and(temp, 15), \\\"0123456789abcdef\\\"))\\n                mstore8(str, byte(and(shr(4, temp), 15), \\\"0123456789abcdef\\\"))\\n                temp := shr(8, temp)\\n            }\\n\\n            // Move the pointer and write the \\\"0x\\\" prefix.\\n            str := sub(str, 32)\\n            mstore(str, 0x3078)\\n            // Move the pointer and write the length.\\n            str := sub(str, 2)\\n            mstore(str, 42)\\n        }\\n    }\\n\\n    function toLower(string memory str) internal pure returns (string memory) {\\n        bytes memory bStr = bytes(str);\\n        bytes memory bLower = new bytes(bStr.length);\\n        for (uint256 i = 0; i < bStr.length; i++) {\\n            if ((bStr[i] >= \\\"A\\\") && (bStr[i] <= \\\"Z\\\")) {\\n                bLower[i] = bytes1(uint8(bStr[i]) + 32);\\n            } else {\\n                bLower[i] = bStr[i];\\n            }\\n        }\\n        return string(bLower);\\n    }\\n\\n    function toUpper(string memory str) internal pure returns (string memory) {\\n        bytes memory bStr = bytes(str);\\n        bytes memory bLower = new bytes(bStr.length);\\n        for (uint256 i = 0; i < bStr.length; i++) {\\n            if ((bStr[i] >= \\\"a\\\") && (bStr[i] <= \\\"z\\\")) {\\n                bLower[i] = bytes1(uint8(bStr[i]) - 32);\\n            } else {\\n                bLower[i] = bStr[i];\\n            }\\n        }\\n        return string(bLower);\\n    }\\n\\n    /**\\n     * @dev Returns the length of a given string\\n     *\\n     * @param s The string to measure the length of\\n     * @return The length of the input string\\n     */\\n    function strlen(string memory s) internal pure returns (uint) {\\n        uint len;\\n        uint i = 0;\\n        uint bytelength = bytes(s).length;\\n        for (len = 0; i < bytelength; len++) {\\n            bytes1 b = bytes(s)[i];\\n            if (b < 0x80) {\\n                i += 1;\\n            } else if (b < 0xE0) {\\n                i += 2;\\n            } else if (b < 0xF0) {\\n                i += 3;\\n            } else if (b < 0xF8) {\\n                i += 4;\\n            } else if (b < 0xFC) {\\n                i += 5;\\n            } else {\\n                i += 6;\\n            }\\n        }\\n        return len;\\n    }\\n\\n    function stringToUint256(string memory s) internal pure returns (uint256) {\\n        bytes memory b = bytes(s);\\n        uint256 result = 0;\\n        for (uint256 i = 0; i < b.length; i++) {\\n            uint256 c = uint256(uint8(b[i]));\\n            if (c >= 48 && c <= 57) {\\n                result = result * 10 + c - 48;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xf8aa99ac4cf28fa7cfbc6e6f67d8de9a337343fecf16c1fddb3f12ce896ef052\",\"license\":\"GPL-3.0-or-later\"},\"contracts/MocaPoints/realmIdContract/MetadataResolver.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\n\\nimport {DataTypes} from \\\"./DataTypes.sol\\\";\\nimport {Initializable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nabstract contract MetadataResolver is Initializable {\\n    /*//////////////////////////////////////////////////////////////\\n                            STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(uint64 => mapping(uint256 => mapping(string => string))) _metadatas;\\n    mapping(uint256 => uint64) public metadataVersions;\\n\\n    mapping(uint64 => mapping(uint256 => mapping(string => string))) _gatedMetadatas;\\n    mapping(uint256 => uint64) public gatedMetadataVersions;\\n\\n    /**\\n     * @dev Added to allow future versions to add new variables in case this contract becomes\\n     *      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[40] private __gap;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                 CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    // constructor() {\\n    //     _disableInitializers();\\n    // }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event MetadataVersionChanged(uint256 indexed tokenId, uint64 newVersion);\\n\\n    event MetadataChanged(uint256 indexed tokenId, string key, string value);\\n\\n    event GatedMetadataVersionChanged(uint256 indexed tokenId, uint64 newVersion);\\n\\n    event GatedMetadataChanged(uint256 indexed tokenId, string key, string value);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            MODIFIER\\n    //////////////////////////////////////////////////////////////*/\\n\\n    modifier authorised(uint256 tokenId) {\\n        require(_isMetadataAuthorised(tokenId), \\\"METADATA_UNAUTHORISED\\\");\\n        _;\\n    }\\n\\n    modifier gatedAuthorised(uint256 tokenId) {\\n        require(_isGatedMetadataAuthorised(tokenId), \\\"GATED_METADATA_UNAUTHORISED\\\");\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EXTERNAL\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice  Clears all metadata on a token.\\n     * @param   tokenId  token to clear metadata.\\n     */\\n    function clearMetadatas(uint256 tokenId) external virtual authorised(tokenId) {\\n        _clearMetadatas(tokenId);\\n    }\\n\\n    /**\\n     * @notice  Clears all gated metadata on a token.\\n     * @param   tokenId  token to clear metadata.\\n     */\\n    function clearGatedMetadatas(uint256 tokenId) external virtual gatedAuthorised(tokenId) {\\n        _clearGatedMetadatas(tokenId);\\n    }\\n\\n    /**\\n     * @notice Sets the metadatas associated with an token and keys.\\n     * Only can be called by the owner or approved operators of that token.\\n     * @param tokenId The token to update.\\n     * @param pairs The kv pairs to set.\\n     */\\n    function batchSetMetadatas(uint256 tokenId, DataTypes.MetadataPair[] calldata pairs) external authorised(tokenId) {\\n        for (uint256 i = 0; i < pairs.length; i++) {\\n            DataTypes.MetadataPair memory pair = pairs[i];\\n            _metadatas[metadataVersions[tokenId]][tokenId][pair.key] = pair.value;\\n            emit MetadataChanged(tokenId, pair.key, pair.value);\\n        }\\n    }\\n\\n    /**\\n     * @notice Sets the gated metadatas associated with an token and keys.\\n     * @param tokenId The token to update.\\n     * @param pairs The kv pairs to set.\\n     */\\n    function batchSetGatedMetadatas(uint256 tokenId, DataTypes.MetadataPair[] memory pairs) public gatedAuthorised(tokenId) {\\n        for (uint256 i = 0; i < pairs.length; i++) {\\n            DataTypes.MetadataPair memory pair = pairs[i];\\n            _gatedMetadatas[gatedMetadataVersions[tokenId]][tokenId][pair.key] = pair.value;\\n            emit GatedMetadataChanged(tokenId, pair.key, pair.value);\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns the metadata associated with an token and key.\\n     * @param tokenId The token to query.\\n     * @param key The metadata key to query.\\n     * @return The associated metadata.\\n     */\\n    function getMetadata(uint256 tokenId, string calldata key) external view returns (string memory) {\\n        return _metadatas[metadataVersions[tokenId]][tokenId][key];\\n    }\\n\\n    /**\\n     * @notice Returns the gated metadata associated with an token and key.\\n     * @param tokenId The token to query.\\n     * @param key The metadata key to query.\\n     * @return The associated metadata.\\n     */\\n    function getGatedMetadata(uint256 tokenId, string memory key) public view returns (string memory) {\\n        return _gatedMetadatas[gatedMetadataVersions[tokenId]][tokenId][key];\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            INTERNAL\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _isMetadataAuthorised(uint256 tokenId) internal view virtual returns (bool);\\n\\n    function _isGatedMetadataAuthorised(uint256 tokenId) internal view virtual returns (bool);\\n\\n    function _clearMetadatas(uint256 tokenId) internal virtual {\\n        metadataVersions[tokenId]++;\\n        emit MetadataVersionChanged(tokenId, metadataVersions[tokenId]);\\n    }\\n\\n    function _clearGatedMetadatas(uint256 tokenId) internal virtual {\\n        gatedMetadataVersions[tokenId]++;\\n        emit GatedMetadataVersionChanged(tokenId, gatedMetadataVersions[tokenId]);\\n    }\\n}\\n\",\"keccak256\":\"0xc9d22c61560e96940a0855767a45d76877bd7f2e36cfd3b5bdc101559821c67c\",\"license\":\"GPL-3.0-or-later\"},\"contracts/MocaPoints/realmIdContract/RealmId.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ERC721Upgradeable} from \\\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\\\";\\nimport {PausableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport {OwnableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport {Initializable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport {UUPSUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\nimport {IMiddleware} from \\\"../interface/IMiddleware.sol\\\";\\nimport {LibString} from \\\"./LibString.sol\\\";\\nimport {DataTypes} from \\\"./DataTypes.sol\\\";\\nimport {MetadataResolver} from \\\"./MetadataResolver.sol\\\";\\n\\ncontract RealmId is Initializable, ERC721Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable, MetadataResolver {\\n    using LibString for *;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Token URI prefix.\\n     */\\n    mapping(bytes32 => string) public baseTokenURIs;\\n\\n    /**\\n     * @notice Middleware contract that processes before and after the registration.\\n     */\\n    mapping(bytes32 => address) public middlewares;\\n\\n    /**\\n     * @notice The allowed parent nodes of the realmId.\\n     * e.g. namehash('moca'), namehash('music')\\n     * https://eips.ethereum.org/EIPS/eip-137\\n     */\\n    mapping(bytes32 => bool) public allowedParentNodes;\\n\\n    /**\\n     * @notice The parent node of the tokenId.\\n     */\\n    mapping(uint256 => bytes32) public parents;\\n\\n    /**\\n     * @notice The number of realmIds minted.\\n     */\\n    uint256 internal _mintCount;\\n\\n    /**\\n     * @notice The number of burning for a tokenId.\\n     */\\n    mapping(uint256 => uint256) public burnCounts;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @dev Emit an event when a realmId is registered.\\n     * For example, when \\\"user.realm\\\" is registered, the name is \\\"user\\\" and the parent node is namehash(\\\"realm\\\").\\n     *\\n     * @param name         The name of the realmId\\n     * @param parentNode   The parent node of the realmId\\n     * @param tokenId      The tokenId of the realmId\\n     * @param to           The address that owns the realmId\\n     */\\n    event Register(string name, bytes32 parentNode, uint256 indexed tokenId, address indexed to);\\n\\n    /**\\n     * @dev Emit an event when a realmId is burned.\\n     *\\n     * @param tokenId The tokenId of the realmId\\n     * @param burnCount The number of burning for the tokenId\\n     */\\n    event Burn(uint256 indexed tokenId, uint256 burnCount);\\n\\n    /**\\n     * @dev Emit an event when a middleware is set.\\n     *\\n     * @param node       The node to set the middleware for\\n     * @param middleware The middleware contract address\\n     * @param data       The data of the middleware\\n     */\\n    event MiddlewareSet(bytes32 node, address indexed middleware, bytes data);\\n\\n    /**\\n     * @dev Emit an event when a base token URI is set.\\n     *\\n     * @param node The node to set the base token URI for\\n     * @param uri The base token URI\\n     */\\n    event BaseTokenURISet(bytes32 node, string uri);\\n\\n    /**\\n     * @dev Emit an event when a node allowance changed.\\n     *\\n     * @param node       The node\\n     * @param label      The label of the node\\n     * @param parentNode The parent node of the node\\n     * @param allowed    The new state of allowance\\n     */\\n    event NodeAllowanceChanged(bytes32 indexed node, string label, bytes32 parentNode, bool allowed);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        CONSTRUCTORS AND INITIALIZERS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Disable initialization to protect the contract\\n     */\\n    // constructor() {\\n    //     _disableInitializers();\\n    // }\\n\\n    /**\\n     * @notice Initialize default storage values and inherited contracts. This should be called\\n     *         once after the contract is deployed via the ERC1967 proxy.\\n     *\\n     * @param _tokenName   The ERC-721 name of the fname token\\n     * @param _tokenSymbol The ERC-721 symbol of the fname token\\n     */\\n    function initialize(string calldata _tokenName, string calldata _tokenSymbol, address _owner) external initializer {\\n        /* Initialize inherited contracts */\\n        __ERC721_init(_tokenName, _tokenSymbol);\\n        __UUPSUpgradeable_init();\\n        __Ownable_init();\\n        __Pausable_init();\\n        _pause();\\n        _transferOwnership(_owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            REGISTRATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Checks if a realmId is available for registration.\\n     *\\n     * @param _name       The name to check\\n     * @param parentNode The parent node of the realmId\\n     */\\n    function available(string calldata _name, bytes32 parentNode) public view returns (bool) {\\n        require(allowedParentNodes[parentNode], \\\"NODE_NOT_ALLOWED\\\");\\n        uint256 tokenId = getTokenId(_name, parentNode);\\n        if (!_exists(tokenId)) {\\n            address middleware = middlewares[parentNode];\\n            if (middleware != address(0)) {\\n                return IMiddleware(middleware).namePatternValid(_name);\\n            } else {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @notice Mints a new realmId.\\n     *\\n     * @param _name       The name to register\\n     * @param parentNode The parent node of the realmId\\n     * @param to         The address that will own the realmId\\n     * @param preData    The register data for preprocess.\\n     * @return uint256   Minted tokenId\\n     */\\n    function register(string calldata _name, bytes32 parentNode, address to, bytes calldata preData) external returns (uint256) {\\n        address middleware = middlewares[parentNode];\\n        if (middleware != address(0)) {\\n            DataTypes.RegisterNameParams memory params = DataTypes.RegisterNameParams(msg.sender, _name, parentNode, to);\\n            IMiddleware(middleware).preProcess(params, preData);\\n        }\\n        return _register(_name, parentNode, to);\\n    }\\n\\n    /**\\n     * @notice Burns a token.\\n     *\\n     * @param tokenId The token id to burn.\\n     */\\n    function burn(uint256 tokenId) external {\\n        require(_isApprovedOrOwner(msg.sender, tokenId), \\\"UNAUTHORIZED\\\");\\n        _clearMetadatas(tokenId);\\n        _clearGatedMetadatas(tokenId);\\n        delete parents[tokenId];\\n        super._burn(tokenId);\\n        --_mintCount;\\n        emit Burn(tokenId, ++burnCounts[tokenId]);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ERC-721 OVERRIDES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /// @inheritdoc ERC721Upgradeable\\n    function transferFrom(address from, address to, uint256 tokenId) public override {\\n        require(!paused(), \\\"TRANSFER_NOT_ALLOWED\\\");\\n        super.transferFrom(from, to, tokenId);\\n    }\\n\\n    /// @inheritdoc ERC721Upgradeable\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public override {\\n        require(!paused(), \\\"TRANSFER_NOT_ALLOWED\\\");\\n        super.safeTransferFrom(from, to, tokenId);\\n    }\\n\\n    /// @inheritdoc ERC721Upgradeable\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public override {\\n        require(!paused(), \\\"TRANSFER_NOT_ALLOWED\\\");\\n        super.safeTransferFrom(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @notice Returns a distinct URI for a tokenId\\n     *\\n     * @param tokenId The uint256 tokenId of the realmId\\n     */\\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\\n        require(_exists(tokenId), \\\"INVALID_TOKEN_ID\\\");\\n        return string(abi.encodePacked(baseTokenURIs[parents[tokenId]], tokenId.toString()));\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EXTERNAL VIEW\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Gets token id of the gievn name and parent node.\\n     *\\n     * @return uint256 The token id.\\n     */\\n    function getTokenId(string calldata _name, bytes32 parentNode) public pure returns (uint256) {\\n        bytes32 nodehash = keccak256(abi.encodePacked(parentNode, keccak256(bytes(_name))));\\n        return uint256(nodehash);\\n    }\\n\\n    /**\\n     * @notice Gets total number of tokens in existence, burned tokens will reduce the count.\\n     *\\n     * @return uint256 The total supply.\\n     */\\n    function totalSupply() external view virtual returns (uint256) {\\n        return _mintCount;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNER ONLY\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Sets the base token uri.\\n     */\\n    function setBaseTokenURI(bytes32 node, string calldata uri) public onlyOwner {\\n        baseTokenURIs[node] = uri;\\n        emit BaseTokenURISet(node, uri);\\n    }\\n\\n    /**\\n     * @notice Sets the middleware and data.\\n     */\\n    function setMiddleware(bytes32 node, address _middleware, bytes calldata data) public onlyOwner {\\n        middlewares[node] = _middleware;\\n        if (_middleware != address(0)) {\\n            IMiddleware(_middleware).setMwData(data);\\n        }\\n        emit MiddlewareSet(node, _middleware, data);\\n    }\\n\\n    /**\\n     * @notice Pauses all token transfers.\\n     */\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @notice Unpauses all token transfers.\\n     */\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @notice allows node. E.g. '.moca', '.music'.\\n     * So that users can register realmId like 'abc.moca', 'abc.music'.\\n     * @dev allowNode(\\\"moca\\\", bytes32(0)) to allow \\\".moca\\\"\\n     */\\n    function allowNode(\\n        string calldata label,\\n        bytes32 parentNode,\\n        bool allow,\\n        string calldata baseTokenURI,\\n        address middleware,\\n        bytes calldata middlewareData\\n    ) external onlyOwner returns (bytes32 allowedNode) {\\n        allowedNode = keccak256(abi.encodePacked(parentNode, keccak256(bytes(label))));\\n        allowedParentNodes[allowedNode] = allow;\\n        emit NodeAllowanceChanged(allowedNode, label, parentNode, allow);\\n        setBaseTokenURI(allowedNode, baseTokenURI);\\n        setMiddleware(allowedNode, middleware, middlewareData);\\n        return allowedNode;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             INTERNAL LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _authorizeUpgrade(address) internal view override {\\n        require(owner() == msg.sender, \\\"NOT_OWNER\\\");\\n    }\\n\\n    function _register(string calldata _name, bytes32 parentNode, address to) internal returns (uint256) {\\n        require(available(_name, parentNode), \\\"NAME_NOT_AVAILABLE\\\");\\n        uint256 tokenId = getTokenId(_name, parentNode);\\n        super._safeMint(to, tokenId);\\n        ++_mintCount;\\n        parents[tokenId] = parentNode;\\n        emit Register(_name, parentNode, tokenId, to);\\n        return tokenId;\\n    }\\n\\n    function _isMetadataAuthorised(uint256 tokenId) internal view override returns (bool) {\\n        return super._isApprovedOrOwner(msg.sender, tokenId);\\n    }\\n\\n    function _isGatedMetadataAuthorised(uint256 tokenId) internal view override returns (bool) {\\n        require(_exists(tokenId), \\\"TOKEN_NOT_MINTED\\\");\\n        return owner() == msg.sender;\\n    }\\n}\\n\",\"keccak256\":\"0xcec6721d79eb15bd06fd971a8345bdda6c5c9903d81b1292e7748969d464d8e4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":912,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":915,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2821,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":3204,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1366,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_name","offset":0,"slot":"101","type":"t_string_storage"},{"astId":1368,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_symbol","offset":0,"slot":"102","type":"t_string_storage"},{"astId":1372,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_owners","offset":0,"slot":"103","type":"t_mapping(t_uint256,t_address)"},{"astId":1376,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_balances","offset":0,"slot":"104","type":"t_mapping(t_address,t_uint256)"},{"astId":1380,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_tokenApprovals","offset":0,"slot":"105","type":"t_mapping(t_uint256,t_address)"},{"astId":1386,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_operatorApprovals","offset":0,"slot":"106","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2288,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"107","type":"t_array(t_uint256)44_storage"},{"astId":419,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":539,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":894,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"201","type":"t_array(t_uint256)50_storage"},{"astId":1209,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":1231,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_paused","offset":0,"slot":"301","type":"t_bool"},{"astId":1336,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"302","type":"t_array(t_uint256)49_storage"},{"astId":5710,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_metadatas","offset":0,"slot":"351","type":"t_mapping(t_uint64,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage)))"},{"astId":5714,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"metadataVersions","offset":0,"slot":"352","type":"t_mapping(t_uint256,t_uint64)"},{"astId":5722,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_gatedMetadatas","offset":0,"slot":"353","type":"t_mapping(t_uint64,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage)))"},{"astId":5726,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"gatedMetadataVersions","offset":0,"slot":"354","type":"t_mapping(t_uint256,t_uint64)"},{"astId":5731,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"__gap","offset":0,"slot":"355","type":"t_array(t_uint256)40_storage"},{"astId":6061,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"baseTokenURIs","offset":0,"slot":"395","type":"t_mapping(t_bytes32,t_string_storage)"},{"astId":6066,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"middlewares","offset":0,"slot":"396","type":"t_mapping(t_bytes32,t_address)"},{"astId":6071,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"allowedParentNodes","offset":0,"slot":"397","type":"t_mapping(t_bytes32,t_bool)"},{"astId":6076,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"parents","offset":0,"slot":"398","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":6079,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"_mintCount","offset":0,"slot":"399","type":"t_uint256"},{"astId":6084,"contract":"contracts/MocaPoints/realmIdContract/RealmId.sol:RealmId","label":"burnCounts","offset":0,"slot":"400","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)40_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[40]","numberOfBytes":"1280"},"t_array(t_uint256)44_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[44]","numberOfBytes":"1408"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_string_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_string_memory_ptr,t_string_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(string => string))","numberOfBytes":"32","value":"t_mapping(t_string_memory_ptr,t_string_storage)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_uint64)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_uint64,t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage)))":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => mapping(uint256 => mapping(string => string)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_string_storage))"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"allowNode(string,bytes32,bool,string,address,bytes)":{"notice":"allows node. E.g. '.moca', '.music'. So that users can register realmId like 'abc.moca', 'abc.music'."},"allowedParentNodes(bytes32)":{"notice":"The allowed parent nodes of the realmId. e.g. namehash('moca'), namehash('music') https://eips.ethereum.org/EIPS/eip-137"},"available(string,bytes32)":{"notice":"Checks if a realmId is available for registration."},"baseTokenURIs(bytes32)":{"notice":"Token URI prefix."},"batchSetGatedMetadatas(uint256,(string,string)[])":{"notice":"Sets the gated metadatas associated with an token and keys."},"batchSetMetadatas(uint256,(string,string)[])":{"notice":"Sets the metadatas associated with an token and keys. Only can be called by the owner or approved operators of that token."},"burn(uint256)":{"notice":"Burns a token."},"burnCounts(uint256)":{"notice":"The number of burning for a tokenId."},"clearGatedMetadatas(uint256)":{"notice":"Clears all gated metadata on a token."},"clearMetadatas(uint256)":{"notice":"Clears all metadata on a token."},"getGatedMetadata(uint256,string)":{"notice":"Returns the gated metadata associated with an token and key."},"getMetadata(uint256,string)":{"notice":"Returns the metadata associated with an token and key."},"getTokenId(string,bytes32)":{"notice":"Gets token id of the gievn name and parent node."},"initialize(string,string,address)":{"notice":"Initialize default storage values and inherited contracts. This should be called         once after the contract is deployed via the ERC1967 proxy."},"middlewares(bytes32)":{"notice":"Middleware contract that processes before and after the registration."},"parents(uint256)":{"notice":"The parent node of the tokenId."},"pause()":{"notice":"Pauses all token transfers."},"register(string,bytes32,address,bytes)":{"notice":"Mints a new realmId."},"setBaseTokenURI(bytes32,string)":{"notice":"Sets the base token uri."},"setMiddleware(bytes32,address,bytes)":{"notice":"Sets the middleware and data."},"tokenURI(uint256)":{"notice":"Returns a distinct URI for a tokenId"},"totalSupply()":{"notice":"Gets total number of tokens in existence, burned tokens will reduce the count."},"unpause()":{"notice":"Unpauses all token transfers."}},"version":1}}}}}}