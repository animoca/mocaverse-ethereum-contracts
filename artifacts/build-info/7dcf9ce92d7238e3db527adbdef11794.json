{"id":"7dcf9ce92d7238e3db527adbdef11794","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/MocaPoints/interface/IRealmId.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\ninterface IRealmId {\n    function burnCounts(uint256 realmId) external view returns (uint256);\n\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\n\n    function ownerOf(uint256 realmId) external view returns (address);\n}\n"},"contracts/MocaPoints/MocaPoints.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {IRealmId} from \"./interface/IRealmId.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract MocaPoints is Ownable, AccessControl {\n    // Roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\"DEPOSITOR_ROLE\");\n\n    // Seasonal variables\n    bytes32 public currentSeason;\n    mapping(bytes32 => bool) public seasons;\n\n    // Address of the RealmId contract\n    IRealmId public realmIdContract;\n\n    // Admin Address\n    address public adminAddress;\n\n    // Balances mapping\n    mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256))) private balances; // season => realmId => realmIdVersion => balance\n\n    // Nonce mapping\n    mapping(uint256 => uint256) public nonces; // realmId => nonce\n\n    // Allowed consume reason codes mapping\n    mapping(bytes32 => bool) private allowedConsumeReasonCodes;\n\n    event SetCurrentSeason(bytes32 season);\n    event BatchAddedConsumeReasonCode(bytes32[] reasonCodes);\n    event BatchRemovedConsumeReasonCode(bytes32[] reasonCodes);\n    event Deposited(\n        address indexed sender,\n        bytes32 indexed season,\n        bytes32 indexed reasonCode,\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount\n    );\n\n    event Consumed(\n        uint256 indexed realmId,\n        bytes32 indexed season,\n        bytes32 indexed reasonCode,\n        address operator,\n        uint256 nonce,\n        uint256 realmIdVersion,\n        uint256 amount,\n        address realmIdOwner\n    );\n\n    constructor(address _realmIdContract, address _adminAddress) {\n        require(address(_realmIdContract) != address(0), \"Not a valid Contract Address\");\n        require(address(_adminAddress) != address(0), \"Not a valid Admin Address\");\n\n        _setupRole(ADMIN_ROLE, _adminAddress);\n        realmIdContract = IRealmId(_realmIdContract);\n    }\n\n    modifier onlyAdmin() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\");\n        _;\n    }\n\n    modifier onlyDepositor() {\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \"Not a depositor\");\n        _;\n    }\n\n    function setCurrentSeason(bytes32 _season) external onlyAdmin {\n        require(!seasons[_season], \"Season already set\");\n        currentSeason = _season;\n        seasons[_season] = true;\n        emit SetCurrentSeason(_season);\n    }\n\n    // Function to get the realmIdVersion from the RealmId contract\n    function _getRealmIdVersion(uint256 realmId) internal view returns (uint256) {\n        return realmIdContract.burnCounts(realmId);\n    }\n\n    function isReasonCodeAllowed(bytes32 reasonCode) external view returns (bool) {\n        return allowedConsumeReasonCodes[reasonCode];\n    }\n\n    function _prepareRealmId(bytes32 parentNode, string memory _name) internal view returns (uint256) {\n        return realmIdContract.getTokenId(_name, parentNode);\n    }\n\n    // Function to get the owner of a realmId from the RealmId contract\n    function owner(uint256 realmId) internal view returns (address) {\n        address _owner = realmIdContract.ownerOf(realmId);\n        return _owner;\n    }\n\n    function batchAddConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\n        // Check if each reason code is unique and does not already exist\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\n            require(!allowedConsumeReasonCodes[_reasonCodes[i]], \"Reason code already exists\");\n            allowedConsumeReasonCodes[_reasonCodes[i]] = true;\n        }\n\n        // Emit the event to indicate that all reason codes were added\n        emit BatchAddedConsumeReasonCode(_reasonCodes);\n    }\n\n    function batchRemoveConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\n        // Check if each reason code exists and can be removed\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\n            // require(\n            //     allowedConsumeReasonCodes[_reasonCodes[i]],\n            //     \"Reason code does not exist\"\n            // );\n            delete allowedConsumeReasonCodes[_reasonCodes[i]];\n        }\n\n        // Emit the event to indicate that all reason codes were removed\n        emit BatchRemovedConsumeReasonCode(_reasonCodes);\n    }\n\n    function _deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) internal {\n        // Perform the deposit operation\n        balances[season][realmId][realmIdVersion] += amount;\n\n        // Emit the Deposit event\n        emit Deposited(msg.sender, season, depositReasonCode, realmId, realmIdVersion, amount);\n    }\n\n    function deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) external onlyDepositor {\n        // Check if the sender has the Depositor role\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \"Not a depositor\");\n\n        // Call the internal _deposit function to perform the deposit operation\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\n    }\n\n    function deposit(\n        bytes32 season,\n        bytes32 parentNode,\n        string memory name,\n        uint256 realmIdVersion,\n        uint256 amount,\n        bytes32 depositReasonCode\n    ) external onlyDepositor {\n        // Create the realmId using parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, name);\n\n        // Call the internal _deposit function to perform the deposit operation\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\n    }\n\n    function _getSigner(\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount,\n        uint256 nonce,\n        bytes32 consumeReasonCode,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal view returns (address) {\n        bytes32 messageHash = _preparePayload(realmId, realmIdVersion, amount, nonce, consumeReasonCode);\n        return ecrecover(messageHash, v, r, s);\n    }\n\n    function _consumeWithSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) internal {\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n        address signer = _getSigner(realmId, realmIdVersion, amount, nonces[realmId], consumeReasonCode, v, r, s);\n        address owner_ = owner(realmId);\n        require(signer == owner_, \"Signer not owner of realmId\");\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, owner_);\n    }\n\n    function _consume(uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 consumeReasonCode, address owner_) internal {\n        // Check if the sender has enough balance\n        require(balances[currentSeason][realmId][realmIdVersion] >= amount, \"Insufficient balance\");\n\n        // Check if the consumeReasonCode exists and is true in the mapping\n        require(allowedConsumeReasonCodes[consumeReasonCode], \"Invalid consume reason code\");\n\n        // Perform the consume operation\n        balances[currentSeason][realmId][realmIdVersion] -= amount;\n\n        // Emit the Consumed event\n        emit Consumed(realmId, currentSeason, consumeReasonCode, msg.sender, nonces[realmId], realmIdVersion, amount, owner_);\n        // Increment the nonce for the realmId\n        nonces[realmId]++;\n    }\n\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) external {\n        // get the realmId using parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\n    }\n\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) external {\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\n    }\n\n    function _consumeWithoutSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) internal {\n        address owner_ = owner(realmId);\n        require(msg.sender == owner_, \"Signer not owner of realmId\");\n\n        // Call the common _consume function for the core consume operation\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, msg.sender);\n    }\n\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode) external {\n        // Compute the realmId using the provided parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\n    }\n\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) external {\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\n    }\n\n    function balanceOf(bytes32 season, uint256 realmId) external view returns (uint256) {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        return balances[season][realmId][realmIdVersion];\n    }\n\n    function balanceOf(bytes32 season, bytes32 parentNode, string memory _name) external view returns (uint256) {\n        // Compute the realmId using the provided parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        // Retrieve and return the balance for the calculated realmId\n        return balances[season][realmId][realmIdVersion];\n    }\n\n    function balanceOf(uint256 realmId) external view returns (uint256) {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        // Retrieve and return the balance for the given realmId at the current season\n        return balances[currentSeason][realmId][realmIdVersion];\n    }\n\n    function balanceOf(bytes32 parentNode, string memory _name) external view returns (uint256) {\n        // Compute the realmId using the provided parentNode and name\n        uint256 realmId = _prepareRealmId(parentNode, _name);\n\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        // Retrieve and return the balance for the given realmId at the current season\n        return balances[currentSeason][realmId][realmIdVersion];\n    }\n\n    // Return the payload which is generated using the arguments, current season and the realmIdversion\n    function _preparePayload(\n        uint256 realmId,\n        uint256 realmIdVersion,\n        uint256 amount,\n        uint256 nonce,\n        bytes32 reasonCode\n    ) internal view returns (bytes32) {\n        bytes32 payload = keccak256(abi.encodePacked(realmId, realmIdVersion, amount, currentSeason, reasonCode, nonce));\n        return payload;\n    }\n\n    // Return the payload which is generated using the arguments, current nonce, current season, and the realmId version\n    function preparePayload(uint256 realmId, uint256 amount, bytes32 reasonCode) external view returns (bytes32) {\n        // get realmIdVersion from the realmId contract\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\n\n        return (_preparePayload(realmId, realmIdVersion, amount, nonces[realmId], reasonCode));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":99999},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[523],"ERC165":[722],"IAccessControl":[388],"IERC165":[734],"Math":[1599],"Strings":[698]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":524,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":699,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":723,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1841:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":523,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1850:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1866:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":722,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,722,734,388,523],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":315,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":315,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["1996:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[721],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2750:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2771:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":721,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":315,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3017:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":315,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":315,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3791:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3801:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3830:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$698_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3997:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":697,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3989:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4043:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"4088:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$698_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":677,"src":"4088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4088:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3900:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3844:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":315,"src":"3718:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4461:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4478:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4491:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4478:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4471:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4203:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4387:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4434:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4408:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4400:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4452:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4451:9:0"},"scope":315,"src":"4378:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"4906:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4927:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4933:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4916:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4916:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4513:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4886:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4877:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4877:8:0"},"nodeType":"ModifierInvocation","src":"4877:28:0"}],"name":"grantRole","nameLocation":"4812:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4868:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4830:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4822:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4822:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4844:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4836:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4821:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4906:0:0"},"scope":315,"src":"4803:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5332:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5354:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5360:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5342:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5342:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4954:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5325:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5312:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5303:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5303:8:0"},"nodeType":"ModifierInvocation","src":"5303:28:0"}],"name":"revokeRole","nameLocation":"5237:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5294:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5256:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5270:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5262:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5332:0:0"},"scope":315,"src":"5228:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"5989:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6018:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6018:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5999:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"5999:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6093:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6093:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6093:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5381:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5921:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"5980:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"5942:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5934:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"5956:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5933:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5989:0:0"},"scope":315,"src":"5912:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"6879:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6900:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6906:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6889:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6889:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"6889:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6132:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6820:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6839:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6853:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6845:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6830:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6879:0:0"},"scope":315,"src":"6811:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7119:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7137:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7129:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7129:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7170:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7157:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7129:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7185:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7192:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7198:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7185:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7210:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7185:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7185:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7251:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7257:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7276:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7234:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7229:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6927:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7055:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7077:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7069:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7091:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7083:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7119:0:0"},"scope":315,"src":"7046:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7529:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7543:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7558:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7539:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7568:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7582:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7589:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7582:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7595:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7582:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7582:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7614:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7582:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7582:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7649:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7655:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7664:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7664:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7637:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7637:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7632:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7299:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7470:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7489:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7503:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7495:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7495:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7480:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7529:0:0"},"scope":315,"src":"7461:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"7934:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7962:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7948:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7948:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"7944:149:0","trueBody":{"id":311,"nodeType":"Block","src":"7972:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7986:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7993:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7986:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7999:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7986:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8018:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7986:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"7986:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8054:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"8069:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8042:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8042:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8037:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7700:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7874:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"7894:4:0","nodeType":"VariableDeclaration","scope":314,"src":"7886:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"7908:7:0","nodeType":"VariableDeclaration","scope":314,"src":"7900:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"7934:0:0"},"scope":315,"src":"7865:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1806:6295:0","usedErrors":[]}],"src":"108:7994:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[523],"Ownable":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":502,"sourceUnit":524,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nameLocations":["683:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":523,"src":"683:7:2"},"id":394,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501,523],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":396,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":501,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":402,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":402,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":402,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":411,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":412,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":501,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":418,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":420,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":426,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":501,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":501,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":457,"implemented":true,"kind":"function","modifiers":[{"id":447,"kind":"modifierInvocation","modifierName":{"id":446,"name":"onlyOwner","nameLocations":["1875:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":501,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":479,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":476,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":480,"implemented":true,"kind":"function","modifiers":[{"id":463,"kind":"modifierInvocation","modifierName":{"id":462,"name":"onlyOwner","nameLocations":["2141:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":480,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":501,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":499,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"id":488,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":493,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":495,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":500,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":501,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":502,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[523]},"id":524,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":523,"linearizedBaseContracts":[523],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":512,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":509,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:3","memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":508,"id":511,"nodeType":"Return","src":"712:17:3"}]},"id":513,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":513,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":523,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:3","memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":517,"id":520,"nodeType":"Return","src":"819:15:3"}]},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":523,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":524,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1599],"Strings":[698]},"id":699,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":525,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":699,"sourceUnit":1600,"src":"126:25:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"153:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":698,"linearizedBaseContracts":[698],"name":"Strings","nameLocation":"196:7:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":530,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:4","nodeType":"VariableDeclaration","scope":698,"src":"210:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":528,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":533,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:4","nodeType":"VariableDeclaration","scope":698,"src":"270:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":531,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":580,"nodeType":"Block","src":"486:625:4","statements":[{"id":579,"nodeType":"UncheckedBlock","src":"496:609:4","statements":[{"assignments":[542],"declarations":[{"constant":false,"id":542,"mutability":"mutable","name":"length","nameLocation":"528:6:4","nodeType":"VariableDeclaration","scope":579,"src":"520:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":549,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"548:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":543,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"537:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1599_$","typeString":"type(library Math)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1436,"src":"537:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:4"},{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"buffer","nameLocation":"586:6:4","nodeType":"VariableDeclaration","scope":579,"src":"572:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[{"id":554,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"606:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":552,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:4"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"ptr","nameLocation":"635:3:4","nodeType":"VariableDeclaration","scope":579,"src":"627:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":559,"nodeType":"VariableDeclarationStatement","src":"627:11:4"},{"AST":{"nodeType":"YulBlock","src":"708:67:4","statements":[{"nodeType":"YulAssignment","src":"726:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:4"},"nodeType":"YulFunctionCall","src":"745:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:4"},"nodeType":"YulFunctionCall","src":"733:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":551,"isOffset":false,"isSlot":false,"src":"737:6:4","valueSize":1},{"declaration":542,"isOffset":false,"isSlot":false,"src":"753:6:4","valueSize":1},{"declaration":558,"isOffset":false,"isSlot":false,"src":"726:3:4","valueSize":1}],"id":560,"nodeType":"InlineAssembly","src":"699:76:4"},{"body":{"id":575,"nodeType":"Block","src":"801:267:4","statements":[{"expression":{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:4","subExpression":{"id":562,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"819:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":564,"nodeType":"ExpressionStatement","src":"819:5:4"},{"AST":{"nodeType":"YulBlock","src":"902:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:4"},"nodeType":"YulFunctionCall","src":"942:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:4"},"nodeType":"YulFunctionCall","src":"937:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:4"},"nodeType":"YulFunctionCall","src":"924:44:4"},"nodeType":"YulExpressionStatement","src":"924:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":530,"isOffset":false,"isSlot":false,"src":"958:8:4","valueSize":1},{"declaration":558,"isOffset":false,"isSlot":false,"src":"932:3:4","valueSize":1},{"declaration":536,"isOffset":false,"isSlot":false,"src":"946:5:4","valueSize":1}],"id":565,"nodeType":"InlineAssembly","src":"893:93:4"},{"expression":{"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"1003:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":569,"nodeType":"ExpressionStatement","src":"1003:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"1036:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":574,"nodeType":"IfStatement","src":"1032:21:4","trueBody":{"id":573,"nodeType":"Break","src":"1048:5:4"}}]},"condition":{"hexValue":"74727565","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":576,"nodeType":"WhileStatement","src":"788:280:4"},{"expression":{"id":577,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"1088:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":540,"id":578,"nodeType":"Return","src":"1081:13:4"}]}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"320:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:4","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"441:5:4","nodeType":"VariableDeclaration","scope":581,"src":"433:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:4"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":581,"src":"471:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":538,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:4"},"scope":698,"src":"415:696:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"1290:100:4","statements":[{"id":599,"nodeType":"UncheckedBlock","src":"1300:84:4","statements":[{"expression":{"arguments":[{"id":590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"1343:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"1362:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":591,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1350:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1599_$","typeString":"type(library Math)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1559,"src":"1350:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":589,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[601,677,697],"referencedDeclaration":677,"src":"1331:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":588,"id":598,"nodeType":"Return","src":"1324:49:4"}]}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"1117:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:4","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"value","nameLocation":"1245:5:4","nodeType":"VariableDeclaration","scope":601,"src":"1237:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"1275:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":586,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:4"},"scope":698,"src":"1216:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"1603:347:4","statements":[{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:4","nodeType":"VariableDeclaration","scope":676,"src":"1613:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":611,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":616,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"1649:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":613,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:4"},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":622,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1670:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":624,"indexExpression":{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":627,"nodeType":"ExpressionStatement","src":"1670:15:4"},{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":628,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1695:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":630,"indexExpression":{"hexValue":"31","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":633,"nodeType":"ExpressionStatement","src":"1695:15:4"},{"body":{"id":662,"nodeType":"Block","src":"1765:83:4","statements":[{"expression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":648,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1779:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":650,"indexExpression":{"id":649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1786:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":651,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1791:8:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":655,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"1800:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":657,"nodeType":"ExpressionStatement","src":"1779:33:4"},{"expression":{"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"1826:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":661,"nodeType":"ExpressionStatement","src":"1826:11:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1753:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"initializationExpression":{"assignments":[635],"declarations":[{"constant":false,"id":635,"mutability":"mutable","name":"i","nameLocation":"1733:1:4","nodeType":"VariableDeclaration","scope":663,"src":"1725:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":641,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":637,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"1741:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:4"},"loopExpression":{"expression":{"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:4","subExpression":{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1762:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":647,"nodeType":"ExpressionStatement","src":"1760:3:4"},"nodeType":"ForStatement","src":"1720:128:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"1865:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"1857:55:4"},{"expression":{"arguments":[{"id":673,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"1936:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":671,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:4","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":610,"id":675,"nodeType":"Return","src":"1922:21:4"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"1396:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:4","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"1542:5:4","nodeType":"VariableDeclaration","scope":677,"src":"1534:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"length","nameLocation":"1557:6:4","nodeType":"VariableDeclaration","scope":677,"src":"1549:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:4"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":677,"src":"1588:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":608,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:4"},"scope":698,"src":"1513:437:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"2175:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":690,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"2220:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":688,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:4","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:4","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":693,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2228:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":685,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[601,677,697],"referencedDeclaration":677,"src":"2192:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":684,"id":695,"nodeType":"Return","src":"2185:59:4"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"1956:141:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"addr","nameLocation":"2131:4:4","nodeType":"VariableDeclaration","scope":697,"src":"2123:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":697,"src":"2160:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":682,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:4"},"scope":698,"src":"2102:149:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":699,"src":"188:2065:4","usedErrors":[]}],"src":"101:2153:4"},"id":4},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[722],"IERC165":[734]},"id":723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":700,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":723,"sourceUnit":735,"src":"124:23:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":703,"name":"IERC165","nameLocations":["754:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":734,"src":"754:7:5"},"id":704,"nodeType":"InheritanceSpecifier","src":"754:7:5"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"149:576:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":722,"linearizedBaseContracts":[722,734],"name":"ERC165","nameLocation":"744:6:5","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[733],"body":{"id":720,"nodeType":"Block","src":"920:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"937:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":715,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"957:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$734_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$734_$","typeString":"type(contract IERC165)"}],"id":714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$734","typeString":"type(contract IERC165)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":712,"id":719,"nodeType":"Return","src":"930:47:5"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"768:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":721,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:5","nodeType":"FunctionDefinition","overrides":{"id":709,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:5"},"parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:5","nodeType":"VariableDeclaration","scope":721,"src":"856:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":706,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:5"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"914:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":710,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:5"},"scope":722,"src":"829:155:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":723,"src":"726:260:5","usedErrors":[]}],"src":"99:888:5"},"id":5},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[734]},"id":735,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":724,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"125:279:6","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":734,"linearizedBaseContracts":[734],"name":"IERC165","nameLocation":"415:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"429:340:6","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":733,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:6","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:6","nodeType":"VariableDeclaration","scope":733,"src":"801:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":727,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:6"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":733,"src":"844:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":730,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:6"},"scope":734,"src":"774:76:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":735,"src":"405:447:6","usedErrors":[]}],"src":"100:753:6"},"id":6},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1599]},"id":1600,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":736,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"128:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1599,"linearizedBaseContracts":[1599],"name":"Math","nameLocation":"210:4:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":741,"members":[{"id":738,"name":"Down","nameLocation":"245:4:7","nodeType":"EnumValue","src":"245:4:7"},{"id":739,"name":"Up","nameLocation":"287:2:7","nodeType":"EnumValue","src":"287:2:7"},{"id":740,"name":"Zero","nameLocation":"318:4:7","nodeType":"EnumValue","src":"318:4:7"}],"name":"Rounding","nameLocation":"226:8:7","nodeType":"EnumDefinition","src":"221:122:7"},{"body":{"id":758,"nodeType":"Block","src":"480:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":752,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"501:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"509:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:7","trueExpression":{"id":754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"505:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":750,"id":757,"nodeType":"Return","src":"490:20:7"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"349:59:7","text":" @dev Returns the largest of two numbers."},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:7","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"a","nameLocation":"434:1:7","nodeType":"VariableDeclaration","scope":759,"src":"426:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"b","nameLocation":"445:1:7","nodeType":"VariableDeclaration","scope":759,"src":"437:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:7"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"471:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:7"},"scope":1599,"src":"413:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"655:37:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":769,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"672:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":770,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"676:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"684:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:7","trueExpression":{"id":772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"680:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":768,"id":775,"nodeType":"Return","src":"665:20:7"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"523:60:7","text":" @dev Returns the smallest of two numbers."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:7","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"a","nameLocation":"609:1:7","nodeType":"VariableDeclaration","scope":777,"src":"601:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"b","nameLocation":"620:1:7","nodeType":"VariableDeclaration","scope":777,"src":"612:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:7"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"646:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:7"},"scope":1599,"src":"588:104:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"876:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"931:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"935:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"941:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"945:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":786,"id":798,"nodeType":"Return","src":"923:28:7"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"698:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:7","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"a","nameLocation":"830:1:7","nodeType":"VariableDeclaration","scope":800,"src":"822:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"b","nameLocation":"841:1:7","nodeType":"VariableDeclaration","scope":800,"src":"833:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:7"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"867:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:7"},"scope":1599,"src":"805:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"1228:123:7","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1316:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1330:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":818,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"1339:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:7","trueExpression":{"hexValue":"30","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":809,"id":823,"nodeType":"Return","src":"1309:35:7"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"964:188:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:7","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"a","nameLocation":"1182:1:7","nodeType":"VariableDeclaration","scope":825,"src":"1174:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"b","nameLocation":"1193:1:7","nodeType":"VariableDeclaration","scope":825,"src":"1185:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:7"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"1219:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:7"},"scope":1599,"src":"1157:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"1795:3797:7","statements":[{"id":945,"nodeType":"UncheckedBlock","src":"1805:3781:7","statements":[{"assignments":[838],"declarations":[{"constant":false,"id":838,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:7","nodeType":"VariableDeclaration","scope":945,"src":"2126:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":839,"nodeType":"VariableDeclarationStatement","src":"2126:13:7"},{"assignments":[841],"declarations":[{"constant":false,"id":841,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:7","nodeType":"VariableDeclaration","scope":945,"src":"2198:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":842,"nodeType":"VariableDeclarationStatement","src":"2198:13:7"},{"AST":{"nodeType":"YulBlock","src":"2278:157:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:7"},"nodeType":"YulFunctionCall","src":"2319:6:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:7"},"nodeType":"YulFunctionCall","src":"2306:20:7"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:7","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:7"},"nodeType":"YulFunctionCall","src":"2352:9:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:7"}]},{"nodeType":"YulAssignment","src":"2378:43:7","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:7"},"nodeType":"YulFunctionCall","src":"2391:14:7"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:7"},"nodeType":"YulFunctionCall","src":"2407:13:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:7"},"nodeType":"YulFunctionCall","src":"2387:34:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":838,"isOffset":false,"isSlot":false,"src":"2343:5:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"2399:5:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"2414:5:7","valueSize":1},{"declaration":841,"isOffset":false,"isSlot":false,"src":"2378:5:7","valueSize":1},{"declaration":828,"isOffset":false,"isSlot":false,"src":"2313:1:7","valueSize":1},{"declaration":828,"isOffset":false,"isSlot":false,"src":"2356:1:7","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"2316:1:7","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"2359:1:7","valueSize":1}],"id":843,"nodeType":"InlineAssembly","src":"2269:166:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2516:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":852,"nodeType":"IfStatement","src":"2512:75:7","trueBody":{"id":851,"nodeType":"Block","src":"2528:59:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":847,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2553:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":848,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2561:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":850,"nodeType":"Return","src":"2546:26:7"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":854,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2697:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":855,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2711:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"2689:28:7"},{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:7","nodeType":"VariableDeclaration","scope":945,"src":"2973:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":861,"nodeType":"VariableDeclarationStatement","src":"2973:17:7"},{"AST":{"nodeType":"YulBlock","src":"3013:291:7","statements":[{"nodeType":"YulAssignment","src":"3082:38:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:7"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:7"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:7"},"nodeType":"YulFunctionCall","src":"3095:25:7"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:7"}]},{"nodeType":"YulAssignment","src":"3202:41:7","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:7"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:7"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:7"},"nodeType":"YulFunctionCall","src":"3222:20:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:7"},"nodeType":"YulFunctionCall","src":"3211:32:7"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:7"}]},{"nodeType":"YulAssignment","src":"3260:30:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:7"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:7"},"nodeType":"YulFunctionCall","src":"3269:21:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":832,"isOffset":false,"isSlot":false,"src":"3108:11:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"3236:5:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"3260:5:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"3273:5:7","valueSize":1},{"declaration":841,"isOffset":false,"isSlot":false,"src":"3202:5:7","valueSize":1},{"declaration":841,"isOffset":false,"isSlot":false,"src":"3215:5:7","valueSize":1},{"declaration":860,"isOffset":false,"isSlot":false,"src":"3082:9:7","valueSize":1},{"declaration":860,"isOffset":false,"isSlot":false,"src":"3225:9:7","valueSize":1},{"declaration":860,"isOffset":false,"isSlot":false,"src":"3280:9:7","valueSize":1},{"declaration":828,"isOffset":false,"isSlot":false,"src":"3102:1:7","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"3105:1:7","valueSize":1}],"id":862,"nodeType":"InlineAssembly","src":"3004:300:7"},{"assignments":[864],"declarations":[{"constant":false,"id":864,"mutability":"mutable","name":"twos","nameLocation":"3619:4:7","nodeType":"VariableDeclaration","scope":945,"src":"3611:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":872,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":865,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3626:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:7","subExpression":{"id":866,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3642:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:7"},{"AST":{"nodeType":"YulBlock","src":"3681:362:7","statements":[{"nodeType":"YulAssignment","src":"3746:37:7","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:7"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:7"},"nodeType":"YulFunctionCall","src":"3761:22:7"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:7"}]},{"nodeType":"YulAssignment","src":"3850:25:7","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:7"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:7"},"nodeType":"YulFunctionCall","src":"3859:16:7"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:7"}]},{"nodeType":"YulAssignment","src":"3990:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:7","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:7"},"nodeType":"YulFunctionCall","src":"4006:12:7"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:7"},"nodeType":"YulFunctionCall","src":"4002:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:7"},"nodeType":"YulFunctionCall","src":"3998:31:7"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":832,"isOffset":false,"isSlot":false,"src":"3746:11:7","valueSize":1},{"declaration":832,"isOffset":false,"isSlot":false,"src":"3765:11:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"3850:5:7","valueSize":1},{"declaration":838,"isOffset":false,"isSlot":false,"src":"3863:5:7","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"3778:4:7","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"3870:4:7","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"3990:4:7","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"4013:4:7","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"4020:4:7","valueSize":1}],"id":873,"nodeType":"InlineAssembly","src":"3672:371:7"},{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":874,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4109:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":875,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"4118:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":876,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"4126:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"4109:21:7"},{"assignments":[881],"declarations":[{"constant":false,"id":881,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:7","nodeType":"VariableDeclaration","scope":945,"src":"4448:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":888,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":883,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4471:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:7"},{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":889,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4704:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4719:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":892,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4733:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":896,"nodeType":"ExpressionStatement","src":"4704:36:7"},{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":897,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4773:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4788:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":900,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":904,"nodeType":"ExpressionStatement","src":"4773:36:7"},{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":905,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4843:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4858:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":908,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4872:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"4843:36:7"},{"expression":{"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":913,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":915,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4928:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":916,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":920,"nodeType":"ExpressionStatement","src":"4913:36:7"},{"expression":{"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4983:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":923,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4998:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":924,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"5012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":928,"nodeType":"ExpressionStatement","src":"4983:36:7"},{"expression":{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":929,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"5054:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5069:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":932,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"5083:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":936,"nodeType":"ExpressionStatement","src":"5054:36:7"},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"5524:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"5533:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":939,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"5541:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":942,"nodeType":"ExpressionStatement","src":"5524:24:7"},{"expression":{"id":943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"5569:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":944,"nodeType":"Return","src":"5562:13:7"}]}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"1357:305:7","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:7","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"x","nameLocation":"1700:1:7","nodeType":"VariableDeclaration","scope":947,"src":"1692:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"y","nameLocation":"1719:1:7","nodeType":"VariableDeclaration","scope":947,"src":"1711:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:7","nodeType":"VariableDeclaration","scope":947,"src":"1730:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:7"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"result","nameLocation":"1787:6:7","nodeType":"VariableDeclaration","scope":947,"src":"1779:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:7"},"scope":1599,"src":"1667:3925:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"5872:189:7","statements":[{"assignments":[963],"declarations":[{"constant":false,"id":963,"mutability":"mutable","name":"result","nameLocation":"5890:6:7","nodeType":"VariableDeclaration","scope":990,"src":"5882:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[{"id":965,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5906:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":966,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"5909:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"5912:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":964,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[947,991],"referencedDeclaration":947,"src":"5899:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"5938:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":971,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5950:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$741_$","typeString":"type(enum Math.Rounding)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":739,"src":"5950:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"src":"5938:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":975,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5972:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":976,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"5975:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":977,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"5978:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":974,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":987,"nodeType":"IfStatement","src":"5934:98:7","trueBody":{"id":986,"nodeType":"Block","src":"5996:36:7","statements":[{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6010:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":985,"nodeType":"ExpressionStatement","src":"6010:11:7"}]}},{"expression":{"id":988,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6048:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":961,"id":989,"nodeType":"Return","src":"6041:13:7"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"5598:121:7","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:7","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"x","nameLocation":"5757:1:7","nodeType":"VariableDeclaration","scope":991,"src":"5749:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"y","nameLocation":"5776:1:7","nodeType":"VariableDeclaration","scope":991,"src":"5768:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:7","nodeType":"VariableDeclaration","scope":991,"src":"5787:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:7","nodeType":"VariableDeclaration","scope":991,"src":"5816:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"typeName":{"id":956,"nodeType":"UserDefinedTypeName","pathNode":{"id":955,"name":"Rounding","nameLocations":["5816:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"5816:8:7"},"referencedDeclaration":741,"src":"5816:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:7"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"5863:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:7"},"scope":1599,"src":"5724:337:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"6337:1585:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"6351:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"6347:45:7","trueBody":{"id":1004,"nodeType":"Block","src":"6359:33:7","statements":[{"expression":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":998,"id":1003,"nodeType":"Return","src":"6373:8:7"}]}},{"assignments":[1007],"declarations":[{"constant":false,"id":1007,"mutability":"mutable","name":"result","nameLocation":"7079:6:7","nodeType":"VariableDeclaration","scope":1102,"src":"7071:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1016,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7099:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1009,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1271,1307],"referencedDeclaration":1271,"src":"7094:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:7"},{"id":1101,"nodeType":"UncheckedBlock","src":"7508:408:7","statements":[{"expression":{"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7532:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7542:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7551:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7555:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1027,"nodeType":"ExpressionStatement","src":"7532:35:7"},{"expression":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7581:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7591:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7600:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7604:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1038,"nodeType":"ExpressionStatement","src":"7581:35:7"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7630:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7640:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7649:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7653:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"nodeType":"ExpressionStatement","src":"7630:35:7"},{"expression":{"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7679:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7689:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7698:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7702:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1060,"nodeType":"ExpressionStatement","src":"7679:35:7"},{"expression":{"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7728:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7738:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7747:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7751:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1071,"nodeType":"ExpressionStatement","src":"7728:35:7"},{"expression":{"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7777:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7787:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7796:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7800:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ExpressionStatement","src":"7777:35:7"},{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7826:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7836:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7845:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7849:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1093,"nodeType":"ExpressionStatement","src":"7826:35:7"},{"expression":{"arguments":[{"id":1095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7886:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"7894:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"7898:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1094,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7882:3:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":998,"id":1100,"nodeType":"Return","src":"7875:30:7"}]}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"6067:208:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:7","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"a","nameLocation":"6302:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"6294:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:7"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"6328:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:7"},"scope":1599,"src":"6280:1642:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"8098:161:7","statements":[{"id":1137,"nodeType":"UncheckedBlock","src":"8108:145:7","statements":[{"assignments":[1115],"declarations":[{"constant":false,"id":1115,"mutability":"mutable","name":"result","nameLocation":"8140:6:7","nodeType":"VariableDeclaration","scope":1137,"src":"8132:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1119,"initialValue":{"arguments":[{"id":1117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8154:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1103,1139],"referencedDeclaration":1103,"src":"8149:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"8177:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"8187:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1122,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8199:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$741_$","typeString":"type(enum Math.Rounding)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":739,"src":"8199:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"src":"8187:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"8214:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"8223:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"8232:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:7","trueExpression":{"hexValue":"31","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1113,"id":1136,"nodeType":"Return","src":"8170:72:7"}]}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"7928:89:7","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:7","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"a","nameLocation":"8044:1:7","nodeType":"VariableDeclaration","scope":1139,"src":"8036:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:7","nodeType":"VariableDeclaration","scope":1139,"src":"8047:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"typeName":{"id":1108,"nodeType":"UserDefinedTypeName","pathNode":{"id":1107,"name":"Rounding","nameLocations":["8047:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"8047:8:7"},"referencedDeclaration":741,"src":"8047:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:7"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"8089:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:7"},"scope":1599,"src":"8022:237:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1270,"nodeType":"Block","src":"8444:922:7","statements":[{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"result","nameLocation":"8462:6:7","nodeType":"VariableDeclaration","scope":1270,"src":"8454:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1150,"initialValue":{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:7"},{"id":1267,"nodeType":"UncheckedBlock","src":"8482:855:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8510:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1165,"nodeType":"IfStatement","src":"8506:99:7","trueBody":{"id":1164,"nodeType":"Block","src":"8528:77:7","statements":[{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8546:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1159,"nodeType":"ExpressionStatement","src":"8546:13:7"},{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8577:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1163,"nodeType":"ExpressionStatement","src":"8577:13:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8622:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"8618:96:7","trueBody":{"id":1179,"nodeType":"Block","src":"8639:75:7","statements":[{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8657:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"nodeType":"ExpressionStatement","src":"8657:12:7"},{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8687:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1178,"nodeType":"ExpressionStatement","src":"8687:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8731:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"8727:96:7","trueBody":{"id":1194,"nodeType":"Block","src":"8748:75:7","statements":[{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8766:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1189,"nodeType":"ExpressionStatement","src":"8766:12:7"},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8796:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1193,"nodeType":"ExpressionStatement","src":"8796:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8840:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1210,"nodeType":"IfStatement","src":"8836:96:7","trueBody":{"id":1209,"nodeType":"Block","src":"8857:75:7","statements":[{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8875:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"8875:12:7"},{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"8905:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"8905:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8949:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1225,"nodeType":"IfStatement","src":"8945:93:7","trueBody":{"id":1224,"nodeType":"Block","src":"8965:73:7","statements":[{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8983:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"8983:11:7"},{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9012:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ExpressionStatement","src":"9012:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9055:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1240,"nodeType":"IfStatement","src":"9051:93:7","trueBody":{"id":1239,"nodeType":"Block","src":"9071:73:7","statements":[{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9089:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"9089:11:7"},{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9118:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"nodeType":"ExpressionStatement","src":"9118:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9161:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"9157:93:7","trueBody":{"id":1254,"nodeType":"Block","src":"9177:73:7","statements":[{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9195:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"9195:11:7"},{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9224:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"9224:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9267:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1266,"nodeType":"IfStatement","src":"9263:64:7","trueBody":{"id":1265,"nodeType":"Block","src":"9283:44:7","statements":[{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9301:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"9301:11:7"}]}}]},{"expression":{"id":1268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9353:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1146,"id":1269,"nodeType":"Return","src":"9346:13:7"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"8265:113:7","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:7","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"value","nameLocation":"8405:5:7","nodeType":"VariableDeclaration","scope":1271,"src":"8397:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:7"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"8435:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:7"},"scope":1599,"src":"8383:983:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"9599:165:7","statements":[{"id":1305,"nodeType":"UncheckedBlock","src":"9609:149:7","statements":[{"assignments":[1283],"declarations":[{"constant":false,"id":1283,"mutability":"mutable","name":"result","nameLocation":"9641:6:7","nodeType":"VariableDeclaration","scope":1305,"src":"9633:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1287,"initialValue":{"arguments":[{"id":1285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"9655:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1284,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1271,1307],"referencedDeclaration":1271,"src":"9650:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9682:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1289,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"9692:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1290,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"9704:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$741_$","typeString":"type(enum Math.Rounding)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":739,"src":"9704:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"src":"9692:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9724:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"9733:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:7","trueExpression":{"hexValue":"31","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1281,"id":1304,"nodeType":"Return","src":"9675:72:7"}]}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"9372:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:7","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"value","nameLocation":"9541:5:7","nodeType":"VariableDeclaration","scope":1307,"src":"9533:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:7","nodeType":"VariableDeclaration","scope":1307,"src":"9548:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"typeName":{"id":1276,"nodeType":"UserDefinedTypeName","pathNode":{"id":1275,"name":"Rounding","nameLocations":["9548:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"9548:8:7"},"referencedDeclaration":741,"src":"9548:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:7"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"9590:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:7"},"scope":1599,"src":"9519:245:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1435,"nodeType":"Block","src":"9951:828:7","statements":[{"assignments":[1316],"declarations":[{"constant":false,"id":1316,"mutability":"mutable","name":"result","nameLocation":"9969:6:7","nodeType":"VariableDeclaration","scope":1435,"src":"9961:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1318,"initialValue":{"hexValue":"30","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:7"},{"id":1432,"nodeType":"UncheckedBlock","src":"9989:761:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10017:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"nodeType":"IfStatement","src":"10013:99:7","trueBody":{"id":1334,"nodeType":"Block","src":"10034:78:7","statements":[{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10052:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ExpressionStatement","src":"10052:15:7"},{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10085:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"10085:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10129:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1352,"nodeType":"IfStatement","src":"10125:99:7","trueBody":{"id":1351,"nodeType":"Block","src":"10146:78:7","statements":[{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10164:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ExpressionStatement","src":"10164:15:7"},{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10197:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"nodeType":"ExpressionStatement","src":"10197:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10241:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1369,"nodeType":"IfStatement","src":"10237:99:7","trueBody":{"id":1368,"nodeType":"Block","src":"10258:78:7","statements":[{"expression":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10276:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ExpressionStatement","src":"10276:15:7"},{"expression":{"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10309:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1367,"nodeType":"ExpressionStatement","src":"10309:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10353:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1386,"nodeType":"IfStatement","src":"10349:96:7","trueBody":{"id":1385,"nodeType":"Block","src":"10369:76:7","statements":[{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"10387:14:7"},{"expression":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10419:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ExpressionStatement","src":"10419:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10462:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1403,"nodeType":"IfStatement","src":"10458:96:7","trueBody":{"id":1402,"nodeType":"Block","src":"10478:76:7","statements":[{"expression":{"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1397,"nodeType":"ExpressionStatement","src":"10496:14:7"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10528:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"10528:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10571:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"10567:96:7","trueBody":{"id":1419,"nodeType":"Block","src":"10587:76:7","statements":[{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10605:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"nodeType":"ExpressionStatement","src":"10605:14:7"},{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10637:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1418,"nodeType":"ExpressionStatement","src":"10637:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"10680:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"10676:64:7","trueBody":{"id":1430,"nodeType":"Block","src":"10696:44:7","statements":[{"expression":{"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10714:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1429,"nodeType":"ExpressionStatement","src":"10714:11:7"}]}}]},{"expression":{"id":1433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"10766:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1314,"id":1434,"nodeType":"Return","src":"10759:13:7"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"9770:114:7","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1436,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:7","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"value","nameLocation":"9912:5:7","nodeType":"VariableDeclaration","scope":1436,"src":"9904:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:7"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1436,"src":"9942:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:7"},"scope":1599,"src":"9889:890:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"11014:165:7","statements":[{"id":1470,"nodeType":"UncheckedBlock","src":"11024:149:7","statements":[{"assignments":[1448],"declarations":[{"constant":false,"id":1448,"mutability":"mutable","name":"result","nameLocation":"11056:6:7","nodeType":"VariableDeclaration","scope":1470,"src":"11048:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"arguments":[{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"11071:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1449,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1436,1472],"referencedDeclaration":1436,"src":"11065:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"11098:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1454,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"11108:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1455,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"11120:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$741_$","typeString":"type(enum Math.Rounding)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":739,"src":"11120:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"src":"11108:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"11139:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"11148:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:7","trueExpression":{"hexValue":"31","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1446,"id":1469,"nodeType":"Return","src":"11091:71:7"}]}]},"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"10785:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:7","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"value","nameLocation":"10956:5:7","nodeType":"VariableDeclaration","scope":1472,"src":"10948:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:7","nodeType":"VariableDeclaration","scope":1472,"src":"10963:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"typeName":{"id":1441,"nodeType":"UserDefinedTypeName","pathNode":{"id":1440,"name":"Rounding","nameLocations":["10963:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"10963:8:7"},"referencedDeclaration":741,"src":"10963:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:7"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"11005:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:7"},"scope":1599,"src":"10933:246:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1558,"nodeType":"Block","src":"11493:600:7","statements":[{"assignments":[1481],"declarations":[{"constant":false,"id":1481,"mutability":"mutable","name":"result","nameLocation":"11511:6:7","nodeType":"VariableDeclaration","scope":1558,"src":"11503:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"initialValue":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:7"},{"id":1555,"nodeType":"UncheckedBlock","src":"11531:533:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11559:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1498,"nodeType":"IfStatement","src":"11555:98:7","trueBody":{"id":1497,"nodeType":"Block","src":"11577:76:7","statements":[{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11595:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"11595:13:7"},{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11626:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1496,"nodeType":"ExpressionStatement","src":"11626:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11670:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"11666:95:7","trueBody":{"id":1512,"nodeType":"Block","src":"11687:74:7","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11705:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"11705:12:7"},{"expression":{"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11735:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"nodeType":"ExpressionStatement","src":"11735:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11778:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1528,"nodeType":"IfStatement","src":"11774:95:7","trueBody":{"id":1527,"nodeType":"Block","src":"11795:74:7","statements":[{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11813:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"11813:12:7"},{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11843:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1526,"nodeType":"ExpressionStatement","src":"11843:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11886:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1543,"nodeType":"IfStatement","src":"11882:95:7","trueBody":{"id":1542,"nodeType":"Block","src":"11903:74:7","statements":[{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11921:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"nodeType":"ExpressionStatement","src":"11921:12:7"},{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11951:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"11951:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11994:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1554,"nodeType":"IfStatement","src":"11990:64:7","trueBody":{"id":1553,"nodeType":"Block","src":"12010:44:7","statements":[{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"12028:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1552,"nodeType":"ExpressionStatement","src":"12028:11:7"}]}}]},{"expression":{"id":1556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"12080:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1479,"id":1557,"nodeType":"Return","src":"12073:13:7"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"11185:240:7","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1559,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:7","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"value","nameLocation":"11454:5:7","nodeType":"VariableDeclaration","scope":1559,"src":"11446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:7"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1559,"src":"11484:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:7"},"scope":1599,"src":"11430:663:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1597,"nodeType":"Block","src":"12329:173:7","statements":[{"id":1596,"nodeType":"UncheckedBlock","src":"12339:157:7","statements":[{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"result","nameLocation":"12371:6:7","nodeType":"VariableDeclaration","scope":1596,"src":"12363:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1575,"initialValue":{"arguments":[{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"12387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1572,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1559,1598],"referencedDeclaration":1559,"src":"12380:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12414:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"12424:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1578,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"12436:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$741_$","typeString":"type(enum Math.Rounding)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:7","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":739,"src":"12436:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"src":"12424:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"12457:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"12471:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:7","trueExpression":{"hexValue":"31","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1569,"id":1595,"nodeType":"Return","src":"12407:78:7"}]}]},"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"12099:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1598,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:7","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"value","nameLocation":"12271:5:7","nodeType":"VariableDeclaration","scope":1598,"src":"12263:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:7","nodeType":"VariableDeclaration","scope":1598,"src":"12278:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"},"typeName":{"id":1564,"nodeType":"UserDefinedTypeName","pathNode":{"id":1563,"name":"Rounding","nameLocations":["12278:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":741,"src":"12278:8:7"},"referencedDeclaration":741,"src":"12278:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$741","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:7"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1598,"src":"12320:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:7"},"scope":1599,"src":"12247:255:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1600,"src":"202:12302:7","usedErrors":[]}],"src":"103:12402:7"},"id":7},"contracts/MocaPoints/MocaPoints.sol":{"ast":{"absolutePath":"contracts/MocaPoints/MocaPoints.sol","exportedSymbols":{"AccessControl":[315],"IRealmId":[2527],"MocaPoints":[2501],"Ownable":[501]},"id":2502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1601,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:8"},{"absolutePath":"contracts/MocaPoints/interface/IRealmId.sol","file":"./interface/IRealmId.sol","id":1603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2502,"sourceUnit":2528,"src":"58:50:8","symbolAliases":[{"foreign":{"id":1602,"name":"IRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"66:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2502,"sourceUnit":502,"src":"109:67:8","symbolAliases":[{"foreign":{"id":1604,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"117:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":1607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2502,"sourceUnit":316,"src":"177:79:8","symbolAliases":[{"foreign":{"id":1606,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"185:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1608,"name":"Ownable","nameLocations":["281:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":501,"src":"281:7:8"},"id":1609,"nodeType":"InheritanceSpecifier","src":"281:7:8"},{"baseName":{"id":1610,"name":"AccessControl","nameLocations":["290:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"290:13:8"},"id":1611,"nodeType":"InheritanceSpecifier","src":"290:13:8"}],"canonicalName":"MocaPoints","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2501,"linearizedBaseContracts":[2501,315,722,734,388,501,523],"name":"MocaPoints","nameLocation":"267:10:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"75b238fc","id":1616,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"347:10:8","nodeType":"VariableDeclaration","scope":2501,"src":"323:60:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"323:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"370:12:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":1613,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"360:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"360:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a3b0b5a3","id":1621,"mutability":"constant","name":"DEPOSITOR_ROLE","nameLocation":"413:14:8","nodeType":"VariableDeclaration","scope":2501,"src":"389:68:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"389:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4445504f5349544f525f524f4c45","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"440:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""},"value":"DEPOSITOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a9","typeString":"literal_string \"DEPOSITOR_ROLE\""}],"id":1618,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"430:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"430:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"bcb39621","id":1623,"mutability":"mutable","name":"currentSeason","nameLocation":"505:13:8","nodeType":"VariableDeclaration","scope":2501,"src":"490:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"490:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"4529cc1b","id":1627,"mutability":"mutable","name":"seasons","nameLocation":"556:7:8","nodeType":"VariableDeclaration","scope":2501,"src":"524:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1626,"keyType":{"id":1624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"532:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"524:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1625,"name":"bool","nodeType":"ElementaryTypeName","src":"543:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"2b48dc72","id":1630,"mutability":"mutable","name":"realmIdContract","nameLocation":"625:15:8","nodeType":"VariableDeclaration","scope":2501,"src":"609:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"},"typeName":{"id":1629,"nodeType":"UserDefinedTypeName","pathNode":{"id":1628,"name":"IRealmId","nameLocations":["609:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2527,"src":"609:8:8"},"referencedDeclaration":2527,"src":"609:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"visibility":"public"},{"constant":false,"functionSelector":"fc6f9468","id":1632,"mutability":"mutable","name":"adminAddress","nameLocation":"683:12:8","nodeType":"VariableDeclaration","scope":2501,"src":"668:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":1640,"mutability":"mutable","name":"balances","nameLocation":"802:8:8","nodeType":"VariableDeclaration","scope":2501,"src":"726:84:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"},"typeName":{"id":1639,"keyType":{"id":1633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"726:67:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"},"valueType":{"id":1638,"keyType":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"745:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueType":{"id":1637,"keyType":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"764:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"visibility":"private"},{"constant":false,"functionSelector":"141a468c","id":1644,"mutability":"mutable","name":"nonces","nameLocation":"923:6:8","nodeType":"VariableDeclaration","scope":2501,"src":"888:41:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1643,"keyType":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":1648,"mutability":"mutable","name":"allowedConsumeReasonCodes","nameLocation":"1033:25:8","nodeType":"VariableDeclaration","scope":2501,"src":"1000:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1647,"keyType":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1008:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1000:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1646,"name":"bool","nodeType":"ElementaryTypeName","src":"1019:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef31","id":1652,"name":"SetCurrentSeason","nameLocation":"1071:16:8","nodeType":"EventDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"indexed":false,"mutability":"mutable","name":"season","nameLocation":"1096:6:8","nodeType":"VariableDeclaration","scope":1652,"src":"1088:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1088:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1087:16:8"},"src":"1065:39:8"},{"anonymous":false,"eventSelector":"0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e","id":1657,"name":"BatchAddedConsumeReasonCode","nameLocation":"1115:27:8","nodeType":"EventDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"indexed":false,"mutability":"mutable","name":"reasonCodes","nameLocation":"1153:11:8","nodeType":"VariableDeclaration","scope":1657,"src":"1143:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1143:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1654,"nodeType":"ArrayTypeName","src":"1143:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1142:23:8"},"src":"1109:57:8"},{"anonymous":false,"eventSelector":"5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff9","id":1662,"name":"BatchRemovedConsumeReasonCode","nameLocation":"1177:29:8","nodeType":"EventDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"indexed":false,"mutability":"mutable","name":"reasonCodes","nameLocation":"1217:11:8","nodeType":"VariableDeclaration","scope":1662,"src":"1207:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1207:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1659,"nodeType":"ArrayTypeName","src":"1207:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1206:23:8"},"src":"1171:59:8"},{"anonymous":false,"eventSelector":"9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad82","id":1676,"name":"Deposited","nameLocation":"1241:9:8","nodeType":"EventDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1276:6:8","nodeType":"VariableDeclaration","scope":1676,"src":"1260:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"season","nameLocation":"1308:6:8","nodeType":"VariableDeclaration","scope":1676,"src":"1292:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1292:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"reasonCode","nameLocation":"1340:10:8","nodeType":"VariableDeclaration","scope":1676,"src":"1324:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"realmId","nameLocation":"1368:7:8","nodeType":"VariableDeclaration","scope":1676,"src":"1360:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1672,"indexed":false,"mutability":"mutable","name":"realmIdVersion","nameLocation":"1393:14:8","nodeType":"VariableDeclaration","scope":1676,"src":"1385:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1385:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1425:6:8","nodeType":"VariableDeclaration","scope":1676,"src":"1417:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1250:187:8"},"src":"1235:203:8"},{"anonymous":false,"eventSelector":"d1255d580f215da0d3a191d00a885ae4716fac76b5813a6c309919fff6078bd1","id":1694,"name":"Consumed","nameLocation":"1450:8:8","nodeType":"EventDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"indexed":true,"mutability":"mutable","name":"realmId","nameLocation":"1484:7:8","nodeType":"VariableDeclaration","scope":1694,"src":"1468:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1680,"indexed":true,"mutability":"mutable","name":"season","nameLocation":"1517:6:8","nodeType":"VariableDeclaration","scope":1694,"src":"1501:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1501:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1682,"indexed":true,"mutability":"mutable","name":"reasonCode","nameLocation":"1549:10:8","nodeType":"VariableDeclaration","scope":1694,"src":"1533:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1533:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1684,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"1577:8:8","nodeType":"VariableDeclaration","scope":1694,"src":"1569:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1603:5:8","nodeType":"VariableDeclaration","scope":1694,"src":"1595:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1595:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"indexed":false,"mutability":"mutable","name":"realmIdVersion","nameLocation":"1626:14:8","nodeType":"VariableDeclaration","scope":1694,"src":"1618:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1690,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1658:6:8","nodeType":"VariableDeclaration","scope":1694,"src":"1650:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1650:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1692,"indexed":false,"mutability":"mutable","name":"realmIdOwner","nameLocation":"1682:12:8","nodeType":"VariableDeclaration","scope":1694,"src":"1674:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"1674:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1458:242:8"},"src":"1444:257:8"},{"body":{"id":1738,"nodeType":"Block","src":"1768:283:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1704,"name":"_realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1794:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1786:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:8","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1786:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1815:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:8","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1815:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1786:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c696420436f6e74726163742041646472657373","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1827:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f","typeString":"literal_string \"Not a valid Contract Address\""},"value":"Not a valid Contract Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f","typeString":"literal_string \"Not a valid Contract Address\""}],"id":1701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1778:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1713,"nodeType":"ExpressionStatement","src":"1778:80:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1717,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1884:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1876:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:8","typeDescriptions":{}}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1910:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1902:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"1902:7:8","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1876:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612076616c69642041646d696e2041646472657373","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1914:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f","typeString":"literal_string \"Not a valid Admin Address\""},"value":"Not a valid Admin Address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f","typeString":"literal_string \"Not a valid Admin Address\""}],"id":1714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1868:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"ExpressionStatement","src":"1868:74:8"},{"expression":{"arguments":[{"id":1728,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1964:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1729,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1976:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1727,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1953:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1953:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"1953:37:8"},{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1732,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2000:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1734,"name":"_realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2027:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1733,"name":"IRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2018:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRealmId_$2527_$","typeString":"type(contract IRealmId)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"src":"2000:44:8","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"id":1737,"nodeType":"ExpressionStatement","src":"2000:44:8"}]},"id":1739,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"_realmIdContract","nameLocation":"1727:16:8","nodeType":"VariableDeclaration","scope":1739,"src":"1719:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"1719:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"_adminAddress","nameLocation":"1753:13:8","nodeType":"VariableDeclaration","scope":1739,"src":"1745:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1718:49:8"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"1768:0:8"},"scope":2501,"src":"1707:344:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1751,"nodeType":"Block","src":"2078:84:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1743,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2104:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2116:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2120:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2116:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1742,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2096:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2096:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420616e2061646d696e","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2129:14:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","typeString":"literal_string \"Not an admin\""},"value":"Not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250","typeString":"literal_string \"Not an admin\""}],"id":1741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2088:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2088:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1749,"nodeType":"ExpressionStatement","src":"2088:56:8"},{"id":1750,"nodeType":"PlaceholderStatement","src":"2154:1:8"}]},"id":1752,"name":"onlyAdmin","nameLocation":"2066:9:8","nodeType":"ModifierDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[],"src":"2075:2:8"},"src":"2057:105:8","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"2193:91:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1756,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"2219:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2235:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2235:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1755,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2211:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061206465706f7369746f72","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""},"value":"Not a depositor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""}],"id":1754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2203:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2203:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1762,"nodeType":"ExpressionStatement","src":"2203:63:8"},{"id":1763,"nodeType":"PlaceholderStatement","src":"2276:1:8"}]},"id":1765,"name":"onlyDepositor","nameLocation":"2177:13:8","nodeType":"ModifierDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"2190:2:8"},"src":"2168:116:8","virtual":false,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"2352:171:8","statements":[{"expression":{"arguments":[{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2370:17:8","subExpression":{"baseExpression":{"id":1773,"name":"seasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2371:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1775,"indexExpression":{"id":1774,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2379:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2371:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536561736f6e20616c726561647920736574","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2389:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892","typeString":"literal_string \"Season already set\""},"value":"Season already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892","typeString":"literal_string \"Season already set\""}],"id":1772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2362:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"2362:48:8"},{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1780,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2420:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1781,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2436:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2420:23:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1783,"nodeType":"ExpressionStatement","src":"2420:23:8"},{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1784,"name":"seasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"2453:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1786,"indexExpression":{"id":1785,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2461:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2453:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2472:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2453:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"ExpressionStatement","src":"2453:23:8"},{"eventCall":{"arguments":[{"id":1791,"name":"_season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"2508:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1790,"name":"SetCurrentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2491:16:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2491:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"EmitStatement","src":"2486:30:8"}]},"functionSelector":"86a8e98a","id":1795,"implemented":true,"kind":"function","modifiers":[{"id":1770,"kind":"modifierInvocation","modifierName":{"id":1769,"name":"onlyAdmin","nameLocations":["2342:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1752,"src":"2342:9:8"},"nodeType":"ModifierInvocation","src":"2342:9:8"}],"name":"setCurrentSeason","nameLocation":"2299:16:8","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"_season","nameLocation":"2324:7:8","nodeType":"VariableDeclaration","scope":1795,"src":"2316:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2316:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2315:17:8"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[],"src":"2352:0:8"},"scope":2501,"src":"2290:233:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1807,"nodeType":"Block","src":"2674:59:8","statements":[{"expression":{"arguments":[{"id":1804,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"2718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1802,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2691:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:10:8","memberName":"burnCounts","nodeType":"MemberAccess","referencedDeclaration":2510,"src":"2691:26:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2691:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1801,"id":1806,"nodeType":"Return","src":"2684:42:8"}]},"id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"_getRealmIdVersion","nameLocation":"2606:18:8","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"realmId","nameLocation":"2633:7:8","nodeType":"VariableDeclaration","scope":1808,"src":"2625:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2624:17:8"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"2665:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:9:8"},"scope":2501,"src":"2597:136:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"2817:61:8","statements":[{"expression":{"baseExpression":{"id":1815,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2834:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1817,"indexExpression":{"id":1816,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"2860:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2834:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1814,"id":1818,"nodeType":"Return","src":"2827:44:8"}]},"functionSelector":"c0542cfa","id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"isReasonCodeAllowed","nameLocation":"2748:19:8","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"reasonCode","nameLocation":"2776:10:8","nodeType":"VariableDeclaration","scope":1820,"src":"2768:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2768:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2767:20:8"},"returnParameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"2811:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1812,"name":"bool","nodeType":"ElementaryTypeName","src":"2811:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2810:6:8"},"scope":2501,"src":"2739:139:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1835,"nodeType":"Block","src":"2982:69:8","statements":[{"expression":{"arguments":[{"id":1831,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"3026:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1832,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"3033:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1829,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2999:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3015:10:8","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":2519,"src":"2999:26:8","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_string_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (string memory,bytes32) pure external returns (uint256)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1828,"id":1834,"nodeType":"Return","src":"2992:52:8"}]},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"_prepareRealmId","nameLocation":"2893:15:8","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"parentNode","nameLocation":"2917:10:8","nodeType":"VariableDeclaration","scope":1836,"src":"2909:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2909:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"_name","nameLocation":"2943:5:8","nodeType":"VariableDeclaration","scope":1836,"src":"2929:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1823,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2908:41:8"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"2973:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2972:9:8"},"scope":2501,"src":"2884:167:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"3193:89:8","statements":[{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"_owner","nameLocation":"3211:6:8","nodeType":"VariableDeclaration","scope":1852,"src":"3203:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"3203:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1849,"initialValue":{"arguments":[{"id":1847,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"3244:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1845,"name":"realmIdContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"3220:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_IRealmId_$2527","typeString":"contract IRealmId"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3236:7:8","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2526,"src":"3220:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3203:49:8"},{"expression":{"id":1850,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3269:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1842,"id":1851,"nodeType":"Return","src":"3262:13:8"}]},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"3138:5:8","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"realmId","nameLocation":"3152:7:8","nodeType":"VariableDeclaration","scope":1853,"src":"3144:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3144:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3143:17:8"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"3184:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"3184:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3183:9:8"},"scope":2501,"src":"3129:153:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"3374:438:8","statements":[{"body":{"id":1890,"nodeType":"Block","src":"3508:170:8","statements":[{"expression":{"arguments":[{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3530:43:8","subExpression":{"baseExpression":{"id":1873,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3531:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1877,"indexExpression":{"baseExpression":{"id":1874,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"3557:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1876,"indexExpression":{"id":1875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3570:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3557:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3531:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526561736f6e20636f646520616c726561647920657869737473","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3575:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a","typeString":"literal_string \"Reason code already exists\""},"value":"Reason code already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a","typeString":"literal_string \"Reason code already exists\""}],"id":1872,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3522:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"ExpressionStatement","src":"3522:82:8"},{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1882,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3618:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1886,"indexExpression":{"baseExpression":{"id":1883,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"3644:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1885,"indexExpression":{"id":1884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3657:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3644:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3618:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3663:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3618:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"ExpressionStatement","src":"3618:49:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3478:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1866,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"3482:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3495:6:8","memberName":"length","nodeType":"MemberAccess","src":"3482:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3478:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1891,"initializationExpression":{"assignments":[1862],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"i","nameLocation":"3471:1:8","nodeType":"VariableDeclaration","scope":1891,"src":"3463:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3463:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1864,"initialValue":{"hexValue":"30","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3475:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3463:13:8"},"loopExpression":{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3503:3:8","subExpression":{"id":1869,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3503:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1871,"nodeType":"ExpressionStatement","src":"3503:3:8"},"nodeType":"ForStatement","src":"3458:220:8"},{"eventCall":{"arguments":[{"id":1893,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"3792:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1892,"name":"BatchAddedConsumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3764:27:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"EmitStatement","src":"3759:46:8"}]},"functionSelector":"3f30b00f","id":1897,"implemented":true,"kind":"function","modifiers":[{"id":1859,"kind":"modifierInvocation","modifierName":{"id":1858,"name":"onlyAdmin","nameLocations":["3364:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1752,"src":"3364:9:8"},"nodeType":"ModifierInvocation","src":"3364:9:8"}],"name":"batchAddConsumeReasonCodes","nameLocation":"3297:26:8","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"_reasonCodes","nameLocation":"3341:12:8","nodeType":"VariableDeclaration","scope":1897,"src":"3324:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1855,"nodeType":"ArrayTypeName","src":"3324:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3323:31:8"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"3374:0:8"},"scope":2501,"src":"3288:524:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1929,"nodeType":"Block","src":"3907:488:8","statements":[{"body":{"id":1923,"nodeType":"Block","src":"4030:227:8","statements":[{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4197:49:8","subExpression":{"baseExpression":{"id":1916,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"4204:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1920,"indexExpression":{"baseExpression":{"id":1917,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4230:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1919,"indexExpression":{"id":1918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4243:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4230:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4204:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"4197:49:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1909,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4000:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1910,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4004:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4017:6:8","memberName":"length","nodeType":"MemberAccess","src":"4004:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4000:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"initializationExpression":{"assignments":[1906],"declarations":[{"constant":false,"id":1906,"mutability":"mutable","name":"i","nameLocation":"3993:1:8","nodeType":"VariableDeclaration","scope":1924,"src":"3985:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1908,"initialValue":{"hexValue":"30","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3985:13:8"},"loopExpression":{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4025:3:8","subExpression":{"id":1913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4025:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"4025:3:8"},"nodeType":"ForStatement","src":"3980:277:8"},{"eventCall":{"arguments":[{"id":1926,"name":"_reasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4375:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1925,"name":"BatchRemovedConsumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"4345:29:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32[] memory)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4345:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"EmitStatement","src":"4340:48:8"}]},"functionSelector":"906405a3","id":1930,"implemented":true,"kind":"function","modifiers":[{"id":1903,"kind":"modifierInvocation","modifierName":{"id":1902,"name":"onlyAdmin","nameLocations":["3897:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":1752,"src":"3897:9:8"},"nodeType":"ModifierInvocation","src":"3897:9:8"}],"name":"batchRemoveConsumeReasonCodes","nameLocation":"3827:29:8","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"_reasonCodes","nameLocation":"3874:12:8","nodeType":"VariableDeclaration","scope":1930,"src":"3857:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3857:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1899,"nodeType":"ArrayTypeName","src":"3857:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3856:31:8"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[],"src":"3907:0:8"},"scope":2501,"src":"3818:577:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1963,"nodeType":"Block","src":"4528:240:8","statements":[{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1943,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"4579:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":1947,"indexExpression":{"id":1944,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4588:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4579:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":1948,"indexExpression":{"id":1945,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4596:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4579:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1949,"indexExpression":{"id":1946,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4605:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4579:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1950,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4624:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4579:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"4579:51:8"},{"eventCall":{"arguments":[{"expression":{"id":1954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4690:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4694:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4690:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1956,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4702:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1957,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4710:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1958,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4729:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4738:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"4754:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"4680:9:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,uint256,uint256,uint256)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"EmitStatement","src":"4675:86:8"}]},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"4410:8:8","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"season","nameLocation":"4427:6:8","nodeType":"VariableDeclaration","scope":1964,"src":"4419:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4419:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"realmId","nameLocation":"4443:7:8","nodeType":"VariableDeclaration","scope":1964,"src":"4435:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"realmIdVersion","nameLocation":"4460:14:8","nodeType":"VariableDeclaration","scope":1964,"src":"4452:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"4452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"amount","nameLocation":"4484:6:8","nodeType":"VariableDeclaration","scope":1964,"src":"4476:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"depositReasonCode","nameLocation":"4500:17:8","nodeType":"VariableDeclaration","scope":1964,"src":"4492:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4492:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4418:100:8"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"4528:0:8"},"scope":2501,"src":"4401:367:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"4914:293:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1981,"name":"DEPOSITOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"4994:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5010:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5014:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5010:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1980,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"4986:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4986:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061206465706f7369746f72","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5023:17:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""},"value":"Not a depositor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1","typeString":"literal_string \"Not a depositor\""}],"id":1979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4978:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4978:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1987,"nodeType":"ExpressionStatement","src":"4978:63:8"},{"expression":{"arguments":[{"id":1989,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"5141:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1990,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"5149:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1991,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5158:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5174:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1993,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"5182:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1988,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5132:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,bytes32)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5132:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"5132:68:8"}]},"functionSelector":"18ee89f0","id":1997,"implemented":true,"kind":"function","modifiers":[{"id":1977,"kind":"modifierInvocation","modifierName":{"id":1976,"name":"onlyDepositor","nameLocations":["4900:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"4900:13:8"},"nodeType":"ModifierInvocation","src":"4900:13:8"}],"name":"deposit","nameLocation":"4783:7:8","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"season","nameLocation":"4799:6:8","nodeType":"VariableDeclaration","scope":1997,"src":"4791:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4791:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"realmId","nameLocation":"4815:7:8","nodeType":"VariableDeclaration","scope":1997,"src":"4807:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4807:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"realmIdVersion","nameLocation":"4832:14:8","nodeType":"VariableDeclaration","scope":1997,"src":"4824:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"amount","nameLocation":"4856:6:8","nodeType":"VariableDeclaration","scope":1997,"src":"4848:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"4848:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"depositReasonCode","nameLocation":"4872:17:8","nodeType":"VariableDeclaration","scope":1997,"src":"4864:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4864:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4790:100:8"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"4914:0:8"},"scope":2501,"src":"4774:433:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2029,"nodeType":"Block","src":"5430:283:8","statements":[{"assignments":[2015],"declarations":[{"constant":false,"id":2015,"mutability":"mutable","name":"realmId","nameLocation":"5504:7:8","nodeType":"VariableDeclaration","scope":2029,"src":"5496:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"5496:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2020,"initialValue":{"arguments":[{"id":2017,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"5530:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2018,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"5542:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2016,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"5514:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5496:51:8"},{"expression":{"arguments":[{"id":2022,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5647:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2023,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"5655:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2024,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"5664:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5680:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2026,"name":"depositReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"5688:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2021,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5638:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256,bytes32)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5638:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"5638:68:8"}]},"functionSelector":"9d70b005","id":2030,"implemented":true,"kind":"function","modifiers":[{"id":2012,"kind":"modifierInvocation","modifierName":{"id":2011,"name":"onlyDepositor","nameLocations":["5416:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"5416:13:8"},"nodeType":"ModifierInvocation","src":"5416:13:8"}],"name":"deposit","nameLocation":"5222:7:8","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"season","nameLocation":"5247:6:8","nodeType":"VariableDeclaration","scope":2030,"src":"5239:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"parentNode","nameLocation":"5271:10:8","nodeType":"VariableDeclaration","scope":2030,"src":"5263:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5263:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"name","nameLocation":"5305:4:8","nodeType":"VariableDeclaration","scope":2030,"src":"5291:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2002,"name":"string","nodeType":"ElementaryTypeName","src":"5291:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"realmIdVersion","nameLocation":"5327:14:8","nodeType":"VariableDeclaration","scope":2030,"src":"5319:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"amount","nameLocation":"5359:6:8","nodeType":"VariableDeclaration","scope":2030,"src":"5351:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"depositReasonCode","nameLocation":"5383:17:8","nodeType":"VariableDeclaration","scope":2030,"src":"5375:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5375:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5229:177:8"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"5430:0:8"},"scope":2501,"src":"5213:500:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2068,"nodeType":"Block","src":"5971:161:8","statements":[{"assignments":[2052],"declarations":[{"constant":false,"id":2052,"mutability":"mutable","name":"messageHash","nameLocation":"5989:11:8","nodeType":"VariableDeclaration","scope":2068,"src":"5981:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5981:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2060,"initialValue":{"arguments":[{"id":2054,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"6019:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2055,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6028:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2056,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6044:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2057,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6052:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2058,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"6059:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2053,"name":"_preparePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"6003:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256,uint256,bytes32) view returns (bytes32)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6003:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5981:96:8"},{"expression":{"arguments":[{"id":2062,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6104:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2063,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"6117:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2064,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"6120:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2065,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"6123:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2061,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6094:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2050,"id":2067,"nodeType":"Return","src":"6087:38:8"}]},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"_getSigner","nameLocation":"5728:10:8","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"realmId","nameLocation":"5756:7:8","nodeType":"VariableDeclaration","scope":2069,"src":"5748:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5748:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"realmIdVersion","nameLocation":"5781:14:8","nodeType":"VariableDeclaration","scope":2069,"src":"5773:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"5773:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"amount","nameLocation":"5813:6:8","nodeType":"VariableDeclaration","scope":2069,"src":"5805:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"5805:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"nonce","nameLocation":"5837:5:8","nodeType":"VariableDeclaration","scope":2069,"src":"5829:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5829:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"5860:17:8","nodeType":"VariableDeclaration","scope":2069,"src":"5852:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5852:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"v","nameLocation":"5893:1:8","nodeType":"VariableDeclaration","scope":2069,"src":"5887:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2041,"name":"uint8","nodeType":"ElementaryTypeName","src":"5887:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"r","nameLocation":"5912:1:8","nodeType":"VariableDeclaration","scope":2069,"src":"5904:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5904:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"s","nameLocation":"5931:1:8","nodeType":"VariableDeclaration","scope":2069,"src":"5923:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5923:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5738:200:8"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"5962:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"5962:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5961:9:8"},"scope":2501,"src":"5719:413:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2126,"nodeType":"Block","src":"6269:369:8","statements":[{"assignments":[2085],"declarations":[{"constant":false,"id":2085,"mutability":"mutable","name":"realmIdVersion","nameLocation":"6287:14:8","nodeType":"VariableDeclaration","scope":2126,"src":"6279:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"6279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2089,"initialValue":{"arguments":[{"id":2087,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6323:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6304:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6304:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6279:52:8"},{"assignments":[2091],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"signer","nameLocation":"6349:6:8","nodeType":"VariableDeclaration","scope":2126,"src":"6341:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"6341:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2104,"initialValue":{"arguments":[{"id":2093,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6369:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2094,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"6378:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2095,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"6394:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2096,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"6402:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2098,"indexExpression":{"id":2097,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6409:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6402:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2099,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"6419:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2100,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"6438:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2101,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"6441:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2102,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"6444:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2092,"name":"_getSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"6358:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (uint256,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32) view returns (address)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6341:105:8"},{"assignments":[2106],"declarations":[{"constant":false,"id":2106,"mutability":"mutable","name":"owner_","nameLocation":"6464:6:8","nodeType":"VariableDeclaration","scope":2126,"src":"6456:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[{"id":2108,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6479:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2107,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[1853,429],"referencedDeclaration":1853,"src":"6473:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6456:31:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2112,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6505:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2113,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"6515:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6505:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6572206e6f74206f776e6572206f66207265616c6d4964","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6523:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""},"value":"Signer not owner of realmId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""}],"id":2111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6497:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6497:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"6497:56:8"},{"expression":{"arguments":[{"id":2119,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6572:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2120,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"6581:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"6597:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2122,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"6605:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2123,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"6624:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2118,"name":"_consume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"6563:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,bytes32,address)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6563:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2125,"nodeType":"ExpressionStatement","src":"6563:68:8"}]},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"_consumeWithSignature","nameLocation":"6147:21:8","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"realmId","nameLocation":"6177:7:8","nodeType":"VariableDeclaration","scope":2127,"src":"6169:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"6169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"amount","nameLocation":"6194:6:8","nodeType":"VariableDeclaration","scope":2127,"src":"6186:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"6210:17:8","nodeType":"VariableDeclaration","scope":2127,"src":"6202:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6202:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"v","nameLocation":"6235:1:8","nodeType":"VariableDeclaration","scope":2127,"src":"6229:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2076,"name":"uint8","nodeType":"ElementaryTypeName","src":"6229:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"r","nameLocation":"6246:1:8","nodeType":"VariableDeclaration","scope":2127,"src":"6238:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6238:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"s","nameLocation":"6257:1:8","nodeType":"VariableDeclaration","scope":2127,"src":"6249:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6249:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6168:91:8"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[],"src":"6269:0:8"},"scope":2501,"src":"6138:500:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2189,"nodeType":"Block","src":"6771:676:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2141,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"6839:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2143,"indexExpression":{"id":2142,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6848:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6839:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2145,"indexExpression":{"id":2144,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"6863:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6839:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2147,"indexExpression":{"id":2146,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"6872:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6839:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2148,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"6891:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6839:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6899:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":2140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6831:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"ExpressionStatement","src":"6831:91:8"},{"expression":{"arguments":[{"baseExpression":{"id":2154,"name":"allowedConsumeReasonCodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"7017:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2156,"indexExpression":{"id":2155,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"7043:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7017:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e73756d6520726561736f6e20636f6465","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7063:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b","typeString":"literal_string \"Invalid consume reason code\""},"value":"Invalid consume reason code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b","typeString":"literal_string \"Invalid consume reason code\""}],"id":2153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7009:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7009:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"ExpressionStatement","src":"7009:84:8"},{"expression":{"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2160,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"7145:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2164,"indexExpression":{"id":2161,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"7154:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7145:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2165,"indexExpression":{"id":2162,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"7169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7145:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2166,"indexExpression":{"id":2163,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"7178:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7145:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2167,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"7197:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7145:58:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2169,"nodeType":"ExpressionStatement","src":"7145:58:8"},{"eventCall":{"arguments":[{"id":2171,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"7263:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2172,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"7272:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2173,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"7287:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7306:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7310:6:8","memberName":"sender","nodeType":"MemberAccess","src":"7306:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2176,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"7318:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2178,"indexExpression":{"id":2177,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"7325:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7318:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2179,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"7335:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"7351:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2181,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"7359:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2170,"name":"Consumed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"7254:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,bytes32,address,uint256,uint256,uint256,address)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7254:112:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"EmitStatement","src":"7249:117:8"},{"expression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7423:17:8","subExpression":{"baseExpression":{"id":2184,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"7423:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2186,"indexExpression":{"id":2185,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"7430:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7423:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2188,"nodeType":"ExpressionStatement","src":"7423:17:8"}]},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"_consume","nameLocation":"6653:8:8","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"realmId","nameLocation":"6670:7:8","nodeType":"VariableDeclaration","scope":2190,"src":"6662:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6662:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"realmIdVersion","nameLocation":"6687:14:8","nodeType":"VariableDeclaration","scope":2190,"src":"6679:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"amount","nameLocation":"6711:6:8","nodeType":"VariableDeclaration","scope":2190,"src":"6703:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"6727:17:8","nodeType":"VariableDeclaration","scope":2190,"src":"6719:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6719:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"owner_","nameLocation":"6754:6:8","nodeType":"VariableDeclaration","scope":2190,"src":"6746:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"6746:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6661:100:8"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[],"src":"6771:0:8"},"scope":2501,"src":"6644:803:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"7594:199:8","statements":[{"assignments":[2208],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"realmId","nameLocation":"7665:7:8","nodeType":"VariableDeclaration","scope":2223,"src":"7657:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[{"id":2210,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"7691:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2211,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"7703:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2209,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7675:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7675:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7657:52:8"},{"expression":{"arguments":[{"id":2215,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"7742:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2216,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"7751:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2217,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"7759:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2218,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"7778:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2219,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"7781:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2220,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"7784:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2214,"name":"_consumeWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"7720:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32,uint8,bytes32,bytes32)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7720:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"7720:66:8"}]},"functionSelector":"99d342ac","id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"7462:7:8","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"parentNode","nameLocation":"7478:10:8","nodeType":"VariableDeclaration","scope":2224,"src":"7470:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7470:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"_name","nameLocation":"7504:5:8","nodeType":"VariableDeclaration","scope":2224,"src":"7490:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2193,"name":"string","nodeType":"ElementaryTypeName","src":"7490:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"amount","nameLocation":"7519:6:8","nodeType":"VariableDeclaration","scope":2224,"src":"7511:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"7535:17:8","nodeType":"VariableDeclaration","scope":2224,"src":"7527:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7527:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"v","nameLocation":"7560:1:8","nodeType":"VariableDeclaration","scope":2224,"src":"7554:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2199,"name":"uint8","nodeType":"ElementaryTypeName","src":"7554:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"r","nameLocation":"7571:1:8","nodeType":"VariableDeclaration","scope":2224,"src":"7563:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7563:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"s","nameLocation":"7582:1:8","nodeType":"VariableDeclaration","scope":2224,"src":"7574:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7574:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7469:115:8"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"7594:0:8"},"scope":2501,"src":"7453:340:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2248,"nodeType":"Block","src":"7916:83:8","statements":[{"expression":{"arguments":[{"id":2240,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"7948:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2241,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7957:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2242,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"7965:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2243,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"7984:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2244,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"7987:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2245,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"7990:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2239,"name":"_consumeWithSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"7926:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32,uint8,bytes32,bytes32)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7926:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2247,"nodeType":"ExpressionStatement","src":"7926:66:8"}]},"functionSelector":"dc893ce4","id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"7808:7:8","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"realmId","nameLocation":"7824:7:8","nodeType":"VariableDeclaration","scope":2249,"src":"7816:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"7816:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"amount","nameLocation":"7841:6:8","nodeType":"VariableDeclaration","scope":2249,"src":"7833:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"7833:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"7857:17:8","nodeType":"VariableDeclaration","scope":2249,"src":"7849:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7849:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"v","nameLocation":"7882:1:8","nodeType":"VariableDeclaration","scope":2249,"src":"7876:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2231,"name":"uint8","nodeType":"ElementaryTypeName","src":"7876:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"r","nameLocation":"7893:1:8","nodeType":"VariableDeclaration","scope":2249,"src":"7885:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7885:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"s","nameLocation":"7904:1:8","nodeType":"VariableDeclaration","scope":2249,"src":"7896:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7896:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7815:91:8"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[],"src":"7916:0:8"},"scope":2501,"src":"7799:200:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2287,"nodeType":"Block","src":"8108:339:8","statements":[{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"owner_","nameLocation":"8126:6:8","nodeType":"VariableDeclaration","scope":2287,"src":"8118:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2263,"initialValue":{"arguments":[{"id":2261,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8141:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2260,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[1853,429],"referencedDeclaration":1853,"src":"8135:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8135:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8118:31:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2265,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8167:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8171:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8167:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2267,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"8181:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8167:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e6572206e6f74206f776e6572206f66207265616c6d4964","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8189:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""},"value":"Signer not owner of realmId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e","typeString":"literal_string \"Signer not owner of realmId\""}],"id":2264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8159:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8159:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2271,"nodeType":"ExpressionStatement","src":"8159:60:8"},{"assignments":[2273],"declarations":[{"constant":false,"id":2273,"mutability":"mutable","name":"realmIdVersion","nameLocation":"8314:14:8","nodeType":"VariableDeclaration","scope":2287,"src":"8306:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"8306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2277,"initialValue":{"arguments":[{"id":2275,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8350:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2274,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8331:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8331:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8306:52:8"},{"expression":{"arguments":[{"id":2279,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2280,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8386:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2281,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"8402:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2282,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"8410:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8429:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8433:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8429:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2278,"name":"_consume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"8368:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,bytes32,address)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"ExpressionStatement","src":"8368:72:8"}]},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"_consumeWithoutSignature","nameLocation":"8014:24:8","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"realmId","nameLocation":"8047:7:8","nodeType":"VariableDeclaration","scope":2288,"src":"8039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"8039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"amount","nameLocation":"8064:6:8","nodeType":"VariableDeclaration","scope":2288,"src":"8056:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"8080:17:8","nodeType":"VariableDeclaration","scope":2288,"src":"8072:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8072:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8038:60:8"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"8108:0:8"},"scope":2501,"src":"8005:442:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"8563:210:8","statements":[{"assignments":[2300],"declarations":[{"constant":false,"id":2300,"mutability":"mutable","name":"realmId","nameLocation":"8651:7:8","nodeType":"VariableDeclaration","scope":2312,"src":"8643:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8643:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2305,"initialValue":{"arguments":[{"id":2302,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"8677:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2303,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"8689:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2301,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8661:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8643:52:8"},{"expression":{"arguments":[{"id":2307,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"8731:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8740:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2309,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8748:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2306,"name":"_consumeWithoutSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8706:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8706:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"ExpressionStatement","src":"8706:60:8"}]},"functionSelector":"e564a0e2","id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"8462:7:8","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"parentNode","nameLocation":"8478:10:8","nodeType":"VariableDeclaration","scope":2313,"src":"8470:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8470:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"_name","nameLocation":"8504:5:8","nodeType":"VariableDeclaration","scope":2313,"src":"8490:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"8490:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"amount","nameLocation":"8519:6:8","nodeType":"VariableDeclaration","scope":2313,"src":"8511:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8511:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"8535:17:8","nodeType":"VariableDeclaration","scope":2313,"src":"8527:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8527:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8469:84:8"},"returnParameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"8563:0:8"},"scope":2501,"src":"8453:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2328,"nodeType":"Block","src":"8865:77:8","statements":[{"expression":{"arguments":[{"id":2323,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"8900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2324,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"8909:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2325,"name":"consumeReasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"8917:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2322,"name":"_consumeWithoutSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8875:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,uint256,bytes32)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8875:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2327,"nodeType":"ExpressionStatement","src":"8875:60:8"}]},"functionSelector":"d14a5c71","id":2329,"implemented":true,"kind":"function","modifiers":[],"name":"consume","nameLocation":"8788:7:8","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"realmId","nameLocation":"8804:7:8","nodeType":"VariableDeclaration","scope":2329,"src":"8796:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"8796:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"amount","nameLocation":"8821:6:8","nodeType":"VariableDeclaration","scope":2329,"src":"8813:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"8813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"consumeReasonCode","nameLocation":"8837:17:8","nodeType":"VariableDeclaration","scope":2329,"src":"8829:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8829:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8795:60:8"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"8865:0:8"},"scope":2501,"src":"8779:163:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2352,"nodeType":"Block","src":"9032:184:8","statements":[{"assignments":[2339],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"realmIdVersion","nameLocation":"9106:14:8","nodeType":"VariableDeclaration","scope":2352,"src":"9098:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"9098:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2341,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"9142:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2340,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9123:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9123:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9098:52:8"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2344,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9168:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2346,"indexExpression":{"id":2345,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"9177:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9168:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2348,"indexExpression":{"id":2347,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"9185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9168:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2350,"indexExpression":{"id":2349,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"9194:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9168:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2337,"id":2351,"nodeType":"Return","src":"9161:48:8"}]},"functionSelector":"ad3b1d48","id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8957:9:8","nodeType":"FunctionDefinition","parameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"season","nameLocation":"8975:6:8","nodeType":"VariableDeclaration","scope":2353,"src":"8967:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8967:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"realmId","nameLocation":"8991:7:8","nodeType":"VariableDeclaration","scope":2353,"src":"8983:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"8983:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8966:33:8"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"9023:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"9023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9022:9:8"},"scope":2501,"src":"8948:268:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2385,"nodeType":"Block","src":"9330:387:8","statements":[{"assignments":[2365],"declarations":[{"constant":false,"id":2365,"mutability":"mutable","name":"realmId","nameLocation":"9418:7:8","nodeType":"VariableDeclaration","scope":2385,"src":"9410:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"9410:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2370,"initialValue":{"arguments":[{"id":2367,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"9444:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2368,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"9456:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2366,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"9428:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9428:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9410:52:8"},{"assignments":[2372],"declarations":[{"constant":false,"id":2372,"mutability":"mutable","name":"realmIdVersion","nameLocation":"9537:14:8","nodeType":"VariableDeclaration","scope":2385,"src":"9529:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"9529:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"arguments":[{"id":2374,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9573:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9554:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9554:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9529:52:8"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2377,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9669:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2379,"indexExpression":{"id":2378,"name":"season","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"9678:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9669:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2381,"indexExpression":{"id":2380,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"9686:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9669:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2383,"indexExpression":{"id":2382,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"9695:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9669:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2363,"id":2384,"nodeType":"Return","src":"9662:48:8"}]},"functionSelector":"098b6419","id":2386,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"9231:9:8","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"season","nameLocation":"9249:6:8","nodeType":"VariableDeclaration","scope":2386,"src":"9241:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9241:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"parentNode","nameLocation":"9265:10:8","nodeType":"VariableDeclaration","scope":2386,"src":"9257:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9257:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"_name","nameLocation":"9291:5:8","nodeType":"VariableDeclaration","scope":2386,"src":"9277:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2358,"name":"string","nodeType":"ElementaryTypeName","src":"9277:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9240:57:8"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2386,"src":"9321:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9320:9:8"},"scope":2501,"src":"9222:495:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2407,"nodeType":"Block","src":"9791:278:8","statements":[{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"realmIdVersion","nameLocation":"9865:14:8","nodeType":"VariableDeclaration","scope":2407,"src":"9857:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9857:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2398,"initialValue":{"arguments":[{"id":2396,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"9901:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2395,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9882:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9882:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9857:52:8"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2399,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"10014:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2401,"indexExpression":{"id":2400,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10023:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10014:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2403,"indexExpression":{"id":2402,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"10038:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10014:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2405,"indexExpression":{"id":2404,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"10047:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10014:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2392,"id":2406,"nodeType":"Return","src":"10007:55:8"}]},"functionSelector":"9cc7f708","id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"9732:9:8","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"realmId","nameLocation":"9750:7:8","nodeType":"VariableDeclaration","scope":2408,"src":"9742:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"9742:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9741:17:8"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"9782:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"9782:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9781:9:8"},"scope":2501,"src":"9723:346:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2438,"nodeType":"Block","src":"10167:411:8","statements":[{"assignments":[2418],"declarations":[{"constant":false,"id":2418,"mutability":"mutable","name":"realmId","nameLocation":"10255:7:8","nodeType":"VariableDeclaration","scope":2438,"src":"10247:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"10247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2423,"initialValue":{"arguments":[{"id":2420,"name":"parentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"10281:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2421,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"10293:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2419,"name":"_prepareRealmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"10265:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes32,string memory) view returns (uint256)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10265:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10247:52:8"},{"assignments":[2425],"declarations":[{"constant":false,"id":2425,"mutability":"mutable","name":"realmIdVersion","nameLocation":"10374:14:8","nodeType":"VariableDeclaration","scope":2438,"src":"10366:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"10366:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2429,"initialValue":{"arguments":[{"id":2427,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"10410:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10391:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10391:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10366:52:8"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2430,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"10523:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))"}},"id":2432,"indexExpression":{"id":2431,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10532:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10523:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":2434,"indexExpression":{"id":2433,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"10547:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10523:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2436,"indexExpression":{"id":2435,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"10556:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10523:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2416,"id":2437,"nodeType":"Return","src":"10516:55:8"}]},"functionSelector":"794459be","id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"10084:9:8","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"parentNode","nameLocation":"10102:10:8","nodeType":"VariableDeclaration","scope":2439,"src":"10094:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10094:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"_name","nameLocation":"10128:5:8","nodeType":"VariableDeclaration","scope":2439,"src":"10114:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"10114:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10093:41:8"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"10158:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"10158:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10157:9:8"},"scope":2501,"src":"10075:503:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2470,"nodeType":"Block","src":"10883:153:8","statements":[{"assignments":[2455],"declarations":[{"constant":false,"id":2455,"mutability":"mutable","name":"payload","nameLocation":"10901:7:8","nodeType":"VariableDeclaration","scope":2470,"src":"10893:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10893:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2467,"initialValue":{"arguments":[{"arguments":[{"id":2459,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"10938:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2460,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"10947:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2461,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"10963:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2462,"name":"currentSeason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"10971:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2463,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"10986:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2464,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"10998:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2457,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10921:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10925:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"10921:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10921:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2456,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10911:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:94:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10893:112:8"},{"expression":{"id":2468,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"11022:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2453,"id":2469,"nodeType":"Return","src":"11015:14:8"}]},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"_preparePayload","nameLocation":"10697:15:8","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"realmId","nameLocation":"10730:7:8","nodeType":"VariableDeclaration","scope":2471,"src":"10722:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"10722:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"realmIdVersion","nameLocation":"10755:14:8","nodeType":"VariableDeclaration","scope":2471,"src":"10747:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"amount","nameLocation":"10787:6:8","nodeType":"VariableDeclaration","scope":2471,"src":"10779:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"10779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"nonce","nameLocation":"10811:5:8","nodeType":"VariableDeclaration","scope":2471,"src":"10803:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2449,"mutability":"mutable","name":"reasonCode","nameLocation":"10834:10:8","nodeType":"VariableDeclaration","scope":2471,"src":"10826:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10826:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10712:138:8"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"10874:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10874:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10873:9:8"},"scope":2501,"src":"10688:348:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"11272:222:8","statements":[{"assignments":[2483],"declarations":[{"constant":false,"id":2483,"mutability":"mutable","name":"realmIdVersion","nameLocation":"11346:14:8","nodeType":"VariableDeclaration","scope":2499,"src":"11338:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"11338:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2487,"initialValue":{"arguments":[{"id":2485,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11382:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2484,"name":"_getRealmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"11363:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11363:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11338:52:8"},{"expression":{"components":[{"arguments":[{"id":2489,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2490,"name":"realmIdVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11434:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11450:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2492,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"11458:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2494,"indexExpression":{"id":2493,"name":"realmId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11465:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11458:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2495,"name":"reasonCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"11475:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2488,"name":"_preparePayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"11409:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256,uint256,bytes32) view returns (bytes32)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11409:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11408:79:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2481,"id":2498,"nodeType":"Return","src":"11401:86:8"}]},"functionSelector":"df00bb24","id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"preparePayload","nameLocation":"11172:14:8","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"realmId","nameLocation":"11195:7:8","nodeType":"VariableDeclaration","scope":2500,"src":"11187:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"11187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"amount","nameLocation":"11212:6:8","nodeType":"VariableDeclaration","scope":2500,"src":"11204:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"11204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"reasonCode","nameLocation":"11228:10:8","nodeType":"VariableDeclaration","scope":2500,"src":"11220:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11220:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11186:53:8"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"11263:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11263:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11262:9:8"},"scope":2501,"src":"11163:331:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2502,"src":"258:11238:8","usedErrors":[]}],"src":"32:11465:8"},"id":8},"contracts/MocaPoints/interface/IRealmId.sol":{"ast":{"absolutePath":"contracts/MocaPoints/interface/IRealmId.sol","exportedSymbols":{"IRealmId":[2527]},"id":2528,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"45:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IRealmId","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2527,"linearizedBaseContracts":[2527],"name":"IRealmId","nameLocation":"80:8:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a9735f94","id":2510,"implemented":false,"kind":"function","modifiers":[],"name":"burnCounts","nameLocation":"104:10:9","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"realmId","nameLocation":"123:7:9","nodeType":"VariableDeclaration","scope":2510,"src":"115:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114:17:9"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"155:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"155:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"154:9:9"},"scope":2527,"src":"95:69:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cad6b901","id":2519,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"179:10:9","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"name","nameLocation":"206:4:9","nodeType":"VariableDeclaration","scope":2519,"src":"190:20:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2511,"name":"string","nodeType":"ElementaryTypeName","src":"190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"parentNode","nameLocation":"220:10:9","nodeType":"VariableDeclaration","scope":2519,"src":"212:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"212:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"189:42:9"},"returnParameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2519,"src":"255:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"255:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"254:9:9"},"scope":2527,"src":"170:94:9","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"6352211e","id":2526,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"279:7:9","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"realmId","nameLocation":"295:7:9","nodeType":"VariableDeclaration","scope":2526,"src":"287:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"286:17:9"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2526,"src":"327:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"326:9:9"},"scope":2527,"src":"270:66:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2528,"src":"70:268:9","usedErrors":[]}],"src":"45:294:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":24,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":396,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c3a87f75289a4225165b8bfcb0d17afc14d7ff711341fe3abcd90ce2789971a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C GASPRICE DUP8 0xF7 MSTORE DUP10 LOG4 0x22 MLOAD PUSH6 0xB8BFCB0D17AF 0xC1 0x4D PUSH32 0xF711341FE3ABCD90CE2789971A64736F6C634300081100330000000000000000 ","sourceMap":"188:2065:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c3a87f75289a4225165b8bfcb0d17afc14d7ff711341fe3abcd90ce2789971a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C GASPRICE DUP8 0xF7 MSTORE DUP10 LOG4 0x22 MLOAD PUSH6 0xB8BFCB0D17AF 0xC1 0x4D PUSH32 0xF711341FE3ABCD90CE2789971A64736F6C634300081100330000000000000000 ","sourceMap":"188:2065:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ed42ae8c403edce2dc92bdf120e44631d2ac359e85324ace1931975dfc2379a64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xD42AE8C403EDCE2DC92BDF120E44631D2AC359E85324ACE1931975DFC2379A PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12302:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ed42ae8c403edce2dc92bdf120e44631d2ac359e85324ace1931975dfc2379a64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xD42AE8C403EDCE2DC92BDF120E44631D2AC359E85324ACE1931975DFC2379A PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12302:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/MocaPoints.sol":{"MocaPoints":{"abi":[{"inputs":[{"internalType":"address","name":"_realmIdContract","type":"address"},{"internalType":"address","name":"_adminAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"reasonCodes","type":"bytes32[]"}],"name":"BatchAddedConsumeReasonCode","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32[]","name":"reasonCodes","type":"bytes32[]"}],"name":"BatchRemovedConsumeReasonCode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"realmId","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"season","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"reasonCode","type":"bytes32"},{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"realmIdOwner","type":"address"}],"name":"Consumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"season","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"reasonCode","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"realmId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"season","type":"bytes32"}],"name":"SetCurrentSeason","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSITOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_reasonCodes","type":"bytes32[]"}],"name":"batchAddConsumeReasonCodes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"_reasonCodes","type":"bytes32[]"}],"name":"batchRemoveConsumeReasonCodes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"consumeReasonCode","type":"bytes32"}],"name":"consume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentSeason","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"depositReasonCode","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"season","type":"bytes32"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"realmIdVersion","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"depositReasonCode","type":"bytes32"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"reasonCode","type":"bytes32"}],"name":"isReasonCodeAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"reasonCode","type":"bytes32"}],"name":"preparePayload","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realmIdContract","outputs":[{"internalType":"contract IRealmId","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"seasons","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_season","type":"bytes32"}],"name":"setCurrentSeason","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1739":{"entryPoint":null,"id":1739,"parameterSlots":2,"returnSlots":0},"@_412":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"@_grantRole_283":{"entryPoint":422,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_513":{"entryPoint":null,"id":513,"parameterSlots":0,"returnSlots":1},"@_setupRole_223":{"entryPoint":406,"id":223,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_500":{"entryPoint":326,"id":500,"parameterSlots":1,"returnSlots":0},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":558,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":587,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1202:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:10","statements":[{"nodeType":"YulAssignment","src":"84:22:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:10"},"nodeType":"YulFunctionCall","src":"93:13:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:10"}]},{"body":{"nodeType":"YulBlock","src":"169:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:10"},"nodeType":"YulFunctionCall","src":"171:12:10"},"nodeType":"YulExpressionStatement","src":"171:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:10"},"nodeType":"YulFunctionCall","src":"150:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:10"},"nodeType":"YulFunctionCall","src":"146:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:10"},"nodeType":"YulFunctionCall","src":"135:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:10"},"nodeType":"YulFunctionCall","src":"125:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:10"},"nodeType":"YulFunctionCall","src":"118:50:10"},"nodeType":"YulIf","src":"115:70:10"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:10","type":""}],"src":"14:177:10"},{"body":{"nodeType":"YulBlock","src":"294:195:10","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:10"},"nodeType":"YulFunctionCall","src":"342:12:10"},"nodeType":"YulExpressionStatement","src":"342:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:10"},"nodeType":"YulFunctionCall","src":"311:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:10"},"nodeType":"YulFunctionCall","src":"307:32:10"},"nodeType":"YulIf","src":"304:52:10"},{"nodeType":"YulAssignment","src":"365:50:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:10"},"nodeType":"YulFunctionCall","src":"375:40:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:10"}]},{"nodeType":"YulAssignment","src":"424:59:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:10"},"nodeType":"YulFunctionCall","src":"464:18:10"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:10"},"nodeType":"YulFunctionCall","src":"434:49:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:10"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:10","type":""}],"src":"196:293:10"},{"body":{"nodeType":"YulBlock","src":"668:178:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"696:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:10"},"nodeType":"YulFunctionCall","src":"678:21:10"},"nodeType":"YulExpressionStatement","src":"678:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"719:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"730:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"715:3:10"},"nodeType":"YulFunctionCall","src":"715:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"735:2:10","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"708:6:10"},"nodeType":"YulFunctionCall","src":"708:30:10"},"nodeType":"YulExpressionStatement","src":"708:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"769:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:10"},"nodeType":"YulFunctionCall","src":"754:18:10"},{"hexValue":"4e6f7420612076616c696420436f6e74726163742041646472657373","kind":"string","nodeType":"YulLiteral","src":"774:30:10","type":"","value":"Not a valid Contract Address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"747:6:10"},"nodeType":"YulFunctionCall","src":"747:58:10"},"nodeType":"YulExpressionStatement","src":"747:58:10"},{"nodeType":"YulAssignment","src":"814:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"826:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"837:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:10"},"nodeType":"YulFunctionCall","src":"822:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"814:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"645:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"659:4:10","type":""}],"src":"494:352:10"},{"body":{"nodeType":"YulBlock","src":"1025:175:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1042:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1053:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1035:6:10"},"nodeType":"YulFunctionCall","src":"1035:21:10"},"nodeType":"YulExpressionStatement","src":"1035:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1076:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1087:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:10"},"nodeType":"YulFunctionCall","src":"1072:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"1092:2:10","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1065:6:10"},"nodeType":"YulFunctionCall","src":"1065:30:10"},"nodeType":"YulExpressionStatement","src":"1065:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1115:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1126:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1111:3:10"},"nodeType":"YulFunctionCall","src":"1111:18:10"},{"hexValue":"4e6f7420612076616c69642041646d696e2041646472657373","kind":"string","nodeType":"YulLiteral","src":"1131:27:10","type":"","value":"Not a valid Admin Address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1104:6:10"},"nodeType":"YulFunctionCall","src":"1104:55:10"},"nodeType":"YulExpressionStatement","src":"1104:55:10"},{"nodeType":"YulAssignment","src":"1168:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1180:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1191:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1176:3:10"},"nodeType":"YulFunctionCall","src":"1176:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1168:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1002:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1016:4:10","type":""}],"src":"851:349:10"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_8df5911bab3053dea66a043ac5ac0de5a7f7e7f620bbba7bd30bfd675316ef3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not a valid Contract Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_43f75645c653e44028cb8fda54db27b2d2fd1861c70f450be62ca0f614688f4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not a valid Admin Address\")\n        tail := add(headStart, 96)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200270c3803806200270c83398101604081905262000034916200024b565b6200003f3362000146565b6001600160a01b0382166200009b5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420612076616c696420436f6e747261637420416464726573730000000060448201526064015b60405180910390fd5b6001600160a01b038116620000f35760405162461bcd60e51b815260206004820152601960248201527f4e6f7420612076616c69642041646d696e204164647265737300000000000000604482015260640162000092565b6200011f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758262000196565b50600480546001600160a01b0319166001600160a01b039290921691909117905562000283565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001a28282620001a6565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001a25760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b80516001600160a01b03811681146200024657600080fd5b919050565b600080604083850312156200025f57600080fd5b6200026a836200022e565b91506200027a602084016200022e565b90509250929050565b61247980620002936000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806391d148541161010f578063c0542cfa116100a2578063df00bb2411610071578063df00bb24146104e4578063e564a0e2146104f7578063f2fde38b1461050a578063fc6f94681461051d57600080fd5b8063c0542cfa14610488578063d14a5c71146104ab578063d547741f146104be578063dc893ce4146104d157600080fd5b8063a217fddf116100de578063a217fddf1461043d578063a3b0b5a314610445578063ad3b1d481461046c578063bcb396211461047f57600080fd5b806391d14854146103be57806399d342ac146104045780639cc7f708146104175780639d70b0051461042a57600080fd5b80633f30b00f11610187578063794459be11610156578063794459be1461036757806386a8e98a1461037a5780638da5cb5b1461038d578063906405a3146103ab57600080fd5b80633f30b00f146103025780634529cc1b14610315578063715018a61461033857806375b238fc1461034057600080fd5b8063248a9ca3116101c3578063248a9ca3146102735780632b48dc72146102975780632f2ff15d146102dc57806336568abe146102ef57600080fd5b806301ffc9a7146101f5578063098b64191461021d578063141a468c1461023e57806318ee89f01461025e575b600080fd5b610208610203366004611c59565b61053d565b60405190151581526020015b60405180910390f35b61023061022b366004611da7565b6105d6565b604051908152602001610214565b61023061024c366004611df7565b60076020526000908152604090205481565b61027161026c366004611e10565b61061a565b005b610230610281366004611df7565b6000908152600160208190526040909120015490565b6004546102b79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610214565b6102716102ea366004611e6d565b610763565b6102716102fd366004611e6d565b61078e565b610271610310366004611e9d565b610841565b610208610323366004611df7565b60036020526000908152604090205460ff1681565b610271610a13565b6102307fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b610230610375366004611f43565b610a27565b610271610388366004611df7565b610a72565b60005473ffffffffffffffffffffffffffffffffffffffff166102b7565b6102716103b9366004611e9d565b610bf1565b6102086103cc366004611e6d565b600091825260016020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610271610412366004611fa0565b610d2d565b610230610425366004611df7565b610d53565b61027161043836600461201e565b610d8e565b610230600081565b6102307f8f4f2da22e8ac8f11e15f9fc141cddbb5deea8800186560abb6e68c5496619a981565b61023061047a36600461208a565b610e4a565b61023060025481565b610208610496366004611df7565b60009081526008602052604090205460ff1690565b6102716104b93660046120ac565b610e7c565b6102716104cc366004611e6d565b610e87565b6102716104df3660046120d8565b610ead565b6102306104f23660046120ac565b610ec3565b610271610505366004612129565b610f32565b610271610518366004612180565b610f4b565b6005546102b79073ffffffffffffffffffffffffffffffffffffffff1681565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806105d057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000806105e38484611002565b905060006105f0826110a4565b60009687526006602090815260408089209489529381528388209188525250909320549392505050565b3360009081527f307e01c7b3e8b810ada5a97216bcf610dd89edeee748c1c377638b2d5e7d226e602052604090205460ff166106b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f72000000000000000000000000000000000060448201526064015b60405180910390fd5b3360009081527f307e01c7b3e8b810ada5a97216bcf610dd89edeee748c1c377638b2d5e7d226e602052604090205460ff1661074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f72000000000000000000000000000000000060448201526064016106ae565b61075c858585858561113a565b5050505050565b6000828152600160208190526040909120015461077f816111be565b61078983836111c8565b505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016106ae565b61083d8282611287565b5050565b3360009081527f50efbde2d46c37e9785f1791697f77e94bb7b701e19f1930a668820722d37694602052604090205460ff166108d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e000000000000000000000000000000000000000060448201526064016106ae565b60005b81518110156109d857600860008383815181106108fb576108fb61219d565b60209081029190910181015182528101919091526040016000205460ff1615610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526561736f6e20636f646520616c72656164792065786973747300000000000060448201526064016106ae565b6001600860008484815181106109985761099861219d565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806109d0906121fb565b9150506108dc565b507f0d8c56a8918ec09c2fe3c4d9fcc00ece66df217a1ab3ad768dd0a71620da5b4e81604051610a089190612233565b60405180910390a150565b610a1b611342565b610a2560006113c3565b565b600080610a348484611002565b90506000610a41826110a4565b6002546000908152600660209081526040808320958352948152848220928252919091529190912054949350505050565b3360009081527f50efbde2d46c37e9785f1791697f77e94bb7b701e19f1930a668820722d37694602052604090205460ff16610b0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e000000000000000000000000000000000000000060448201526064016106ae565b60008181526003602052604090205460ff1615610b83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f536561736f6e20616c726561647920736574000000000000000000000000000060448201526064016106ae565b60028190556000818152600360205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f61228c895f8ba06548597d3e34a23bc0ecb6d1e62a1eb3fa30be04883a17ef3190610a089083815260200190565b3360009081527f50efbde2d46c37e9785f1791697f77e94bb7b701e19f1930a668820722d37694602052604090205460ff16610c89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f7420616e2061646d696e000000000000000000000000000000000000000060448201526064016106ae565b60005b8151811015610cfd5760086000838381518110610cab57610cab61219d565b602090810291909101810151825281019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905580610cf5816121fb565b915050610c8c565b507f5b2c9fcbb27d48bdbfc59f0564b5ba81539309ebf09a940fad64d171bcfb9ff981604051610a089190612233565b6000610d398888611002565b9050610d49818787878787611438565b5050505050505050565b600080610d5f836110a4565b600254600090815260066020908152604080832096835295815285822092825291909152929092205492915050565b3360009081527f307e01c7b3e8b810ada5a97216bcf610dd89edeee748c1c377638b2d5e7d226e602052604090205460ff16610e26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742061206465706f7369746f72000000000000000000000000000000000060448201526064016106ae565b6000610e328686611002565b9050610e41878286868661113a565b50505050505050565b600080610e56836110a4565b600094855260066020908152604080872095875294815284862091865252505090205490565b610789838383611526565b60008281526001602081905260409091200154610ea3816111be565b6107898383611287565b610ebb868686868686611438565b505050505050565b600080610ecf856110a4565b6000868152600760209081526040918290205460025483518084019a909a52898401949094526060890197909752608088019290925260a087019490945260c0808701959095528351808703909501855260e09095019092525050805191012090565b6000610f3e8585611002565b905061075c818484611526565b610f53611342565b73ffffffffffffffffffffffffffffffffffffffff8116610ff6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ae565b610fff816113c3565b50565b600480546040517fcad6b90100000000000000000000000000000000000000000000000000000000815260009273ffffffffffffffffffffffffffffffffffffffff9092169163cad6b9019161105c9186918891016122e5565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190612307565b9392505050565b600480546040517fa9735f9400000000000000000000000000000000000000000000000000000000815291820183905260009173ffffffffffffffffffffffffffffffffffffffff9091169063a9735f9490602401602060405180830381865afa158015611116573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190612307565b600085815260066020908152604080832087845282528083208684529091528120805484929061116b908490612320565b909155505060408051858152602081018590529081018390528190869033907f9092bf6bd1cf7db4fcf41aedc7c0333b51c57f5b80b429bc3d9caa5587c6ad829060600160405180910390a45050505050565b610fff81336115cc565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661083d57600082815260016020818152604080842073ffffffffffffffffffffffffffffffffffffffff8616808652925280842080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff161561083d57600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ae565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611443876110a4565b9050600061146a888389600760008d8152602001908152602001600020548a8a8a8a611686565b9050600061147789611782565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461150e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5369676e6572206e6f74206f776e6572206f66207265616c6d4964000000000060448201526064016106ae565b61151b89848a8a85611818565b505050505050505050565b600061153184611782565b90503373ffffffffffffffffffffffffffffffffffffffff8216146115b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5369676e6572206e6f74206f776e6572206f66207265616c6d4964000000000060448201526064016106ae565b60006115bd856110a4565b905061075c8582868633611818565b600082815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661083d5761160c816119f7565b611617836020611a16565b604051602001611628929190612333565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526106ae916004016123b4565b6002546040805160208082018c90528183018b9052606082018a9052608082019390935260a0810187905260c08082018990528251808303909101815260e08201808452815191850191909120600091829052610100830180855281905260ff88166101208401526101408301879052610160830186905292519093600192610180808201937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa15801561174b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519b9a5050505050505050505050565b600480546040517f6352211e000000000000000000000000000000000000000000000000000000008152918201839052600091829173ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa1580156117f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d91906123c7565b600254600090815260066020908152604080832088845282528083208784529091529020548311156118a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064016106ae565b60008281526008602052604090205460ff1661191e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f496e76616c696420636f6e73756d6520726561736f6e20636f6465000000000060448201526064016106ae565b60025460009081526006602090815260408083208884528252808320878452909152812080548592906119529084906123e4565b9091555050600254600086815260076020908152604091829020548251338152918201529081018690526060810185905273ffffffffffffffffffffffffffffffffffffffff8316608082015283919087907fd1255d580f215da0d3a191d00a885ae4716fac76b5813a6c309919fff6078bd19060a00160405180910390a460008581526007602052604081208054916119eb836121fb565b91905055505050505050565b60606105d073ffffffffffffffffffffffffffffffffffffffff831660145b60606000611a258360026123f7565b611a30906002612320565b67ffffffffffffffff811115611a4857611a48611c9b565b6040519080825280601f01601f191660200182016040528015611a72576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611aa957611aa961219d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611b0c57611b0c61219d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611b488460026123f7565b611b53906001612320565b90505b6001811115611bf0577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611b9457611b9461219d565b1a60f81b828281518110611baa57611baa61219d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93611be98161240e565b9050611b56565b50831561109d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106ae565b600060208284031215611c6b57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461109d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d1157611d11611c9b565b604052919050565b600082601f830112611d2a57600080fd5b813567ffffffffffffffff811115611d4457611d44611c9b565b611d7560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611cca565b818152846020838601011115611d8a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611dbc57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611de157600080fd5b611ded86828701611d19565b9150509250925092565b600060208284031215611e0957600080fd5b5035919050565b600080600080600060a08688031215611e2857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b73ffffffffffffffffffffffffffffffffffffffff81168114610fff57600080fd5b60008060408385031215611e8057600080fd5b823591506020830135611e9281611e4b565b809150509250929050565b60006020808385031215611eb057600080fd5b823567ffffffffffffffff80821115611ec857600080fd5b818501915085601f830112611edc57600080fd5b813581811115611eee57611eee611c9b565b8060051b9150611eff848301611cca565b8181529183018401918481019088841115611f1957600080fd5b938501935b83851015611f3757843582529385019390850190611f1e565b98975050505050505050565b60008060408385031215611f5657600080fd5b82359150602083013567ffffffffffffffff811115611f7457600080fd5b611f8085828601611d19565b9150509250929050565b803560ff81168114611f9b57600080fd5b919050565b600080600080600080600060e0888a031215611fbb57600080fd5b87359650602088013567ffffffffffffffff811115611fd957600080fd5b611fe58a828b01611d19565b965050604088013594506060880135935061200260808901611f8a565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060c0878903121561203757600080fd5b8635955060208701359450604087013567ffffffffffffffff81111561205c57600080fd5b61206889828a01611d19565b945050606087013592506080870135915060a087013590509295509295509295565b6000806040838503121561209d57600080fd5b50508035926020909101359150565b6000806000606084860312156120c157600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c087890312156120f157600080fd5b86359550602087013594506040870135935061210f60608801611f8a565b92506080870135915060a087013590509295509295509295565b6000806000806080858703121561213f57600080fd5b84359350602085013567ffffffffffffffff81111561215d57600080fd5b61216987828801611d19565b949794965050505060408301359260600135919050565b60006020828403121561219257600080fd5b813561109d81611e4b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361222c5761222c6121cc565b5060010190565b6020808252825182820181905260009190848201906040850190845b8181101561226b5783518352928401929184019160010161224f565b50909695505050505050565b60005b8381101561229257818101518382015260200161227a565b50506000910152565b600081518084526122b3816020860160208601612277565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6040815260006122f8604083018561229b565b90508260208301529392505050565b60006020828403121561231957600080fd5b5051919050565b808201808211156105d0576105d06121cc565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161236b816017850160208801612277565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516123a8816028840160208801612277565b01602801949350505050565b60208152600061109d602083018461229b565b6000602082840312156123d957600080fd5b815161109d81611e4b565b818103818111156105d0576105d06121cc565b80820281158282048414176105d0576105d06121cc565b60008161241d5761241d6121cc565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122081f5031bc3c51911e4b66f08e6b7505aacf4dcea9140fca138d0944be0f853a264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x270C CODESIZE SUB DUP1 PUSH3 0x270C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x24B JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C696420436F6E7472616374204164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612076616C69642041646D696E204164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x92 JUMP JUMPDEST PUSH3 0x11F PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP3 PUSH3 0x196 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x283 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1A2 DUP3 DUP3 PUSH3 0x1A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x1A2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x26A DUP4 PUSH3 0x22E JUMP JUMPDEST SWAP2 POP PUSH3 0x27A PUSH1 0x20 DUP5 ADD PUSH3 0x22E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2479 DUP1 PUSH3 0x293 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC0542CFA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDF00BB24 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDF00BB24 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xE564A0E2 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0542CFA EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD14A5C71 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xDC893CE4 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xAD3B1D48 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xBCB39621 EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x99D342AC EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x9CC7F708 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x9D70B005 EQ PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F30B00F GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x794459BE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x794459BE EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x86A8E98A EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x906405A3 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F30B00F EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x4529CC1B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x2B48DC72 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x98B6419 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x141A468C EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x18EE89F0 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2B7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH2 0x271 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x271 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x230 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x230 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x230 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x208A JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x230 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x271 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x4DF CALLDATASIZE PUSH1 0x4 PUSH2 0x20D8 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x230 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x2129 JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2B7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x5D0 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E3 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5F0 DUP3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP10 KECCAK256 SWAP5 DUP10 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP9 KECCAK256 SWAP2 DUP9 MSTORE MSTORE POP SWAP1 SWAP4 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x307E01C7B3E8B810ADA5A97216BCF610DD89EDEEE748C1C377638B2D5E7D226E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x307E01C7B3E8B810ADA5A97216BCF610DD89EDEEE748C1C377638B2D5E7D226E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x75C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x113A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x77F DUP2 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x789 DUP4 DUP4 PUSH2 0x11C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x83D DUP3 DUP3 PUSH2 0x1287 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50EFBDE2D46C37E9785F1791697F77E94BB7B701E19F1930A668820722D37694 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x8 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8FB JUMPI PUSH2 0x8FB PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x998 JUMPI PUSH2 0x998 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x9D0 SWAP1 PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8DC JUMP JUMPDEST POP PUSH32 0xD8C56A8918EC09C2FE3C4D9FCC00ECE66DF217A1AB3AD768DD0A71620DA5B4E DUP2 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x1342 JUMP JUMPDEST PUSH2 0xA25 PUSH1 0x0 PUSH2 0x13C3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA34 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA41 DUP3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50EFBDE2D46C37E9785F1791697F77E94BB7B701E19F1930A668820722D37694 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536561736F6E20616C7265616479207365740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x61228C895F8BA06548597D3E34A23BC0ECB6D1E62A1EB3FA30BE04883A17EF31 SWAP1 PUSH2 0xA08 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50EFBDE2D46C37E9785F1791697F77E94BB7B701E19F1930A668820722D37694 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x8 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCAB JUMPI PUSH2 0xCAB PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 PUSH2 0xCF5 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC8C JUMP JUMPDEST POP PUSH32 0x5B2C9FCBB27D48BDBFC59F0564B5BA81539309EBF09A940FAD64D171BCFB9FF9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP9 DUP9 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH2 0xD49 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1438 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5F DUP4 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x307E01C7B3E8B810ADA5A97216BCF610DD89EDEEE748C1C377638B2D5E7D226E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE32 DUP7 DUP7 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH2 0xE41 DUP8 DUP3 DUP7 DUP7 DUP7 PUSH2 0x113A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE56 DUP4 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE POP POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x789 DUP4 DUP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xEA3 DUP2 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x789 DUP4 DUP4 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xEBB DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1438 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xECF DUP6 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP4 MLOAD DUP1 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP10 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP1 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP8 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD SWAP1 SWAP3 MSTORE POP POP DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3E DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH2 0x75C DUP2 DUP5 DUP5 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0xF53 PUSH2 0x1342 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0xFFF DUP2 PUSH2 0x13C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH4 0xCAD6B901 SWAP2 PUSH2 0x105C SWAP2 DUP7 SWAP2 DUP9 SWAP2 ADD PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x116B SWAP1 DUP5 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x9092BF6BD1CF7DB4FCF41AEDC7C0333B51C57F5B80B429BC3D9CAA5587C6AD82 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFF DUP2 CALLER PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x83D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 DUP8 PUSH2 0x10A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x146A DUP9 DUP4 DUP10 PUSH1 0x7 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP11 DUP11 DUP11 DUP11 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1477 DUP10 PUSH2 0x1782 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x151B DUP10 DUP5 DUP11 DUP11 DUP6 PUSH2 0x1818 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP6 PUSH2 0x10A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x75C DUP6 DUP3 DUP7 DUP7 CALLER PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x83D JUMPI PUSH2 0x160C DUP2 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1617 DUP4 PUSH1 0x20 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1628 SWAP3 SWAP2 SWAP1 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x6AE SWAP2 PUSH1 0x4 ADD PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP13 SWAP1 MSTORE DUP2 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP3 ADD DUP1 DUP5 MSTORE DUP2 MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP1 DUP6 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD DUP8 SWAP1 MSTORE PUSH2 0x160 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP1 SWAP4 PUSH1 0x1 SWAP3 PUSH2 0x180 DUP1 DUP3 ADD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x23C7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x191E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E73756D6520726561736F6E20636F64650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1952 SWAP1 DUP5 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE DUP4 SWAP2 SWAP1 DUP8 SWAP1 PUSH32 0xD1255D580F215DA0D3A191D00A885AE4716FAC76B5813A6C309919FFF6078BD1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x19EB DUP4 PUSH2 0x21FB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A25 DUP4 PUSH1 0x2 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1A30 SWAP1 PUSH1 0x2 PUSH2 0x2320 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A48 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AA9 JUMPI PUSH2 0x1AA9 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B0C JUMPI PUSH2 0x1B0C PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1B48 DUP5 PUSH1 0x2 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1B53 SWAP1 PUSH1 0x1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BF0 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B94 PUSH2 0x219D JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BAA JUMPI PUSH2 0x1BAA PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1BE9 DUP2 PUSH2 0x240E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B56 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x109D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D11 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D44 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1D75 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x1CCA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DED DUP7 DUP3 DUP8 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E92 DUP2 PUSH2 0x1E4B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EEE JUMPI PUSH2 0x1EEE PUSH2 0x1C9B JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x1EFF DUP5 DUP4 ADD PUSH2 0x1CCA JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x1F19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1F37 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F80 DUP6 DUP3 DUP7 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2002 PUSH1 0x80 DUP10 ADD PUSH2 0x1F8A JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2068 DUP10 DUP3 DUP11 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x20F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x210F PUSH1 0x60 DUP9 ADD PUSH2 0x1F8A JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x215D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2169 DUP8 DUP3 DUP9 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x109D DUP2 PUSH2 0x1E4B JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x222C JUMPI PUSH2 0x222C PUSH2 0x21CC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x226B JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x224F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2292 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x227A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x22B3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22F8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x229B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x21CC JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x236B DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x23A8 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2277 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x109D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x109D DUP2 PUSH2 0x1E4B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x21CC JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x241D JUMPI PUSH2 0x241D PUSH2 0x21CC JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 CREATE2 SUB SHL 0xC3 0xC5 NOT GT 0xE4 0xB6 PUSH16 0x8E6B7505AACF4DCEA9140FCA138D094 0x4B 0xE0 0xF8 MSTORE8 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"258:11238:8:-:0;;;1707:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;719:10:3;936:18:2;:32::i;:::-;-1:-1:-1;;;;;1786:39:8;;1778:80;;;;-1:-1:-1;;;1778:80:8;;696:2:10;1778:80:8;;;678:21:10;735:2;715:18;;;708:30;774;754:18;;;747:58;822:18;;1778:80:8;;;;;;;;;-1:-1:-1;;;;;1876:36:8;;1868:74;;;;-1:-1:-1;;;1868:74:8;;1053:2:10;1868:74:8;;;1035:21:10;1092:2;1072:18;;;1065:30;1131:27;1111:18;;;1104:55;1176:18;;1868:74:8;851:349:10;1868:74:8;1953:37;360:23;1976:13;1953:10;:37::i;:::-;-1:-1:-1;2000:15:8;:44;;-1:-1:-1;;;;;;2000:44:8;-1:-1:-1;;;;;2000:44:8;;;;;;;;;;258:11238;;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;6811:110:0:-;6889:25;6900:4;6906:7;6889:10;:25::i;:::-;6811:110;;:::o;7461:233::-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7539:149;;7582:12;;;;7614:4;7582:12;;;;;;;;-1:-1:-1;;;;;7582:29:0;;;;;;;;;;:36;;-1:-1:-1;;7582:36:0;;;;;;;7637:40;;719:10:3;;7582:12:0;;7637:40;;7582:12;7637:40;7461:233;;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;851:349::-;258:11238:8;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_1616":{"entryPoint":null,"id":1616,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@DEPOSITOR_ROLE_1621":{"entryPoint":null,"id":1621,"parameterSlots":0,"returnSlots":0},"@_checkOwner_443":{"entryPoint":4930,"id":443,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":5580,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":4542,"id":92,"parameterSlots":1,"returnSlots":0},"@_consumeWithSignature_2127":{"entryPoint":5176,"id":2127,"parameterSlots":6,"returnSlots":0},"@_consumeWithoutSignature_2288":{"entryPoint":5414,"id":2288,"parameterSlots":3,"returnSlots":0},"@_consume_2190":{"entryPoint":6168,"id":2190,"parameterSlots":5,"returnSlots":0},"@_deposit_1964":{"entryPoint":4410,"id":1964,"parameterSlots":5,"returnSlots":0},"@_getRealmIdVersion_1808":{"entryPoint":4260,"id":1808,"parameterSlots":1,"returnSlots":1},"@_getSigner_2069":{"entryPoint":5766,"id":2069,"parameterSlots":8,"returnSlots":1},"@_grantRole_283":{"entryPoint":4552,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_513":{"entryPoint":null,"id":513,"parameterSlots":0,"returnSlots":1},"@_preparePayload_2471":{"entryPoint":null,"id":2471,"parameterSlots":5,"returnSlots":1},"@_prepareRealmId_1836":{"entryPoint":4098,"id":1836,"parameterSlots":2,"returnSlots":1},"@_revokeRole_314":{"entryPoint":4743,"id":314,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_500":{"entryPoint":5059,"id":500,"parameterSlots":1,"returnSlots":0},"@adminAddress_1632":{"entryPoint":null,"id":1632,"parameterSlots":0,"returnSlots":0},"@balanceOf_2353":{"entryPoint":3658,"id":2353,"parameterSlots":2,"returnSlots":1},"@balanceOf_2386":{"entryPoint":1494,"id":2386,"parameterSlots":3,"returnSlots":1},"@balanceOf_2408":{"entryPoint":3411,"id":2408,"parameterSlots":1,"returnSlots":1},"@balanceOf_2439":{"entryPoint":2599,"id":2439,"parameterSlots":2,"returnSlots":1},"@batchAddConsumeReasonCodes_1897":{"entryPoint":2113,"id":1897,"parameterSlots":1,"returnSlots":0},"@batchRemoveConsumeReasonCodes_1930":{"entryPoint":3057,"id":1930,"parameterSlots":1,"returnSlots":0},"@consume_2224":{"entryPoint":3373,"id":2224,"parameterSlots":7,"returnSlots":0},"@consume_2249":{"entryPoint":3757,"id":2249,"parameterSlots":6,"returnSlots":0},"@consume_2313":{"entryPoint":3890,"id":2313,"parameterSlots":4,"returnSlots":0},"@consume_2329":{"entryPoint":3708,"id":2329,"parameterSlots":3,"returnSlots":0},"@currentSeason_1623":{"entryPoint":null,"id":1623,"parameterSlots":0,"returnSlots":0},"@deposit_1997":{"entryPoint":1562,"id":1997,"parameterSlots":5,"returnSlots":0},"@deposit_2030":{"entryPoint":3470,"id":2030,"parameterSlots":6,"returnSlots":0},"@getRoleAdmin_146":{"entryPoint":null,"id":146,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":1891,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"@isReasonCodeAllowed_1820":{"entryPoint":null,"id":1820,"parameterSlots":1,"returnSlots":1},"@nonces_1644":{"entryPoint":null,"id":1644,"parameterSlots":0,"returnSlots":0},"@owner_1853":{"entryPoint":6018,"id":1853,"parameterSlots":1,"returnSlots":1},"@owner_429":{"entryPoint":null,"id":429,"parameterSlots":0,"returnSlots":1},"@preparePayload_2500":{"entryPoint":3779,"id":2500,"parameterSlots":3,"returnSlots":1},"@realmIdContract_1630":{"entryPoint":null,"id":1630,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_457":{"entryPoint":2579,"id":457,"parameterSlots":0,"returnSlots":0},"@renounceRole_209":{"entryPoint":1934,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":3719,"id":186,"parameterSlots":2,"returnSlots":0},"@seasons_1627":{"entryPoint":null,"id":1627,"parameterSlots":0,"returnSlots":0},"@setCurrentSeason_1795":{"entryPoint":2674,"id":1795,"parameterSlots":1,"returnSlots":0},"@supportsInterface_60":{"entryPoint":1341,"id":60,"parameterSlots":1,"returnSlots":1},"@supportsInterface_721":{"entryPoint":null,"id":721,"parameterSlots":1,"returnSlots":1},"@toHexString_677":{"entryPoint":6678,"id":677,"parameterSlots":2,"returnSlots":1},"@toHexString_697":{"entryPoint":6647,"id":697,"parameterSlots":1,"returnSlots":1},"@transferOwnership_480":{"entryPoint":3915,"id":480,"parameterSlots":1,"returnSlots":0},"abi_decode_string":{"entryPoint":7449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":9159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":7789,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr":{"entryPoint":7591,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32":{"entryPoint":8222,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bytes32t_string_memory_ptr":{"entryPoint":8003,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32":{"entryPoint":8489,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32":{"entryPoint":8096,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":8330,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32":{"entryPoint":7696,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes4":{"entryPoint":7257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_bytes32":{"entryPoint":8364,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32":{"entryPoint":8408,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_uint8":{"entryPoint":8074,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":8859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9011,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IRealmId_$2527__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":8933,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":7370,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8992,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9207,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9188,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8823,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":9230,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8699,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8652,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8605,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7323,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":7755,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19090:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:10"},"nodeType":"YulFunctionCall","src":"131:12:10"},"nodeType":"YulExpressionStatement","src":"131:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:10"},"nodeType":"YulFunctionCall","src":"100:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:10"},"nodeType":"YulFunctionCall","src":"96:32:10"},"nodeType":"YulIf","src":"93:52:10"},{"nodeType":"YulVariableDeclaration","src":"154:36:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:10"},"nodeType":"YulFunctionCall","src":"167:23:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"300:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:10"},"nodeType":"YulFunctionCall","src":"302:12:10"},"nodeType":"YulExpressionStatement","src":"302:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"230:66:10","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:10"},"nodeType":"YulFunctionCall","src":"219:78:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:10"},"nodeType":"YulFunctionCall","src":"209:89:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:10"},"nodeType":"YulFunctionCall","src":"202:97:10"},"nodeType":"YulIf","src":"199:117:10"},{"nodeType":"YulAssignment","src":"325:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:10"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:10","type":""}],"src":"14:332:10"},{"body":{"nodeType":"YulBlock","src":"446:92:10","statements":[{"nodeType":"YulAssignment","src":"456:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:10"},"nodeType":"YulFunctionCall","src":"464:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"456:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:10"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"523:6:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"516:6:10"},"nodeType":"YulFunctionCall","src":"516:14:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"509:6:10"},"nodeType":"YulFunctionCall","src":"509:22:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"491:6:10"},"nodeType":"YulFunctionCall","src":"491:41:10"},"nodeType":"YulExpressionStatement","src":"491:41:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"415:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"426:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"437:4:10","type":""}],"src":"351:187:10"},{"body":{"nodeType":"YulBlock","src":"575:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"592:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"595:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"585:6:10"},"nodeType":"YulFunctionCall","src":"585:88:10"},"nodeType":"YulExpressionStatement","src":"585:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"689:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"692:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"682:6:10"},"nodeType":"YulFunctionCall","src":"682:15:10"},"nodeType":"YulExpressionStatement","src":"682:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"713:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"716:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"706:6:10"},"nodeType":"YulFunctionCall","src":"706:15:10"},"nodeType":"YulExpressionStatement","src":"706:15:10"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"543:184:10"},{"body":{"nodeType":"YulBlock","src":"777:289:10","statements":[{"nodeType":"YulAssignment","src":"787:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"797:5:10"},"nodeType":"YulFunctionCall","src":"797:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"787:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"815:117:10","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"837:6:10"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"853:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"859:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"849:3:10"},"nodeType":"YulFunctionCall","src":"849:13:10"},{"kind":"number","nodeType":"YulLiteral","src":"864:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"845:3:10"},"nodeType":"YulFunctionCall","src":"845:86:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"833:3:10"},"nodeType":"YulFunctionCall","src":"833:99:10"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"819:10:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1007:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1009:16:10"},"nodeType":"YulFunctionCall","src":"1009:18:10"},"nodeType":"YulExpressionStatement","src":"1009:18:10"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"950:10:10"},{"kind":"number","nodeType":"YulLiteral","src":"962:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"947:2:10"},"nodeType":"YulFunctionCall","src":"947:34:10"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"986:10:10"},{"name":"memPtr","nodeType":"YulIdentifier","src":"998:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"983:2:10"},"nodeType":"YulFunctionCall","src":"983:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"944:2:10"},"nodeType":"YulFunctionCall","src":"944:62:10"},"nodeType":"YulIf","src":"941:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1045:2:10","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1049:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1038:6:10"},"nodeType":"YulFunctionCall","src":"1038:22:10"},"nodeType":"YulExpressionStatement","src":"1038:22:10"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"757:4:10","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"766:6:10","type":""}],"src":"732:334:10"},{"body":{"nodeType":"YulBlock","src":"1124:537:10","statements":[{"body":{"nodeType":"YulBlock","src":"1173:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1182:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1185:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1175:6:10"},"nodeType":"YulFunctionCall","src":"1175:12:10"},"nodeType":"YulExpressionStatement","src":"1175:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1152:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1160:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1148:3:10"},"nodeType":"YulFunctionCall","src":"1148:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"1167:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1144:3:10"},"nodeType":"YulFunctionCall","src":"1144:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1137:6:10"},"nodeType":"YulFunctionCall","src":"1137:35:10"},"nodeType":"YulIf","src":"1134:55:10"},{"nodeType":"YulVariableDeclaration","src":"1198:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1208:12:10"},"nodeType":"YulFunctionCall","src":"1208:20:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1202:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1267:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1269:16:10"},"nodeType":"YulFunctionCall","src":"1269:18:10"},"nodeType":"YulExpressionStatement","src":"1269:18:10"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1243:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"1247:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1240:2:10"},"nodeType":"YulFunctionCall","src":"1240:26:10"},"nodeType":"YulIf","src":"1237:52:10"},{"nodeType":"YulVariableDeclaration","src":"1298:129:10","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1341:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"1345:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1337:3:10"},"nodeType":"YulFunctionCall","src":"1337:13:10"},{"kind":"number","nodeType":"YulLiteral","src":"1352:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1333:3:10"},"nodeType":"YulFunctionCall","src":"1333:86:10"},{"kind":"number","nodeType":"YulLiteral","src":"1421:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1329:3:10"},"nodeType":"YulFunctionCall","src":"1329:97:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1313:15:10"},"nodeType":"YulFunctionCall","src":"1313:114:10"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"1302:7:10","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1443:7:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1452:2:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1436:6:10"},"nodeType":"YulFunctionCall","src":"1436:19:10"},"nodeType":"YulExpressionStatement","src":"1436:19:10"},{"body":{"nodeType":"YulBlock","src":"1503:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1512:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1515:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1505:6:10"},"nodeType":"YulFunctionCall","src":"1505:12:10"},"nodeType":"YulExpressionStatement","src":"1505:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1478:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1486:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1474:3:10"},"nodeType":"YulFunctionCall","src":"1474:15:10"},{"kind":"number","nodeType":"YulLiteral","src":"1491:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1470:3:10"},"nodeType":"YulFunctionCall","src":"1470:26:10"},{"name":"end","nodeType":"YulIdentifier","src":"1498:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1467:2:10"},"nodeType":"YulFunctionCall","src":"1467:35:10"},"nodeType":"YulIf","src":"1464:55:10"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1545:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"1554:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:10"},"nodeType":"YulFunctionCall","src":"1541:18:10"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1565:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1573:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1561:3:10"},"nodeType":"YulFunctionCall","src":"1561:17:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1580:2:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1528:12:10"},"nodeType":"YulFunctionCall","src":"1528:55:10"},"nodeType":"YulExpressionStatement","src":"1528:55:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1607:7:10"},{"name":"_1","nodeType":"YulIdentifier","src":"1616:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1603:3:10"},"nodeType":"YulFunctionCall","src":"1603:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"1621:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:10"},"nodeType":"YulFunctionCall","src":"1599:27:10"},{"kind":"number","nodeType":"YulLiteral","src":"1628:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1592:6:10"},"nodeType":"YulFunctionCall","src":"1592:38:10"},"nodeType":"YulExpressionStatement","src":"1592:38:10"},{"nodeType":"YulAssignment","src":"1639:16:10","value":{"name":"array_1","nodeType":"YulIdentifier","src":"1648:7:10"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1639:5:10"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1098:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1106:3:10","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1114:5:10","type":""}],"src":"1071:590:10"},{"body":{"nodeType":"YulBlock","src":"1780:344:10","statements":[{"body":{"nodeType":"YulBlock","src":"1826:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1835:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1838:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1828:6:10"},"nodeType":"YulFunctionCall","src":"1828:12:10"},"nodeType":"YulExpressionStatement","src":"1828:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1801:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"1810:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1797:3:10"},"nodeType":"YulFunctionCall","src":"1797:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"1822:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1793:3:10"},"nodeType":"YulFunctionCall","src":"1793:32:10"},"nodeType":"YulIf","src":"1790:52:10"},{"nodeType":"YulAssignment","src":"1851:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1874:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1861:12:10"},"nodeType":"YulFunctionCall","src":"1861:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1851:6:10"}]},{"nodeType":"YulAssignment","src":"1893:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1920:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1931:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1916:3:10"},"nodeType":"YulFunctionCall","src":"1916:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1903:12:10"},"nodeType":"YulFunctionCall","src":"1903:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1893:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"1944:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1975:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1986:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1971:3:10"},"nodeType":"YulFunctionCall","src":"1971:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1958:12:10"},"nodeType":"YulFunctionCall","src":"1958:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1948:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"2033:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2042:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2045:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2035:6:10"},"nodeType":"YulFunctionCall","src":"2035:12:10"},"nodeType":"YulExpressionStatement","src":"2035:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2005:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2013:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2002:2:10"},"nodeType":"YulFunctionCall","src":"2002:30:10"},"nodeType":"YulIf","src":"1999:50:10"},{"nodeType":"YulAssignment","src":"2058:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2090:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2101:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2086:3:10"},"nodeType":"YulFunctionCall","src":"2086:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2110:7:10"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"2068:17:10"},"nodeType":"YulFunctionCall","src":"2068:50:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2058:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1730:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1741:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1753:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1761:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1769:6:10","type":""}],"src":"1666:458:10"},{"body":{"nodeType":"YulBlock","src":"2230:76:10","statements":[{"nodeType":"YulAssignment","src":"2240:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2252:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2263:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2248:3:10"},"nodeType":"YulFunctionCall","src":"2248:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2240:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"2293:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2275:6:10"},"nodeType":"YulFunctionCall","src":"2275:25:10"},"nodeType":"YulExpressionStatement","src":"2275:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2199:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2210:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2221:4:10","type":""}],"src":"2129:177:10"},{"body":{"nodeType":"YulBlock","src":"2381:110:10","statements":[{"body":{"nodeType":"YulBlock","src":"2427:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2436:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2439:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2429:6:10"},"nodeType":"YulFunctionCall","src":"2429:12:10"},"nodeType":"YulExpressionStatement","src":"2429:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2402:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2398:3:10"},"nodeType":"YulFunctionCall","src":"2398:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2423:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2394:3:10"},"nodeType":"YulFunctionCall","src":"2394:32:10"},"nodeType":"YulIf","src":"2391:52:10"},{"nodeType":"YulAssignment","src":"2452:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2475:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2462:12:10"},"nodeType":"YulFunctionCall","src":"2462:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2452:6:10"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2347:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2358:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2370:6:10","type":""}],"src":"2311:180:10"},{"body":{"nodeType":"YulBlock","src":"2634:316:10","statements":[{"body":{"nodeType":"YulBlock","src":"2681:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2690:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2693:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2683:6:10"},"nodeType":"YulFunctionCall","src":"2683:12:10"},"nodeType":"YulExpressionStatement","src":"2683:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2655:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2664:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2651:3:10"},"nodeType":"YulFunctionCall","src":"2651:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2676:3:10","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2647:3:10"},"nodeType":"YulFunctionCall","src":"2647:33:10"},"nodeType":"YulIf","src":"2644:53:10"},{"nodeType":"YulAssignment","src":"2706:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2716:12:10"},"nodeType":"YulFunctionCall","src":"2716:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2706:6:10"}]},{"nodeType":"YulAssignment","src":"2748:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2775:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2786:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2771:3:10"},"nodeType":"YulFunctionCall","src":"2771:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2758:12:10"},"nodeType":"YulFunctionCall","src":"2758:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2748:6:10"}]},{"nodeType":"YulAssignment","src":"2799:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2826:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2837:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2822:3:10"},"nodeType":"YulFunctionCall","src":"2822:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2809:12:10"},"nodeType":"YulFunctionCall","src":"2809:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2799:6:10"}]},{"nodeType":"YulAssignment","src":"2850:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2877:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2888:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2873:3:10"},"nodeType":"YulFunctionCall","src":"2873:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2860:12:10"},"nodeType":"YulFunctionCall","src":"2860:32:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2850:6:10"}]},{"nodeType":"YulAssignment","src":"2901:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2928:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2939:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:10"},"nodeType":"YulFunctionCall","src":"2924:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2911:12:10"},"nodeType":"YulFunctionCall","src":"2911:33:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2901:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2568:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2579:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2591:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2599:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2607:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2615:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2623:6:10","type":""}],"src":"2496:454:10"},{"body":{"nodeType":"YulBlock","src":"3025:110:10","statements":[{"body":{"nodeType":"YulBlock","src":"3071:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3080:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3083:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3073:6:10"},"nodeType":"YulFunctionCall","src":"3073:12:10"},"nodeType":"YulExpressionStatement","src":"3073:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3046:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3055:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3042:3:10"},"nodeType":"YulFunctionCall","src":"3042:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3067:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3038:3:10"},"nodeType":"YulFunctionCall","src":"3038:32:10"},"nodeType":"YulIf","src":"3035:52:10"},{"nodeType":"YulAssignment","src":"3096:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3119:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3106:12:10"},"nodeType":"YulFunctionCall","src":"3106:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3096:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2991:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3002:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3014:6:10","type":""}],"src":"2955:180:10"},{"body":{"nodeType":"YulBlock","src":"3241:76:10","statements":[{"nodeType":"YulAssignment","src":"3251:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3263:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3274:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3259:3:10"},"nodeType":"YulFunctionCall","src":"3259:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3251:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3293:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"3304:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3286:6:10"},"nodeType":"YulFunctionCall","src":"3286:25:10"},"nodeType":"YulExpressionStatement","src":"3286:25:10"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3210:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3221:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3232:4:10","type":""}],"src":"3140:177:10"},{"body":{"nodeType":"YulBlock","src":"3440:125:10","statements":[{"nodeType":"YulAssignment","src":"3450:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3462:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3473:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3458:3:10"},"nodeType":"YulFunctionCall","src":"3458:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3450:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3507:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3515:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3503:3:10"},"nodeType":"YulFunctionCall","src":"3503:55:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3485:6:10"},"nodeType":"YulFunctionCall","src":"3485:74:10"},"nodeType":"YulExpressionStatement","src":"3485:74:10"}]},"name":"abi_encode_tuple_t_contract$_IRealmId_$2527__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3409:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3420:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3431:4:10","type":""}],"src":"3322:243:10"},{"body":{"nodeType":"YulBlock","src":"3615:109:10","statements":[{"body":{"nodeType":"YulBlock","src":"3702:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3711:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3714:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3704:6:10"},"nodeType":"YulFunctionCall","src":"3704:12:10"},"nodeType":"YulExpressionStatement","src":"3704:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3638:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3649:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3656:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3645:3:10"},"nodeType":"YulFunctionCall","src":"3645:54:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3635:2:10"},"nodeType":"YulFunctionCall","src":"3635:65:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3628:6:10"},"nodeType":"YulFunctionCall","src":"3628:73:10"},"nodeType":"YulIf","src":"3625:93:10"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3604:5:10","type":""}],"src":"3570:154:10"},{"body":{"nodeType":"YulBlock","src":"3816:228:10","statements":[{"body":{"nodeType":"YulBlock","src":"3862:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3871:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3874:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3864:6:10"},"nodeType":"YulFunctionCall","src":"3864:12:10"},"nodeType":"YulExpressionStatement","src":"3864:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3837:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3833:3:10"},"nodeType":"YulFunctionCall","src":"3833:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3858:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3829:3:10"},"nodeType":"YulFunctionCall","src":"3829:32:10"},"nodeType":"YulIf","src":"3826:52:10"},{"nodeType":"YulAssignment","src":"3887:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3910:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3897:12:10"},"nodeType":"YulFunctionCall","src":"3897:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3887:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"3929:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3959:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3970:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3955:3:10"},"nodeType":"YulFunctionCall","src":"3955:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3942:12:10"},"nodeType":"YulFunctionCall","src":"3942:32:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3933:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4008:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3983:24:10"},"nodeType":"YulFunctionCall","src":"3983:31:10"},"nodeType":"YulExpressionStatement","src":"3983:31:10"},{"nodeType":"YulAssignment","src":"4023:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"4033:5:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4023:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3774:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3785:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3797:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3805:6:10","type":""}],"src":"3729:315:10"},{"body":{"nodeType":"YulBlock","src":"4144:851:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4154:12:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4164:2:10","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4158:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4211:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4220:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4223:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4213:6:10"},"nodeType":"YulFunctionCall","src":"4213:12:10"},"nodeType":"YulExpressionStatement","src":"4213:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4186:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4195:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4182:3:10"},"nodeType":"YulFunctionCall","src":"4182:23:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4207:2:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4178:3:10"},"nodeType":"YulFunctionCall","src":"4178:32:10"},"nodeType":"YulIf","src":"4175:52:10"},{"nodeType":"YulVariableDeclaration","src":"4236:37:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4250:12:10"},"nodeType":"YulFunctionCall","src":"4250:23:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4240:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4282:28:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4292:18:10","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4286:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4337:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4346:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4349:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4339:6:10"},"nodeType":"YulFunctionCall","src":"4339:12:10"},"nodeType":"YulExpressionStatement","src":"4339:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4325:6:10"},{"name":"_2","nodeType":"YulIdentifier","src":"4333:2:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4322:2:10"},"nodeType":"YulFunctionCall","src":"4322:14:10"},"nodeType":"YulIf","src":"4319:34:10"},{"nodeType":"YulVariableDeclaration","src":"4362:32:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4376:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4387:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:10"},"nodeType":"YulFunctionCall","src":"4372:22:10"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4366:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4442:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4451:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4454:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4444:6:10"},"nodeType":"YulFunctionCall","src":"4444:12:10"},"nodeType":"YulExpressionStatement","src":"4444:12:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4421:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"4425:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:10"},"nodeType":"YulFunctionCall","src":"4417:13:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4432:7:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4413:3:10"},"nodeType":"YulFunctionCall","src":"4413:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4406:6:10"},"nodeType":"YulFunctionCall","src":"4406:35:10"},"nodeType":"YulIf","src":"4403:55:10"},{"nodeType":"YulVariableDeclaration","src":"4467:26:10","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4490:2:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4477:12:10"},"nodeType":"YulFunctionCall","src":"4477:16:10"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4471:2:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4516:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4518:16:10"},"nodeType":"YulFunctionCall","src":"4518:18:10"},"nodeType":"YulExpressionStatement","src":"4518:18:10"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"4508:2:10"},{"name":"_2","nodeType":"YulIdentifier","src":"4512:2:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4505:2:10"},"nodeType":"YulFunctionCall","src":"4505:10:10"},"nodeType":"YulIf","src":"4502:36:10"},{"nodeType":"YulVariableDeclaration","src":"4547:20:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4561:1:10","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"4564:2:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4557:3:10"},"nodeType":"YulFunctionCall","src":"4557:10:10"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"4551:2:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4576:39:10","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"4607:2:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4611:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4603:3:10"},"nodeType":"YulFunctionCall","src":"4603:11:10"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4587:15:10"},"nodeType":"YulFunctionCall","src":"4587:28:10"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4580:3:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4624:16:10","value":{"name":"dst","nodeType":"YulIdentifier","src":"4637:3:10"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4628:5:10","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4656:3:10"},{"name":"_4","nodeType":"YulIdentifier","src":"4661:2:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4649:6:10"},"nodeType":"YulFunctionCall","src":"4649:15:10"},"nodeType":"YulExpressionStatement","src":"4649:15:10"},{"nodeType":"YulAssignment","src":"4673:19:10","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4684:3:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4689:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4680:3:10"},"nodeType":"YulFunctionCall","src":"4680:12:10"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4673:3:10"}]},{"nodeType":"YulVariableDeclaration","src":"4701:34:10","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4723:2:10"},{"name":"_5","nodeType":"YulIdentifier","src":"4727:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4719:3:10"},"nodeType":"YulFunctionCall","src":"4719:11:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4732:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:10"},"nodeType":"YulFunctionCall","src":"4715:20:10"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4705:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4767:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4776:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4779:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4769:6:10"},"nodeType":"YulFunctionCall","src":"4769:12:10"},"nodeType":"YulExpressionStatement","src":"4769:12:10"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4750:6:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4758:7:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4747:2:10"},"nodeType":"YulFunctionCall","src":"4747:19:10"},"nodeType":"YulIf","src":"4744:39:10"},{"nodeType":"YulVariableDeclaration","src":"4792:22:10","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4807:2:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4811:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4803:3:10"},"nodeType":"YulFunctionCall","src":"4803:11:10"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4796:3:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4879:86:10","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4900:3:10"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4918:3:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4905:12:10"},"nodeType":"YulFunctionCall","src":"4905:17:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4893:6:10"},"nodeType":"YulFunctionCall","src":"4893:30:10"},"nodeType":"YulExpressionStatement","src":"4893:30:10"},{"nodeType":"YulAssignment","src":"4936:19:10","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4947:3:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4952:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4943:3:10"},"nodeType":"YulFunctionCall","src":"4943:12:10"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4936:3:10"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4834:3:10"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4839:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4831:2:10"},"nodeType":"YulFunctionCall","src":"4831:15:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4847:23:10","statements":[{"nodeType":"YulAssignment","src":"4849:19:10","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4860:3:10"},{"name":"_1","nodeType":"YulIdentifier","src":"4865:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4856:3:10"},"nodeType":"YulFunctionCall","src":"4856:12:10"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4849:3:10"}]}]},"pre":{"nodeType":"YulBlock","src":"4827:3:10","statements":[]},"src":"4823:142:10"},{"nodeType":"YulAssignment","src":"4974:15:10","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4984:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4974:6:10"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4110:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4121:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4133:6:10","type":""}],"src":"4049:946:10"},{"body":{"nodeType":"YulBlock","src":"5097:293:10","statements":[{"body":{"nodeType":"YulBlock","src":"5143:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5152:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5155:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5145:6:10"},"nodeType":"YulFunctionCall","src":"5145:12:10"},"nodeType":"YulExpressionStatement","src":"5145:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5118:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"5127:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5114:3:10"},"nodeType":"YulFunctionCall","src":"5114:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"5139:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5110:3:10"},"nodeType":"YulFunctionCall","src":"5110:32:10"},"nodeType":"YulIf","src":"5107:52:10"},{"nodeType":"YulAssignment","src":"5168:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5178:12:10"},"nodeType":"YulFunctionCall","src":"5178:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5168:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"5210:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5241:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5252:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5237:3:10"},"nodeType":"YulFunctionCall","src":"5237:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5224:12:10"},"nodeType":"YulFunctionCall","src":"5224:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5214:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5299:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5308:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5311:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5301:6:10"},"nodeType":"YulFunctionCall","src":"5301:12:10"},"nodeType":"YulExpressionStatement","src":"5301:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5271:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5279:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5268:2:10"},"nodeType":"YulFunctionCall","src":"5268:30:10"},"nodeType":"YulIf","src":"5265:50:10"},{"nodeType":"YulAssignment","src":"5324:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5356:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5367:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5352:3:10"},"nodeType":"YulFunctionCall","src":"5352:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5376:7:10"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"5334:17:10"},"nodeType":"YulFunctionCall","src":"5334:50:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5324:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5055:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5066:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5078:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5086:6:10","type":""}],"src":"5000:390:10"},{"body":{"nodeType":"YulBlock","src":"5496:125:10","statements":[{"nodeType":"YulAssignment","src":"5506:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5518:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5529:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5514:3:10"},"nodeType":"YulFunctionCall","src":"5514:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5506:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5548:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5563:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5571:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5559:3:10"},"nodeType":"YulFunctionCall","src":"5559:55:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5541:6:10"},"nodeType":"YulFunctionCall","src":"5541:74:10"},"nodeType":"YulExpressionStatement","src":"5541:74:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5465:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5476:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5487:4:10","type":""}],"src":"5395:226:10"},{"body":{"nodeType":"YulBlock","src":"5673:109:10","statements":[{"nodeType":"YulAssignment","src":"5683:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5705:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5692:12:10"},"nodeType":"YulFunctionCall","src":"5692:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5683:5:10"}]},{"body":{"nodeType":"YulBlock","src":"5760:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5769:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5772:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5762:6:10"},"nodeType":"YulFunctionCall","src":"5762:12:10"},"nodeType":"YulExpressionStatement","src":"5762:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5734:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5745:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"5752:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5741:3:10"},"nodeType":"YulFunctionCall","src":"5741:16:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5731:2:10"},"nodeType":"YulFunctionCall","src":"5731:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5724:6:10"},"nodeType":"YulFunctionCall","src":"5724:35:10"},"nodeType":"YulIf","src":"5721:55:10"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5652:6:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5663:5:10","type":""}],"src":"5626:156:10"},{"body":{"nodeType":"YulBlock","src":"5967:556:10","statements":[{"body":{"nodeType":"YulBlock","src":"6014:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6023:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6026:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6016:6:10"},"nodeType":"YulFunctionCall","src":"6016:12:10"},"nodeType":"YulExpressionStatement","src":"6016:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5988:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"5997:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5984:3:10"},"nodeType":"YulFunctionCall","src":"5984:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6009:3:10","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5980:3:10"},"nodeType":"YulFunctionCall","src":"5980:33:10"},"nodeType":"YulIf","src":"5977:53:10"},{"nodeType":"YulAssignment","src":"6039:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6062:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6049:12:10"},"nodeType":"YulFunctionCall","src":"6049:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6039:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"6081:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6112:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6123:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6108:3:10"},"nodeType":"YulFunctionCall","src":"6108:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6095:12:10"},"nodeType":"YulFunctionCall","src":"6095:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6085:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"6170:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6179:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6182:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6172:6:10"},"nodeType":"YulFunctionCall","src":"6172:12:10"},"nodeType":"YulExpressionStatement","src":"6172:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6142:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6150:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6139:2:10"},"nodeType":"YulFunctionCall","src":"6139:30:10"},"nodeType":"YulIf","src":"6136:50:10"},{"nodeType":"YulAssignment","src":"6195:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6227:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"6238:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6223:3:10"},"nodeType":"YulFunctionCall","src":"6223:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6247:7:10"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6205:17:10"},"nodeType":"YulFunctionCall","src":"6205:50:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6195:6:10"}]},{"nodeType":"YulAssignment","src":"6264:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6291:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6302:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6287:3:10"},"nodeType":"YulFunctionCall","src":"6287:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6274:12:10"},"nodeType":"YulFunctionCall","src":"6274:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6264:6:10"}]},{"nodeType":"YulAssignment","src":"6315:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6342:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6353:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:10"},"nodeType":"YulFunctionCall","src":"6338:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6325:12:10"},"nodeType":"YulFunctionCall","src":"6325:32:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6315:6:10"}]},{"nodeType":"YulAssignment","src":"6366:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6397:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6408:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6393:3:10"},"nodeType":"YulFunctionCall","src":"6393:19:10"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6376:16:10"},"nodeType":"YulFunctionCall","src":"6376:37:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6366:6:10"}]},{"nodeType":"YulAssignment","src":"6422:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6449:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6460:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6445:3:10"},"nodeType":"YulFunctionCall","src":"6445:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6432:12:10"},"nodeType":"YulFunctionCall","src":"6432:33:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6422:6:10"}]},{"nodeType":"YulAssignment","src":"6474:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6512:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:10"},"nodeType":"YulFunctionCall","src":"6497:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6484:12:10"},"nodeType":"YulFunctionCall","src":"6484:33:10"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6474:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5885:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5896:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5908:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5916:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5924:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5932:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5940:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5948:6:10","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5956:6:10","type":""}],"src":"5787:736:10"},{"body":{"nodeType":"YulBlock","src":"6693:500:10","statements":[{"body":{"nodeType":"YulBlock","src":"6740:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6749:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6752:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6742:6:10"},"nodeType":"YulFunctionCall","src":"6742:12:10"},"nodeType":"YulExpressionStatement","src":"6742:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6714:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6723:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6710:3:10"},"nodeType":"YulFunctionCall","src":"6710:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6735:3:10","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6706:3:10"},"nodeType":"YulFunctionCall","src":"6706:33:10"},"nodeType":"YulIf","src":"6703:53:10"},{"nodeType":"YulAssignment","src":"6765:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6788:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6775:12:10"},"nodeType":"YulFunctionCall","src":"6775:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6765:6:10"}]},{"nodeType":"YulAssignment","src":"6807:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6834:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:10"},"nodeType":"YulFunctionCall","src":"6830:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6817:12:10"},"nodeType":"YulFunctionCall","src":"6817:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6807:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"6858:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6889:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6900:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6885:3:10"},"nodeType":"YulFunctionCall","src":"6885:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6872:12:10"},"nodeType":"YulFunctionCall","src":"6872:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6862:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"6947:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6956:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6959:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6949:6:10"},"nodeType":"YulFunctionCall","src":"6949:12:10"},"nodeType":"YulExpressionStatement","src":"6949:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6919:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"6927:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6916:2:10"},"nodeType":"YulFunctionCall","src":"6916:30:10"},"nodeType":"YulIf","src":"6913:50:10"},{"nodeType":"YulAssignment","src":"6972:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7004:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7015:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7000:3:10"},"nodeType":"YulFunctionCall","src":"7000:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7024:7:10"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"6982:17:10"},"nodeType":"YulFunctionCall","src":"6982:50:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6972:6:10"}]},{"nodeType":"YulAssignment","src":"7041:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7068:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7079:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7064:3:10"},"nodeType":"YulFunctionCall","src":"7064:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7051:12:10"},"nodeType":"YulFunctionCall","src":"7051:32:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7041:6:10"}]},{"nodeType":"YulAssignment","src":"7092:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7119:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7130:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7115:3:10"},"nodeType":"YulFunctionCall","src":"7115:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7102:12:10"},"nodeType":"YulFunctionCall","src":"7102:33:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7092:6:10"}]},{"nodeType":"YulAssignment","src":"7144:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7171:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7182:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7167:3:10"},"nodeType":"YulFunctionCall","src":"7167:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7154:12:10"},"nodeType":"YulFunctionCall","src":"7154:33:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7144:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6619:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6630:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6642:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6650:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6658:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6666:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6674:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6682:6:10","type":""}],"src":"6528:665:10"},{"body":{"nodeType":"YulBlock","src":"7285:161:10","statements":[{"body":{"nodeType":"YulBlock","src":"7331:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7340:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7343:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7333:6:10"},"nodeType":"YulFunctionCall","src":"7333:12:10"},"nodeType":"YulExpressionStatement","src":"7333:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7306:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7302:3:10"},"nodeType":"YulFunctionCall","src":"7302:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7327:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7298:3:10"},"nodeType":"YulFunctionCall","src":"7298:32:10"},"nodeType":"YulIf","src":"7295:52:10"},{"nodeType":"YulAssignment","src":"7356:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7379:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7366:12:10"},"nodeType":"YulFunctionCall","src":"7366:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7356:6:10"}]},{"nodeType":"YulAssignment","src":"7398:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7436:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:10"},"nodeType":"YulFunctionCall","src":"7421:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7408:12:10"},"nodeType":"YulFunctionCall","src":"7408:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7398:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7243:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7254:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7266:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7274:6:10","type":""}],"src":"7198:248:10"},{"body":{"nodeType":"YulBlock","src":"7555:212:10","statements":[{"body":{"nodeType":"YulBlock","src":"7601:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7610:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7613:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7603:6:10"},"nodeType":"YulFunctionCall","src":"7603:12:10"},"nodeType":"YulExpressionStatement","src":"7603:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7576:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7585:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7572:3:10"},"nodeType":"YulFunctionCall","src":"7572:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7597:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7568:3:10"},"nodeType":"YulFunctionCall","src":"7568:32:10"},"nodeType":"YulIf","src":"7565:52:10"},{"nodeType":"YulAssignment","src":"7626:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7649:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7636:12:10"},"nodeType":"YulFunctionCall","src":"7636:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7626:6:10"}]},{"nodeType":"YulAssignment","src":"7668:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7695:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7706:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7691:3:10"},"nodeType":"YulFunctionCall","src":"7691:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7678:12:10"},"nodeType":"YulFunctionCall","src":"7678:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7668:6:10"}]},{"nodeType":"YulAssignment","src":"7719:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7746:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7757:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7742:3:10"},"nodeType":"YulFunctionCall","src":"7742:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7729:12:10"},"nodeType":"YulFunctionCall","src":"7729:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7719:6:10"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7505:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7516:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7528:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7536:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7544:6:10","type":""}],"src":"7451:316:10"},{"body":{"nodeType":"YulBlock","src":"7925:372:10","statements":[{"body":{"nodeType":"YulBlock","src":"7972:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7981:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7984:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7974:6:10"},"nodeType":"YulFunctionCall","src":"7974:12:10"},"nodeType":"YulExpressionStatement","src":"7974:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7946:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"7955:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7942:3:10"},"nodeType":"YulFunctionCall","src":"7942:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"7967:3:10","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7938:3:10"},"nodeType":"YulFunctionCall","src":"7938:33:10"},"nodeType":"YulIf","src":"7935:53:10"},{"nodeType":"YulAssignment","src":"7997:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8020:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8007:12:10"},"nodeType":"YulFunctionCall","src":"8007:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7997:6:10"}]},{"nodeType":"YulAssignment","src":"8039:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8066:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8077:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8062:3:10"},"nodeType":"YulFunctionCall","src":"8062:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8049:12:10"},"nodeType":"YulFunctionCall","src":"8049:32:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8039:6:10"}]},{"nodeType":"YulAssignment","src":"8090:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8117:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8128:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8113:3:10"},"nodeType":"YulFunctionCall","src":"8113:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8100:12:10"},"nodeType":"YulFunctionCall","src":"8100:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8090:6:10"}]},{"nodeType":"YulAssignment","src":"8141:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8172:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8183:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8168:3:10"},"nodeType":"YulFunctionCall","src":"8168:18:10"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"8151:16:10"},"nodeType":"YulFunctionCall","src":"8151:36:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8141:6:10"}]},{"nodeType":"YulAssignment","src":"8196:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8223:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8234:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8219:3:10"},"nodeType":"YulFunctionCall","src":"8219:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8206:12:10"},"nodeType":"YulFunctionCall","src":"8206:33:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8196:6:10"}]},{"nodeType":"YulAssignment","src":"8248:43:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8275:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8286:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8271:3:10"},"nodeType":"YulFunctionCall","src":"8271:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8258:12:10"},"nodeType":"YulFunctionCall","src":"8258:33:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8248:6:10"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7851:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7862:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7874:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7882:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7890:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7898:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7906:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7914:6:10","type":""}],"src":"7772:525:10"},{"body":{"nodeType":"YulBlock","src":"8433:396:10","statements":[{"body":{"nodeType":"YulBlock","src":"8480:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8489:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8492:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8482:6:10"},"nodeType":"YulFunctionCall","src":"8482:12:10"},"nodeType":"YulExpressionStatement","src":"8482:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8454:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8463:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8450:3:10"},"nodeType":"YulFunctionCall","src":"8450:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"8475:3:10","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8446:3:10"},"nodeType":"YulFunctionCall","src":"8446:33:10"},"nodeType":"YulIf","src":"8443:53:10"},{"nodeType":"YulAssignment","src":"8505:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8528:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8515:12:10"},"nodeType":"YulFunctionCall","src":"8515:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8505:6:10"}]},{"nodeType":"YulVariableDeclaration","src":"8547:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8578:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8589:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8574:3:10"},"nodeType":"YulFunctionCall","src":"8574:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8561:12:10"},"nodeType":"YulFunctionCall","src":"8561:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8551:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"8636:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8645:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8648:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8638:6:10"},"nodeType":"YulFunctionCall","src":"8638:12:10"},"nodeType":"YulExpressionStatement","src":"8638:12:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8608:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8616:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8605:2:10"},"nodeType":"YulFunctionCall","src":"8605:30:10"},"nodeType":"YulIf","src":"8602:50:10"},{"nodeType":"YulAssignment","src":"8661:60:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8693:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"8704:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8689:3:10"},"nodeType":"YulFunctionCall","src":"8689:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8713:7:10"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8671:17:10"},"nodeType":"YulFunctionCall","src":"8671:50:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8661:6:10"}]},{"nodeType":"YulAssignment","src":"8730:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8757:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8768:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8753:3:10"},"nodeType":"YulFunctionCall","src":"8753:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8740:12:10"},"nodeType":"YulFunctionCall","src":"8740:32:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8730:6:10"}]},{"nodeType":"YulAssignment","src":"8781:42:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8808:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8819:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8804:3:10"},"nodeType":"YulFunctionCall","src":"8804:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8791:12:10"},"nodeType":"YulFunctionCall","src":"8791:32:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8781:6:10"}]}]},"name":"abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8375:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8386:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8398:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8406:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8414:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8422:6:10","type":""}],"src":"8302:527:10"},{"body":{"nodeType":"YulBlock","src":"8904:177:10","statements":[{"body":{"nodeType":"YulBlock","src":"8950:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8959:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8962:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8952:6:10"},"nodeType":"YulFunctionCall","src":"8952:12:10"},"nodeType":"YulExpressionStatement","src":"8952:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8925:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"8934:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8921:3:10"},"nodeType":"YulFunctionCall","src":"8921:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"8946:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8917:3:10"},"nodeType":"YulFunctionCall","src":"8917:32:10"},"nodeType":"YulIf","src":"8914:52:10"},{"nodeType":"YulVariableDeclaration","src":"8975:36:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9001:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8988:12:10"},"nodeType":"YulFunctionCall","src":"8988:23:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8979:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9045:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9020:24:10"},"nodeType":"YulFunctionCall","src":"9020:31:10"},"nodeType":"YulExpressionStatement","src":"9020:31:10"},{"nodeType":"YulAssignment","src":"9060:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"9070:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9060:6:10"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8870:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8881:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8893:6:10","type":""}],"src":"8834:247:10"},{"body":{"nodeType":"YulBlock","src":"9260:165:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9277:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9288:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9270:6:10"},"nodeType":"YulFunctionCall","src":"9270:21:10"},"nodeType":"YulExpressionStatement","src":"9270:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9311:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9322:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9307:3:10"},"nodeType":"YulFunctionCall","src":"9307:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"9327:2:10","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9300:6:10"},"nodeType":"YulFunctionCall","src":"9300:30:10"},"nodeType":"YulExpressionStatement","src":"9300:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9350:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9361:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9346:3:10"},"nodeType":"YulFunctionCall","src":"9346:18:10"},{"hexValue":"4e6f742061206465706f7369746f72","kind":"string","nodeType":"YulLiteral","src":"9366:17:10","type":"","value":"Not a depositor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9339:6:10"},"nodeType":"YulFunctionCall","src":"9339:45:10"},"nodeType":"YulExpressionStatement","src":"9339:45:10"},{"nodeType":"YulAssignment","src":"9393:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9405:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9416:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9401:3:10"},"nodeType":"YulFunctionCall","src":"9401:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9393:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9237:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9251:4:10","type":""}],"src":"9086:339:10"},{"body":{"nodeType":"YulBlock","src":"9604:237:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9621:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9632:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9614:6:10"},"nodeType":"YulFunctionCall","src":"9614:21:10"},"nodeType":"YulExpressionStatement","src":"9614:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9655:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9666:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9651:3:10"},"nodeType":"YulFunctionCall","src":"9651:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"9671:2:10","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9644:6:10"},"nodeType":"YulFunctionCall","src":"9644:30:10"},"nodeType":"YulExpressionStatement","src":"9644:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9694:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9705:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9690:3:10"},"nodeType":"YulFunctionCall","src":"9690:18:10"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"9710:34:10","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9683:6:10"},"nodeType":"YulFunctionCall","src":"9683:62:10"},"nodeType":"YulExpressionStatement","src":"9683:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9765:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9776:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9761:3:10"},"nodeType":"YulFunctionCall","src":"9761:18:10"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"9781:17:10","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9754:6:10"},"nodeType":"YulFunctionCall","src":"9754:45:10"},"nodeType":"YulExpressionStatement","src":"9754:45:10"},{"nodeType":"YulAssignment","src":"9808:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9820:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9831:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9816:3:10"},"nodeType":"YulFunctionCall","src":"9816:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9808:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9581:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9595:4:10","type":""}],"src":"9430:411:10"},{"body":{"nodeType":"YulBlock","src":"10020:162:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10037:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10048:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10030:6:10"},"nodeType":"YulFunctionCall","src":"10030:21:10"},"nodeType":"YulExpressionStatement","src":"10030:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10071:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10082:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10067:3:10"},"nodeType":"YulFunctionCall","src":"10067:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"10087:2:10","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10060:6:10"},"nodeType":"YulFunctionCall","src":"10060:30:10"},"nodeType":"YulExpressionStatement","src":"10060:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10110:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10121:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10106:3:10"},"nodeType":"YulFunctionCall","src":"10106:18:10"},{"hexValue":"4e6f7420616e2061646d696e","kind":"string","nodeType":"YulLiteral","src":"10126:14:10","type":"","value":"Not an admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10099:6:10"},"nodeType":"YulFunctionCall","src":"10099:42:10"},"nodeType":"YulExpressionStatement","src":"10099:42:10"},{"nodeType":"YulAssignment","src":"10150:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10162:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10173:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10158:3:10"},"nodeType":"YulFunctionCall","src":"10158:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10150:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9997:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10011:4:10","type":""}],"src":"9846:336:10"},{"body":{"nodeType":"YulBlock","src":"10219:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10236:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10239:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10229:6:10"},"nodeType":"YulFunctionCall","src":"10229:88:10"},"nodeType":"YulExpressionStatement","src":"10229:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10333:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10336:4:10","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10326:6:10"},"nodeType":"YulFunctionCall","src":"10326:15:10"},"nodeType":"YulExpressionStatement","src":"10326:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10357:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10360:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10350:6:10"},"nodeType":"YulFunctionCall","src":"10350:15:10"},"nodeType":"YulExpressionStatement","src":"10350:15:10"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10187:184:10"},{"body":{"nodeType":"YulBlock","src":"10550:176:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10567:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10578:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10560:6:10"},"nodeType":"YulFunctionCall","src":"10560:21:10"},"nodeType":"YulExpressionStatement","src":"10560:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10601:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10612:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10597:3:10"},"nodeType":"YulFunctionCall","src":"10597:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"10617:2:10","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10590:6:10"},"nodeType":"YulFunctionCall","src":"10590:30:10"},"nodeType":"YulExpressionStatement","src":"10590:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10640:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10651:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10636:3:10"},"nodeType":"YulFunctionCall","src":"10636:18:10"},{"hexValue":"526561736f6e20636f646520616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"10656:28:10","type":"","value":"Reason code already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10629:6:10"},"nodeType":"YulFunctionCall","src":"10629:56:10"},"nodeType":"YulExpressionStatement","src":"10629:56:10"},{"nodeType":"YulAssignment","src":"10694:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10717:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:10"},"nodeType":"YulFunctionCall","src":"10702:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10694:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10527:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10541:4:10","type":""}],"src":"10376:350:10"},{"body":{"nodeType":"YulBlock","src":"10763:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10780:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10783:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10773:6:10"},"nodeType":"YulFunctionCall","src":"10773:88:10"},"nodeType":"YulExpressionStatement","src":"10773:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10877:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10880:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10870:6:10"},"nodeType":"YulFunctionCall","src":"10870:15:10"},"nodeType":"YulExpressionStatement","src":"10870:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10901:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10904:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10894:6:10"},"nodeType":"YulFunctionCall","src":"10894:15:10"},"nodeType":"YulExpressionStatement","src":"10894:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10731:184:10"},{"body":{"nodeType":"YulBlock","src":"10967:148:10","statements":[{"body":{"nodeType":"YulBlock","src":"11058:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11060:16:10"},"nodeType":"YulFunctionCall","src":"11060:18:10"},"nodeType":"YulExpressionStatement","src":"11060:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10983:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"10990:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10980:2:10"},"nodeType":"YulFunctionCall","src":"10980:77:10"},"nodeType":"YulIf","src":"10977:103:10"},{"nodeType":"YulAssignment","src":"11089:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11100:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"11107:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11096:3:10"},"nodeType":"YulFunctionCall","src":"11096:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11089:3:10"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10949:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10959:3:10","type":""}],"src":"10920:195:10"},{"body":{"nodeType":"YulBlock","src":"11271:481:10","statements":[{"nodeType":"YulVariableDeclaration","src":"11281:12:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11291:2:10","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11285:2:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11302:32:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11320:9:10"},{"name":"_1","nodeType":"YulIdentifier","src":"11331:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:10"},"nodeType":"YulFunctionCall","src":"11316:18:10"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11306:6:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11350:9:10"},{"name":"_1","nodeType":"YulIdentifier","src":"11361:2:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11343:6:10"},"nodeType":"YulFunctionCall","src":"11343:21:10"},"nodeType":"YulExpressionStatement","src":"11343:21:10"},{"nodeType":"YulVariableDeclaration","src":"11373:17:10","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"11384:6:10"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"11377:3:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11399:27:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11419:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11413:5:10"},"nodeType":"YulFunctionCall","src":"11413:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11403:6:10","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11442:6:10"},{"name":"length","nodeType":"YulIdentifier","src":"11450:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11435:6:10"},"nodeType":"YulFunctionCall","src":"11435:22:10"},"nodeType":"YulExpressionStatement","src":"11435:22:10"},{"nodeType":"YulAssignment","src":"11466:25:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11488:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11473:3:10"},"nodeType":"YulFunctionCall","src":"11473:18:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11466:3:10"}]},{"nodeType":"YulVariableDeclaration","src":"11500:29:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11518:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"11526:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11514:3:10"},"nodeType":"YulFunctionCall","src":"11514:15:10"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11504:6:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11538:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"11547:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11542:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"11606:120:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11627:3:10"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11638:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11632:5:10"},"nodeType":"YulFunctionCall","src":"11632:13:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11620:6:10"},"nodeType":"YulFunctionCall","src":"11620:26:10"},"nodeType":"YulExpressionStatement","src":"11620:26:10"},{"nodeType":"YulAssignment","src":"11659:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11670:3:10"},{"name":"_1","nodeType":"YulIdentifier","src":"11675:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11666:3:10"},"nodeType":"YulFunctionCall","src":"11666:12:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11659:3:10"}]},{"nodeType":"YulAssignment","src":"11691:25:10","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11705:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"11713:2:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11701:3:10"},"nodeType":"YulFunctionCall","src":"11701:15:10"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11691:6:10"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11568:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"11571:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11565:2:10"},"nodeType":"YulFunctionCall","src":"11565:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11579:18:10","statements":[{"nodeType":"YulAssignment","src":"11581:14:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11590:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"11593:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11586:3:10"},"nodeType":"YulFunctionCall","src":"11586:9:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11581:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"11561:3:10","statements":[]},"src":"11557:169:10"},{"nodeType":"YulAssignment","src":"11735:11:10","value":{"name":"pos","nodeType":"YulIdentifier","src":"11743:3:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11735:4:10"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11240:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11251:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11262:4:10","type":""}],"src":"11120:632:10"},{"body":{"nodeType":"YulBlock","src":"11931:168:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11948:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11959:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11941:6:10"},"nodeType":"YulFunctionCall","src":"11941:21:10"},"nodeType":"YulExpressionStatement","src":"11941:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11982:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11993:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11978:3:10"},"nodeType":"YulFunctionCall","src":"11978:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"11998:2:10","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11971:6:10"},"nodeType":"YulFunctionCall","src":"11971:30:10"},"nodeType":"YulExpressionStatement","src":"11971:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12021:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12032:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12017:3:10"},"nodeType":"YulFunctionCall","src":"12017:18:10"},{"hexValue":"536561736f6e20616c726561647920736574","kind":"string","nodeType":"YulLiteral","src":"12037:20:10","type":"","value":"Season already set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12010:6:10"},"nodeType":"YulFunctionCall","src":"12010:48:10"},"nodeType":"YulExpressionStatement","src":"12010:48:10"},{"nodeType":"YulAssignment","src":"12067:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12079:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12090:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12075:3:10"},"nodeType":"YulFunctionCall","src":"12075:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12067:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11908:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11922:4:10","type":""}],"src":"11757:342:10"},{"body":{"nodeType":"YulBlock","src":"12278:228:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12295:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12306:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12288:6:10"},"nodeType":"YulFunctionCall","src":"12288:21:10"},"nodeType":"YulExpressionStatement","src":"12288:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12329:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12340:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12325:3:10"},"nodeType":"YulFunctionCall","src":"12325:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"12345:2:10","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12318:6:10"},"nodeType":"YulFunctionCall","src":"12318:30:10"},"nodeType":"YulExpressionStatement","src":"12318:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12368:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12379:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12364:3:10"},"nodeType":"YulFunctionCall","src":"12364:18:10"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"12384:34:10","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12357:6:10"},"nodeType":"YulFunctionCall","src":"12357:62:10"},"nodeType":"YulExpressionStatement","src":"12357:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12439:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12450:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12435:3:10"},"nodeType":"YulFunctionCall","src":"12435:18:10"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"12455:8:10","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12428:6:10"},"nodeType":"YulFunctionCall","src":"12428:36:10"},"nodeType":"YulExpressionStatement","src":"12428:36:10"},{"nodeType":"YulAssignment","src":"12473:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12485:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12496:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12481:3:10"},"nodeType":"YulFunctionCall","src":"12481:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12473:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12255:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12269:4:10","type":""}],"src":"12104:402:10"},{"body":{"nodeType":"YulBlock","src":"12577:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12587:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12596:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12591:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"12656:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12681:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"12686:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12677:3:10"},"nodeType":"YulFunctionCall","src":"12677:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12700:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"12705:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12696:3:10"},"nodeType":"YulFunctionCall","src":"12696:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12690:5:10"},"nodeType":"YulFunctionCall","src":"12690:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12670:6:10"},"nodeType":"YulFunctionCall","src":"12670:39:10"},"nodeType":"YulExpressionStatement","src":"12670:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12617:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"12620:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12614:2:10"},"nodeType":"YulFunctionCall","src":"12614:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12628:19:10","statements":[{"nodeType":"YulAssignment","src":"12630:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12639:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"12642:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:10"},"nodeType":"YulFunctionCall","src":"12635:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12630:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"12610:3:10","statements":[]},"src":"12606:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12739:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12744:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12735:3:10"},"nodeType":"YulFunctionCall","src":"12735:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"12753:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12728:6:10"},"nodeType":"YulFunctionCall","src":"12728:27:10"},"nodeType":"YulExpressionStatement","src":"12728:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12555:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12560:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"12565:6:10","type":""}],"src":"12511:250:10"},{"body":{"nodeType":"YulBlock","src":"12816:280:10","statements":[{"nodeType":"YulVariableDeclaration","src":"12826:26:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12846:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12840:5:10"},"nodeType":"YulFunctionCall","src":"12840:12:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12830:6:10","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12868:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"12873:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12861:6:10"},"nodeType":"YulFunctionCall","src":"12861:19:10"},"nodeType":"YulExpressionStatement","src":"12861:19:10"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12928:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"12935:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12924:3:10"},"nodeType":"YulFunctionCall","src":"12924:16:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12946:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"12951:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12942:3:10"},"nodeType":"YulFunctionCall","src":"12942:14:10"},{"name":"length","nodeType":"YulIdentifier","src":"12958:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12889:34:10"},"nodeType":"YulFunctionCall","src":"12889:76:10"},"nodeType":"YulExpressionStatement","src":"12889:76:10"},{"nodeType":"YulAssignment","src":"12974:116:10","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12989:3:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13002:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13010:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12998:3:10"},"nodeType":"YulFunctionCall","src":"12998:15:10"},{"kind":"number","nodeType":"YulLiteral","src":"13015:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12994:3:10"},"nodeType":"YulFunctionCall","src":"12994:88:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12985:3:10"},"nodeType":"YulFunctionCall","src":"12985:98:10"},{"kind":"number","nodeType":"YulLiteral","src":"13085:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12981:3:10"},"nodeType":"YulFunctionCall","src":"12981:109:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12974:3:10"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12793:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12800:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12808:3:10","type":""}],"src":"12766:330:10"},{"body":{"nodeType":"YulBlock","src":"13250:142:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13267:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13278:2:10","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13260:6:10"},"nodeType":"YulFunctionCall","src":"13260:21:10"},"nodeType":"YulExpressionStatement","src":"13260:21:10"},{"nodeType":"YulAssignment","src":"13290:53:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13316:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13328:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13339:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13324:3:10"},"nodeType":"YulFunctionCall","src":"13324:18:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13298:17:10"},"nodeType":"YulFunctionCall","src":"13298:45:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13290:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13363:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13374:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13359:3:10"},"nodeType":"YulFunctionCall","src":"13359:18:10"},{"name":"value1","nodeType":"YulIdentifier","src":"13379:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13352:6:10"},"nodeType":"YulFunctionCall","src":"13352:34:10"},"nodeType":"YulExpressionStatement","src":"13352:34:10"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13211:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13222:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13230:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13241:4:10","type":""}],"src":"13101:291:10"},{"body":{"nodeType":"YulBlock","src":"13478:103:10","statements":[{"body":{"nodeType":"YulBlock","src":"13524:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13533:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13536:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13526:6:10"},"nodeType":"YulFunctionCall","src":"13526:12:10"},"nodeType":"YulExpressionStatement","src":"13526:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13499:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"13508:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13495:3:10"},"nodeType":"YulFunctionCall","src":"13495:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"13520:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13491:3:10"},"nodeType":"YulFunctionCall","src":"13491:32:10"},"nodeType":"YulIf","src":"13488:52:10"},{"nodeType":"YulAssignment","src":"13549:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13565:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13559:5:10"},"nodeType":"YulFunctionCall","src":"13559:16:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13549:6:10"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13444:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13455:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13467:6:10","type":""}],"src":"13397:184:10"},{"body":{"nodeType":"YulBlock","src":"13634:77:10","statements":[{"nodeType":"YulAssignment","src":"13644:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13655:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"13658:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13651:3:10"},"nodeType":"YulFunctionCall","src":"13651:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13644:3:10"}]},{"body":{"nodeType":"YulBlock","src":"13683:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13685:16:10"},"nodeType":"YulFunctionCall","src":"13685:18:10"},"nodeType":"YulExpressionStatement","src":"13685:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13675:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"13678:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13672:2:10"},"nodeType":"YulFunctionCall","src":"13672:10:10"},"nodeType":"YulIf","src":"13669:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13617:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"13620:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13626:3:10","type":""}],"src":"13586:125:10"},{"body":{"nodeType":"YulBlock","src":"13873:162:10","statements":[{"nodeType":"YulAssignment","src":"13883:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13895:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13906:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:10"},"nodeType":"YulFunctionCall","src":"13891:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13883:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13925:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"13936:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13918:6:10"},"nodeType":"YulFunctionCall","src":"13918:25:10"},"nodeType":"YulExpressionStatement","src":"13918:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"13974:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13959:3:10"},"nodeType":"YulFunctionCall","src":"13959:18:10"},{"name":"value1","nodeType":"YulIdentifier","src":"13979:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13952:6:10"},"nodeType":"YulFunctionCall","src":"13952:34:10"},"nodeType":"YulExpressionStatement","src":"13952:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14006:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14017:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14002:3:10"},"nodeType":"YulFunctionCall","src":"14002:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"14022:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13995:6:10"},"nodeType":"YulFunctionCall","src":"13995:34:10"},"nodeType":"YulExpressionStatement","src":"13995:34:10"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13826:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13837:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13845:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13853:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13864:4:10","type":""}],"src":"13716:319:10"},{"body":{"nodeType":"YulBlock","src":"14214:182:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14231:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14242:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14224:6:10"},"nodeType":"YulFunctionCall","src":"14224:21:10"},"nodeType":"YulExpressionStatement","src":"14224:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14265:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14276:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14261:3:10"},"nodeType":"YulFunctionCall","src":"14261:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"14281:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14254:6:10"},"nodeType":"YulFunctionCall","src":"14254:30:10"},"nodeType":"YulExpressionStatement","src":"14254:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14304:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14315:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14300:3:10"},"nodeType":"YulFunctionCall","src":"14300:18:10"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14320:34:10","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14293:6:10"},"nodeType":"YulFunctionCall","src":"14293:62:10"},"nodeType":"YulExpressionStatement","src":"14293:62:10"},{"nodeType":"YulAssignment","src":"14364:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14376:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14387:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14372:3:10"},"nodeType":"YulFunctionCall","src":"14372:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14364:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14191:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14205:4:10","type":""}],"src":"14040:356:10"},{"body":{"nodeType":"YulBlock","src":"14575:177:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14592:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14603:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14585:6:10"},"nodeType":"YulFunctionCall","src":"14585:21:10"},"nodeType":"YulExpressionStatement","src":"14585:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14626:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14637:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14622:3:10"},"nodeType":"YulFunctionCall","src":"14622:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"14642:2:10","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14615:6:10"},"nodeType":"YulFunctionCall","src":"14615:30:10"},"nodeType":"YulExpressionStatement","src":"14615:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14665:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14676:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14661:3:10"},"nodeType":"YulFunctionCall","src":"14661:18:10"},{"hexValue":"5369676e6572206e6f74206f776e6572206f66207265616c6d4964","kind":"string","nodeType":"YulLiteral","src":"14681:29:10","type":"","value":"Signer not owner of realmId"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14654:6:10"},"nodeType":"YulFunctionCall","src":"14654:57:10"},"nodeType":"YulExpressionStatement","src":"14654:57:10"},{"nodeType":"YulAssignment","src":"14720:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14732:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14743:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14728:3:10"},"nodeType":"YulFunctionCall","src":"14728:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14720:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14552:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14566:4:10","type":""}],"src":"14401:351:10"},{"body":{"nodeType":"YulBlock","src":"15016:251:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15033:3:10"},{"name":"value0","nodeType":"YulIdentifier","src":"15038:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15026:6:10"},"nodeType":"YulFunctionCall","src":"15026:19:10"},"nodeType":"YulExpressionStatement","src":"15026:19:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15065:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15070:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15061:3:10"},"nodeType":"YulFunctionCall","src":"15061:12:10"},{"name":"value1","nodeType":"YulIdentifier","src":"15075:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15054:6:10"},"nodeType":"YulFunctionCall","src":"15054:28:10"},"nodeType":"YulExpressionStatement","src":"15054:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15102:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15107:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15098:3:10"},"nodeType":"YulFunctionCall","src":"15098:12:10"},{"name":"value2","nodeType":"YulIdentifier","src":"15112:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15091:6:10"},"nodeType":"YulFunctionCall","src":"15091:28:10"},"nodeType":"YulExpressionStatement","src":"15091:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15139:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15144:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15135:3:10"},"nodeType":"YulFunctionCall","src":"15135:12:10"},{"name":"value3","nodeType":"YulIdentifier","src":"15149:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15128:6:10"},"nodeType":"YulFunctionCall","src":"15128:28:10"},"nodeType":"YulExpressionStatement","src":"15128:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15176:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15181:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15172:3:10"},"nodeType":"YulFunctionCall","src":"15172:13:10"},{"name":"value4","nodeType":"YulIdentifier","src":"15187:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15165:6:10"},"nodeType":"YulFunctionCall","src":"15165:29:10"},"nodeType":"YulExpressionStatement","src":"15165:29:10"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15214:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15219:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15210:3:10"},"nodeType":"YulFunctionCall","src":"15210:13:10"},{"name":"value5","nodeType":"YulIdentifier","src":"15225:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15203:6:10"},"nodeType":"YulFunctionCall","src":"15203:29:10"},"nodeType":"YulExpressionStatement","src":"15203:29:10"},{"nodeType":"YulAssignment","src":"15241:20:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15252:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15257:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15248:3:10"},"nodeType":"YulFunctionCall","src":"15248:13:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15241:3:10"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14952:3:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14957:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14965:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14973:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14981:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14989:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14997:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15008:3:10","type":""}],"src":"14757:510:10"},{"body":{"nodeType":"YulBlock","src":"15661:423:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15678:3:10"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"15683:25:10","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15671:6:10"},"nodeType":"YulFunctionCall","src":"15671:38:10"},"nodeType":"YulExpressionStatement","src":"15671:38:10"},{"nodeType":"YulVariableDeclaration","src":"15718:27:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15738:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15732:5:10"},"nodeType":"YulFunctionCall","src":"15732:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15722:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15793:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15801:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15789:3:10"},"nodeType":"YulFunctionCall","src":"15789:17:10"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15812:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15817:2:10","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15808:3:10"},"nodeType":"YulFunctionCall","src":"15808:12:10"},{"name":"length","nodeType":"YulIdentifier","src":"15822:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15754:34:10"},"nodeType":"YulFunctionCall","src":"15754:75:10"},"nodeType":"YulExpressionStatement","src":"15754:75:10"},{"nodeType":"YulVariableDeclaration","src":"15838:26:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15852:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"15857:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15848:3:10"},"nodeType":"YulFunctionCall","src":"15848:16:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15842:2:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15884:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"15888:2:10","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15880:3:10"},"nodeType":"YulFunctionCall","src":"15880:11:10"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"15893:19:10","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15873:6:10"},"nodeType":"YulFunctionCall","src":"15873:40:10"},"nodeType":"YulExpressionStatement","src":"15873:40:10"},{"nodeType":"YulVariableDeclaration","src":"15922:29:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15944:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15938:5:10"},"nodeType":"YulFunctionCall","src":"15938:13:10"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"15926:8:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15999:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16007:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15995:3:10"},"nodeType":"YulFunctionCall","src":"15995:17:10"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"16018:2:10"},{"kind":"number","nodeType":"YulLiteral","src":"16022:2:10","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16014:3:10"},"nodeType":"YulFunctionCall","src":"16014:11:10"},{"name":"length_1","nodeType":"YulIdentifier","src":"16027:8:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15960:34:10"},"nodeType":"YulFunctionCall","src":"15960:76:10"},"nodeType":"YulExpressionStatement","src":"15960:76:10"},{"nodeType":"YulAssignment","src":"16045:33:10","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"16060:2:10"},{"name":"length_1","nodeType":"YulIdentifier","src":"16064:8:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16056:3:10"},"nodeType":"YulFunctionCall","src":"16056:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"16075:2:10","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16052:3:10"},"nodeType":"YulFunctionCall","src":"16052:26:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16045:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15629:3:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15634:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15642:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15653:3:10","type":""}],"src":"15272:812:10"},{"body":{"nodeType":"YulBlock","src":"16210:99:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16227:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16238:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16220:6:10"},"nodeType":"YulFunctionCall","src":"16220:21:10"},"nodeType":"YulExpressionStatement","src":"16220:21:10"},{"nodeType":"YulAssignment","src":"16250:53:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16276:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16288:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16299:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16284:3:10"},"nodeType":"YulFunctionCall","src":"16284:18:10"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16258:17:10"},"nodeType":"YulFunctionCall","src":"16258:45:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16250:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16179:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16190:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16201:4:10","type":""}],"src":"16089:220:10"},{"body":{"nodeType":"YulBlock","src":"16495:217:10","statements":[{"nodeType":"YulAssignment","src":"16505:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16517:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16528:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16513:3:10"},"nodeType":"YulFunctionCall","src":"16513:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16505:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16548:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"16559:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16541:6:10"},"nodeType":"YulFunctionCall","src":"16541:25:10"},"nodeType":"YulExpressionStatement","src":"16541:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16586:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16597:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16582:3:10"},"nodeType":"YulFunctionCall","src":"16582:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16606:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16614:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16602:3:10"},"nodeType":"YulFunctionCall","src":"16602:17:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16575:6:10"},"nodeType":"YulFunctionCall","src":"16575:45:10"},"nodeType":"YulExpressionStatement","src":"16575:45:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16640:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16651:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16636:3:10"},"nodeType":"YulFunctionCall","src":"16636:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"16656:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16629:6:10"},"nodeType":"YulFunctionCall","src":"16629:34:10"},"nodeType":"YulExpressionStatement","src":"16629:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16683:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16694:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16679:3:10"},"nodeType":"YulFunctionCall","src":"16679:18:10"},{"name":"value3","nodeType":"YulIdentifier","src":"16699:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16672:6:10"},"nodeType":"YulFunctionCall","src":"16672:34:10"},"nodeType":"YulExpressionStatement","src":"16672:34:10"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16451:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16459:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16467:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16475:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16486:4:10","type":""}],"src":"16314:398:10"},{"body":{"nodeType":"YulBlock","src":"16798:170:10","statements":[{"body":{"nodeType":"YulBlock","src":"16844:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16853:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16856:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16846:6:10"},"nodeType":"YulFunctionCall","src":"16846:12:10"},"nodeType":"YulExpressionStatement","src":"16846:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16819:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"16828:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16815:3:10"},"nodeType":"YulFunctionCall","src":"16815:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"16840:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16811:3:10"},"nodeType":"YulFunctionCall","src":"16811:32:10"},"nodeType":"YulIf","src":"16808:52:10"},{"nodeType":"YulVariableDeclaration","src":"16869:29:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16888:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16882:5:10"},"nodeType":"YulFunctionCall","src":"16882:16:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16873:5:10","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16932:5:10"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"16907:24:10"},"nodeType":"YulFunctionCall","src":"16907:31:10"},"nodeType":"YulExpressionStatement","src":"16907:31:10"},{"nodeType":"YulAssignment","src":"16947:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"16957:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16947:6:10"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16764:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16775:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16787:6:10","type":""}],"src":"16717:251:10"},{"body":{"nodeType":"YulBlock","src":"17147:170:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17164:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17175:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17157:6:10"},"nodeType":"YulFunctionCall","src":"17157:21:10"},"nodeType":"YulExpressionStatement","src":"17157:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17198:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17209:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17194:3:10"},"nodeType":"YulFunctionCall","src":"17194:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"17214:2:10","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17187:6:10"},"nodeType":"YulFunctionCall","src":"17187:30:10"},"nodeType":"YulExpressionStatement","src":"17187:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17237:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17248:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17233:3:10"},"nodeType":"YulFunctionCall","src":"17233:18:10"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"17253:22:10","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17226:6:10"},"nodeType":"YulFunctionCall","src":"17226:50:10"},"nodeType":"YulExpressionStatement","src":"17226:50:10"},{"nodeType":"YulAssignment","src":"17285:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17297:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17308:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17293:3:10"},"nodeType":"YulFunctionCall","src":"17293:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17285:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17124:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17138:4:10","type":""}],"src":"16973:344:10"},{"body":{"nodeType":"YulBlock","src":"17496:177:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17513:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17524:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17506:6:10"},"nodeType":"YulFunctionCall","src":"17506:21:10"},"nodeType":"YulExpressionStatement","src":"17506:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17547:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17558:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17543:3:10"},"nodeType":"YulFunctionCall","src":"17543:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"17563:2:10","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17536:6:10"},"nodeType":"YulFunctionCall","src":"17536:30:10"},"nodeType":"YulExpressionStatement","src":"17536:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17586:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17597:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17582:3:10"},"nodeType":"YulFunctionCall","src":"17582:18:10"},{"hexValue":"496e76616c696420636f6e73756d6520726561736f6e20636f6465","kind":"string","nodeType":"YulLiteral","src":"17602:29:10","type":"","value":"Invalid consume reason code"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17575:6:10"},"nodeType":"YulFunctionCall","src":"17575:57:10"},"nodeType":"YulExpressionStatement","src":"17575:57:10"},{"nodeType":"YulAssignment","src":"17641:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17653:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17664:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17649:3:10"},"nodeType":"YulFunctionCall","src":"17649:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17641:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17473:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17487:4:10","type":""}],"src":"17322:351:10"},{"body":{"nodeType":"YulBlock","src":"17727:79:10","statements":[{"nodeType":"YulAssignment","src":"17737:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17749:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"17752:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17745:3:10"},"nodeType":"YulFunctionCall","src":"17745:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17737:4:10"}]},{"body":{"nodeType":"YulBlock","src":"17778:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17780:16:10"},"nodeType":"YulFunctionCall","src":"17780:18:10"},"nodeType":"YulExpressionStatement","src":"17780:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"17769:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"17775:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17766:2:10"},"nodeType":"YulFunctionCall","src":"17766:11:10"},"nodeType":"YulIf","src":"17763:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17709:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"17712:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17718:4:10","type":""}],"src":"17678:128:10"},{"body":{"nodeType":"YulBlock","src":"18024:329:10","statements":[{"nodeType":"YulAssignment","src":"18034:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18046:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18057:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18042:3:10"},"nodeType":"YulFunctionCall","src":"18042:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18034:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"18070:52:10","value":{"kind":"number","nodeType":"YulLiteral","src":"18080:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18074:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18138:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18153:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"18161:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18149:3:10"},"nodeType":"YulFunctionCall","src":"18149:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18131:6:10"},"nodeType":"YulFunctionCall","src":"18131:34:10"},"nodeType":"YulExpressionStatement","src":"18131:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18185:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18196:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18181:3:10"},"nodeType":"YulFunctionCall","src":"18181:18:10"},{"name":"value1","nodeType":"YulIdentifier","src":"18201:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18174:6:10"},"nodeType":"YulFunctionCall","src":"18174:34:10"},"nodeType":"YulExpressionStatement","src":"18174:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18228:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18239:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18224:3:10"},"nodeType":"YulFunctionCall","src":"18224:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"18244:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18217:6:10"},"nodeType":"YulFunctionCall","src":"18217:34:10"},"nodeType":"YulExpressionStatement","src":"18217:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18271:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18282:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18267:3:10"},"nodeType":"YulFunctionCall","src":"18267:18:10"},{"name":"value3","nodeType":"YulIdentifier","src":"18287:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18260:6:10"},"nodeType":"YulFunctionCall","src":"18260:34:10"},"nodeType":"YulExpressionStatement","src":"18260:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18314:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18325:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18310:3:10"},"nodeType":"YulFunctionCall","src":"18310:19:10"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18335:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"18343:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18331:3:10"},"nodeType":"YulFunctionCall","src":"18331:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18303:6:10"},"nodeType":"YulFunctionCall","src":"18303:44:10"},"nodeType":"YulExpressionStatement","src":"18303:44:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17961:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17972:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17980:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17988:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17996:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18004:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18015:4:10","type":""}],"src":"17811:542:10"},{"body":{"nodeType":"YulBlock","src":"18410:116:10","statements":[{"nodeType":"YulAssignment","src":"18420:20:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18435:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"18438:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18431:3:10"},"nodeType":"YulFunctionCall","src":"18431:9:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18420:7:10"}]},{"body":{"nodeType":"YulBlock","src":"18498:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18500:16:10"},"nodeType":"YulFunctionCall","src":"18500:18:10"},"nodeType":"YulExpressionStatement","src":"18500:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18469:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18462:6:10"},"nodeType":"YulFunctionCall","src":"18462:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18476:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"18483:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"18492:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18479:3:10"},"nodeType":"YulFunctionCall","src":"18479:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18473:2:10"},"nodeType":"YulFunctionCall","src":"18473:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18459:2:10"},"nodeType":"YulFunctionCall","src":"18459:37:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18452:6:10"},"nodeType":"YulFunctionCall","src":"18452:45:10"},"nodeType":"YulIf","src":"18449:71:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18389:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"18392:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18398:7:10","type":""}],"src":"18358:168:10"},{"body":{"nodeType":"YulBlock","src":"18578:149:10","statements":[{"body":{"nodeType":"YulBlock","src":"18605:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18607:16:10"},"nodeType":"YulFunctionCall","src":"18607:18:10"},"nodeType":"YulExpressionStatement","src":"18607:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18598:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18591:6:10"},"nodeType":"YulFunctionCall","src":"18591:13:10"},"nodeType":"YulIf","src":"18588:39:10"},{"nodeType":"YulAssignment","src":"18636:85:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18647:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18654:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18643:3:10"},"nodeType":"YulFunctionCall","src":"18643:78:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18636:3:10"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18560:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18570:3:10","type":""}],"src":"18531:196:10"},{"body":{"nodeType":"YulBlock","src":"18906:182:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18923:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18934:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18916:6:10"},"nodeType":"YulFunctionCall","src":"18916:21:10"},"nodeType":"YulExpressionStatement","src":"18916:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18957:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18968:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18953:3:10"},"nodeType":"YulFunctionCall","src":"18953:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"18973:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18946:6:10"},"nodeType":"YulFunctionCall","src":"18946:30:10"},"nodeType":"YulExpressionStatement","src":"18946:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18996:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19007:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18992:3:10"},"nodeType":"YulFunctionCall","src":"18992:18:10"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"19012:34:10","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18985:6:10"},"nodeType":"YulFunctionCall","src":"18985:62:10"},"nodeType":"YulExpressionStatement","src":"18985:62:10"},{"nodeType":"YulAssignment","src":"19056:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19068:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19079:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19064:3:10"},"nodeType":"YulFunctionCall","src":"19064:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19056:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18883:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18897:4:10","type":""}],"src":"18732:356:10"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IRealmId_$2527__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_string_memory_ptrt_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_string_memory_ptrt_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a187824b079404be555a1b9418b8031a46fa39c4a1a1c5cfe26b3286229770d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not a depositor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not an admin\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_549711b1ccfcfb6570cbeff13c1a55762b5fcc708885df874c421714530ed56a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Reason code already exists\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_907c90511d11a47c16170b9c7277878fac4c767ef53260ccef12b8a0b94ac892__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Season already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32__to_t_string_memory_ptr_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_22a5118d0663dcf9667a9c0b2238f19c1ed6e9f7598968af96eea021ee61c19e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Signer not owner of realmId\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        mstore(add(pos, 128), value4)\n        mstore(add(pos, 160), value5)\n        end := add(pos, 192)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56252a6247989a0782d1ad52265d2b3540f4fc7db600e892a3420904180ee89b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid consume reason code\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC0542CFA GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDF00BB24 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDF00BB24 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xE564A0E2 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC0542CFA EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD14A5C71 EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xDC893CE4 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xA3B0B5A3 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xAD3B1D48 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xBCB39621 EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x99D342AC EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x9CC7F708 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x9D70B005 EQ PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F30B00F GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x794459BE GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x794459BE EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x86A8E98A EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x906405A3 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F30B00F EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x4529CC1B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x2B48DC72 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x98B6419 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x141A468C EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x18EE89F0 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2B7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x214 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH2 0x271 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x271 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x230 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x230 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x201E JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x230 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH32 0x8F4F2DA22E8AC8F11E15F9FC141CDDBB5DEEA8800186560ABB6E68C5496619A9 DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x47A CALLDATASIZE PUSH1 0x4 PUSH2 0x208A JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x230 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x271 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x4DF CALLDATASIZE PUSH1 0x4 PUSH2 0x20D8 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH2 0x230 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x2129 JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2B7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x5D0 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E3 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5F0 DUP3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP10 KECCAK256 SWAP5 DUP10 MSTORE SWAP4 DUP2 MSTORE DUP4 DUP9 KECCAK256 SWAP2 DUP9 MSTORE MSTORE POP SWAP1 SWAP4 KECCAK256 SLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x307E01C7B3E8B810ADA5A97216BCF610DD89EDEEE748C1C377638B2D5E7D226E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x307E01C7B3E8B810ADA5A97216BCF610DD89EDEEE748C1C377638B2D5E7D226E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x75C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x113A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x77F DUP2 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x789 DUP4 DUP4 PUSH2 0x11C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x83D DUP3 DUP3 PUSH2 0x1287 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50EFBDE2D46C37E9785F1791697F77E94BB7B701E19F1930A668820722D37694 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x8 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8FB JUMPI PUSH2 0x8FB PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526561736F6E20636F646520616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x998 JUMPI PUSH2 0x998 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x9D0 SWAP1 PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8DC JUMP JUMPDEST POP PUSH32 0xD8C56A8918EC09C2FE3C4D9FCC00ECE66DF217A1AB3AD768DD0A71620DA5B4E DUP2 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x1342 JUMP JUMPDEST PUSH2 0xA25 PUSH1 0x0 PUSH2 0x13C3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA34 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA41 DUP3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 DUP4 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50EFBDE2D46C37E9785F1791697F77E94BB7B701E19F1930A668820722D37694 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536561736F6E20616C7265616479207365740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x61228C895F8BA06548597D3E34A23BC0ECB6D1E62A1EB3FA30BE04883A17EF31 SWAP1 PUSH2 0xA08 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x50EFBDE2D46C37E9785F1791697F77E94BB7B701E19F1930A668820722D37694 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E2061646D696E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x8 PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCAB JUMPI PUSH2 0xCAB PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP1 PUSH2 0xCF5 DUP2 PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC8C JUMP JUMPDEST POP PUSH32 0x5B2C9FCBB27D48BDBFC59F0564B5BA81539309EBF09A940FAD64D171BCFB9FF9 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP9 DUP9 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH2 0xD49 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1438 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD5F DUP4 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP7 DUP4 MSTORE SWAP6 DUP2 MSTORE DUP6 DUP3 KECCAK256 SWAP3 DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x307E01C7B3E8B810ADA5A97216BCF610DD89EDEEE748C1C377638B2D5E7D226E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206465706F7369746F720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE32 DUP7 DUP7 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH2 0xE41 DUP8 DUP3 DUP7 DUP7 DUP7 PUSH2 0x113A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE56 DUP4 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 DUP8 MSTORE SWAP5 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP2 DUP7 MSTORE MSTORE POP POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x789 DUP4 DUP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xEA3 DUP2 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x789 DUP4 DUP4 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xEBB DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1438 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xECF DUP6 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP4 MLOAD DUP1 DUP5 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP10 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP1 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP8 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD SWAP1 SWAP3 MSTORE POP POP DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3E DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST SWAP1 POP PUSH2 0x75C DUP2 DUP5 DUP5 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0xF53 PUSH2 0x1342 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0xFFF DUP2 PUSH2 0x13C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCAD6B90100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH4 0xCAD6B901 SWAP2 PUSH2 0x105C SWAP2 DUP7 SWAP2 DUP9 SWAP2 ADD PUSH2 0x22E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9735F9400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9735F94 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1116 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x116B SWAP1 DUP5 SWAP1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH32 0x9092BF6BD1CF7DB4FCF41AEDC7C0333B51C57F5B80B429BC3D9CAA5587C6AD82 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFF DUP2 CALLER PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x83D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP1 DUP7 MSTORE SWAP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1443 DUP8 PUSH2 0x10A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x146A DUP9 DUP4 DUP10 PUSH1 0x7 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP11 DUP11 DUP11 DUP11 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1477 DUP10 PUSH2 0x1782 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x151B DUP10 DUP5 DUP11 DUP11 DUP6 PUSH2 0x1818 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E6572206E6F74206F776E6572206F66207265616C6D49640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP6 PUSH2 0x10A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x75C DUP6 DUP3 DUP7 DUP7 CALLER PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x83D JUMPI PUSH2 0x160C DUP2 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1617 DUP4 PUSH1 0x20 PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1628 SWAP3 SWAP2 SWAP1 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH2 0x6AE SWAP2 PUSH1 0x4 ADD PUSH2 0x23B4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP13 SWAP1 MSTORE DUP2 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP3 ADD DUP1 DUP5 MSTORE DUP2 MLOAD SWAP2 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP1 DUP6 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD DUP8 SWAP1 MSTORE PUSH2 0x160 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP1 SWAP4 PUSH1 0x1 SWAP3 PUSH2 0x180 DUP1 DUP3 ADD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x23C7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x191E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E73756D6520726561736F6E20636F64650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1952 SWAP1 DUP5 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE DUP4 SWAP2 SWAP1 DUP8 SWAP1 PUSH32 0xD1255D580F215DA0D3A191D00A885AE4716FAC76B5813A6C309919FFF6078BD1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x19EB DUP4 PUSH2 0x21FB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5D0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A25 DUP4 PUSH1 0x2 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1A30 SWAP1 PUSH1 0x2 PUSH2 0x2320 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A48 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AA9 JUMPI PUSH2 0x1AA9 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B0C JUMPI PUSH2 0x1B0C PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1B48 DUP5 PUSH1 0x2 PUSH2 0x23F7 JUMP JUMPDEST PUSH2 0x1B53 SWAP1 PUSH1 0x1 PUSH2 0x2320 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BF0 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B94 PUSH2 0x219D JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BAA JUMPI PUSH2 0x1BAA PUSH2 0x219D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1BE9 DUP2 PUSH2 0x240E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B56 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x109D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D11 PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D44 PUSH2 0x1C9B JUMP JUMPDEST PUSH2 0x1D75 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x1CCA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DED DUP7 DUP3 DUP8 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E92 DUP2 PUSH2 0x1E4B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1EC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1EEE JUMPI PUSH2 0x1EEE PUSH2 0x1C9B JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x1EFF DUP5 DUP4 ADD PUSH2 0x1CCA JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x1F19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1F37 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F80 DUP6 DUP3 DUP7 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2002 PUSH1 0x80 DUP10 ADD PUSH2 0x1F8A JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2068 DUP10 DUP3 DUP11 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x20F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x210F PUSH1 0x60 DUP9 ADD PUSH2 0x1F8A JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x213F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x215D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2169 DUP8 DUP3 DUP9 ADD PUSH2 0x1D19 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x109D DUP2 PUSH2 0x1E4B JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x222C JUMPI PUSH2 0x222C PUSH2 0x21CC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x226B JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x224F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2292 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x227A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x22B3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22F8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x229B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x21CC JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x236B DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x23A8 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2277 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x109D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x109D DUP2 PUSH2 0x1E4B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x21CC JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5D0 JUMPI PUSH2 0x5D0 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x241D JUMPI PUSH2 0x241D PUSH2 0x21CC JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 CREATE2 SUB SHL 0xC3 0xC5 NOT GT 0xE4 0xB6 PUSH16 0x8E6B7505AACF4DCEA9140FCA138D094 0x4B 0xE0 0xF8 MSTORE8 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"258:11238:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;:::i;:::-;;:::i;:::-;;;516:14:10;;509:22;491:41;;479:2;464:18;2606:202:0;;;;;;;;9222:495:8;;;;;;:::i;:::-;;:::i;:::-;;;2275:25:10;;;2263:2;2248:18;9222:495:8;2129:177:10;888:41:8;;;;;;:::i;:::-;;;;;;;;;;;;;;4774:433;;;;;;:::i;:::-;;:::i;:::-;;4378:129:0;;;;;;:::i;:::-;4452:7;4478:12;;;:6;:12;;;;;;;;:22;;;4378:129;609:31:8;;;;;;;;;;;;3515:42:10;3503:55;;;3485:74;;3473:2;3458:18;609:31:8;3322:243:10;4803:145:0;;;;;;:::i;:::-;;:::i;5912:214::-;;;;;;:::i;:::-;;:::i;3288:524:8:-;;;;;;:::i;:::-;;:::i;524:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1831:101:2;;;:::i;323:60:8:-;;360:23;323:60;;10075:503;;;;;;:::i;:::-;;:::i;2290:233::-;;;;;;:::i;:::-;;:::i;1201:85:2:-;1247:7;1273:6;;;1201:85;;3818:577:8;;;;;;:::i;:::-;;:::i;2895:145:0:-;;;;;;:::i;:::-;2981:4;3004:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;;;;2895:145;7453:340:8;;;;;;:::i;:::-;;:::i;9723:346::-;;;;;;:::i;:::-;;:::i;5213:500::-;;;;;;:::i;:::-;;:::i;2027:49:0:-;;2072:4;2027:49;;389:68:8;;430:27;389:68;;8948:268;;;;;;:::i;:::-;;:::i;490:28::-;;;;;;2739:139;;;;;;:::i;:::-;2811:4;2834:37;;;:25;:37;;;;;;;;;2739:139;8779:163;;;;;;:::i;:::-;;:::i;5228:147:0:-;;;;;;:::i;:::-;;:::i;7799:200:8:-;;;;;;:::i;:::-;;:::i;11163:331::-;;;;;;:::i;:::-;;:::i;8453:320::-;;;;;;:::i;:::-;;:::i;2081:198:2:-;;;;;;:::i;:::-;;:::i;668:27:8:-;;;;;;;;;2606:202:0;2691:4;2714:47;;;2729:32;2714:47;;:87;;-1:-1:-1;952:25:5;937:40;;;;2765:36:0;2707:94;2606:202;-1:-1:-1;;2606:202:0:o;9222:495:8:-;9321:7;9410:15;9428:34;9444:10;9456:5;9428:15;:34::i;:::-;9410:52;;9529:22;9554:27;9573:7;9554:18;:27::i;:::-;9669:16;;;;:8;:16;;;;;;;;:25;;;;;;;;;:41;;;;-1:-1:-1;9669:41:8;;;;;9222:495;-1:-1:-1;;;9222:495:8:o;4774:433::-;2235:10;2981:4:0;3004:29;;;:12;;:29;:12;:29;;;;;2203:63:8;;;;;;;9288:2:10;2203:63:8;;;9270:21:10;9327:2;9307:18;;;9300:30;9366:17;9346:18;;;9339:45;9401:18;;2203:63:8;;;;;;;;;5010:10:::1;2981:4:0::0;3004:29;;;:12;;:29;:12;:29;;;;;4978:63:8::1;;;::::0;::::1;::::0;;9288:2:10;4978:63:8::1;::::0;::::1;9270:21:10::0;9327:2;9307:18;;;9300:30;9366:17;9346:18;;;9339:45;9401:18;;4978:63:8::1;9086:339:10::0;4978:63:8::1;5132:68;5141:6;5149:7;5158:14;5174:6;5182:17;5132:8;:68::i;:::-;4774:433:::0;;;;;:::o;4803:145:0:-;4452:7;4478:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6007:23;;;719:10:3;6007:23:0;5999:83;;;;;;;9632:2:10;5999:83:0;;;9614:21:10;9671:2;9651:18;;;9644:30;9710:34;9690:18;;;9683:62;9781:17;9761:18;;;9754:45;9816:19;;5999:83:0;9430:411:10;5999:83:0;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;3288:524:8:-;2116:10;2981:4:0;3004:29;;;:12;;:29;:12;:29;;;;;2088:56:8;;;;;;;10048:2:10;2088:56:8;;;10030:21:10;10087:2;10067:18;;;10060:30;10126:14;10106:18;;;10099:42;10158:18;;2088:56:8;9846:336:10;2088:56:8;3463:9:::1;3458:220;3482:12;:19;3478:1;:23;3458:220;;;3531:25;:42;3557:12;3570:1;3557:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;3531:42;;;::::1;::::0;;;;;;-1:-1:-1;3531:42:8;;::::1;;3530:43;3522:82;;;::::0;::::1;::::0;;10578:2:10;3522:82:8::1;::::0;::::1;10560:21:10::0;10617:2;10597:18;;;10590:30;10656:28;10636:18;;;10629:56;10702:18;;3522:82:8::1;10376:350:10::0;3522:82:8::1;3663:4;3618:25;:42;3644:12;3657:1;3644:15;;;;;;;;:::i;:::-;;;;;;;3618:42;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;3503:3;;;;;:::i;:::-;;;;3458:220;;;;3764:41;3792:12;3764:41;;;;;;:::i;:::-;;;;;;;;3288:524:::0;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;10075:503:8:-;10158:7;10247:15;10265:34;10281:10;10293:5;10265:15;:34::i;:::-;10247:52;;10366:22;10391:27;10410:7;10391:18;:27::i;:::-;10532:13;;10523:23;;;;:8;:23;;;;;;;;:32;;;;;;;;;:48;;;;;;;;;;;;;10075:503;-1:-1:-1;;;;10075:503:8:o;2290:233::-;2116:10;2981:4:0;3004:29;;;:12;;:29;:12;:29;;;;;2088:56:8;;;;;;;10048:2:10;2088:56:8;;;10030:21:10;10087:2;10067:18;;;10060:30;10126:14;10106:18;;;10099:42;10158:18;;2088:56:8;9846:336:10;2088:56:8;2371:16:::1;::::0;;;:7:::1;:16;::::0;;;;;::::1;;2370:17;2362:48;;;::::0;::::1;::::0;;11959:2:10;2362:48:8::1;::::0;::::1;11941:21:10::0;11998:2;11978:18;;;11971:30;12037:20;12017:18;;;12010:48;12075:18;;2362:48:8::1;11757:342:10::0;2362:48:8::1;2420:13;:23:::0;;;2453:16:::1;::::0;;;:7:::1;:16;::::0;;;;;;:23;;;::::1;2472:4;2453:23;::::0;;2491:25;::::1;::::0;::::1;::::0;2436:7;2275:25:10;;2263:2;2248:18;;2129:177;3818:577:8;2116:10;2981:4:0;3004:29;;;:12;;:29;:12;:29;;;;;2088:56:8;;;;;;;10048:2:10;2088:56:8;;;10030:21:10;10087:2;10067:18;;;10060:30;10126:14;10106:18;;;10099:42;10158:18;;2088:56:8;9846:336:10;2088:56:8;3985:9:::1;3980:277;4004:12;:19;4000:1;:23;3980:277;;;4204:25;:42;4230:12;4243:1;4230:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;4204:42;;;::::1;::::0;;;;;;-1:-1:-1;4204:42:8;4197:49;;;::::1;::::0;;4025:3;::::1;::::0;::::1;:::i;:::-;;;;3980:277;;;;4345:43;4375:12;4345:43;;;;;;:::i;7453:340::-:0;7657:15;7675:34;7691:10;7703:5;7675:15;:34::i;:::-;7657:52;;7720:66;7742:7;7751:6;7759:17;7778:1;7781;7784;7720:21;:66::i;:::-;7594:199;7453:340;;;;;;;:::o;9723:346::-;9782:7;9857:22;9882:27;9901:7;9882:18;:27::i;:::-;10023:13;;10014:23;;;;:8;:23;;;;;;;;:32;;;;;;;;;:48;;;;;;;;;;;;;9723:346;-1:-1:-1;;9723:346:8:o;5213:500::-;2235:10;2981:4:0;3004:29;;;:12;;:29;:12;:29;;;;;2203:63:8;;;;;;;9288:2:10;2203:63:8;;;9270:21:10;9327:2;9307:18;;;9300:30;9366:17;9346:18;;;9339:45;9401:18;;2203:63:8;9086:339:10;2203:63:8;5496:15:::1;5514:33;5530:10;5542:4;5514:15;:33::i;:::-;5496:51;;5638:68;5647:6;5655:7;5664:14;5680:6;5688:17;5638:8;:68::i;:::-;5430:283;5213:500:::0;;;;;;:::o;8948:268::-;9023:7;9098:22;9123:27;9142:7;9123:18;:27::i;:::-;9168:16;;;;:8;:16;;;;;;;;:25;;;;;;;;;:41;;;;-1:-1:-1;;9168:41:8;;;;8948:268::o;8779:163::-;8875:60;8900:7;8909:6;8917:17;8875:24;:60::i;5228:147:0:-;4452:7;4478:12;;;:6;:12;;;;;;;;:22;;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;7799:200:8:-:0;7926:66;7948:7;7957:6;7965:17;7984:1;7987;7990;7926:21;:66::i;:::-;7799:200;;;;;;:::o;11163:331::-;11263:7;11338:22;11363:27;11382:7;11363:18;:27::i;:::-;11458:15;;;;:6;:15;;;;;;;;;;10971:13;;10921:83;;;;;15026:19:10;;;;15061:12;;;15054:28;;;;15098:12;;;15091:28;;;;15135:12;;;15128:28;;;;15172:13;;;15165:29;;;;15210:13;;;;15203:29;;;;10921:83:8;;;;;;;;;;15248:13:10;;;;10921:83:8;;;-1:-1:-1;;10911:94:8;;;;;;11163:331::o;8453:320::-;8643:15;8661:34;8677:10;8689:5;8661:15;:34::i;:::-;8643:52;;8706:60;8731:7;8740:6;8748:17;8706:24;:60::i;2081:198:2:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;12306:2:10;2161:73:2::1;::::0;::::1;12288:21:10::0;12345:2;12325:18;;;12318:30;12384:34;12364:18;;;12357:62;12455:8;12435:18;;;12428:36;12481:19;;2161:73:2::1;12104:402:10::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2884:167:8:-;2999:15;;;:45;;;;;2973:7;;2999:15;;;;;:26;;:45;;3026:5;;3033:10;;2999:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2992:52;2884:167;-1:-1:-1;;;2884:167:8:o;2597:136::-;2691:15;;;:35;;;;;;;;2275:25:10;;;2665:7:8;;2691:15;;;;;:26;;2248:18:10;;2691:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4401:367::-;4579:16;;;;:8;:16;;;;;;;;:25;;;;;;;;:41;;;;;;;;:51;;4624:6;;4579:16;:51;;4624:6;;4579:51;:::i;:::-;;;;-1:-1:-1;;4680:81:8;;;13918:25:10;;;13974:2;13959:18;;13952:34;;;14002:18;;;13995:34;;;4710:17:8;;4702:6;;4690:10;;4680:81;;13906:2:10;13891:18;4680:81:8;;;;;;;4401:367;;;;;:::o;3334:103:0:-;3400:30;3411:4;719:10:3;3400::0;:30::i;7461:233::-;2981:4;3004:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7539:149;;7582:12;;;;7614:4;7582:12;;;;;;;;:29;;;;;;;;;;;:36;;;;;;;;;;7637:40;;719:10:3;;7582:12:0;;7637:40;;7582:12;7637:40;7461:233;;:::o;7865:234::-;2981:4;3004:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7944:149;;;8018:5;7986:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8042:40;719:10:3;;7986:12:0;;8042:40;;8018:5;8042:40;7865:234;;:::o;1359:130:2:-;1247:7;1273:6;1422:23;1273:6;719:10:3;1422:23:2;1414:68;;;;;;;14242:2:10;1414:68:2;;;14224:21:10;;;14261:18;;;14254:30;14320:34;14300:18;;;14293:62;14372:18;;1414:68:2;14040:356:10;2433:187:2;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;6138:500:8:-;6279:22;6304:27;6323:7;6304:18;:27::i;:::-;6279:52;;6341:14;6358:88;6369:7;6378:14;6394:6;6402;:15;6409:7;6402:15;;;;;;;;;;;;6419:17;6438:1;6441;6444;6358:10;:88::i;:::-;6341:105;;6456:14;6473;6479:7;6473:5;:14::i;:::-;6456:31;;6515:6;6505:16;;:6;:16;;;6497:56;;;;;;;14603:2:10;6497:56:8;;;14585:21:10;14642:2;14622:18;;;14615:30;14681:29;14661:18;;;14654:57;14728:18;;6497:56:8;14401:351:10;6497:56:8;6563:68;6572:7;6581:14;6597:6;6605:17;6624:6;6563:8;:68::i;:::-;6269:369;;;6138:500;;;;;;:::o;8005:442::-;8118:14;8135;8141:7;8135:5;:14::i;:::-;8118:31;-1:-1:-1;8167:10:8;:20;;;;8159:60;;;;;;;14603:2:10;8159:60:8;;;14585:21:10;14642:2;14622:18;;;14615:30;14681:29;14661:18;;;14654:57;14728:18;;8159:60:8;14401:351:10;8159:60:8;8306:22;8331:27;8350:7;8331:18;:27::i;:::-;8306:52;;8368:72;8377:7;8386:14;8402:6;8410:17;8429:10;8368:8;:72::i;3718:479:0:-;2981:4;3004:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3844:336;;;;;;;;:::i;5719:413:8:-;10971:13;;10921:83;;;;;;;15026:19:10;;;15061:12;;;15054:28;;;15098:12;;;15091:28;;;15135:12;;;15128:28;;;;15172:13;;;15165:29;;;15210:13;;;;15203:29;;;10921:83:8;;;;;;;;;;15248:13:10;;;10921:83:8;;;10911:94;;;;;;;;;-1:-1:-1;6094:31:8;;;;;;;;;;16541:25:10;;;16614:4;16602:17;;16582:18;;;16575:45;16636:18;;;16629:34;;;16679:18;;;16672:34;;;6094:31:8;;-1:-1:-1;;6094:31:8;;16513:19:10;;;;;-1:-1:-1;6094:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6094:31:8;;;;;;5719:413;-1:-1:-1;;;;;;;;;;;5719:413:8:o;3129:153::-;3220:15;;;:32;;;;;;;;2275:25:10;;;3184:7:8;;;;3220:15;;;:23;;2248:18:10;;3220:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6644:803::-;6848:13;;6839:23;;;;:8;:23;;;;;;;;:32;;;;;;;;:48;;;;;;;;;:58;-1:-1:-1;6839:58:8;6831:91;;;;;;;17175:2:10;6831:91:8;;;17157:21:10;17214:2;17194:18;;;17187:30;17253:22;17233:18;;;17226:50;17293:18;;6831:91:8;16973:344:10;6831:91:8;7017:44;;;;:25;:44;;;;;;;;7009:84;;;;;;;17524:2:10;7009:84:8;;;17506:21:10;17563:2;17543:18;;;17536:30;17602:29;17582:18;;;17575:57;17649:18;;7009:84:8;17322:351:10;7009:84:8;7154:13;;7145:23;;;;:8;:23;;;;;;;;:32;;;;;;;;:48;;;;;;;;:58;;7197:6;;7145:23;:58;;7197:6;;7145:58;:::i;:::-;;;;-1:-1:-1;;7272:13:8;;7318:15;;;;:6;:15;;;;;;;;;;7254:112;;7306:10;18131:34:10;;18181:18;;;18174:34;18224:18;;;18217:34;;;18282:2;18267:18;;18260:34;;;18080:42;18331:15;;18325:3;18310:19;;18303:44;7287:17:8;;7272:13;7263:7;;7254:112;;18057:3:10;18042:19;7254:112:8;;;;;;;7423:15;;;;:6;:15;;;;;:17;;;;;;:::i;:::-;;;;;;6644:803;;;;;:::o;2102:149:4:-;2160:13;2192:52;2204:22;;;311:2;1513:437;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:4;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1725:9:4;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1800:5;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;;;;;;;;;;-1:-1:-1;1836:1:4;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:4;;1857:55;;;;;;;18934:2:10;1857:55:4;;;18916:21:10;;;18953:18;;;18946:30;19012:34;18992:18;;;18985:62;19064:18;;1857:55:4;18732:356:10;14:332;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:184;595:77;592:1;585:88;692:4;689:1;682:15;716:4;713:1;706:15;732:334;803:2;797:9;859:2;849:13;;864:66;845:86;833:99;;962:18;947:34;;983:22;;;944:62;941:88;;;1009:18;;:::i;:::-;1045:2;1038:22;732:334;;-1:-1:-1;732:334:10:o;1071:590::-;1114:5;1167:3;1160:4;1152:6;1148:17;1144:27;1134:55;;1185:1;1182;1175:12;1134:55;1221:6;1208:20;1247:18;1243:2;1240:26;1237:52;;;1269:18;;:::i;:::-;1313:114;1421:4;1352:66;1345:4;1341:2;1337:13;1333:86;1329:97;1313:114;:::i;:::-;1452:2;1443:7;1436:19;1498:3;1491:4;1486:2;1478:6;1474:15;1470:26;1467:35;1464:55;;;1515:1;1512;1505:12;1464:55;1580:2;1573:4;1565:6;1561:17;1554:4;1545:7;1541:18;1528:55;1628:1;1603:16;;;1621:4;1599:27;1592:38;;;;1607:7;1071:590;-1:-1:-1;;;1071:590:10:o;1666:458::-;1753:6;1761;1769;1822:2;1810:9;1801:7;1797:23;1793:32;1790:52;;;1838:1;1835;1828:12;1790:52;1874:9;1861:23;1851:33;;1931:2;1920:9;1916:18;1903:32;1893:42;;1986:2;1975:9;1971:18;1958:32;2013:18;2005:6;2002:30;1999:50;;;2045:1;2042;2035:12;1999:50;2068;2110:7;2101:6;2090:9;2086:22;2068:50;:::i;:::-;2058:60;;;1666:458;;;;;:::o;2311:180::-;2370:6;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;-1:-1:-1;2462:23:10;;2311:180;-1:-1:-1;2311:180:10:o;2496:454::-;2591:6;2599;2607;2615;2623;2676:3;2664:9;2655:7;2651:23;2647:33;2644:53;;;2693:1;2690;2683:12;2644:53;-1:-1:-1;;2716:23:10;;;2786:2;2771:18;;2758:32;;-1:-1:-1;2837:2:10;2822:18;;2809:32;;2888:2;2873:18;;2860:32;;-1:-1:-1;2939:3:10;2924:19;2911:33;;-1:-1:-1;2496:454:10;-1:-1:-1;2496:454:10:o;3570:154::-;3656:42;3649:5;3645:54;3638:5;3635:65;3625:93;;3714:1;3711;3704:12;3729:315;3797:6;3805;3858:2;3846:9;3837:7;3833:23;3829:32;3826:52;;;3874:1;3871;3864:12;3826:52;3910:9;3897:23;3887:33;;3970:2;3959:9;3955:18;3942:32;3983:31;4008:5;3983:31;:::i;:::-;4033:5;4023:15;;;3729:315;;;;;:::o;4049:946::-;4133:6;4164:2;4207;4195:9;4186:7;4182:23;4178:32;4175:52;;;4223:1;4220;4213:12;4175:52;4263:9;4250:23;4292:18;4333:2;4325:6;4322:14;4319:34;;;4349:1;4346;4339:12;4319:34;4387:6;4376:9;4372:22;4362:32;;4432:7;4425:4;4421:2;4417:13;4413:27;4403:55;;4454:1;4451;4444:12;4403:55;4490:2;4477:16;4512:2;4508;4505:10;4502:36;;;4518:18;;:::i;:::-;4564:2;4561:1;4557:10;4547:20;;4587:28;4611:2;4607;4603:11;4587:28;:::i;:::-;4649:15;;;4719:11;;;4715:20;;;4680:12;;;;4747:19;;;4744:39;;;4779:1;4776;4769:12;4744:39;4803:11;;;;4823:142;4839:6;4834:3;4831:15;4823:142;;;4905:17;;4893:30;;4856:12;;;;4943;;;;4823:142;;;4984:5;4049:946;-1:-1:-1;;;;;;;;4049:946:10:o;5000:390::-;5078:6;5086;5139:2;5127:9;5118:7;5114:23;5110:32;5107:52;;;5155:1;5152;5145:12;5107:52;5191:9;5178:23;5168:33;;5252:2;5241:9;5237:18;5224:32;5279:18;5271:6;5268:30;5265:50;;;5311:1;5308;5301:12;5265:50;5334;5376:7;5367:6;5356:9;5352:22;5334:50;:::i;:::-;5324:60;;;5000:390;;;;;:::o;5626:156::-;5692:20;;5752:4;5741:16;;5731:27;;5721:55;;5772:1;5769;5762:12;5721:55;5626:156;;;:::o;5787:736::-;5908:6;5916;5924;5932;5940;5948;5956;6009:3;5997:9;5988:7;5984:23;5980:33;5977:53;;;6026:1;6023;6016:12;5977:53;6062:9;6049:23;6039:33;;6123:2;6112:9;6108:18;6095:32;6150:18;6142:6;6139:30;6136:50;;;6182:1;6179;6172:12;6136:50;6205;6247:7;6238:6;6227:9;6223:22;6205:50;:::i;:::-;6195:60;;;6302:2;6291:9;6287:18;6274:32;6264:42;;6353:2;6342:9;6338:18;6325:32;6315:42;;6376:37;6408:3;6397:9;6393:19;6376:37;:::i;:::-;6366:47;;6460:3;6449:9;6445:19;6432:33;6422:43;;6512:3;6501:9;6497:19;6484:33;6474:43;;5787:736;;;;;;;;;;:::o;6528:665::-;6642:6;6650;6658;6666;6674;6682;6735:3;6723:9;6714:7;6710:23;6706:33;6703:53;;;6752:1;6749;6742:12;6703:53;6788:9;6775:23;6765:33;;6845:2;6834:9;6830:18;6817:32;6807:42;;6900:2;6889:9;6885:18;6872:32;6927:18;6919:6;6916:30;6913:50;;;6959:1;6956;6949:12;6913:50;6982;7024:7;7015:6;7004:9;7000:22;6982:50;:::i;:::-;6972:60;;;7079:2;7068:9;7064:18;7051:32;7041:42;;7130:3;7119:9;7115:19;7102:33;7092:43;;7182:3;7171:9;7167:19;7154:33;7144:43;;6528:665;;;;;;;;:::o;7198:248::-;7266:6;7274;7327:2;7315:9;7306:7;7302:23;7298:32;7295:52;;;7343:1;7340;7333:12;7295:52;-1:-1:-1;;7366:23:10;;;7436:2;7421:18;;;7408:32;;-1:-1:-1;7198:248:10:o;7451:316::-;7528:6;7536;7544;7597:2;7585:9;7576:7;7572:23;7568:32;7565:52;;;7613:1;7610;7603:12;7565:52;-1:-1:-1;;7636:23:10;;;7706:2;7691:18;;7678:32;;-1:-1:-1;7757:2:10;7742:18;;;7729:32;;7451:316;-1:-1:-1;7451:316:10:o;7772:525::-;7874:6;7882;7890;7898;7906;7914;7967:3;7955:9;7946:7;7942:23;7938:33;7935:53;;;7984:1;7981;7974:12;7935:53;8020:9;8007:23;7997:33;;8077:2;8066:9;8062:18;8049:32;8039:42;;8128:2;8117:9;8113:18;8100:32;8090:42;;8151:36;8183:2;8172:9;8168:18;8151:36;:::i;:::-;8141:46;;8234:3;8223:9;8219:19;8206:33;8196:43;;8286:3;8275:9;8271:19;8258:33;8248:43;;7772:525;;;;;;;;:::o;8302:527::-;8398:6;8406;8414;8422;8475:3;8463:9;8454:7;8450:23;8446:33;8443:53;;;8492:1;8489;8482:12;8443:53;8528:9;8515:23;8505:33;;8589:2;8578:9;8574:18;8561:32;8616:18;8608:6;8605:30;8602:50;;;8648:1;8645;8638:12;8602:50;8671;8713:7;8704:6;8693:9;8689:22;8671:50;:::i;:::-;8302:527;;8661:60;;-1:-1:-1;;;;8768:2:10;8753:18;;8740:32;;8819:2;8804:18;8791:32;;8302:527;-1:-1:-1;8302:527:10:o;8834:247::-;8893:6;8946:2;8934:9;8925:7;8921:23;8917:32;8914:52;;;8962:1;8959;8952:12;8914:52;9001:9;8988:23;9020:31;9045:5;9020:31;:::i;10187:184::-;10239:77;10236:1;10229:88;10336:4;10333:1;10326:15;10360:4;10357:1;10350:15;10731:184;10783:77;10780:1;10773:88;10880:4;10877:1;10870:15;10904:4;10901:1;10894:15;10920:195;10959:3;10990:66;10983:5;10980:77;10977:103;;11060:18;;:::i;:::-;-1:-1:-1;11107:1:10;11096:13;;10920:195::o;11120:632::-;11291:2;11343:21;;;11413:13;;11316:18;;;11435:22;;;11262:4;;11291:2;11514:15;;;;11488:2;11473:18;;;11262:4;11557:169;11571:6;11568:1;11565:13;11557:169;;;11632:13;;11620:26;;11701:15;;;;11666:12;;;;11593:1;11586:9;11557:169;;;-1:-1:-1;11743:3:10;;11120:632;-1:-1:-1;;;;;;11120:632:10:o;12511:250::-;12596:1;12606:113;12620:6;12617:1;12614:13;12606:113;;;12696:11;;;12690:18;12677:11;;;12670:39;12642:2;12635:10;12606:113;;;-1:-1:-1;;12753:1:10;12735:16;;12728:27;12511:250::o;12766:330::-;12808:3;12846:5;12840:12;12873:6;12868:3;12861:19;12889:76;12958:6;12951:4;12946:3;12942:14;12935:4;12928:5;12924:16;12889:76;:::i;:::-;13010:2;12998:15;13015:66;12994:88;12985:98;;;;13085:4;12981:109;;12766:330;-1:-1:-1;;12766:330:10:o;13101:291::-;13278:2;13267:9;13260:21;13241:4;13298:45;13339:2;13328:9;13324:18;13316:6;13298:45;:::i;:::-;13290:53;;13379:6;13374:2;13363:9;13359:18;13352:34;13101:291;;;;;:::o;13397:184::-;13467:6;13520:2;13508:9;13499:7;13495:23;13491:32;13488:52;;;13536:1;13533;13526:12;13488:52;-1:-1:-1;13559:16:10;;13397:184;-1:-1:-1;13397:184:10:o;13586:125::-;13651:9;;;13672:10;;;13669:36;;;13685:18;;:::i;15272:812::-;15683:25;15678:3;15671:38;15653:3;15738:6;15732:13;15754:75;15822:6;15817:2;15812:3;15808:12;15801:4;15793:6;15789:17;15754:75;:::i;:::-;15893:19;15888:2;15848:16;;;15880:11;;;15873:40;15938:13;;15960:76;15938:13;16022:2;16014:11;;16007:4;15995:17;;15960:76;:::i;:::-;16056:17;16075:2;16052:26;;15272:812;-1:-1:-1;;;;15272:812:10:o;16089:220::-;16238:2;16227:9;16220:21;16201:4;16258:45;16299:2;16288:9;16284:18;16276:6;16258:45;:::i;16717:251::-;16787:6;16840:2;16828:9;16819:7;16815:23;16811:32;16808:52;;;16856:1;16853;16846:12;16808:52;16888:9;16882:16;16907:31;16932:5;16907:31;:::i;17678:128::-;17745:9;;;17766:11;;;17763:37;;;17780:18;;:::i;18358:168::-;18431:9;;;18462;;18479:15;;;18473:22;;18459:37;18449:71;;18500:18;;:::i;18531:196::-;18570:3;18598:5;18588:39;;18607:18;;:::i;:::-;-1:-1:-1;18654:66:10;18643:78;;18531:196::o"},"gasEstimates":{"creation":{"codeDepositCost":"1867400","executionCost":"infinite","totalCost":"infinite"},"external":{"ADMIN_ROLE()":"307","DEFAULT_ADMIN_ROLE()":"240","DEPOSITOR_ROLE()":"262","adminAddress()":"2423","balanceOf(bytes32,bytes32,string)":"infinite","balanceOf(bytes32,string)":"infinite","balanceOf(bytes32,uint256)":"infinite","balanceOf(uint256)":"infinite","batchAddConsumeReasonCodes(bytes32[])":"infinite","batchRemoveConsumeReasonCodes(bytes32[])":"infinite","consume(bytes32,string,uint256,bytes32)":"infinite","consume(bytes32,string,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","consume(uint256,uint256,bytes32)":"infinite","consume(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","currentSeason()":"2406","deposit(bytes32,bytes32,string,uint256,uint256,bytes32)":"infinite","deposit(bytes32,uint256,uint256,uint256,bytes32)":"32115","getRoleAdmin(bytes32)":"2496","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"2663","isReasonCodeAllowed(bytes32)":"2484","nonces(uint256)":"2529","owner()":"2396","preparePayload(uint256,uint256,bytes32)":"infinite","realmIdContract()":"2381","renounceOwnership()":"infinite","renounceRole(bytes32,address)":"29022","revokeRole(bytes32,address)":"infinite","seasons(bytes32)":"2507","setCurrentSeason(bytes32)":"52147","supportsInterface(bytes4)":"416","transferOwnership(address)":"infinite"},"internal":{"_consume(uint256,uint256,uint256,bytes32,address)":"infinite","_consumeWithSignature(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","_consumeWithoutSignature(uint256,uint256,bytes32)":"infinite","_deposit(bytes32,uint256,uint256,uint256,bytes32)":"infinite","_getRealmIdVersion(uint256)":"infinite","_getSigner(uint256,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)":"infinite","_preparePayload(uint256,uint256,uint256,uint256,bytes32)":"infinite","_prepareRealmId(bytes32,string memory)":"infinite","owner(uint256)":"infinite"}},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DEPOSITOR_ROLE()":"a3b0b5a3","adminAddress()":"fc6f9468","balanceOf(bytes32,bytes32,string)":"098b6419","balanceOf(bytes32,string)":"794459be","balanceOf(bytes32,uint256)":"ad3b1d48","balanceOf(uint256)":"9cc7f708","batchAddConsumeReasonCodes(bytes32[])":"3f30b00f","batchRemoveConsumeReasonCodes(bytes32[])":"906405a3","consume(bytes32,string,uint256,bytes32)":"e564a0e2","consume(bytes32,string,uint256,bytes32,uint8,bytes32,bytes32)":"99d342ac","consume(uint256,uint256,bytes32)":"d14a5c71","consume(uint256,uint256,bytes32,uint8,bytes32,bytes32)":"dc893ce4","currentSeason()":"bcb39621","deposit(bytes32,bytes32,string,uint256,uint256,bytes32)":"9d70b005","deposit(bytes32,uint256,uint256,uint256,bytes32)":"18ee89f0","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isReasonCodeAllowed(bytes32)":"c0542cfa","nonces(uint256)":"141a468c","owner()":"8da5cb5b","preparePayload(uint256,uint256,bytes32)":"df00bb24","realmIdContract()":"2b48dc72","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","seasons(bytes32)":"4529cc1b","setCurrentSeason(bytes32)":"86a8e98a","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_realmIdContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"BatchAddedConsumeReasonCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"BatchRemovedConsumeReasonCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"realmIdOwner\",\"type\":\"address\"}],\"name\":\"Consumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"}],\"name\":\"SetCurrentSeason\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"batchAddConsumeReasonCodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_reasonCodes\",\"type\":\"bytes32[]\"}],\"name\":\"batchRemoveConsumeReasonCodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"consumeReasonCode\",\"type\":\"bytes32\"}],\"name\":\"consume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSeason\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"depositReasonCode\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"season\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"realmIdVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"depositReasonCode\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"}],\"name\":\"isReasonCodeAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"reasonCode\",\"type\":\"bytes32\"}],\"name\":\"preparePayload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realmIdContract\",\"outputs\":[{\"internalType\":\"contract IRealmId\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"seasons\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_season\",\"type\":\"bytes32\"}],\"name\":\"setCurrentSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/MocaPoints.sol\":\"MocaPoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/MocaPoints/MocaPoints.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {IRealmId} from \\\"./interface/IRealmId.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {AccessControl} from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\ncontract MocaPoints is Ownable, AccessControl {\\n    // Roles\\n    bytes32 public constant ADMIN_ROLE = keccak256(\\\"ADMIN_ROLE\\\");\\n    bytes32 public constant DEPOSITOR_ROLE = keccak256(\\\"DEPOSITOR_ROLE\\\");\\n\\n    // Seasonal variables\\n    bytes32 public currentSeason;\\n    mapping(bytes32 => bool) public seasons;\\n\\n    // Address of the RealmId contract\\n    IRealmId public realmIdContract;\\n\\n    // Admin Address\\n    address public adminAddress;\\n\\n    // Balances mapping\\n    mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256))) private balances; // season => realmId => realmIdVersion => balance\\n\\n    // Nonce mapping\\n    mapping(uint256 => uint256) public nonces; // realmId => nonce\\n\\n    // Allowed consume reason codes mapping\\n    mapping(bytes32 => bool) private allowedConsumeReasonCodes;\\n\\n    event SetCurrentSeason(bytes32 season);\\n    event BatchAddedConsumeReasonCode(bytes32[] reasonCodes);\\n    event BatchRemovedConsumeReasonCode(bytes32[] reasonCodes);\\n    event Deposited(\\n        address indexed sender,\\n        bytes32 indexed season,\\n        bytes32 indexed reasonCode,\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount\\n    );\\n\\n    event Consumed(\\n        uint256 indexed realmId,\\n        bytes32 indexed season,\\n        bytes32 indexed reasonCode,\\n        address operator,\\n        uint256 nonce,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        address realmIdOwner\\n    );\\n\\n    constructor(address _realmIdContract, address _adminAddress) {\\n        require(address(_realmIdContract) != address(0), \\\"Not a valid Contract Address\\\");\\n        require(address(_adminAddress) != address(0), \\\"Not a valid Admin Address\\\");\\n\\n        _setupRole(ADMIN_ROLE, _adminAddress);\\n        realmIdContract = IRealmId(_realmIdContract);\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(hasRole(ADMIN_ROLE, msg.sender), \\\"Not an admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyDepositor() {\\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \\\"Not a depositor\\\");\\n        _;\\n    }\\n\\n    function setCurrentSeason(bytes32 _season) external onlyAdmin {\\n        require(!seasons[_season], \\\"Season already set\\\");\\n        currentSeason = _season;\\n        seasons[_season] = true;\\n        emit SetCurrentSeason(_season);\\n    }\\n\\n    // Function to get the realmIdVersion from the RealmId contract\\n    function _getRealmIdVersion(uint256 realmId) internal view returns (uint256) {\\n        return realmIdContract.burnCounts(realmId);\\n    }\\n\\n    function isReasonCodeAllowed(bytes32 reasonCode) external view returns (bool) {\\n        return allowedConsumeReasonCodes[reasonCode];\\n    }\\n\\n    function _prepareRealmId(bytes32 parentNode, string memory _name) internal view returns (uint256) {\\n        return realmIdContract.getTokenId(_name, parentNode);\\n    }\\n\\n    // Function to get the owner of a realmId from the RealmId contract\\n    function owner(uint256 realmId) internal view returns (address) {\\n        address _owner = realmIdContract.ownerOf(realmId);\\n        return _owner;\\n    }\\n\\n    function batchAddConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\\n        // Check if each reason code is unique and does not already exist\\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\\n            require(!allowedConsumeReasonCodes[_reasonCodes[i]], \\\"Reason code already exists\\\");\\n            allowedConsumeReasonCodes[_reasonCodes[i]] = true;\\n        }\\n\\n        // Emit the event to indicate that all reason codes were added\\n        emit BatchAddedConsumeReasonCode(_reasonCodes);\\n    }\\n\\n    function batchRemoveConsumeReasonCodes(bytes32[] memory _reasonCodes) external onlyAdmin {\\n        // Check if each reason code exists and can be removed\\n        for (uint256 i = 0; i < _reasonCodes.length; i++) {\\n            // require(\\n            //     allowedConsumeReasonCodes[_reasonCodes[i]],\\n            //     \\\"Reason code does not exist\\\"\\n            // );\\n            delete allowedConsumeReasonCodes[_reasonCodes[i]];\\n        }\\n\\n        // Emit the event to indicate that all reason codes were removed\\n        emit BatchRemovedConsumeReasonCode(_reasonCodes);\\n    }\\n\\n    function _deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) internal {\\n        // Perform the deposit operation\\n        balances[season][realmId][realmIdVersion] += amount;\\n\\n        // Emit the Deposit event\\n        emit Deposited(msg.sender, season, depositReasonCode, realmId, realmIdVersion, amount);\\n    }\\n\\n    function deposit(bytes32 season, uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 depositReasonCode) external onlyDepositor {\\n        // Check if the sender has the Depositor role\\n        require(hasRole(DEPOSITOR_ROLE, msg.sender), \\\"Not a depositor\\\");\\n\\n        // Call the internal _deposit function to perform the deposit operation\\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\\n    }\\n\\n    function deposit(\\n        bytes32 season,\\n        bytes32 parentNode,\\n        string memory name,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        bytes32 depositReasonCode\\n    ) external onlyDepositor {\\n        // Create the realmId using parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, name);\\n\\n        // Call the internal _deposit function to perform the deposit operation\\n        _deposit(season, realmId, realmIdVersion, amount, depositReasonCode);\\n    }\\n\\n    function _getSigner(\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        uint256 nonce,\\n        bytes32 consumeReasonCode,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal view returns (address) {\\n        bytes32 messageHash = _preparePayload(realmId, realmIdVersion, amount, nonce, consumeReasonCode);\\n        return ecrecover(messageHash, v, r, s);\\n    }\\n\\n    function _consumeWithSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) internal {\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n        address signer = _getSigner(realmId, realmIdVersion, amount, nonces[realmId], consumeReasonCode, v, r, s);\\n        address owner_ = owner(realmId);\\n        require(signer == owner_, \\\"Signer not owner of realmId\\\");\\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, owner_);\\n    }\\n\\n    function _consume(uint256 realmId, uint256 realmIdVersion, uint256 amount, bytes32 consumeReasonCode, address owner_) internal {\\n        // Check if the sender has enough balance\\n        require(balances[currentSeason][realmId][realmIdVersion] >= amount, \\\"Insufficient balance\\\");\\n\\n        // Check if the consumeReasonCode exists and is true in the mapping\\n        require(allowedConsumeReasonCodes[consumeReasonCode], \\\"Invalid consume reason code\\\");\\n\\n        // Perform the consume operation\\n        balances[currentSeason][realmId][realmIdVersion] -= amount;\\n\\n        // Emit the Consumed event\\n        emit Consumed(realmId, currentSeason, consumeReasonCode, msg.sender, nonces[realmId], realmIdVersion, amount, owner_);\\n        // Increment the nonce for the realmId\\n        nonces[realmId]++;\\n    }\\n\\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) external {\\n        // get the realmId using parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\\n    }\\n\\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode, uint8 v, bytes32 r, bytes32 s) external {\\n        _consumeWithSignature(realmId, amount, consumeReasonCode, v, r, s);\\n    }\\n\\n    function _consumeWithoutSignature(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) internal {\\n        address owner_ = owner(realmId);\\n        require(msg.sender == owner_, \\\"Signer not owner of realmId\\\");\\n\\n        // Call the common _consume function for the core consume operation\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n        _consume(realmId, realmIdVersion, amount, consumeReasonCode, msg.sender);\\n    }\\n\\n    function consume(bytes32 parentNode, string memory _name, uint256 amount, bytes32 consumeReasonCode) external {\\n        // Compute the realmId using the provided parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\\n    }\\n\\n    function consume(uint256 realmId, uint256 amount, bytes32 consumeReasonCode) external {\\n        _consumeWithoutSignature(realmId, amount, consumeReasonCode);\\n    }\\n\\n    function balanceOf(bytes32 season, uint256 realmId) external view returns (uint256) {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        return balances[season][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOf(bytes32 season, bytes32 parentNode, string memory _name) external view returns (uint256) {\\n        // Compute the realmId using the provided parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        // Retrieve and return the balance for the calculated realmId\\n        return balances[season][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOf(uint256 realmId) external view returns (uint256) {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        // Retrieve and return the balance for the given realmId at the current season\\n        return balances[currentSeason][realmId][realmIdVersion];\\n    }\\n\\n    function balanceOf(bytes32 parentNode, string memory _name) external view returns (uint256) {\\n        // Compute the realmId using the provided parentNode and name\\n        uint256 realmId = _prepareRealmId(parentNode, _name);\\n\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        // Retrieve and return the balance for the given realmId at the current season\\n        return balances[currentSeason][realmId][realmIdVersion];\\n    }\\n\\n    // Return the payload which is generated using the arguments, current season and the realmIdversion\\n    function _preparePayload(\\n        uint256 realmId,\\n        uint256 realmIdVersion,\\n        uint256 amount,\\n        uint256 nonce,\\n        bytes32 reasonCode\\n    ) internal view returns (bytes32) {\\n        bytes32 payload = keccak256(abi.encodePacked(realmId, realmIdVersion, amount, currentSeason, reasonCode, nonce));\\n        return payload;\\n    }\\n\\n    // Return the payload which is generated using the arguments, current nonce, current season, and the realmId version\\n    function preparePayload(uint256 realmId, uint256 amount, bytes32 reasonCode) external view returns (bytes32) {\\n        // get realmIdVersion from the realmId contract\\n        uint256 realmIdVersion = _getRealmIdVersion(realmId);\\n\\n        return (_preparePayload(realmId, realmIdVersion, amount, nonces[realmId], reasonCode));\\n    }\\n}\\n\",\"keccak256\":\"0x13739688e4bfb800fe4326eb2a5ee7be51c5fd2509731b54444ebd6deb1e6f4a\",\"license\":\"MIT\"},\"contracts/MocaPoints/interface/IRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\ninterface IRealmId {\\n    function burnCounts(uint256 realmId) external view returns (uint256);\\n\\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\\n\\n    function ownerOf(uint256 realmId) external view returns (address);\\n}\\n\",\"keccak256\":\"0x4794d83afca9e28b467cd0f1ba072745b667714a16584df508a6429ffbede384\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":396,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":24,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"_roles","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_struct(RoleData)19_storage)"},{"astId":1623,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"currentSeason","offset":0,"slot":"2","type":"t_bytes32"},{"astId":1627,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"seasons","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_bool)"},{"astId":1630,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"realmIdContract","offset":0,"slot":"4","type":"t_contract(IRealmId)2527"},{"astId":1632,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"adminAddress","offset":0,"slot":"5","type":"t_address"},{"astId":1640,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"balances","offset":0,"slot":"6","type":"t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))"},{"astId":1644,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"nonces","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":1648,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"allowedConsumeReasonCodes","offset":0,"slot":"8","type":"t_mapping(t_bytes32,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IRealmId)2527":{"encoding":"inplace","label":"contract IRealmId","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => mapping(uint256 => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_bytes32,t_struct(RoleData)19_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)19_storage"},"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(RoleData)19_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":16,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":18,"contract":"contracts/MocaPoints/MocaPoints.sol:MocaPoints","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MocaPoints/interface/IRealmId.sol":{"IRealmId":{"abi":[{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"burnCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"parentNode","type":"bytes32"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"realmId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burnCounts(uint256)":"a9735f94","getTokenId(string,bytes32)":"cad6b901","ownerOf(uint256)":"6352211e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"burnCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentNode\",\"type\":\"bytes32\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"realmId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MocaPoints/interface/IRealmId.sol\":\"IRealmId\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/MocaPoints/interface/IRealmId.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\ninterface IRealmId {\\n    function burnCounts(uint256 realmId) external view returns (uint256);\\n\\n    function getTokenId(string calldata name, bytes32 parentNode) external pure returns (uint256);\\n\\n    function ownerOf(uint256 realmId) external view returns (address);\\n}\\n\",\"keccak256\":\"0x4794d83afca9e28b467cd0f1ba072745b667714a16584df508a6429ffbede384\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}